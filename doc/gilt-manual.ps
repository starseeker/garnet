%!PS-Adobe-2.0
%%Title: gilt/gilt-manual.mss
%%DocumentFonts: (atend)
%%Creator: Andrew Mickish and Scribe 7(1700)
%%CreationDate: 12 December 1994 15:23
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {showpage SV restore} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale
    /showpage {} def
    /letter {} def
    /lettersmall {} def
    /note {} def
    } bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
11 SS 
1 1 0 8280 7200 GB 
%%BeginDocument: single-sided.ps
%!PS-Adobe-2.0
%
%  This PostScript code turns off double-sided printing,
%  which is desirable since we want to be able to move the
%  Tables of Contents by hand after the manuals are printed.
%
statusdict begin
   false setduplexmode
end

%%EndDocument
 GE 16 /Times-Bold AF
23593 18976 MT
(Gilt Reference Manual:)SH
18593 20672 MT
(A Simple Interface Builder for Garnet)SH
11 SS 
28182 24260 MT
(Brad A. Myers)SH
/Times-Roman SF
28183 26186 MT
(December 1994)SH
/Times-Bold SF
29634 44214 MT
(Abstract)SH
/Times-Roman SF
8280 45966 MT
(Gilt is a simple interface layout tool that helps the user design dialog boxes.  It allows the)
81 W( user to place)80 W
8280 47262 MT
(pre-defined Garnet gadgets in a window and then save them to a file.  There are two versions: one)
113 W( for)114 W
8280 48558 MT
(Garnet look-and-feel gadgets and one for Motif look-and-feel gadgets.)SH
21010 54276 MT
(Copyright)SH
/Symbol SF
25747 XM
(\323)SH
/Times-Roman SF
26891 XM
(1994 - Carnegie Mellon University)SH
8280 61059 MT
(This research)
208 W( was sponsored by NCCOSC under Contract No.  N66001-94-C-6037, Arpa Order No.)207 W
8280 62355 MT
(B326. The)
379 W( views and conclusions contained in this document)
52 W( are those of the authors and should not be)53 W
8280 63651 MT
(interpreted as representing)
193 W( the official policies, either expressed or implied, of NCCOSC or the U.S.)192 W
8280 64947 MT
(Government.)SH
ES
%%Page: 507 2
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.1)
SH( Introduction)1800 W
51386 XM
(Page 507)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(1. Gilt)SH
14 SS 
8280 13146 MT
(1.1. Introduction)SH
11 /Times-Roman AF
8280 14342 MT
(This document is the reference)
219 W( manual for the)220 W
/Times-Italic SF
30560 XM
(Gilt)SH
/Times-Roman SF
32767 XM
(tool, which is part of the Garnet User Interface)220 W
8280 15538 MT
(Development System)
208 W( [Myers)
SH( 90].  Gilt stands for the Garnet Interface Layout Tool, and is)
208 W( a simple)207 W
794 50 33590 15738 UL
366 50 37065 15738 UL
672 50 41454 15738 UL
672 50 45053 15738 UL
8280 16734 MT
(interface builder for constructing dialog boxes.)
82 W( A)
441 W( dialog box is a collection of)83 W
/Times-Italic SF
44230 XM
(gadgets)SH
/Times-Roman SF
(, such as menus,)83 W
8280 17930 MT
(scroll bars, sliders, etc.  Gilt supplies a window containing many of the built-in)
193 W( Garnet gadgets \050see)192 W
8280 19126 MT
(Figure 1\051, from which the user can select the desired gadgets and place them in the work window.  Gilt)79 W
8280 20322 MT
(does)SH
/Times-Italic SF
10602 XM
(not)SH
/Times-Roman SF
12314 XM
(allow constraints to be placed on objects or for new gadgets or)
31 W( application-specific objects to be)30 W
8280 21518 MT
(created.)SH
8280 23816 MT
(There are two sets of gadgets in Gilt.  Each allows you to create)
32 W( dialog boxes with a consistent look-and-)33 W
8280 25012 MT
(feel. The)
483 W( standard)
104 W( Garnet gadgets are shown in Figure 1, and the Motif style gadgets are in Figure 2\051.)103 W
8280 26208 MT
(Both versions operate the same)
57 W( way.  You can toggle between the standard and Motif gadget palettes by)58 W
8280 27404 MT
(selecting ")SH
10 /Courier AF
(Load Other Gadgets)SH
11 /Times-Roman AF
(" from the main Gilt menubar.)SH
46800 50 8280 29555 UL
75 100 0 8730 78052 GB 
%%BeginDocument: gilt/giltgarnetgadgets.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Gilt Gadgets
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jul 14, 1993, 5:54 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 154 540 636
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-15 /image-15-font 72 64 <
000000000000000000 000000000000000000 3ffffffffffffffffc 3ffe1ffffffffffffc
3ff961fffffffffffc 3fe77e0ffffffffffc 3fdf7ff0fffffffffc 3fc77fff1ffffffffc
3fdb1fffaffffffffc 3fbd60ffaffffffffc 3fbc3f0777fffffffc 3fba43f8f7fffffffc
3fba1c3efbfffffffc 3f7961c2e3fffffffc 3f797e1c1bfffffffc 3f74ffe277fffffffc
3f74fff977fffffffc 3ef2fff4f7fffffffc 3ef2fff4f7fffffffc 3ee9fff4effffffffc
3ee9fff2effffffffc 3ee5fffffffffffffc 3de5f0e0884701843c 3dd3f9f9dced9bc67c
3dd3f9e9c8ed980e7c 3dcbf9f9e1e89dce7c 3babf839f3e89c9e0c 3babf999e3e29e9e64
3ba7f999c5e31e1e64 3b97f989cee31f3e64 3b57f02084478f3c0c 3757ffdffffffffffc
374fff577ffffffffc 372fff577ffffffffc 36afff2efffffffffc 2eafff2efffffffffc
2e9ffeaefffffffffc 2e5ffeaefffffffffc 2d07fe5dfffffffffc 18387e5dfffffffffc
0743855dfffffffffc 1f7c395dfffffffffc 2f1fc2bbfffffffffc 2ee0fc3bfffffffffc
36ff063bfffffffffc 35fff89bfffffffffc 39fffe27fffffffffc 3e1ffe37fffffffffc
3fe1fe6ffffffffffc 3ffe3e1ffffffffffc 3fffc261fffffffffc 3ffff81ffffffffffc
3fffc17ffffffffffc 3fff353ffffffffffc 3ffffcbffffffffffc 3ffffcbffffffffffc
3ffffcfffffffffffc 3ffffcfffffffffffc 3ffffcfffffffffffc 3ffffdfffffffffffc
3ffffdfffffffffffc 3ffffdfffffffffffc 000000000000000000 000000000000000000>
DefImage

/image-14 /image-14-font 42 31 <
ffff80ffffff fffc7f1fffff fff3ffe7ffff ffef80fbffff ffde7f3dffff ffb9ffceffff
ff7780f77fff feee7f3bbfff feddffddbfff ffffffffe1ff fffffffff3ff fffffffff3ff
030388ac007f 99cf34a9933f 99cf3ca9933f 99cf3cac133f 99cf3c0f933f 830e015c247f
9fff3fffffff 9fff3fffffff 1fcfffffffff ffffffffffff feddffddbfff feee7f3bbfff
ff7780f77fff ffb9ffceffff ffde7f3dffff ffef80fbffff fff3ffe7ffff fffc7f1fffff
ffff80ffffff>
DefImage

/image-13 /image-13-font 106 20 <
000000000000000000000000003f 7fffe7fffe7fffff9ffff9ffffbf
7fdfe7feee7fffff9eeff9ff7fbf 7f9fe7fcce7fffff9e67f9ff3fbf
7f5fe7faae7fffff9eabf9ff5fbf 7edfe7f66e7fffff9ecdf9ff6fbf
7dc027eeee7e0c3f9eeef98077bf 7bffa7ddee7eebdf9ef779bffbbf
77ffa7bbee7f7fdf9efbb9bffdbf 6fffa777ee7fbfdf9efdd9bffebf
77ffa7bbee7fdc3f9efbb9bffdbf 7bffa7ddee7eedff9ef779bffbbf
7dc027eeee7eedff9eeef98077bf 7edfe7f66e7eedff9ecdf9ff6fbf
7f5fe7faae7f1c1f9eabf9ff5fbf 7f9fe7fcce7fffff9e67f9ff3fbf
7fdfe7feee7fffff9eeff9ff7fbf 7fffe7fffe7fffff9ffff9ffffbf
7fffe7fffe7fffff9ffff9ffffbf 000000000000000000000000003f>
DefImage

/image-12 /image-12-font 135 81 <
ffffffffffffe0e0e3071fffffffffffff fffffffffffffbfbdddeefffffffffffff
fffffffffffffbfbdfdeffffffffffffff fffffffffffffbfbdfde0fffffffffffff
fffffffffffffbfbdfdeefffffffffffff ffffffffffffdb6383df1fffffffffffff
ffffffffffffdb7fdfdfffffffffffffff ffffffffffffc07fdfdfffffffffffffff
fffffffffffffffbff1fffffffffffffff ffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff 9ffffffffffffffffffffffffffffff067
6ffffffffffffffffffffffffffffffddb 6ffffffffffffffffffffffffffffffddb
6fff80000000000000000000000003fddb 6fffbffffffffffe53fffffffffffbfddb
6fffbffffffffffea7fffffffffffbf1db 9fffbffffffffffd57fffffffffffbfde7
ffffbffffffffffaaffffffffffffbffff ffffbffffffffff55ffffffffffffbffff
ffffbffffffffff2bffffffffffffbffff ffffbfffffffffe53ffffffffffffbffff
ffffdfffffffffca7ffffffffffff7ffff ffffdfffffffff94fffffffffffff7ffff
ffffdfffffffffaafffffffffffff7ffff ffffdfffffffff55fffffffffffff7ffff
ffffdffffffffeabfffffffffffff7ffff ffffeffffffffd57ffffffffffffefffff
ffffeffffffffca7ffffffffffffefffff ffffeffffffff94fffffffffffffefffff
fffff7fffffff29fffffffffffffdfffff fffff7ffffffe55fffffffffffffdfffff
fffff7ffffffeabfffffffffffffdfffff fffffbffffffd57fffffffffffffbfffff
fffffbfffffbaa7fffffffffffffbfffff fffffdfffff954ffffffffffffff7fffff
fffffdfffff929ffffffffffffff7fffff fffffefffff853fffffffffffffeffffff
fffffefffff2abfffffffffffffeffffff ffffff7ffff557fffffffffffffdffffff
ffffff7ffff2a7fffffffffffffdffffff ffffffbbfff550ffffffffffffbbffffff
ffffffd7fff2a3ffffffffffffd7ffffff ffffffcffff54fffffffffffffe7ffffff
ffffffefffea3fffffffffffffefcfffff fffffff7ffe4ffffffffffffffdfb7ffff
fff87ffbffe3ffffffffffffffbfb7ffff fffbfffbffffffffffffffffffbfcfffff
fffdfffdffffffffffffffffff7fb7ffff fffefffefffffffffffffffffeffb7ffff
ffff7fff7ffffffffffffffffdffcfffff fffb7fffbffffffffffffffffbffffffff
fffcffffcfffffffffffffffe7ffffffff fffffffff7ffffffffffffffdfffffffff
fffffffffbffffffffffffffbfffffffff fffffffffcfffffffffffffe7fffffffff
ffffffffff7ffffffffffffdffffffffff ffffffffff9ffffffffffff3ffffffffff
ffffffffffe7ffffffffffcfffffffffff fffffffffff9f7ffffffdf3fffffffffff
fffffffffffe77ffffffdcffffffffffff ffffffffffff87ffffffc3ffffffffffff
fffffffffffff1ffffff1fffffffffffff fffffffffffffe0fffe0ffffffffffffff
fffffffffffffff0001fffffffffffffff fffffffffffffffffffff3ffffffffffff
ffffffffffff7fffffffedffffffffffff ffffffffffff7fffffffedffffffffffff
fffffffffff83fffffffe3ffffffffffff fffffffffffb7fffffffefffffffffffff
fffffffffffd7fffffffedffffffffffff fffffffffffe7ffffffff3ffffffffffff
ffffffffffff7fffffffffffffffffffff ffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff>
DefImage

/image-11 /image-11-font 40 250 <
ffff800007 ffffbffff7 ffffbfeff7 ffffbfd7f7 ffffbfbbf7 ffffbf7df7 ffffbefef7
ffffbdff77 ffffbbffb7 ffffb07c17 ffffbf7df7 ffffbf7df7 ffffbf7df7 ffffbf7df7
ffffbf7df7 ffffbf7df7 ffffbf01f7 ffffbffff7 ffffbffff7 ffff800007 ffff800007
ffffbffff7 ffffbffff7 ffffbfeff7 ffffbfd7f7 ffffbfbbf7 ffffbf7df7 ffffbeeef7
ffffbdd777 ffffbbbbb7 ffffb07c17 ffffbefef7 ffffbdff77 ffffbbffb7 ffffb00017
ffffbffff7 ffffbffff7 ffffbffff7 ffffbffff7 ffff800007 ffffffffff c39fffffff
f76fffffff f76fffffff f76f800007 f76f800007 c76fffefff f79fffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ff9fffefff
ff6fffefff ff6fffefff ff9ffc007f ff6fffefff ff6fffefff ff9fffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ff9fffefff
ff6fffefff ff6fffefff ff1ffc007f ff7fffefff ff7fffefff ff8fffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffdfffefff ffdfffefff
fe0fffefff fedffc007f ff5fffefff ff9fffefff ffdfffefff ffffffefff ffffffefff
ffffffefff ffffffeffd ffffffeff9 ffffffeff1 ffffffefc1 ffffffef81 ffffffef01
ffffffee01 ffffffe801 ffffffee01 ffffffef01 ffffffef81 ffffffefc1 ffffffeff1
ffffffeff9 ffffffeffd ffffffefff ffffffefff ffffffefff ff0fffefff ff7fffefff
ffbfffefff ffdffc007f ffefffefff ff6fffefff ff9fffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff
ffffffefff ffffffefff ffffffefff ffffffefff ffffffefff ff9fffefff ff6fffefff
ff6fffefff ff6f800007 ff6f800007 ff6fffffff ff9fffffff ffffffffff ffffffffff
ffff800007 ffffbffff7 ffffbffff7 ffffbffff7 ffffb00017 ffffbbffb7 ffffbdff77
ffffbefef7 ffffb07c17 ffffbbbbb7 ffffbdd777 ffffbeeef7 ffffbf7df7 ffffbfbbf7
ffffbfd7f7 ffffbfeff7 ffffbffff7 ffffbffff7 ffffbffff7 ffff800007 ffff800007
ffffbffff7 ffffbf01f7 ffffbf7df7 ffffbf7df7 ffffbf7df7 ffffbf7df7 ffffbf7df7
ffffbf7df7 ffffb07c17 ffffbbffb7 ffffbdff77 ffffbefef7 ffffbf7df7 ffffbfbbf7
ffffbfd7f7 ffffbfeff7 ffffbffff7 ffffbffff7 ffff800007 ffffffffff ffffffffff
ffffffffff ffffffffff ffffffffff ffff800007 ffffbffff7 ffffbffff7 ffffbffff7
ffffbfc7f7 ffffbfbbf7 ffffbffbf7 ffffbffbf7 ffffbfe7f7 ffffbffbf7 ffffbffbf7
ffffbfbbf7 ffffbfc7f7 ffffbffff7 ffffbffff7 ffff800007>
DefImage

/image-10 /image-10-font 20 250 <
00000f 7fffef 7fdfef 7fafef 7f77ef 7efbef 7dfdef 7bfeef 77ff6f 60f82f 7efbef
7efbef 7efbef 7efbef 7efbef 7efbef 7e03ef 7fffef 7fffef 00000f 00000f 7fffef
7fffef 7fdfef 7fafef 7f77ef 7efbef 7dddef 7baeef 77776f 60f82f 7dfdef 7bfeef
77ff6f 60002f 7fffef 7fffef 7fffef 7fffef 00000f 00000f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
00000f 3fffcf 3fffcf 3fffcf 3fffcf 3863cf 3bfdcf 3dfdcf 3ee3cf 3f6fcf 3b6fcf
3ce1cf 3fffcf 3fffcf 3fffcf 3fffcf 3fffcf 00000f 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf
55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f 2aaaaf 55554f
00000f 00000f 7fffef 7fffef 7fffef 60002f 77ff6f 7bfeef 7dfdef 60f82f 77776f
7baeef 7dddef 7efbef 7f77ef 7fafef 7fdfef 7fffef 7fffef 7fffef 00000f 00000f
7fffef 7e03ef 7efbef 7efbef 7efbef 7efbef 7efbef 7efbef 60f82f 77ff6f 7bfeef
7dfdef 7efbef 7f77ef 7fafef 7fdfef 7fffef 7fffef 00000f>
DefImage

/image-9 /image-9-font 200 32 <
fffffffffffffffff9fff87fffbfff3fff9ffc19ffffffffff
fffffffffffffffff6fffbffffbffedfff6fff76ffffffffff
fffffffffffffffff6fffdfffc1ffedfff6fff76ffffffffff
fffffffffffffffff6fffefffdbffe3fff9fff76ffffffffff
fffffffffffffffff6ffff7ffebffeffff6fff76ffffffffff
fffffffffffffffff6fffb7fff3ffedfff6ffc76ffffffffff
fffffffffffffffff9fffcffffbfff3fff9fff79ffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff800000000079ffffffffffffffffffffcf0000000000
ffffffbffff3ffff79ffffffffffffffffffffcf7fffe7fffe
00000fbfeff3ff7779ffffffffffffffffffffcf7bbfe7fdfe
7fffefbfcff3fe6779ffffffffffffffffffffcf799fe7fcfe
7fffefbfaff3fd5779fffeffff7fffbfffdfffcf7aafe7fd7e
7fffefbf6ff3fb3779fffeffff7fffbfffdfffcf7b37e7fdbe
7f8fefbee013f77779fffeffff7fffbfffdfffcf7bbbe601de
7f77efbdffd3eef779fffeffff7fffbfffdfffcf7bdde6ffee
7ff7efbbffd3ddf779fffeffff7fffbfffdfffcf7beee6fff6
7ff7efb7ffd3bbf778000000000000000000000f7bf766fffa
7fcfefbbffd3ddf779fffeffff7fffbfffdfffcf7beee6fff6
7ff7efbdffd3eef779fffeffff7fffbfffdfffcf7bdde6ffee
7ff7efbee013f77779fffeff7f7fffbfffdfffcf7bbbe601de
7f77efbf6ff3fb3779fffefe3f7fffbfffdfffcf7b37e7fdbe
7f8fefbfaff3fd5779fffefc1f7fffbfffdfffcf7aafe7fd7e
7fffefbfcff3fe6779fffffc1fffffffffffffcf799fe7fcfe
7fffefbfeff3ff7779fffff80fffffffffffffcf7bbfe7fdfe
00000fbffff3ffff79fffff007ffffffffffffcf7fffe7fffe
ffffffbffff3ffff79fffff007ffffffffffffcf7fffe7fffe
ffffff800000000079ffffe003ffffffffffffcf0000000000
ffffffffffffffffffffffc001ffffffffffffffffffffffff
ffffffffffffffffffffff8000ffffffffffffffffffffffff>
DefImage

/image-8 /image-8-font 200 20 <
00000000000000000000000000000000000000000000000000
7fffe7fffe2aaaaa80000aaaaaaaaaaaaaaaaaaa7fffe7fffe
7fdfe7feee5555555fffe55555555555555555547bbfe7fdfe
7f9fe7fcce2aaaaa9fffeaaaaaaaaaaaaaaaaaaa799fe7fcfe
7f5fe7faae5555555fffe55555555555555555547aafe7fd7e
7edfe7f66e2aaaaa9fffeaaaaaaaaaaaaaaaaaaa7b37e7fdbe
7dc027eeee5555555c31e55555555555555555547bbbe601de
7bffa7ddee2aaaaa9dfeeaaaaaaaaaaaaaaaaaaa7bdde6ffee
77ffa7bbee5555555efee55555555555555555547beee6fff6
6fffa777ee2aaaaa9f71eaaaaaaaaaaaaaaaaaaa7bf766fffa
77ffa7bbee5555555fb7e55555555555555555547beee6fff6
7bffa7ddee2aaaaa9db7eaaaaaaaaaaaaaaaaaaa7bdde6ffee
7dc027eeee5555555e70e55555555555555555547bbbe601de
7edfe7f66e2aaaaa9fffeaaaaaaaaaaaaaaaaaaa7b37e7fdbe
7f5fe7faae5555555fffe55555555555555555547aafe7fd7e
7f9fe7fcce2aaaaa9fffeaaaaaaaaaaaaaaaaaaa799fe7fcfe
7fdfe7feee5555555fffe55555555555555555547bbfe7fdfe
7fffe7fffe2aaaaa9fffeaaaaaaaaaaaaaaaaaaa7fffe7fffe
7fffe7fffe5555554000055555555555555555547fffe7fffe
00000000000000000000000000000000000000000000000000>
DefImage

/image-7 /image-7-font 21 22 <
c00007 c00007 000007 555547 000007 5fff47 1fff07 580347 1fff07 5fff47 180307
5fff47 1fff07 580347 1fff07 5fff47 180307 5fff47 1fff07 400047 2aaa9f 00001f>
DefImage

/image-6 /image-6-font 163 30 <
ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffe000000000001f
ffffffffffffffffffffffffffffe000000000001f
ffffffffffffffffffffffffffffe000000000001f
ffffffffffffffffffffffffffffe000000000001f
ffffffffffffffffffffffffffffe000000000001f
fffffffffffffffffffffffffffc0000000000001f
fffffffffffffffffffffffffffdfffffffffff81f
fffffffffffffffffffffffffffdfffffffffff81f
fffffffffffffffffffffffffffdfffffffffff81f
ffe1fffffffffffffffffffffffdfffffffffff81f
fff3fffffffffffffffffffffffdfffffffffff81f
fff3fffffffffffffffffffffffdfffffffffff81f
fc3078c0c213f81c4c78e109cffdc1e38ca7f8381f
f99333739933fcc999b34c99cffdf7dd76affef81f
f99333f39933fcc999f3cc99fffdf7df7eaffef81f
f99333f39933fcc999f3cc99fffdf7df06affef81f
f99333f39913fcc999f3cc89cffdf7df76affef81f
f9846043c247fc1110206123cffdf7838c5ffef81f
f99ff3fffffffcfff9f3fffffffdf7dffffffef81f
fc3ff3fffffffcfff9f3fffffffdc1dffffff8f81f
fffffff3fffff8fffffffffffffdfffffffffef81f
fffffffffffffffffffffffffffdfffffffffff81f
fffffffffffffffffffffffffffdfffffffffffbff
fffffffffffffffffffffffffffdfffffffffffbff
fffffffffffffffffffffffffffdfffffffffffbff
fffffffffffffffffffffffffffdfffffffffffbff
fffffffffffffffffffffffffffc000000000003ff
ffffffffffffffffffffffffffffffffffffffffff>
DefImage

/image-5 /image-5-font 54 100 <
f8000000000003 f8000000000003 f8000000000003 f8000000000003 f8000000000003
00000000000003 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 703891e3818f03 7bb76eddef7703 7bb76edfeff703
7bf86ec1eff703 7bff6eddefcf03 7bf0e1e3eff703 7bffefffeff703 71ffefffef7703
7fffcfff8f8f03 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03 703891e3810703
7bb76eddef7703 7bb76edfefbf03 7bf86ec1efdf03 7bff6eddefef03 7bf0e1e3ef7703
7bffefffef7703 71ffefffef7703 7fffcfff8f8f03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 703891e3810703 7bb76eddefdf03 7bb76edfefdf03 7bf86ec1efdf03
7bff6eddefdf03 7bf0e1e3efdf03 7bffefffefdf03 71ffefffef1f03 7fffcfff8fdf03
7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03 7fffffffffff03
7fffffffffff03 7fffffffffff03 00000000000003 00000000000003 00000000000003
00000000000003 00000000000003 00000000000003 00000000000003 003c3c778f0003
001818eb1d8003 001818c3384003 001818c3300003 001818c3300003 001818c33fc003
001818c330c003 001818c3198003 001839f30f0003 001800c3000003 01188043000003
01999803000003 01ff9807000003 00000000000003 00000000000003 00000000000003
0000000000007f 0000000000007f 0000000000007f 0000000000007f 0000000000007f>
DefImage

/image-4 /image-4-font 178 29 <
f8000000000000ffc0000000000007fe0000000000003f
f8000000000000ffc0000000000007fe0000000000003f
f8000000000000ffc0000000000007fe0000000000003f
f8000000000000ffc0000000000007fe0000000000003f
f8000000000000ffc0000000000007fe0000000000003f
00000000000000f800000000000007c00000000000003f
2aaaaaaaaaaa80faaaaaaaaaaaaa07caaaaaaaaaaaa03f
55555555555540f955555555555407d55555555555503f
20000000000080fa00000000000207c80000000000203f
4ffffffffffe40f97ffffffffff407d3ffffffffff903f
2ffffffffffe80fa7ff1e3ffcff207cbffffffffffa03f
4ffffffffffe40f97ffbf7fff7f407d3ffffffffff903f
2ffffffffffe80fa7ffbf7fff7f207cbffffffffffa03f
4ffff18cfffe40f9788870e077f407d31e2198f1c0903f
2fffeeddfffe80fa7ddbb77be3f207caeddbb76ef7a03f
4fffeedbfffe40f97ddbb77bebf407d2eddbb7eff7903f
2fffeec7fffe80fa7c1bb77bddf207cafe1bb7e0f7a03f
4fffeecffffe40f97ebbb77bddf407d2ffd9b76ef7903f
2fffeed7fffe80fa7eb468fb88f207caec3478f1f7a03f
4fffeedbfffe40f97f7ffffbfff407d2effffffff7903f
2ffff189fffe80fa7c7ffffbfff207cb1ffffffff7a03f
4ffffffffffe40f97fffffe3fff407d3ffffffffc7903f
2ffffffffffe80fa7ffffffffff207cbffffffffffa03f
4ffffffffffe40f97ffffffffff407d3ffffffffff903f
2ffffffffffe9ffa7ffffffffff2ffcbffffffffffa7ff
4000000000005ff9000000000004ffd0000000000017ff
2aaaaaaaaaaa9ffaaaaaaaaaaaaaffcaaaaaaaaaaaa7ff
5555555555555ff9555555555554ffd5555555555557ff
0000000000001ff8000000000000ffc0000000000007ff>
DefImage

/image-3 /image-3-font 117 29 <
f8000000000000ffc0000000000007 f8000000000000ffc0000000000007
f8000000000000ffc0000000000007 f8000000000000ffc0000000000007
f8000000000000ffc0000000000007 00000000000000f800000000000007
2aaaaaaaaaaa80faaaaaaaaaaaaa07 55555555555540f955555555555407
20000000000080fa00000000000207 4ffffffffffe40f97ffffffffff407
2ffffffffffe80fa7ffffffffff207 4ffffffffffe40f97ffffffffff407
2ffffffffffe80fa7ffffffffff207 4ffff18cfffe40f963c4331e381407
2fffeeddfffe80fa5dbb76eddef207 4fffeedbfffe40f95dbb76fdfef407
2fffeec7fffe80fa5fc376fc1ef207 4fffeecffffe40f95ffb36eddef407
2fffeed7fffe80fa5d868f1e3ef207 4fffeedbfffe40f95dfffffffef407
2ffff189fffe80fa63fffffffef207 4ffffffffffe40f97ffffffff8f407
2ffffffffffe80fa7ffffffffff207 4ffffffffffe40f97ffffffffff407
2ffffffffffe9ffa7ffffffffff2ff 4000000000005ff9000000000004ff
2aaaaaaaaaaa9ffaaaaaaaaaaaaaff 5555555555555ff9555555555554ff
0000000000001ff8000000000000ff>
DefImage

/image-2 /image-2-font 70 127 <
000000000000000003 7fffe7fffffffffffb 7fdfe7fffffffffffb 7fafe7fffffffffffb
7f77e7fffffffffffb 7efbe7fffffffffffb 7dfde703891e3810fb 7bfee7bb76eddeef7b
77ff67bb76edfeff7b 60f827bf86ec1eff7b 7efbe7bff6eddef0fb 7efbe7bf0e1e3ef7fb
7efbe7bffefffef7fb 7efbe71ffefffef7fb 7efbe7fffcfff8f07b 7efbe7fffffffffffb
7e03e7fffffffffffb 7fffe7fffffffffffb 7fffe7fffffffffffb 000007fffffffffffb
000007fffffffffffb 7fffe7fffffffffffb 7fffe7fffffffffffb 7fdfe7fffffffffffb
7fafe7fffffffffffb 7f77e7fffffffffffb 7efbe703891e381c7b 7ddde7bb76eddefefb
7baee7bb76edfee07b 777767bf86ec1eeefb 60f827bff6eddef6fb 7dfde7bf0e1e3efafb
7bfee7bffefffefafb 77ff671ffefffefcfb 600027fffcfff8fefb 7fffe7fffffffffffb
7fffe7fffffffffffb 7fffe7fffffffffffb 7fffe7fffffffffffb 000007fffffffffffb
000007fffffffffffb 2aaaa7fffffffffffb 555547fffffffffffb 2aaaa7fffffffffffb
555547fffffffffffb 2aaaa7fffffffffffb 55554703891e3818fb 2aaaa7bb76eddef77b
555547bb76edfeff7b 2aaaa7bf86ec1eff7b 555547bff6eddefcfb 2aaaa7bf0e1e3eff7b
555547bffefffeff7b 2aaaa71ffefffef77b 555547fffcfff8f8fb 2aaaa7fffffffffffb
555547fffffffffffb 2aaaa7fffffffffffb 555547fffffffffffb 2aaaa7fffffffffffb
555547fffffffffffb 2aaaa7fffffffffffb 555547fffffffffffb 2aaaa7fffffffffffb
555547fffffffffffb 2aaaa7fffffffffffb 55554703891e38107b 2aaaa7bb76eddef77b
555547bb76edfefbfb 000007bf86ec1efdfb 3fffc7bff6eddefefb 3fffc7bf0e1e3ef77b
3fffc7bffefffef77b 3fffc71ffefffef77b 3fffc7fffcfff8f8fb 3fffc7fffffffffffb
3fffc7fffffffffffb 3fffc7fffffffffffb 3fffc7fffffffffffb 3fffc7fffffffffffb
3fffc7fffffffffffb 3fffc7fffffffffffb 3fffc7fffffffffffb 3fffc7fffffffffffb
3fffc7fffffffffffb 3fffc7fffffffffffb 00000703891e38107b 000007bb76eddefdfb
7fffe7bb76edfefdfb 7fffe7bf86ec1efdfb 7fffe7bff6eddefdfb 600027bf0e1e3efdfb
77ff67bffefffefdfb 7bfee71ffefffef1fb 7dfde7fffcfff8fdfb 60f827fffffffffffb
777767fffffffffffb 7baee7fffffffffffb 7ddde7fffffffffffb 7efbe7fffffffffffb
7f77e0000000000003 7fafe0000000000003 7fdfe3fffffffffff3 7fffe3fffffffffff3
7fffe3fffffffffff3 7fffe3fffffffffff3 000003fffffffffff3 000003fe1e1c4387f3
7fffe3ff3f38a713f3 7e03e3ff3f39e63df3 7efbe3ff3f39e67ff3 7efbe3ff3f39e67ff3
7efbe3ff3f39e601f3 7efbe3ff3f39e679f3 7efbe3ff3f39e733f3 7efbe3ff3e306787f3
60f823ff3ff9e7fff3 77ff63f73bfde7fff3 7bfee3f3333fe7fff3 7dfde3f0033fc7fff3
7efbe3fffffffffff3 7f77e3fffffffffff3 7fafe3fffffffffff3 7fdfe3fffffffffff3
7fffe3fffffffffff3 7fffe0000000000003 000000000000000003>
DefImage

/image-1 /image-1-font 118 14 <
000000000000000000000000000003 000000000000000000000000000003
000000000000000000000000000003 0787cfce003f1d7c38007077738f03
02010211001122104400888a244403 020102100010221040008882240403
0281021f001422104000888227c403 03810211001c221040008883244403
02a7020e00141e70f80089f2c38b83 022002000011020040008882000003
07e00200003f020040007082000003 00010e000000061000000006000003
000000000000000000000000000003 000000000000000000000000000003>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.95 0.95 scale
0 596 translate

%
% Begin new window
%
gsave
0 0 494 509 ClipToRectangle
gsave
0 0 494 509 [0 0 0] 0 0 [] -1 [1 dup dup] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Gilt Gadgets) 0 0 472 471 11 27 11 11 DrawMotifWindowFrame
0 0 472 471 ClipToRectangle
gsave
[0.0 dup dup] 0 0 [] 1 448 -11 2 -11 DrawLine
177 0 -17 117 22 true [0.0 dup dup] [1.0 dup dup] (Garnet Gadgets) 18 /Times-Italic DrawText
14 -29 118 14 image-1 false [0.0 dup dup] DrawBitmap
20 -67 61 34 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
10 -57 61 34 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
15 -62 51 24 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -67 -78 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
20 -116 61 34 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
10 -106 61 34 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
15 -111 51 24 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -116 -127 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
20 -165 61 34 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
10 -155 61 34 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
15 -160 51 24 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -165 -176 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
155 -61 20 20 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
150 -56 20 20 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
153 -59 14 14 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
104 -61 -72 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
155 -91 20 20 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
150 -86 20 20 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
153 -89 14 14 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
104 -91 -102 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
155 -121 20 20 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawRectangle
150 -116 20 20 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawRectangle
153 -119 14 14 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawRectangle
104 -121 -132 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
166.5 -169.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawEllipse
161.5 -164.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawEllipse
161.5 -164.5 8.5 8.5 0 360 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawEllipse
104 -160 -171 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
166.5 -202.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawEllipse
161.5 -197.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawEllipse
161.5 -197.5 8.5 8.5 0 360 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawEllipse
104 -193 -204 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
166.5 -235.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.0 dup dup] DrawEllipse
161.5 -230.5 11.5 11.5 0 360 [0.0 dup dup] 0 0 [] 1 [0.50 dup dup] DrawEllipse
161.5 -230.5 8.5 8.5 0 360 [0.0 dup dup] 0 0 [] 1 [1 dup dup] DrawEllipse
104 -226 -237 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
10 -214 70 127 image-2 false [0.0 dup dup] DrawBitmap
10 -430 117 29 image-3 false [0.0 dup dup] DrawBitmap
170 -430 178 29 image-4 false [0.0 dup dup] DrawBitmap
106 -252 54 100 image-5 false [0.0 dup dup] DrawBitmap
21 -360 163 30 image-6 false [0.0 dup dup] DrawBitmap
23 -400 21 22 image-7 false [0.0 dup dup] DrawBitmap
200 -31 200 20 image-8 false [0.0 dup dup] DrawBitmap
200 -64 200 32 image-9 false [0.0 dup dup] DrawBitmap
196 -110 20 250 image-10 false [0.0 dup dup] DrawBitmap
233 -110 40 250 image-11 false [0.0 dup dup] DrawBitmap
295 -110 135 81 image-12 false [0.0 dup dup] DrawBitmap
296 -214 106 20 image-13 false [0.0 dup dup] DrawBitmap
295 -252 -263 39 14 false [0.0 dup dup] [1.0 dup dup] (Title:) 12 /Courier-Bold DrawText
345 -252 -263 41 14 false [0.0 dup dup] [1.0 dup dup] (String) 12 /Courier DrawText
339 -250 53 18 [0.0 dup dup] 0 0 [] 1 null DrawRectangle
296 -282 -293 39 14 false [0.0 dup dup] [1.0 dup dup] (Title:) 12 /Courier-Bold DrawText
340 -280 76 18 [0.0 dup dup] 0 0 [] 1 null DrawRectangle
349 -282 -293 56 14 false [0.0 dup dup] [1.0 dup dup] ( long st) 12 /Courier DrawText
342 -282 -292 7 13 false [0.0 dup dup] [1.0 dup dup] (...) 10 /Times-Roman DrawText
407 -282 -292 7 13 false [0.0 dup dup] [1.0 dup dup] (...) 10 /Times-Roman DrawText
286 -368 56 44 [0.0 dup dup] 0 0 [] 1 null DrawRectangle
[0.0 dup dup] 0 0 [] 1 378 -369 350 -411 DrawLine
295 -317 -328 35 14 false [0.0 dup dup] [1.0 dup dup] (Label) 12 /Courier DrawText
414 -355 42 31 image-14 false [0.0 dup dup] DrawBitmap
350 -309 -324 35 19 false [0.0 dup dup] [1.0 dup dup] (Multi) 12 /Courier DrawText
385 -309 -324 66 19 false [0.0 dup dup] [1.0 dup dup] (Font, ) 18 /Courier DrawText
350 -328 -340 33 15 false [0.0 dup dup] [1.0 dup dup] (multi-) 12 /Times-Roman DrawText
383 -328 -340 22 15 false [0.0 dup dup] [1.0 dup dup] (line ) 12 /Times-Italic DrawText
405 -328 -340 35 15 false [0.0 dup dup] [1.0 dup dup] (text ) 12 /Courier-Bold DrawText
391 -396 72 64 image-15 false [0.0 dup dup] DrawBitmap
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman /Courier-Bold /Courier /Times-Italic Helvetica-Bold 
%%BoundingBox: 72 154 540 636

%%EndDocument
 GE /Times-Bold SF
8280 68254 MT
(Figure 1:)SH
/Times-Roman SF
13137 XM
(The Gilt gadget window for the Garnet look and feel.)
73 W( All)
419 W( of the gadgets that can be put into)72 W
13137 69450 MT
(the window are shown.  The check boxes are selected.)SH
46800 50 8280 70846 UL
ES
%%Page: 508 3
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 508)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6570 52050 GB 
%%BeginDocument: gilt/giltmotifgadgets.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Gilt Motif Gadgets
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 4:28 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 196 540 598
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/ArcDict 23 dict def
ArcDict /mtrx matrix put
/DrawArc { % x y xrad yrad startangle endangle line-color
           % cap join dash thickness fill-color => -
    ArcDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 moveto
            0 0 1 startangle endangle arc closepath
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 42 31 <
FFFF80FFFFFF FFFC7F1FFFFF FFF3FFE7FFFF FFEF80FBFFFF FFDE7F3DFFFF FFB9FFCEFFFF
FF7780F77FFF FEEE7F3BBFFF FEDDFFDDBFFF FFFFFFFFE1FF FFFFFFFFF3FF FFFFFFFFF3FF
030388AC007F 99CF34A9933F 99CF3CA9933F 99CF3CAC133F 99CF3C0F933F 830E015C247F
9FFF3FFFFFFF 9FFF3FFFFFFF 1FCFFFFFFFFF FFFFFFFFFFFF FEDDFFDDBFFF FEEE7F3BBFFF
FF7780F77FFF FFB9FFCEFFFF FFDE7F3DFFFF FFEF80FBFFFF FFF3FFE7FFFF FFFC7F1FFFFF
FFFF80FFFFFF>
DefImage

/image-1 /image-1-font 72 64 <
000000000000000000 000000000000000000 3FFFFFFFFFFFFFFFFC 3FFE1FFFFFFFFFFFFC
3FF961FFFFFFFFFFFC 3FE77E0FFFFFFFFFFC 3FDF7FF0FFFFFFFFFC 3FC77FFF1FFFFFFFFC
3FDB1FFFAFFFFFFFFC 3FBD60FFAFFFFFFFFC 3FBC3F0777FFFFFFFC 3FBA43F8F7FFFFFFFC
3FBA1C3EFBFFFFFFFC 3F7961C2E3FFFFFFFC 3F797E1C1BFFFFFFFC 3F74FFE277FFFFFFFC
3F74FFF977FFFFFFFC 3EF2FFF4F7FFFFFFFC 3EF2FFF4F7FFFFFFFC 3EE9FFF4EFFFFFFFFC
3EE9FFF2EFFFFFFFFC 3EE5FFFFFFFFFFFFFC 3DE5F0E0884701843C 3DD3F9F9DCED9BC67C
3DD3F9E9C8ED980E7C 3DCBF9F9E1E89DCE7C 3BABF839F3E89C9E0C 3BABF999E3E29E9E64
3BA7F999C5E31E1E64 3B97F989CEE31F3E64 3B57F02084478F3C0C 3757FFDFFFFFFFFFFC
374FFF577FFFFFFFFC 372FFF577FFFFFFFFC 36AFFF2EFFFFFFFFFC 2EAFFF2EFFFFFFFFFC
2E9FFEAEFFFFFFFFFC 2E5FFEAEFFFFFFFFFC 2D07FE5DFFFFFFFFFC 18387E5DFFFFFFFFFC
0743855DFFFFFFFFFC 1F7C395DFFFFFFFFFC 2F1FC2BBFFFFFFFFFC 2EE0FC3BFFFFFFFFFC
36FF063BFFFFFFFFFC 35FFF89BFFFFFFFFFC 39FFFE27FFFFFFFFFC 3E1FFE37FFFFFFFFFC
3FE1FE6FFFFFFFFFFC 3FFE3E1FFFFFFFFFFC 3FFFC261FFFFFFFFFC 3FFFF81FFFFFFFFFFC
3FFFC17FFFFFFFFFFC 3FFF353FFFFFFFFFFC 3FFFFCBFFFFFFFFFFC 3FFFFCBFFFFFFFFFFC
3FFFFCFFFFFFFFFFFC 3FFFFCFFFFFFFFFFFC 3FFFFCFFFFFFFFFFFC 3FFFFDFFFFFFFFFFFC
3FFFFDFFFFFFFFFFFC 3FFFFDFFFFFFFFFFFC 000000000000000000 000000000000000000>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.96 0.96 scale
0 547 translate

%
% Begin new window
%
gsave
0 0 487 418 ClipToRectangle
gsave
0 0 487 418 [0 0 0] 0 0 [] -1 [1 dup dup] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Gilt Motif Gadgets) 0 0 465 380 11 27 11 11 DrawMotifWindowFrame
0 0 465 380 ClipToRectangle
gsave
0 0 465 380 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
19 -30 122 28 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
21 -32 120 26 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
21 -32 118 24 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
28 -37 -48 27 14 false [0.0 dup dup] [1.0 dup dup] (File) 12 /Courier-Bold DrawText
63 -37 -48 27 14 false [0.0 dup dup] [1.0 dup dup] (Edit) 12 /Courier-Bold DrawText
98 -37 -48 34 14 false [0.0 dup dup] [1.0 dup dup] (Other) 12 /Courier-Bold DrawText
[0.0 dup dup] 0 0 [] 1 443 -15 5 -15 DrawLine
178 -4 -21 105 22 true [0.0 dup dup] [0.9 dup dup] (Motif Gadgets) 18 /Times-Italic DrawText
21 -74 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
23 -76 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
23 -76 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
26 -77 -88 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
21 -103 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
23 -105 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
23 -105 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
26 -106 -117 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
21 -132 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
23 -134 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
23 -134 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
26 -135 -146 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
19 -168 66 70 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
21 -170 64 68 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
21 -170 62 66 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
31 -174 -185 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
31 -196 -207 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
31 -218 -229 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
19 -252 16 116 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
21 -254 14 114 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
21 -254 12 112 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
21 -267 12 21 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
23 -269 10 19 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
23 -269 8 17 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
27 -255 {
  { 22 -265 31 -265 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[1.0 dup dup] 0 0 [] 2 22 -265 27 -255 DrawLine
27 -363 {
  { 32 -353 22 -353 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[0.216 dup dup] 0 0 [] 2 27 -363 32 -353 DrawLine
37 -252 69 116 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
39 -254 67 114 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
39 -254 65 112 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
46 -258 -269 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 1) 12 /Courier DrawText
46 -280 -291 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 2) 12 /Courier DrawText
46 -302 -313 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 3) 12 /Courier DrawText
46 -324 -335 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 4) 12 /Courier DrawText
46 -346 -357 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 5) 12 /Courier DrawText
105 -79 12 12 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
107 -81 10 10 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
107 -81 8 8 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
122 -78 -89 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
105 -102 12 12 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
107 -104 10 10 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
107 -104 8 8 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
122 -101 -112 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
105 -125 12 12 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
107 -127 10 10 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
107 -127 8 8 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
122 -124 -135 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
105 -175 {
  { 117 -175 111 -169 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
105 -175 {
  { 117 -175 111 -181 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
122 -168 -179 41 14 false [0.0 dup dup] [1.0 dup dup] (Label1) 12 /Courier DrawText
105 -198 {
  { 117 -198 111 -192 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
105 -198 {
  { 117 -198 111 -204 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
122 -191 -202 41 14 false [0.0 dup dup] [1.0 dup dup] (Label2) 12 /Courier DrawText
105 -221 {
  { 117 -221 111 -215 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
105 -221 {
  { 117 -221 111 -227 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
122 -214 -225 41 14 false [0.0 dup dup] [1.0 dup dup] (Label3) 12 /Courier DrawText
184 -50 16 197 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
186 -52 14 195 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
186 -52 12 193 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
186 -65 12 82 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
188 -67 10 80 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
188 -67 8 78 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
192 -53 {
  { 187 -63 196 -63 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[1.0 dup dup] 0 0 [] 2 187 -63 192 -53 DrawLine
192 -242 {
  { 197 -232 187 -232 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[0.216 dup dup] 0 0 [] 2 192 -242 197 -232 DrawLine
234 -50 16 199 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
236 -52 14 197 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
236 -52 12 195 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
236 -53 12 48 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
238 -55 10 46 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
238 -55 8 44 [0 0 0] 0 0 [] -1 [0.0 dup dup] DrawRectangle
[1.0 dup dup] 0 0 [] 2 246 -77 238 -77 DrawLine
[0.216 dup dup] 0 0 [] 2 246 -79 238 -79 DrawLine
224 -70 -81 5 14 false [0.0 dup dup] [1.0 dup dup] (0) 12 /Courier DrawText
269 -39 189 16 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
271 -41 187 14 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
271 -41 185 12 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
284 -41 78 12 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
286 -43 76 10 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
286 -43 74 8 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
272 -46 {
  { 282 -41 282 -51 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[1.0 dup dup] 0 0 [] 2 282 -41 272 -46 DrawLine
443 -52 {
  { 453 -47 443 -42 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[0.216 dup dup] 0 0 [] 2 453 -47 443 -52 DrawLine
269 -69 86 26 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
271 -71 84 24 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
271 -71 82 22 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
294 -71 33 22 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
296 -73 31 20 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
296 -73 29 18 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
272 -81 {
  { 292 -71 292 -91 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[1.0 dup dup] 0 0 [] 2 292 -71 272 -81 DrawLine
330 -92 {
  { 350 -82 330 -72 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
[0.216 dup dup] 0 0 [] 2 350 -82 330 -92 DrawLine
304 -75 -86 12 14 false [0.0 dup dup] [1.0 dup dup] (20) 12 /Courier DrawText
[1.0 dup dup] 0 0 [] 2 444 -129 363 -129 DrawLine
403.5 -129.5 40.5 40.5 0 180 [0.216 dup dup] 0 0 [] 2 [0.765 dup dup] DrawArc
[0.0 dup dup] 0 0 [] 1 441 -129 443 -129 DrawLine
448 -118 -127 10 11 false [0.0 dup dup] [1.0 dup dup] (10) 10 /Courier DrawText
[0.0 dup dup] 0 0 [] 1 434 -107 435 -105 DrawLine
440 -94 -103 4 11 false [0.0 dup dup] [1.0 dup dup] (8) 10 /Courier DrawText
[0.0 dup dup] 0 0 [] 1 415 -93 415 -91 DrawLine
413 -77 -86 4 11 false [0.0 dup dup] [1.0 dup dup] (6) 10 /Courier DrawText
[0.0 dup dup] 0 0 [] 1 391 -93 391 -91 DrawLine
389 -77 -86 5 11 false [0.0 dup dup] [1.0 dup dup] (4) 10 /Courier DrawText
[0.0 dup dup] 0 0 [] 1 372 -107 371 -105 DrawLine
362 -94 -103 4 11 false [0.0 dup dup] [1.0 dup dup] (2) 10 /Courier DrawText
[0.0 dup dup] 0 0 [] 1 365 -129 363 -129 DrawLine
354 -118 -127 4 11 false [0.0 dup dup] [1.0 dup dup] (0) 10 /Courier DrawText
403 -129 {
  { 422 -103 421 -111 419 -110 405 -130 }
} [0.216 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
422 -103 {
  { 403 -129 401 -128 415 -108 413 -107 }
} [1.0 dup dup] 0 0 [] 2 [0.9 dup dup] DrawPolyline
386 -134 -145 34 14 false [0.0 dup dup] [1.0 dup dup] (Title) 12 /Courier DrawText
271 -158 -169 39 14 false [0.0 dup dup] [1.0 dup dup] (Title:) 12 /Courier-Bold DrawText
315 -156 136 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
317 -158 134 16 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
317 -158 132 14 [0 0 0] 0 0 [] -1 [0.765 dup dup] DrawRectangle
319 -158 -169 35 14 false [0.0 dup dup] [1.0 dup dup] (Field) 12 /Courier DrawText
265 -187 72 64 image-1 false [0.0 dup dup] DrawBitmap
349 -188 42 31 image-2 false [0.0 dup dup] DrawBitmap
[0.0 dup dup] 0 0 [] 1 435 -212 402 -189 DrawLine
348 -228 46 35 [0.0 dup dup] 0 0 [] 1 null DrawRectangle
404 -225 43 39 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
406 -227 41 37 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
406 -227 39 35 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
129 -267 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
131 -269 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
131 -269 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
134 -270 -281 13 14 false [0.0 dup dup] [1.0 dup dup] (OK) 12 /Courier DrawText
189 -267 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
191 -269 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
191 -269 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
194 -270 -281 41 14 false [0.0 dup dup] [1.0 dup dup] (Cancel) 12 /Courier DrawText
129 -300 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
131 -302 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
131 -302 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
134 -303 -314 13 14 false [0.0 dup dup] [1.0 dup dup] (OK) 12 /Courier DrawText
189 -300 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
191 -302 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
191 -302 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
194 -303 -314 35 14 false [0.0 dup dup] [1.0 dup dup] (Apply) 12 /Courier DrawText
249 -300 51 20 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
251 -302 49 18 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
251 -302 47 16 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
254 -303 -314 41 14 false [0.0 dup dup] [1.0 dup dup] (Cancel) 12 /Courier DrawText
134 -338 -349 95 14 false [0.0 dup dup] [1.0 dup dup] (Option button:) 12 /Courier-Bold DrawText
233 -336 58 18 [0 0 0] 0 0 [] -1 [1.0 dup dup] DrawRectangle
235 -338 56 16 [0 0 0] 0 0 [] -1 [0.216 dup dup] DrawRectangle
235 -338 54 14 [0 0 0] 0 0 [] -1 [0.9 dup dup] DrawRectangle
242 -338 -349 40 14 false [0.0 dup dup] [1.0 dup dup] (Item 1) 12 /Courier DrawText
323 -288 -299 28 14 false [0.0 dup dup] [1.0 dup dup] (Text) 12 /Courier DrawText
370 -279 -294 35 19 true [0.0 dup dup] [0.9 dup dup] (Multi) 12 /Courier DrawText
405 -279 -294 66 19 true [0.0 dup dup] [0.9 dup dup] (Font, ) 18 /Courier DrawText
370 -298 -310 33 15 true [0.0 dup dup] [0.9 dup dup] (multi-) 12 /Times-Roman DrawText
403 -298 -310 22 15 true [0.0 dup dup] [0.9 dup dup] (line ) 12 /Times-Italic DrawText
425 -298 -310 21 15 true [0.0 dup dup] [0.9 dup dup] (text) 12 /Times-Bold DrawText
446 -298 -310 7 15 true [0.0 dup dup] [0.9 dup dup] ( ) 12 /Courier DrawText
326 -331 -342 113 14 false [0.0 dup dup] [1.0 dup dup] (Motif-Background) 12 /Courier-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold /Times-Roman /Courier /Times-Italic /Courier-Bold Helvetica-Bold 
%%BoundingBox: 72 196 540 598

%%EndDocument
 GE /Times-Bold SF
6120 39102 MT
(Figure 2:)SH
/Times-Roman SF
10977 XM
(The Gilt gadget window for the Motif look and feel.)SH
46800 50 6120 40498 UL
6120 42596 MT
(There is a more powerful interactive)
63 W( design tool in Garnet called Lapidary)
64 W( [Myers)
SH( 89].  Lapidary allows)64 W
6120 43792 MT
(new gadgets to be constructed from scratch, and allows application-specific graphics to be created)278 W
6120 44988 MT
(without programming.  However, Lapidary does not support the placement of the existing Garnet gadgets.)SH
14 /Times-Bold AF
6120 48806 MT
(1.2. Loading Gilt)SH
11 /Times-Roman AF
6120 50002 MT
(Gilt is)SH
/Times-Italic SF
9116 XM
(not)SH
/Times-Roman SF
10797 XM
(automatically loaded when you load Garnet.  After Garnet is loaded, to load Gilt do:)SH
8 /Courier AF
8040 51167 MT
(\050load Garnet-Gilt-Loader\051)SH
11 /Times-Roman AF
6120 53465 MT
(There is only)
115 W( one version of Gilt, but you can specify what set of gadgets should appear in the palette)116 W
6120 54661 MT
(when the windows appear.  This is determined by a required parameter to)SH
10 /Courier AF
38740 XM
(do-go)SH
11 /Times-Roman AF
(. To)
275 W( start Gilt, do:)SH
8 /Courier AF
8040 55826 MT
(\050gilt:do-go :motif\051)SH
/Times-Roman SF
8040 56691 MT
(or)SH
/Courier SF
8040 57556 MT
(\050gilt:do-go :garnet\051)SH
11 /Times-Roman AF
6120 59854 MT
(Gilt can be stopped by selecting ")SH
10 /Courier AF
(Quit)SH
11 /Times-Roman AF
(" from the menubar, or by executing)SH
10 /Courier AF
39598 XM
(\050gilt:do-stop\051)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
6120 63672 MT
(1.3. User Interface)SH
11 /Times-Roman AF
6120 64868 MT
(Gilt displays)
112 W( three windows: The gadgets window, the main command window, and the work window.)111 W
6120 66064 MT
(The main command window is shown in Figure 3.  Figure 4 shows an example session where the)
83 W( work)84 W
6120 67260 MT
(window contains gadgets with the Garnet look-and-feel.  The)
123 W( two types of gadget palette windows are)122 W
6120 68456 MT
(shown in Figures 1 and 2.)SH
6120 70754 MT
(For the Garnet look and feel, examples are in Figures 1, 3 and 4.  Figure 2 shows the Gadget window)
35 W( for)36 W
6120 71950 MT
(the Motif look and feel.)SH
ES
%%Page: 509 4
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.3)
SH( User)
1800 W( Interface)SH
51386 XM
(Page 509)SH
46800 50 8280 4486 UL
46800 50 8280 8155 UL
11 SS 
75 100 0 8730 44952 GB 
%%BeginDocument: gilt/giltcommands.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Gilt Commands
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 3:14 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 122 311 490 480
%%%Pages: 1
%%EndComments


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
50 408 translate

%
% Begin new window
%
gsave
0 0 368 169 ClipToRectangle
gsave
0 0 368 169 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Gilt Commands) 0 0 346 131 11 27 11 11 DrawMotifWindowFrame
0 0 346 131 ClipToRectangle
gsave
0 0 346 131 [0 0 0] 0 0 [] -1 [0.96 0.87 0.70] DrawRectangle
49 -55 {
  { 61 -55 55 -49 }
} [0.29 0.20 0.04] 0 0 [] 2 [0.83 0.74 0.57] DrawPolyline
49 -55 {
  { 61 -55 55 -61 }
} [1 1 1] 0 0 [] 2 [0.83 0.74 0.57] DrawPolyline
9 -48 -59 35 14 false [0 0 0] [1 1 1] (Build) 12 /Courier DrawText
49 -78 {
  { 61 -78 55 -72 }
} [1 1 1] 0 0 [] 2 [0.96 0.87 0.70] DrawPolyline
49 -78 {
  { 61 -78 55 -84 }
} [0.29 0.20 0.04] 0 0 [] 2 [0.96 0.87 0.70] DrawPolyline
23 -71 -82 21 14 false [0 0 0] [1 1 1] (Run) 12 /Courier DrawText
1 -1 344 28 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
3 -3 342 26 [0 0 0] 0 0 [] -1 [0.29 0.20 0.04] DrawRectangle
3 -3 340 24 [0 0 0] 0 0 [] -1 [0.96 0.87 0.70] DrawRectangle
10 -8 -19 27 14 false [0 0 0] [1 1 1] (File) 12 /Courier-Bold DrawText
45 -8 -19 27 14 false [0 0 0] [1 1 1] (Edit) 12 /Courier-Bold DrawText
80 -8 -19 48 14 false [0 0 0] [1 1 1] (Control) 12 /Courier-Bold DrawText
95 -48 -59 42 14 false [0 0 0] [1 1 1] (  LEFT) 12 /Courier-Bold DrawText
142 -46 39 18 [0 0 0] 0 0 [] -1 [0.29 0.20 0.04] DrawRectangle
144 -48 37 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
144 -48 35 14 [0 0 0] 0 0 [] -1 [0.83 0.74 0.57] DrawRectangle
144 -48 -59 19 14 false [0 0 0] [1 1 1] (100) 12 /Courier DrawText
95 -75 -86 42 14 false [0 0 0] [1 1 1] (   TOP) 12 /Courier-Bold DrawText
142 -73 39 18 [0 0 0] 0 0 [] -1 [0.29 0.20 0.04] DrawRectangle
144 -75 37 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
144 -75 35 14 [0 0 0] 0 0 [] -1 [0.83 0.74 0.57] DrawRectangle
144 -75 -86 13 14 false [0 0 0] [1 1 1] (50) 12 /Courier DrawText
207 -48 -59 43 14 false [0 0 0] [1 1 1] ( WIDTH) 12 /Courier-Bold DrawText
255 -46 38 18 [0 0 0] 0 0 [] -1 [0.29 0.20 0.04] DrawRectangle
257 -48 36 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
257 -48 34 14 [0 0 0] 0 0 [] -1 [0.83 0.74 0.57] DrawRectangle
257 -48 -59 12 14 false [0 0 0] [1 1 1] (71) 12 /Courier DrawText
207 -75 -86 42 14 false [0 0 0] [1 1 1] (HEIGHT) 12 /Courier-Bold DrawText
254 -73 39 18 [0 0 0] 0 0 [] -1 [0.29 0.20 0.04] DrawRectangle
256 -75 37 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
256 -75 35 14 [0 0 0] 0 0 [] -1 [0.83 0.74 0.57] DrawRectangle
256 -75 -86 12 14 false [0 0 0] [1 1 1] (85) 12 /Courier DrawText
4 -114 -125 112 14 false [0 0 0] [1 1 1] (Selected Object: ) 12 /Courier-Bold DrawText
118 -114 -125 202 14 false [0 0 0] [1 1 1] (KR-DEBUG:X-BUTTON-PANEL-10253) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier Helvetica-Bold 
%%BoundingBox: 122 311 490 480

%%EndDocument
 GE /Times-Bold SF
8280 23379 MT
(Figure 3:)SH
/Times-Roman SF
13137 XM
(The Gilt Command window.  The "Edit" menu from)
150 W( the menubar provides control over all)149 W
13137 24575 MT
(properties of the gadgets in the work window)
404 W( and provides dialog boxes for precise)405 W
13137 25771 MT
(positioning. Switching)
300 W( between "Build" and "Run" mode allows you to test the gadgets as you)12 W
13137 26967 MT
(build the interface.  Text boxes display the position and dimension of the selected)
181 W( gadget,)182 W
13137 28163 MT
(whose name appears at the bottom of the command window.)SH
46800 50 8280 30314 UL
75 100 0 8730 76786 GB 
%%BeginDocument: gilt/giltworkwin.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Gilt Work Window
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 4:24 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 184 540 609
%%%Pages: 1
%%EndComments


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-3 /image-3-font 16 16 <
FFFF FF3F FF3F FE7F EE7F E4FF E0FF E01F E03F E07F E0FF E1FF E3FF E7FF EFFF
FFFF>
DefImage

/image-2 /image-2-font 16 16 <
FF3F FE1F FE1F CC3F C43F C07F C00F C00F C01F C03F C07F C0FF C1FF C3FF C7FF
CFFF>
DefImage

/image-1 /image-1-font 4 4 <
F0 F0 F0 F0>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.99 0.99 scale
0 542 translate

%
% Begin new window
%
gsave
0 0 472 429 ClipToRectangle
gsave
0 0 472 429 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Gilt Work Window) 0 0 450 391 11 27 11 11 DrawMotifWindowFrame
0 0 450 391 ClipToRectangle
gsave
39 -19 -41 111 28 false [0 0 0] [1 1 1] (Properties:) 24 /Times-BoldItalic DrawText
[0 0 0] 0 0 [] 4 150 -49 35 -49 DrawLine
283 -24 51 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
278 -19 51 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
281 -22 45 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
297 -24 -35 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
344 -24 51 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
339 -19 51 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
342 -22 45 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
344 -24 -35 41 14 false [0 0 0] [1 1 1] (Cancel) 12 /Courier DrawText
231 -115 -126 81 14 false [0 0 0] [1 1 1] (Object Name:) 12 /Courier-Bold DrawText
317 -113 104 18 [0 0 0] 0 0 [] 1 null DrawRectangle
326 -115 -126 83 14 false [0 0 0] [1 1 1] (short string) 12 /Courier DrawText
231 -67 -78 60 14 false [0 0 0] [1 1 1] (Filename:) 12 /Courier-Bold DrawText
296 -65 125 18 [0 0 0] 0 0 [] 1 null DrawRectangle
305 -67 -78 105 14 false [0 0 0] [1 1 1] (very long strin) 12 /Courier DrawText
412 -67 -77 7 13 false [0 0 0] [1 1 1] (...) 10 /Times-Roman DrawText
230 -161 -172 82 14 false [0 0 0] [1 1 1] (Debug Level:) 12 /Courier-Bold DrawText
[0 0 0] 0 0 [] 1 351 -332 351 -227 DrawLine
341 -161 20 16 [0 0 0] 0 0 [] 1 null DrawRectangle
348 -162 -173 6 14 false [0 0 0] [1 1 1] (4) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -227 346 -227 DrawLine
332 -222 -231 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -248 346 -248 DrawLine
332 -243 -252 4 11 false [0 0 0] [1 1 1] (2) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -269 346 -269 DrawLine
331 -264 -273 5 11 false [0 0 0] [1 1 1] (4) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -290 346 -290 DrawLine
332 -285 -294 4 11 false [0 0 0] [1 1 1] (6) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -311 346 -311 DrawLine
332 -306 -315 4 11 false [0 0 0] [1 1 1] (8) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 356 -332 346 -332 DrawLine
326 -327 -336 10 11 false [0 0 0] [1 1 1] (10) 10 /Courier DrawText
[0 0 0] 0 0 [] 2 361 -227 341 -227 DrawLine
[0 0 0] 0 0 [] 2 361 -332 341 -332 DrawLine
363 -276 {
  { 363 -262 353 -269 }
} [0 0 0] 0 0 [] -1 [0 0 0] DrawPolyline
341 -182 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
351 -185 {
  { 351 -185 358 -192 354 -192 354 -199 348 -199 348 -192 344 -192 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
341 -357 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
351 -374 {
  { 351 -374 358 -367 354 -367 354 -360 348 -360 348 -367 344 -367 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
341 -202 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
351 -206 {
  { 351 -206 358 -213 344 -213 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
351 -210 {
  { 351 -210 358 -217 344 -217 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
341 -337 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
351 -353 {
  { 351 -353 358 -346 344 -346 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
351 -349 {
  { 351 -349 358 -342 344 -342 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
123 -104 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
118 -99 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
121 -102 14 14 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
85 -104 -115 28 14 false [0 0 0] [1 1 1] (Bold) 12 /Courier DrawText
123 -134 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
118 -129 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
121 -132 14 14 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
73 -134 -145 40 14 false [0 0 0] [1 1 1] (Italic) 12 /Courier DrawText
123 -164 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
118 -159 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
121 -162 14 14 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
51 -164 -175 62 14 false [0 0 0] [1 1 1] (Underline) 12 /Courier DrawText
48 -96 7 7 [0 0 0] 0 0 [] 1 null DrawRectangle
139 -96 7 7 [0 0 0] 0 0 [] 1 null DrawRectangle
139 -180 7 7 [0 0 0] 0 0 [] 1 null DrawRectangle
48 -180 7 7 [0 0 0] 0 0 [] 1 null DrawRectangle
77 -153 92 85 [0 0 0] 0 0 [4 4] 1 null DrawRectangle
165 -236 16 16 image-2 true [1 1 1] DrawBitmap
165 -236 16 16 image-3 true [0 0 0] DrawBitmap
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman /Courier-Bold /Courier /Times-BoldItalic Helvetica-Bold 
%%BoundingBox: 72 184 540 609

%%EndDocument
 GE /Times-Bold SF
8280 64738 MT
(Figure 4:)SH
/Times-Roman SF
13137 XM
(The Gilt Work window showing a sample dialog box being created using the Garnet look)
49 W( and)48 W
13137 65934 MT
(feel.)SH
46800 50 8280 67330 UL
ES
%%Page: 510 5
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 510)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(1.3.1. Gadget Palettes)SH
11 /Times-Roman AF
6120 9200 MT
(The single version of Gilt allows you to place)
95 W( Motif or Garnet look-and-feel gadgets into your window)96 W
6120 10396 MT
(\050you can mix and match if you want\051.  To switch back and)
172 W( forth, use the ")171 W
10 /Courier AF
(Load Other Gadgets)171 W
11 /Times-Roman AF
(")SH
6120 11592 MT
(command in the ")27 W
10 /Courier AF
(File)SH
11 /Times-Roman AF
(" menu of)
27 W( the Gilt menubar.  You can only see one gadget window at a time.  The)28 W
6120 12788 MT
(dialog boxes for Gilt itself use only the Motif look and feel.)SH
12 /Times-Bold AF
6120 16472 MT
(1.3.2. Placing Gadgets)SH
11 /Times-Roman AF
6120 17668 MT
(When you press with any mouse button on a)
81 W( gadget in the gadgets palette window \050see Figures 1 or 2\051,)80 W
6120 18864 MT
(that gadget becomes selected.  Then, when you)
18 W( press with the)19 W
/Times-Italic SF
33721 XM
(right)SH
/Times-Roman SF
36155 XM
(mouse button in the work window, an)19 W
6120 20060 MT
(instance of that gadget will be created.  Some gadgets, such as)
39 W( the scroll bars, have a variable size in one)38 W
6120 21256 MT
(or more dimensions, so for those you need to press the right button down, drag out a)
61 W( region, and release)62 W
6120 22452 MT
(the button.)SH
6120 24750 MT
(The gadgets supplied for the)SH
/Times-Italic SF
18919 XM
(Garnet)SH
/Times-Roman SF
22310 XM
(look and feel are \050from top to bottom, left to right in Figure 1\051:)SH
/Symbol SF
8089 26328 MT
(\267)SH
/Times-Roman SF
8870 XM
(Menubar: a pull-down menu,)SH
/Symbol SF
8089 27524 MT
(\267)SH
/Times-Roman SF
8870 XM
(Text-button-panel: for commands,)SH
/Symbol SF
8089 28720 MT
(\267)SH
/Times-Roman SF
8870 XM
(Scrolling-menu: when there are many items to choose from,)SH
/Symbol SF
8089 29916 MT
(\267)SH
/Times-Roman SF
8870 XM
(Option-button: a popup-menu)
22 W( which changes the label of the button according to the selected)21 W
8870 31112 MT
(item,)SH
/Symbol SF
8089 32308 MT
(\267)SH
/Times-Roman SF
8870 XM
(Popup-menu-button: a popup-menu which does not change labels,)SH
/Symbol SF
8089 33504 MT
(\267)SH
/Times-Roman SF
8870 XM
(OK-Cancel: A special gadget to be used when you want the standard OK and Cancel)284 W
8870 34700 MT
(behavior \050see section 1.8.1\051,)SH
/Symbol SF
8089 35896 MT
(\267)SH
/Times-Roman SF
8870 XM
(X-button-panel: for settings where more than one is allowed,)SH
/Symbol SF
8089 37092 MT
(\267)SH
/Times-Roman SF
8870 XM
(Radio-button-panel: for settings where only one is allowed,)SH
/Symbol SF
8089 38288 MT
(\267)SH
/Times-Roman SF
8870 XM
(Menu: a menu with an optional title,)SH
/Symbol SF
8089 39484 MT
(\267)SH
/Times-Roman SF
8870 XM
(H-scroll-bar: for scrolling horizontally,)SH
/Symbol SF
8089 40680 MT
(\267)SH
/Times-Roman SF
8870 XM
(H-slider: for entering a number in a range,)SH
/Symbol SF
8089 41876 MT
(\267)SH
/Times-Roman SF
8870 XM
(V-scroll-bar: for scrolling vertically,)SH
/Symbol SF
8089 43072 MT
(\267)SH
/Times-Roman SF
8870 XM
(V-slider: for entering a number in a range,)SH
/Symbol SF
8089 44268 MT
(\267)SH
/Times-Roman SF
8870 XM
(OK-Apply-Cancel: Similar to OK-Cancel, but supports)
153 W( Apply \050like OK, but don't remove)152 W
8870 45464 MT
(window\051,)SH
/Symbol SF
8089 46660 MT
(\267)SH
/Times-Roman SF
8870 XM
(Gauge: another way to enter a number in a range,)SH
/Symbol SF
8089 47856 MT
(\267)SH
/Times-Roman SF
8870 XM
(Trill-device: enter a number either in a range or not,)SH
/Symbol SF
8089 49052 MT
(\267)SH
/Times-Roman SF
8870 XM
(Labeled-box: enter any string; box grows if string is bigger,)SH
/Symbol SF
8089 50248 MT
(\267)SH
/Times-Roman SF
8870 XM
(Scrolling-labeled-box: enter a string; box has a fixed size and string scrolls if too big,)SH
/Symbol SF
8089 51444 MT
(\267)SH
/Times-Roman SF
8870 XM
(Text: for decoration,)SH
/Symbol SF
8089 52640 MT
(\267)SH
/Times-Roman SF
8870 XM
(Multifont-text: for decoration,)SH
/Symbol SF
8089 53836 MT
(\267)SH
/Times-Roman SF
8870 XM
(Rectangle: for decoration,)SH
/Symbol SF
8089 55032 MT
(\267)SH
/Times-Roman SF
8870 XM
(Line: for decoration,)SH
/Symbol SF
8089 56228 MT
(\267)SH
/Times-Roman SF
8870 XM
(Bitmap: for decoration,)SH
/Symbol SF
8089 57424 MT
(\267)SH
/Times-Roman SF
8870 XM
(Pixmap: for decoration.)SH
6120 59722 MT
(The gadgets supplied for the)SH
/Times-Italic SF
18919 XM
(Motif)SH
/Times-Roman SF
21578 XM
(look and feel are \050from top to bottom, left to right in Figure 2\051:)SH
/Symbol SF
8089 61300 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Menubar: a pull-down menu)SH
/Symbol SF
8089 62496 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Text-button-panel: for commands,)SH
/Symbol SF
8089 63692 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Menu: a menu with an optional title,)SH
/Symbol SF
8089 64888 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Scrolling-Menu: when there are many items to select from,)SH
/Symbol SF
8089 66084 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Check-button-panel: for settings where more than one is allowed,)SH
/Symbol SF
8089 67280 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-Radio-button-panel: for settings where only one is allowed,)SH
/Symbol SF
8089 68476 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-OK-Cancel: A special)
78 W( gadget to be used when you want the standard OK and Cancel)79 W
8870 69672 MT
(behavior \050see section 1.8.1\051,)SH
/Symbol SF
8089 70868 MT
(\267)SH
/Times-Roman SF
8870 XM
(Motif-OK-Apply-Cancel: similar to OK-Cancel, but supports Apply,)SH
ES
%%Page: 511 6
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.3)
SH( User)
1800 W( Interface)SH
51386 XM
(Page 511)SH
46800 50 8280 4486 UL
11 /Symbol AF
10249 8080 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-Option-Buton: a popup-menu whose button's label changes according to the selection)SH
/Symbol SF
10249 9276 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-V-scroll-bar: for scrolling vertically,)SH
/Symbol SF
10249 10472 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-V-slider: for entering a number in a range,)SH
/Symbol SF
10249 11668 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-H-scroll-bar: for scrolling horizontally,)SH
/Symbol SF
10249 12864 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-trill-device: for selecting from a range of numbers,)SH
/Symbol SF
10249 14060 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-Gauge: another way to enter a number in a range,)SH
/Symbol SF
10249 15256 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-Scrolling-labeled-box: enter a string; box has a fixed size and string scrolls if too big,)SH
/Symbol SF
10249 16452 MT
(\267)SH
/Times-Roman SF
11030 XM
(Pixmap: for decoration)SH
/Symbol SF
10249 17648 MT
(\267)SH
/Times-Roman SF
11030 XM
(Bitmap: for decoration)SH
/Symbol SF
10249 18844 MT
(\267)SH
/Times-Roman SF
11030 XM
(Rectangle: for decoration,)SH
/Symbol SF
10249 20040 MT
(\267)SH
/Times-Roman SF
11030 XM
(Line: for decoration,)SH
/Symbol SF
10249 21236 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-Box: A gadget that resembles a raised \050or depressed\051 rectangle,)
3 W( used to achieve a Motif)2 W
11030 22432 MT
(style effect.  Set the)SH
10 /Courier AF
20010 XM
(:depressed-p)SH
11 /Times-Roman AF
27485 XM
(parameter.)SH
/Symbol SF
10249 23628 MT
(\267)SH
/Times-Roman SF
11030 XM
(Text: for decoration,)SH
/Symbol SF
10249 24824 MT
(\267)SH
/Times-Roman SF
11030 XM
(Multifont-text: for decoration,)SH
/Symbol SF
10249 26020 MT
(\267)SH
/Times-Roman SF
11030 XM
(Motif-Background: a special rectangle that helps achieve the Motif effect.)
80 W( It)
437 W( always moves)81 W
11030 27216 MT
(to the back of the window, and can only be selected at the edges.)SH
8280 29514 MT
(In addition to the standard gadgets, Gilt supplies a text string, a line, a rectangle)
34 W( and a bitmap.  These are)33 W
8280 30710 MT
(intended to be used as decorations and global labels in your dialog boxes.)
176 W( They)
628 W( have no interactive)177 W
8280 31906 MT
(behavior.)SH
8280 34204 MT
(The Motif version also provides a background rectangle.  This is a special rectangle which you should)
11 W( put)10 W
8280 35400 MT
(behind your objects to make the window be the correct color.  Note: to select the)
193 W( motif-background)194 W
8280 36596 MT
(rectangle, press at the edge of the window \050the edge of the background)
106 W( rectangle\051.  You might want to)105 W
8280 37792 MT
(select the rectangle to delete it or change its color \050using the properties menu\051.)SH
12 /Times-Bold AF
8280 41476 MT
(1.3.3. Selecting and Editing Gadgets)SH
11 /Times-Roman AF
8280 42672 MT
(When you press with the left)
33 W( mouse button on a gadget in the work window, it will become selected, and)34 W
8280 43868 MT
(will show four or twelve selection handles.  The objects that)
159 W( can change size \050such as rectangles and)158 W
8280 45064 MT
(scroll bars\051 display black)
116 W( and white selection handles, and the objects that cannot change size \050such as)117 W
9 SS 
27598 45922 MT
(1)SH
11 SS 
8280 46285 MT
(buttons\051 only show white selection handles.)14 W
28626 XM
(If you)
14 W( press on a)13 W
/Times-Italic SF
36297 XM
(white)SH
/Times-Roman SF
38969 XM
(handle and drag, you can change the)13 W
8280 47481 MT
(object's position.  If you press on a)SH
/Times-Italic SF
24013 XM
(black)SH
/Times-Roman SF
26670 XM
(handle, you can change it's size \050see Figure 5\051.)SH
46800 50 8280 49632 UL
1 1 0 1130 94129 GB 
%%BeginDocument: gilt/gilthandles.PS
%!PS-Adobe-1.0
%%Creator: GEM.GARNET.CS.CMU.EDU:bam (Brad Myers)
%%Title: t1.bmt (Gilt Work Window)
%%CreationDate: Wed Jan 16 13:10:09 1991
%%EndComments
%%%Pages: 1
%%EndProlog
%%%Page: 1 1

/bitdump % stk: width, height, iscale
% dump a bit image with lower left corner at current origin,
% scaling by iscale (iscale=1 means 1/300 inch per pixel)
{
        % read arguments
        /iscale exch def
        /height exch def
        /width exch def

        % scale appropriately
        width iscale mul height iscale mul scale

        % allocate space for one scanline of input
        /picstr % picstr holds one scan line
                width 7 add 8 idiv % width of image in bytes = ceiling(width/8)
                string
                def

        % read and dump the image
        width height 1 [width 0 0 height neg 0 height]
        { currentfile picstr readhexstring pop }
        image
} def
%%BoundingBox: 241 354 370 437
72 300 div dup scale
1006 1479 translate
179 114 3 bitdump
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffe03ffffffff80ffffffffe03ffffffff80ffffffffe0
ffe03ffffffffbeffffffffe03ffffffff80ffffffffe0
ffe03ffffffffbeffffffffe03ffffffff80ffffffffe0
ffe3c0000000041000000001fc0000000078ffffffffe0
ffe23ffffffffbeffffffffe03ffffffff88ffffffffe0
ffe23ffffffffbeffffffffe03ffffffff88ffffffffe0
ffe23ffffffff80ffffffffe03ffffffff88ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffedbfffffffffffffffffffffffffffffb6ffffffffe0
ffedbfffffffffffffffffffffffffffffb6ffffffffe0
ffedbfffffffffffffffffffffffffffffb6ffffffffe0
ffedbfffffffffffffffffffffffffffffb6ffffffffe0
ffedbfffffffffffffffffffffffffffffb6ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
ffe23fffffffffffffffffffffffffffff88ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
fffdfffffffffffffffffffffffffffffff7ffffffffe0
ffe23ffffffff80ffffffffe03ffffffff88ffffffffe0
ffe23ffffffffbeffffffffe03ffffffff88ffffffffe0
ffe23ffffffffbeffffffffe03ffffffff88ffffffffe0
ffe3c0000000041000000001fc0000000078ffffffffe0
ffe03ffffffffbeffffffffe03ffffffff80ffffffffe0
ffe03ffffffffbeffffffffe03ffffffff80ffffffffe0
ffe03ffffffff80ffffffffe03ffffffff80ffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0
ffffffffffffffffffffffffffffffffffffffffffffe0

showpage
%%Trailer

%%EndDocument
 GE /Times-Bold SF
8280 60481 MT
(Figure 5:)SH
/Times-Roman SF
13137 XM
(Pressing on a black selection)
114 W( handle causes the object to grow, and pressing on a white one)115 W
13137 61677 MT
(causes it to move.)SH
46800 50 8280 63073 UL
8280 65171 MT
(If you press over an object with either the)2 W
/Times-Italic SF
26899 XM
(middle)SH
/Times-Roman SF
30170 XM
(mouse button or)
2 W( hold down the keyboard shift key while)1 W
8280 66367 MT
(hitting the left button, then that object is added to)
235 W( the selection set \050so you can get multiple items)236 W
8280 67563 MT
(selected\051. If)
427 W( you press with middle or shift-left over an)
76 W( item that is)75 W
/Times-Italic SF
39063 XM
(already)SH
/Times-Roman SF
42773 XM
(selected, then just that item)75 W
10800 50 8280 70172 UL
7 SS 
9180 71673 MT
(1)SH
9 SS 
9530 72000 MT
(You can indirectly change the size of buttons by setting offsets and sizes in the property sheet, however.)SH
ES
%%Page: 512 7
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 512)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(becomes de-selected.  If you press with the left button in the background \050over no objects\051, all)
24 W( objects are)25 W
6120 9151 MT
(deselected. While)
527 W( multiple objects are selected, you can move them all as a group)
126 W( by pressing on the)125 W
6120 10347 MT
(selection handle of any of them.  Since Gilt)
194 W( uses the multi-selection gadget, it supports selecting all)195 W
6120 11543 MT
(objects in a region \050hold down the left button and sweep)
137 W( out a region\051, and growing multiple selected)136 W
6120 12739 MT
(objects \050if they are growable, then press on a black handle at the outside of the set of objects\051.)SH
6120 15037 MT
(To explicitly set the size or position of the selected object \050when only)
93 W( one is selected\051, you can use the)94 W
6120 16233 MT
(number fields in the Command Window \050see)
39 W( Figure 3\051.  Simply press with the left button in one of these)38 W
6120 17429 MT
(fields and type a new number.  When you hit)133 W
10 /Courier AF
27519 XM
(return)SH
11 /Times-Roman AF
(, the object will)
133 W( be updated.  These fields are a)134 W
6120 18625 MT
(handy way to get objects to be evenly lined up \050but also see the ")SH
10 /Courier AF
(Align)SH
11 /Times-Roman AF
(" command\051.)SH
14 /Times-Bold AF
6120 22443 MT
(1.4. Editing Strings)SH
11 /Times-Roman AF
6120 23639 MT
(Editing the strings of most gadgets is)
198 W( straightforward: select the gadget \050to get the selection handles)197 W
6120 24835 MT
(around it\051 and then click in a string to get the)
36 W( string cursor, and then type the new string, and hit)37 W
10 /Courier AF
49320 XM
(return)SH
11 /Times-Roman AF
6120 26031 MT
(when done.  If you make the string empty \050e.g., by typing)84 W
10 /Courier AF
32728 XM
(control-u)SH
11 /Times-Roman AF
(\051, and hit)83 W
10 /Courier AF
42593 XM
(return)SH
11 /Times-Roman AF
(, that button of)83 W
6120 27227 MT
(the gadget will be removed.  If you edit the last item of the gadget and hit)2 W
10 /Courier AF
38780 XM
(control-n)SH
11 /Times-Roman AF
44457 XM
(instead of)3 W
10 /Courier AF
49045 XM
(return)SH
11 /Times-Roman AF
(,)SH
6120 28423 MT
(then a new item will be added to the gadget.  The strings can also be edited by editing the)179 W
10 /Courier AF
49320 XM
(:items)SH
11 /Times-Roman AF
6120 29619 MT
(property in the property sheet that appears from the)SH
10 /Courier AF
28997 XM
(Properties)SH
11 /Times-Roman AF
35272 XM
(command.)SH
6120 31917 MT
(To edit string labels, simply click to select them, and then click again with the)
9 W( left button to begin editing.)10 W
6120 33113 MT
(The fonts of multifont strings can be edited using the keyboard commands)
97 W( described in the "Multifont")96 W
6120 34309 MT
(section of the Opal Manual.)SH
6120 36607 MT
(To edit)
9 W( the strings in a pop-up menu, like a menubar or an option button, click once with the left button to)10 W
6120 37803 MT
(select the gadget, and then click again to pop-up the submenu.)
28 W( You)
329 W( can now click in the submenu to edit)27 W
6120 38999 MT
(any of the items.  Use)
21 W( control-n in the last item to add new items or control-u and return to remove items.)22 W
6120 40195 MT
(To edit the top-level labels of a menubar, you need to click the left button three times:  once to)
38 W( select the)37 W
6120 41391 MT
(gadget, once to bring up the submenu, and a third time to begin editing.  Click)
186 W( outside to make the)187 W
6120 42587 MT
(popped-up menu disappear.)SH
6120 44885 MT
(The editing operations supported for regular text \050and labels\051 are:)SH
10 /Courier AF
8620 46836 MT
(^h, delete, backspace)SH
11 /Times-Roman AF
(: delete previous character.)SH
10 /Courier AF
8620 48032 MT
(^w, ^backspace, ^delete)SH
11 /Times-Roman AF
(: delete previous word.)SH
10 /Courier AF
8620 49228 MT
(^d)SH
11 /Times-Roman AF
(: delete next character.)SH
10 /Courier AF
8620 50424 MT
(^u)SH
11 /Times-Roman AF
(: delete entire string.)SH
10 /Courier AF
8620 51620 MT
(^b, left-arrow)SH
11 /Times-Roman AF
(: go back one character.)SH
10 /Courier AF
8620 52816 MT
(^f, right-arrow)SH
11 /Times-Roman AF
(: go forward one character.)SH
10 /Courier AF
8620 54012 MT
(^a)SH
11 /Times-Roman AF
(: go to beginning of the current line.)SH
10 /Courier AF
8620 55208 MT
(^e)SH
11 /Times-Roman AF
(: go to end of the current line.)SH
10 /Courier AF
8620 56404 MT
(^y)SH
11 /Times-Roman AF
(: insert the contents of the X cut buffer into the string at the current point.)SH
10 /Courier AF
8620 57600 MT
(^c)SH
11 /Times-Roman AF
(: copy the current string to the X cut buffer.)SH
10 /Courier AF
8620 58796 MT
(enter, return, ^j, ^J)SH
11 /Times-Roman AF
(: Finished.)SH
10 /Courier AF
8620 59992 MT
(^n)SH
11 /Times-Roman AF
(: Finished, but add a new item \050if a list\051.)SH
10 /Courier AF
8620 61188 MT
(line-feed)SH
11 /Times-Roman AF
(: Start a new line \050if editing a multi-line text\051.)SH
10 /Courier AF
8620 62384 MT
(^g)SH
11 /Times-Roman AF
(: Abort the edits and return the string to the way it was before editing started.)SH
6120 66576 MT
(If the)
81 W( item is a member of a list, such as a menu item or a radio button, then if the string is empty, that)80 W
6120 67772 MT
(item will be removed.  If the string is terminated by)
56 W( a)57 W
10 /Courier AF
30531 XM
(^n)SH
11 /Times-Roman AF
32063 XM
(\050control-n\051 instead of by a return, and if this is)57 W
6120 68968 MT
(the last)
49 W( item, then a new item will be added.  The items can also be changed in the properties dialog box)48 W
6120 70164 MT
(for the gadget \050see below\051.)SH
ES
%%Page: 513 8
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.5)
SH( Commands)1800 W
51386 XM
(Page 513)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Some strings cannot be edited directly, however.  This includes the labels)
68 W( of sliders and gauges, and the)69 W
8280 9151 MT
(indicators in scroll bars.  To change these values, you)
57 W( have to use the property sheets.  Also, for gadgets)56 W
8280 10347 MT
(that have strings as their)17 W
/Times-Italic SF
19332 XM
(values)SH
/Times-Roman SF
(, such as the text)
17 W( input field and scrolling-text input field, you can only set)18 W
8280 11543 MT
(the value strings by going into Run mode.  Note,)
68 W( however, that the values are not saved with the gadget)67 W
8280 12739 MT
(\050see section 1.8\051.)SH
8280 15037 MT
(To change the bitmap picture of a bitmap object, specify the name of the new bitmap using the)302 W
8280 16233 MT
(")SH
10 /Courier AF
(Properties...)SH
11 /Times-Roman AF
(" command.)SH
14 /Times-Bold AF
8280 20051 MT
(1.5. Commands)SH
11 /Times-Roman AF
8280 21247 MT
(There are many)
54 W( commands in Gilt, and the command menu is a menubar at the top of the main window.)53 W
8280 22443 MT
(The menubar implementation allows you)
47 W( to give commands using keyboard shortcuts when the mouse is)48 W
8280 23639 MT
(in the main Work Window.  The particular shortcuts are listed on the sub-menus of the main menubar.)SH
8280 25937 MT
(The commands are:)SH
10 /Courier AF
10480 28013 MT
(Cut)SH
11 /Times-Roman AF
12555 XM
(\320 remove the selected item\050s\051 but save them in the clipboard so they can later be pasted.)SH
10 /Courier AF
10480 29708 MT
(Copy)SH
11 /Times-Roman AF
13155 XM
(\320 copy the selected item\050s\051 to the clipboard so they can later be pasted.)SH
10 /Courier AF
10480 31403 MT
(Paste)SH
11 /Times-Roman AF
13755 XM
(\320 place a copy of the items in the clipboard onto the window.)SH
10 /Courier AF
10480 33098 MT
(Duplicate)SH
11 /Times-Roman AF
16155 XM
(\320 place a duplicate of the selected items onto the window.  \050See section 1.5.2.\051)SH
10 /Courier AF
10480 34793 MT
(Delete)SH
11 /Times-Roman AF
14514 XM
(\320 delete the selected objects and don't put them into clipboard.  This)
159 W( operation can be)158 W
13780 35989 MT
(undone with the)SH
10 /Courier AF
21143 XM
(Undo Last Delete)SH
11 /Times-Roman AF
31018 XM
(command. \050See)
275 W( section 1.5.4.\051)SH
10 /Courier AF
10480 37684 MT
(Delete All)56 W
11 /Times-Roman AF
16867 XM
(\320 delete all the objects in the window.  This operation can be undone with the)56 W
10 /Courier AF
52680 XM
(Undo)SH
13780 38880 MT
(Last Delete)SH
11 /Times-Roman AF
20655 XM
(command. \050See)
275 W( section 1.5.4.\051)SH
10 /Courier AF
10480 40575 MT
(Undo Last Delete)68 W
11 /Times-Roman AF
20559 XM
(\320 undoes the last delete.  All the)
68 W( deletes are saved, so this command can be)67 W
13780 41771 MT
(executed multiple times to bring back objects deleted earlier.  \050See section 1.5.4.\051)SH
10 /Courier AF
10480 43466 MT
(Select All)SH
11 /Times-Roman AF
16755 XM
(\320 select all the objects in the window \050including the background object\051.)SH
10 /Courier AF
10480 45161 MT
(To Top)SH
11 /Times-Roman AF
14355 XM
(\320 make the selected objects not be covered by any other objects.  \050See section 1.5.1.\051)SH
10 /Courier AF
10480 46856 MT
(To Bottom)SH
11 /Times-Roman AF
16155 XM
(\320 make the selected objects be covered by all other objects.  \050See section 1.5.1.\051)SH
10 /Courier AF
10480 48551 MT
(Properties...)SH
11 /Times-Roman AF
18555 XM
(\320 bring up the properties window.  \050See section 1.5.5\051.)SH
10 /Courier AF
10480 50246 MT
(Align)SH
11 /Times-Roman AF
13772 XM
(\320 bring up the dialog box to allow aligning of the selected objects with respect)
17 W( to the first of)18 W
13780 51442 MT
(the objects selected.  \050See section 1.5.3.\051)SH
8280 53740 MT
(Many of these commands are now)
82 W( implemented with the functions in the)81 W
10 /Courier AF
41639 XM
(Standard-Edit)SH
11 /Times-Roman AF
49795 XM
(mechanism,)SH
8280 54936 MT
(described in the Gadgets Manual.)SH
12 /Times-Bold AF
8280 58620 MT
(1.5.1. To-Top and To-Bottom)SH
11 /Times-Roman AF
8280 59816 MT
(The selected object or)
94 W( objects can be made so they are not covered by any objects using the ")95 W
10 /Courier AF
(To Top)95 W
11 /Times-Roman AF
(")SH
8280 61012 MT
(command in)
46 W( the Gilt Command Window.  The objects can be made to be covered by all other objects by)45 W
8280 62208 MT
(selecting the ")SH
10 /Courier AF
(To Bottom)SH
11 /Times-Roman AF
(" command.)SH
12 /Times-Bold AF
8280 65892 MT
(1.5.2. Copying Objects)SH
11 /Times-Roman AF
8280 67088 MT
(The ")261 W
10 /Courier AF
(Duplicate)SH
11 /Times-Roman AF
(" command in the Command Window)
261 W( causes the selected object or objects to be)262 W
8280 68284 MT
(duplicated. The)
467 W( new object or objects will have all the same properties as the original, but the original)95 W
8280 69480 MT
(and new objects can be)
148 W( subsequently edited independently without affecting the other object \050the new)149 W
8280 70676 MT
(object is a copy, not an)92 W
/Times-Italic SF
19249 XM
(instance)SH
/Times-Roman SF
23282 XM
(of the original\051.  The copy is placed at a fixed offset)
92 W( below and to the)91 W
8280 71872 MT
(right of the original, and is selected, so it can subsequently be moved.)SH
ES
%%Page: 514 9
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 514)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(1.5.3. Aligning Objects)SH
11 /Times-Roman AF
6120 9200 MT
(The Align function allows you to neatly line up a set of objects,)
62 W( and to adjust their sizes to be the same.)63 W
6120 10396 MT
(Figure 6)
101 W( shows the dialog box that appears when the ")100 W
10 /Courier AF
(Align...)SH
11 /Times-Roman AF
(" command is selected.  Align adjusts)100 W
6120 11592 MT
(the present positions of objects only; it does not set up constraints.  Therefore, you can)
185 W( freely move)186 W
6120 12788 MT
(objects after aligning them.)SH
46800 50 6120 14939 UL
75 100 0 6570 59236 GB 
%%BeginDocument: gilt/alignfig.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Align Objects
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 3:43 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 170 212 442 580
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
A0 50 A0 50>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
98 508 translate

%
% Begin new window
%
gsave
0 0 272 368 ClipToRectangle
gsave
0 0 272 368 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Align Objects) 0 0 250 330 11 27 11 11 DrawMotifWindowFrame
0 0 250 330 ClipToRectangle
gsave
0 0 250 330 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
64 -22 20 20 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
66 -24 18 18 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
66 -24 16 16 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
18 -25 -36 41 14 false [0 0 0] [1 1 1] (Column) 12 /Courier-Bold DrawText
64 -126 20 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
66 -128 18 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
66 -128 16 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
37 -129 -140 22 14 false [0 0 0] [1 1 1] (Row) 12 /Courier-Bold DrawText
173 -27 {
  { 185 -27 179 -21 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
173 -27 {
  { 185 -27 179 -33 }
} [1 1 1] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
140 -20 -31 28 14 false [0 0 0] [1 1 1] (Left) 12 /Courier DrawText
173 -60 {
  { 185 -60 179 -54 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
173 -60 {
  { 185 -60 179 -66 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
113 -53 -64 55 14 false [0 0 0] [1 1 1] (Centered) 12 /Courier DrawText
173 -93 {
  { 185 -93 179 -87 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
173 -93 {
  { 185 -93 179 -99 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
133 -86 -97 35 14 false [0 0 0] [1 1 1] (Right) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 230 -23 205 -23 DrawLine
[0 0 0] 0 0 [] 1 219 -28 205 -28 DrawLine
[0 0 0] 0 0 [] 1 217 -33 205 -33 DrawLine
[0 0 0] 0 0 [] 1 222 -38 205 -38 DrawLine
[0 0 0] 0 0 [] 1 230 -55 205 -55 DrawLine
[0 0 0] 0 0 [] 1 225 -60 211 -60 DrawLine
[0 0 0] 0 0 [] 1 222 -65 214 -65 DrawLine
[0 0 0] 0 0 [] 1 229 -70 206 -70 DrawLine
[0 0 0] 0 0 [] 1 230 -87 205 -87 DrawLine
[0 0 0] 0 0 [] 1 230 -92 210 -92 DrawLine
[0 0 0] 0 0 [] 1 230 -97 213 -97 DrawLine
[0 0 0] 0 0 [] 1 230 -103 207 -103 DrawLine
173 -131 {
  { 185 -131 179 -125 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
173 -131 {
  { 185 -131 179 -137 }
} [1 1 1] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
148 -124 -135 20 14 false [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] (Top) 12 /Courier DrawText
173 -164 {
  { 185 -164 179 -158 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
173 -164 {
  { 185 -164 179 -170 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
113 -157 -168 55 14 false [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] (Centered) 12 /Courier DrawText
173 -197 {
  { 185 -197 179 -191 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
173 -197 {
  { 185 -197 179 -203 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
126 -190 -201 42 14 false [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] (Bottom) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 205 -142 205 -125 DrawLine
[0 0 0] 0 0 [] 1 213 -135 213 -125 DrawLine
[0 0 0] 0 0 [] 1 221 -137 221 -125 DrawLine
[0 0 0] 0 0 [] 1 229 -141 229 -125 DrawLine
[0 0 0] 0 0 [] 1 205 -174 205 -157 DrawLine
[0 0 0] 0 0 [] 1 213 -169 213 -162 DrawLine
[0 0 0] 0 0 [] 1 221 -171 221 -160 DrawLine
[0 0 0] 0 0 [] 1 229 -174 229 -157 DrawLine
[0 0 0] 0 0 [] 1 205 -206 205 -189 DrawLine
[0 0 0] 0 0 [] 1 213 -206 213 -192 DrawLine
[0 0 0] 0 0 [] 1 221 -206 221 -194 DrawLine
[0 0 0] 0 0 [] 1 229 -206 229 -187 DrawLine
[0 0 0] 0 0 [] 1 150 -220 10 -220 DrawLine
99 -227 20 20 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
101 -229 18 18 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
101 -229 16 16 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
25 -230 -241 69 14 false [0 0 0] [1 1 1] (Same Width) 12 /Courier-Bold DrawText
99 -261 20 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
101 -263 18 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
101 -263 16 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
18 -264 -275 76 14 false [0 0 0] [1 1 1] (Same Height) 12 /Courier-Bold DrawText
177 -227 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
179 -229 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
179 -229 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
196 -230 -241 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
177 -256 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
179 -258 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
179 -258 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
185 -259 -270 35 14 false [0 0 0] [1 1 1] (Apply) 12 /Courier DrawText
177 -285 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
179 -287 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
179 -287 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
182 -288 -299 41 14 false [0 0 0] [1 1 1] (Cancel) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold Helvetica-Bold 
%%BoundingBox: 170 212 442 580

%%EndDocument
 GE /Times-Bold SF
6120 45088 MT
(Figure 6:)SH
/Times-Roman SF
10977 XM
(The Align dialog box, after the user has specified that the selected objects should be)
96 W( aligned)95 W
10977 46284 MT
(and centered in a column and be adjusted to be the same width.)SH
46800 50 6120 47680 UL
6120 49778 MT
(To use Align, you first select two or more objects)
95 W( in the workspace window \050remember, to select more)96 W
6120 50974 MT
(than one object, press on the objects with the middle mouse button or hold down the shift key)
161 W( while)160 W
6120 52170 MT
(hitting the left button\051.  The)101 W
/Times-Italic SF
19223 XM
(first)SH
/Times-Roman SF
21373 XM
(object you select is the reference object,)
101 W( and the other objects will be)102 W
6120 53366 MT
(adjusted with respect to that first object.  For)
97 W( example, if you want to make objects be the same width,)96 W
6120 54562 MT
(then the width will be)
131 W( that of the first selected object.  You should not change the selection while the)132 W
6120 55758 MT
(Align dialog box is visible.)SH
6120 58056 MT
(Aligning in a column or row also adjusts the spacing between)
113 W( objects to be all the same.  The spacing)112 W
6120 59252 MT
(used between the objects is the average space between the objects before the command is given.)SH
6120 61550 MT
(If a line is selected, then it is made to be)
38 W( exactly horizontal if "Column" is specified, or vertical if "Row")39 W
6120 62746 MT
(is selected.  The size of)
134 W( lines can also be adjusted using the width and height buttons.  If both "Same)133 W
6120 63942 MT
(Width" and "Same Height" are selected for a line, then an error message is given.)SH
6120 66240 MT
(If the "Same Width" and/or "Same Height" buttons are pressed, and one of the selected objects other than)24 W
6120 67436 MT
(the first cannot change size, then)
215 W( an error message is presented.  All other selected objects are still)214 W
6120 68632 MT
(adjusted, however.)SH
ES
%%Page: 515 10
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.5)
SH( Commands)1800 W
51386 XM
(Page 515)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(1.5.4. Deleting Objects)SH
11 /Times-Roman AF
8280 9200 MT
(Choosing the ")117 W
10 /Courier AF
(Delete Selected)117 W
11 /Times-Roman AF
(" command in the Gilt Command Window will remove the)
117 W( selected)118 W
8280 10396 MT
(object or objects from the work window.  Selecting the)
64 W( ")63 W
10 /Courier AF
(Undo Last Delete)63 W
11 /Times-Roman AF
(" command will bring the)63 W
8280 11592 MT
(object back.)
138 W( Selecting)
553 W( ")139 W
10 /Courier AF
(Delete All)139 W
11 /Times-Roman AF
(" removes all the objects from the work window.  ")139 W
10 /Courier AF
(Undo Last)139 W
8280 12788 MT
(Delete)SH
11 /Times-Roman AF
(" will bring all of the objects back.  All of the deleted)
103 W( objects are kept in a queue, so the undo)102 W
8280 13984 MT
(command can be executed repeatedly.  Note that this is not a general Undo; only undoing of deletes)
107 W( is)108 W
8280 15180 MT
(supported.)SH
12 /Times-Bold AF
8280 18864 MT
(1.5.5. Properties)SH
11 /Times-Roman AF
8280 20060 MT
(Each type of)
120 W( gadget has a number of properties.  First select the object in the workspace window, and)119 W
8280 21256 MT
(then select the ")214 W
10 /Courier AF
(Properties...)SH
11 /Times-Roman AF
(" command \050in the Gilt Command Window\051.)
214 W( The)
705 W( window for the)215 W
8280 22452 MT
(properties will appear below)
161 W( the selected object, but then can be moved.  You should not change the)160 W
8280 23648 MT
(selection while the properties dialog box is visible.)SH
8280 25946 MT
(If the selected object is a rectangle, line or string, then special dialog)
163 W( boxes are available so you can)164 W
8280 27142 MT
(change the color, filling-style, font, etc.  These were created using Gilt.)SH
8280 29440 MT
(The general)
116 W( property sheet lists all of the properties that you can change, and will look something like)115 W
8280 30636 MT
(Figure 7.  You can press in the value \050right\051 side of any entry and then type a new value \050using the)
46 W( same)47 W
8280 31832 MT
(editing commands as in section 1.4\051.  You can move from field to field using the tab key \050after)
66 W( pressing)65 W
8280 33028 MT
(with the left mouse button in a)
64 W( field to start with\051.  When finished setting values, hit the "OK" button to)65 W
8280 34224 MT
(cause the values to be used and the property sheet to disappear, or hit)
9 W( the "Apply" button to see the results)8 W
8280 35420 MT
(and leave the property)
84 W( sheet visible.  If you hit "Cancel", the changes will not affect the object, and the)85 W
8280 36616 MT
(property sheet will go away.)SH
8280 38914 MT
(You can select multiple items and bring up a property sheet on all of them.  The property sheet will)
26 W( show)25 W
8280 40110 MT
(the union of all properties of all objects.  If multiple objects have the same property name, then)
37 W( the value)38 W
8280 41306 MT
(of the property for the first object selected is shown.)SH
8280 43604 MT
(When you edit the value of a property and then hit)
40 W( return \050or when you hit OK for properties that pop up)39 W
8280 44800 MT
(dialog boxes\051,)
20 W( the property sheet will immediately set that property into all objects for which the property)21 W
8280 45996 MT
(is defined.  Thus, you can change the)174 W
10 /Courier AF
26288 XM
(:foreground-color)SH
11 /Times-Roman AF
36937 XM
(of all the objects)
174 W( by executing)173 W
10 /Courier AF
51480 XM
(Select)SH
8280 47192 MT
(All)SH
11 /Times-Roman AF
(, bringing up the)121 W
10 /Courier AF
18111 XM
(Properties...)SH
11 /Times-Roman AF
(, and then editing the foreground-color property.  If you start to)122 W
8280 48388 MT
(edit a property)
130 W( but change your mind, hit)129 W
10 /Courier AF
27613 XM
(Control-G)SH
11 /Times-Roman AF
33417 XM
(if text editing or)129 W
10 /Courier AF
41327 XM
(Cancel)SH
11 /Times-Roman AF
45331 XM
(in a dialog box.  The)129 W
10 /Courier AF
8280 49584 MT
(Done)SH
11 /Times-Roman AF
10955 XM
(button hides the property sheet.)SH
8280 51882 MT
(The left, top, width and height number boxes displayed in the main Gilt)
74 W( window will now also work on)75 W
8280 53078 MT
(multiple objects.  When multiple objects are)
4 W( selected, they show the values for the bounding box of all the)3 W
8280 54274 MT
(objects, and when you edit one and)
184 W( hit RETURN, that value is applied to all objects for which it is)185 W
8280 55470 MT
(settable.)SH
8280 57768 MT
(For a complete explanation of what the fields of each gadget do, see the Gadgets Manual.)SH
8280 60066 MT
(Some of the fields of these property sheets are edited in a special way.  The)102 W
10 /Courier AF
43357 XM
(DIRECTION)SH
11 /Times-Roman AF
49134 XM
(field must be)101 W
8280 61262 MT
(either)SH
10 /Courier AF
11214 XM
(:VERTICAL)SH
11 /Times-Roman AF
17044 XM
(or)SH
10 /Courier AF
18390 XM
(:HORIZONTAL)SH
11 /Times-Roman AF
(, so the field shows these names, and you can press with)
155 W( the left)156 W
8280 62458 MT
(button to pick the desired value.  Fields that represent fonts)
15 W( show a special icon, and if you click on it, the)14 W
8280 63654 MT
(special font dialog box will appear.  However, the font is)
134 W( not changed in the object until the "OK" or)135 W
8280 64850 MT
("Apply" buttons are hit on)SH
/Times-Italic SF
20147 XM
(both)SH
/Times-Roman SF
22378 XM
(the font dialog box and the main property sheet.)SH
8280 67148 MT
(The field named)65 W
10 /Courier AF
15958 XM
(KNOWN-AS)SH
11 /Times-Roman AF
21098 XM
(should be)
65 W( set for all gadgets that programs will want to know the values of,)64 W
8280 68344 MT
(and will be the name of the slot that holds the object \050so it should be a keyword, e.g.,)71 W
10 /Courier AF
47236 XM
(:myvalue)SH
11 /Times-Roman AF
(\051. The)418 W
10 /Courier AF
8280 69540 MT
(SELECT-FUNCTION)SH
11 /Times-Roman AF
17655 XM
(slot can contain)
100 W( a function to be called at run time when the gadget is used.  Note)99 W
8280 70736 MT
(that you might want to specify the package name on the front of the function name.  However, if you are)40 W
8280 71932 MT
(going to have OK-Cancel or OK-Apply-Cancel in the dialog box, you probably do not)
128 W( want to supply)127 W
ES
%%Page: 516 11
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 516)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
75 100 0 6607 54552 GB 
%%BeginDocument: gilt/giltpropsheet.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: X BUTTON PANEL
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Oct 12, 1993, 5:53 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 146 184 465 608
%%%Pages: 1
%%EndComments


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 14 11 <
0003 7ffb 601b 7ffb 601b 7ffb 601b 7ffb 601b 7ffb 0003>
DefImage

/image-1 /image-1-font 4 4 <
f0 f0 f0 f0>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
74 536 translate

%
% Begin new window
%
gsave
0 0 319 424 ClipToRectangle
gsave
0 0 319 424 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(X BUTTON PANEL) 0 0 297 386 11 27 11 11 DrawMotifWindowFrame
0 0 297 386 ClipToRectangle
gsave
0 0 297 386 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
7 -7 38 24 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
9 -9 36 22 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
9 -9 34 20 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
12 -12 -23 28 14 false [0 0 0] [1 1 1] (Done) 12 /Courier DrawText
5 -363 -374 56 14 false [0 0 0] [1 1 1] (VISIBLE:) 12 /Courier DrawText
72 -365 41 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
70 -363 41 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
72 -363 -374 7 14 false [0 0 0] [1 1 1] (T) 12 /Courier-Bold DrawText
89 -363 -374 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -349 -360 49 14 false [0 0 0] [1 1 1] (INDENT:) 12 /Courier DrawText
63 -349 -360 7 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
5 -335 -346 84 14 false [0 0 0] [1 1 1] (RANK-MARGIN:) 12 /Courier DrawText
98 -335 -346 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -321 -332 126 14 false [0 0 0] [1 1 1] (FIXED-HEIGHT-SIZE:) 12 /Courier DrawText
140 -321 -332 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -303 -314 105 14 false [0 0 0] [1 1 1] (FIXED-HEIGHT-P:) 12 /Courier DrawText
121 -305 41 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
119 -303 41 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
121 -303 -314 7 14 false [0 0 0] [1 1 1] (T) 12 /Courier DrawText
138 -303 -314 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier-Bold DrawText
5 -289 -300 70 14 false [0 0 0] [1 1 1] (H-SPACING:) 12 /Courier DrawText
84 -289 -300 7 14 false [0 0 0] [1 1 1] (5) 12 /Courier DrawText
5 -271 -282 70 14 false [0 0 0] [1 1 1] (DIRECTION:) 12 /Courier DrawText
86 -273 153 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
84 -271 153 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
86 -271 -282 63 14 false [0 0 0] [1 1 1] (:VERTICAL) 12 /Courier-Bold DrawText
159 -271 -282 77 14 false [0 0 0] [1 1 1] (:HORIZONTAL) 12 /Courier DrawText
5 -257 -268 42 14 false [0 0 0] [1 1 1] (ITEMS:) 12 /Courier DrawText
56 -257 -268 210 14 false [0 0 0] [1 1 1] (\050"Bold" "Italic" "Underline" \051) 12 /Courier DrawText
5 -239 -250 105 14 false [0 0 0] [1 1 1] (TEXT-ON-LEFT-P:) 12 /Courier DrawText
121 -241 41 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
119 -239 41 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
121 -239 -250 7 14 false [0 0 0] [1 1 1] (T) 12 /Courier-Bold DrawText
138 -239 -250 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -225 -236 84 14 false [0 0 0] [1 1 1] (TEXT-OFFSET:) 12 /Courier DrawText
98 -225 -236 7 14 false [0 0 0] [1 1 1] (5) 12 /Courier DrawText
5 -211 -222 98 14 false [0 0 0] [1 1 1] (BUTTON-HEIGHT:) 12 /Courier DrawText
112 -211 -222 14 14 false [0 0 0] [1 1 1] (20) 12 /Courier DrawText
5 -197 -208 112 14 false [0 0 0] [1 1 1] (SELECT-FUNCTION:) 12 /Courier DrawText
126 -197 -208 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -183 -194 133 14 false [0 0 0] [1 1 1] (KNOWN-AS [keyword]:) 12 /Courier DrawText
147 -183 -194 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -169 -180 91 14 false [0 0 0] [1 1 1] (BUTTON-WIDTH:) 12 /Courier DrawText
105 -169 -180 14 14 false [0 0 0] [1 1 1] (20) 12 /Courier DrawText
5 -155 -166 98 14 false [0 0 0] [1 1 1] (SHADOW-OFFSET:) 12 /Courier DrawText
112 -155 -166 7 14 false [0 0 0] [1 1 1] (5) 12 /Courier DrawText
5 -141 -152 77 14 false [0 0 0] [1 1 1] (GRAY-WIDTH:) 12 /Courier DrawText
91 -141 -152 7 14 false [0 0 0] [1 1 1] (3) 12 /Courier DrawText
5 -127 -138 35 14 false [0 0 0] [1 1 1] (FONT:) 12 /Courier DrawText
51 -129 14 11 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
49 -127 14 11 image-2 false [0 0 0] DrawBitmap
5 -113 -124 42 14 false [0 0 0] [1 1 1] (VALUE:) 12 /Courier DrawText
56 -113 -124 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -99 -110 70 14 false [0 0 0] [1 1 1] (V-SPACING:) 12 /Courier DrawText
84 -99 -110 7 14 false [0 0 0] [1 1 1] (5) 12 /Courier DrawText
5 -81 -92 98 14 false [0 0 0] [1 1 1] (FIXED-WIDTH-P:) 12 /Courier DrawText
114 -83 41 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
112 -81 41 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
114 -81 -92 7 14 false [0 0 0] [1 1 1] (T) 12 /Courier-Bold DrawText
131 -81 -92 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
5 -67 -78 119 14 false [0 0 0] [1 1 1] (FIXED-WIDTH-SIZE:) 12 /Courier DrawText
133 -67 -78 14 14 false [0 0 0] [1 1 1] (72) 12 /Courier DrawText
5 -49 -60 56 14 false [0 0 0] [1 1 1] (H-ALIGN:) 12 /Courier DrawText
72 -51 149 15 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
70 -49 149 15 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
72 -49 -60 35 14 false [0 0 0] [1 1 1] (:LEFT) 12 /Courier DrawText
117 -49 -60 49 14 false [0 0 0] [1 1 1] (:CENTER) 12 /Courier DrawText
176 -49 -60 42 14 false [0 0 0] [1 1 1] (:RIGHT) 12 /Courier-Bold DrawText
5 -35 -46 91 14 false [0 0 0] [1 1 1] (PIXEL-MARGIN:) 12 /Courier DrawText
105 -35 -46 21 14 false [0 0 0] [1 1 1] (NIL) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier Helvetica-Bold 
%%BoundingBox: 146 184 465 608

%%EndDocument
 GE /Times-Bold SF
6120 42504 MT
(Figure 7:)SH
/Times-Roman SF
10977 XM
(The property sheet that appears for a particular X-Button-Panel.)SH
46800 50 6120 43900 UL
6120 45651 MT
(selection functions, since selection functions are called when the gadget is used, not)
52 W( when OK is hit \050see)53 W
6120 46847 MT
(section 1.9\051.)SH
6120 49145 MT
(If the property sheet thinks any value is)9 W
/Times-Italic SF
23848 XM
(illegal)SH
/Times-Roman SF
(, the value will be displayed in italics after)
9 W( a return or tab is)8 W
6120 50341 MT
(hit, and Gilt will beep.  You can edit the value,)
19 W( or just leave it if the value will become defined later \050e.g.,)20 W
6120 51537 MT
(if the package is not yet defined\051.)SH
6120 53835 MT
(Unfortunately, however, the error checking of the values)
64 W( typed into the property sheets is not perfect, so)63 W
6120 55031 MT
(be careful to check all the values before hitting OK or Apply.  If a bad value is set)
75 W( into the gadget, Gilt)76 W
6120 56227 MT
(will crash.)
195 W( You)
663 W( can usually recover from this by setting the field back to a legal value in the Lisp)194 W
6120 57423 MT
(window. For)
275 W( example, if)SH
10 /Courier AF
17515 XM
(:gray-width)SH
11 /Times-Roman AF
24390 XM
(got a bad value, you might type:)SH
8 /Courier AF
8040 58588 MT
(\050kr:s-value user::*gilt-obj* :gray-width 3\051)SH
8040 59453 MT
(\050opal:update-all\051)SH
8040 60318 MT
(\050inter:main-event-loop\051)SH
12 /Times-Bold AF
6120 64002 MT
(1.5.6. Saving to a file)SH
11 /Times-Roman AF
6120 65198 MT
(When the)
164 W( ")165 W
10 /Courier AF
(Save...)SH
11 /Times-Roman AF
(" command is selected from the Command window, Gilt pops up the dialog box)165 W
6120 66394 MT
(shown in Figure 8.)SH
6120 68692 MT
(The only field you need to fill in is the ")46 W
10 /Courier AF
(Filename)SH
11 /Times-Roman AF
(" field, which tells)
46 W( the name of the file that should be)45 W
6120 69888 MT
(written. Simply)
299 W( press with the left button in the field and begin typing.  This is a scrollable field,)
12 W( so if the)13 W
6120 71084 MT
(name gets too long, the text will scroll left and right.)
40 W( You)
353 W( might also want to use the window manager's)39 W
ES
%%Page: 517 12
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.5)
SH( Commands)1800 W
51386 XM
(Page 517)SH
46800 50 8280 4486 UL
46800 50 8280 8155 UL
11 SS 
75 100 0 8730 48627 GB 
%%BeginDocument: gilt/savedialog.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Save File
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 3:53 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 137 263 475 529
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
A0 50 A0 50>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
65 457 translate

%
% Begin new window
%
gsave
0 0 338 266 ClipToRectangle
gsave
0 0 338 266 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Save File) 0 0 316 228 11 27 11 11 DrawMotifWindowFrame
0 0 316 228 ClipToRectangle
gsave
0 0 316 228 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
9 -8 -23 94 20 false [0 0 0] [1 1 1] (Saving...) 18 /Courier-BoldOblique DrawText
22 -44 -55 60 14 false [0 0 0] [1 1 1] (Filename:) 12 /Courier-Bold DrawText
87 -42 216 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
89 -44 214 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
89 -44 212 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
22 -74 -85 151 14 false [0 0 0] [1 1 1] (Top-level Gadget name:) 12 /Courier-Bold DrawText
178 -72 125 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
180 -74 123 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
180 -74 121 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
180 -74 -85 77 14 false [0 0 0] [1 1 1] (TEMP-GADGET) 12 /Courier DrawText
22 -134 -145 89 14 false [0 0 0] [1 1 1] (Window Title:) 12 /Courier-Bold DrawText
116 -132 187 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
118 -134 185 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
118 -134 183 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
118 -134 -145 77 14 false [0 0 0] [1 1 1] (TEMP WINDOW) 12 /Courier DrawText
22 -164 -175 89 14 false [0 0 0] [1 1 1] (Package name:) 12 /Courier-Bold DrawText
116 -162 187 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
118 -164 185 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
118 -164 183 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
118 -164 -175 28 14 false [0 0 0] [1 1 1] (USER) 12 /Courier DrawText
22 -194 -205 144 14 false [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] [ 0 0 0 0.90 0.90 0.90 true 0 image-1-font ] (Function-for-OK name:) 12 /Courier-Bold DrawText
171 -192 132 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
173 -194 130 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
173 -194 128 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
190 -8 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
192 -10 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
192 -10 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
195 -11 -22 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
250 -8 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
252 -10 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
252 -10 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
255 -11 -22 41 14 false [0 0 0] [1 1 1] (Cancel) 12 /Courier DrawText
195 -103 12 12 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
197 -105 10 10 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
197 -105 8 8 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
23 -102 -113 167 14 false [0 0 0] [1 1 1] (Export Top-level Gadget?) 12 /Courier-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Courier-BoldOblique Helvetica-Bold 
%%BoundingBox: 137 263 475 529

%%EndDocument
 GE /Times-Bold SF
8280 30654 MT
(Figure 8:)SH
/Times-Roman SF
13137 XM
(The dialog box that appears when the Save command is chosen.)SH
46800 50 8280 32050 UL
8280 33801 MT
(cut buffer \050^Y\051 if you can select the string for the file in a different window.)
104 W( Pressing)
485 W( with the mouse)105 W
8280 34997 MT
(button again will move the cursor, so you need to hit)SH
10 /Courier AF
31744 XM
(return)SH
11 /Times-Roman AF
35619 XM
(or)SH
10 /Courier AF
36810 XM
(^G)SH
11 /Times-Roman AF
38285 XM
(to stop editing the text field.)SH
8280 37295 MT
(All the objects in the work window)
127 W( will be collected together in a single Garnet ``aggregadget'' when)126 W
8280 38491 MT
(written to)
49 W( the file.  The ")50 W
10 /Courier AF
(Top-level Gadget name)50 W
11 /Times-Roman AF
(" field allows you to give this gadget a name.  This)50 W
8280 39687 MT
(is usually)
13 W( important if you want to use the gadget in some interface, so you can have a name for it.  If you)12 W
8280 40883 MT
(press the ")SH
10 /Courier AF
(Export Top-level Gadget)SH
11 /Times-Roman AF
(" button, then an export line will be added to the output file.)SH
8280 43181 MT
(As described below in section 1.9, there is)
217 W( a simple function for displaying the created gadget in a)218 W
8280 44377 MT
(window. If)
291 W( you want this window)
8 W( to have a special title, you can fill this into the ")7 W
10 /Courier AF
(Window Title)7 W
11 /Times-Roman AF
(" field.)7 W
8280 45573 MT
(The current position and size of the workspace window is)
41 W( used to determine the default size and position)42 W
8280 46769 MT
(of the dialog box window when it is popped up, so you)
53 W( should change the workspace window's size and)52 W
8280 47965 MT
(position \050using the standard window manager mechanisms\051 before hitting OK in the Save dialog box.)SH
8280 50263 MT
(If you want the gadget)
109 W( to be defined in a Lisp package other than)110 W
10 /Courier AF
38710 XM
(USER)SH
11 /Times-Roman AF
(, then you can fill this into the)110 W
8280 51459 MT
(")SH
10 /Courier AF
(Package name)SH
11 /Times-Roman AF
(" field.)SH
8280 53757 MT
(Finally, if you have included the special)
315 W( OK-Cancel gadget in your workspace window, then the)314 W
8280 54953 MT
(")SH
10 /Courier AF
(Function-for-OK name)144 W
11 /Times-Roman AF
(" field)
144 W( will be available.  Type here the name of the function you want to)145 W
8280 56149 MT
(have called when the OK button is hit.  The parameters to this function are described in section 1.9.)SH
8280 58447 MT
(After filling in all the fields, hit "OK" to actually save the file, or "Cancel" to abort and not do the save.)SH
8280 60745 MT
(If you have already read or saved a file, then)
158 W( the values in the Save dialog box will be based on the)157 W
8280 61941 MT
(previous values.  Otherwise, the system defaults will be shown.)SH
/Times-Bold SF
8280 64239 MT
(Note: There is no protection or confirmation required before overwriting an existing file.)SH
12 SS 
8280 67923 MT
(1.5.7. Reading from a file)SH
11 /Times-Roman AF
8280 69119 MT
(You can read files back into Gilt using the ")37 W
10 /Courier AF
(Read...)SH
11 /Times-Roman AF
(" command.  This displays)
37 W( the dialog box shown in)38 W
8280 70315 MT
(Figure 9.  Press with the left mouse button)
87 W( in the ")86 W
10 /Courier AF
(Filename)SH
11 /Times-Roman AF
(" field and type the name of the file to be)86 W
8280 71511 MT
(read, then hit return.)SH
ES
%%Page: 518 13
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 518)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
75 100 0 6570 44502 GB 
%%BeginDocument: gilt/readdialog.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Read File
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 16, 1993, 3:58 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 137 319 475 474
%%%Pages: 1
%%EndComments


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
65 402 translate

%
% Begin new window
%
gsave
0 0 338 155 ClipToRectangle
gsave
0 0 338 155 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(Read File) 0 0 316 117 11 27 11 11 DrawMotifWindowFrame
0 0 316 117 ClipToRectangle
gsave
0 0 316 117 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
9 -8 -23 105 20 false [0 0 0] [1 1 1] (Reading...) 18 /Courier-BoldOblique DrawText
22 -44 -55 60 14 false [0 0 0] [1 1 1] (Filename:) 12 /Courier-Bold DrawText
87 -42 216 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
89 -44 214 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
89 -44 212 14 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
89 -44 -55 208 14 false [0 0 0] [1 1 1] (/usr/bam/garnet/gilt/test1.lis) 12 /Courier DrawText
190 -8 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
192 -10 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
192 -10 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
195 -11 -22 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
250 -8 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
252 -10 49 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
252 -10 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
255 -11 -22 41 14 false [0 0 0] [1 1 1] (Cancel) 12 /Courier DrawText
198 -77 {
  { 210 -77 204 -71 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
198 -77 {
  { 210 -77 204 -83 }
} [1 1 1] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
32 -70 -81 161 14 false [0 0 0] [1 1 1] (Add to existing objects) 12 /Courier-Bold DrawText
198 -100 {
  { 210 -100 204 -94 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
198 -100 {
  { 210 -100 204 -106 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
25 -93 -104 168 14 false [0 0 0] [1 1 1] (Replace existing objects) 12 /Courier-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Courier-BoldOblique Helvetica-Bold 
%%BoundingBox: 137 319 475 474

%%EndDocument
 GE /Times-Bold SF
6120 22329 MT
(Figure 9:)SH
/Times-Roman SF
10977 XM
(The dialog box that appears when the Read command is hit.)SH
46800 50 6120 23725 UL
6120 25823 MT
(If there are objects already in the workspace window, then)
83 W( you have the option of adding the objects in)84 W
6120 27019 MT
(the file to the ones already in the work window using the ")15 W
10 /Courier AF
(Add to existing objects)15 W
11 /Times-Roman AF
(" option, or else)15 W
6120 28215 MT
(you can have the contents of the)
266 W( workspace window deleted first using the ")267 W
10 /Courier AF
(Replace existing)267 W
6120 29411 MT
(objects)SH
11 /Times-Roman AF
(" option.  If you use the ")248 W
10 /Courier AF
(Replace)SH
11 /Times-Roman AF
(" option, then the window)
248 W( size is adjusted to the size)247 W
6120 30607 MT
(specified when the file was written.  Also, reading a file)
210 W( using the replace option puts the previous)211 W
6120 31803 MT
(contents of the workspace window in the delete stack)
17 W( so that they can be retrieved using the ")16 W
10 /Courier AF
(Undo Last)16 W
6120 32999 MT
(Delete)SH
11 /Times-Roman AF
(" command.)SH
6120 35297 MT
(Output produced from the GarnetDraw utility program can)
130 W( be read into Gilt, which would allow more)131 W
6120 36493 MT
(elaborate decorations to be added to a dialog box.  But in general, only files)
31 W( written with Gilt can be read)30 W
6120 37689 MT
(with Gilt.)SH
12 /Times-Bold AF
6120 41373 MT
(1.5.8. Value and Enable Control)SH
11 /Times-Roman AF
6120 42569 MT
(A sophisticated module for modifying the values of gadgets in)
134 W( the Gilt work-window has been added,)135 W
6120 43765 MT
(along with a corresponding module to modify when a gadget should be active)
33 W( \050or grayed-out\051.  These are)32 W
6120 44961 MT
(called the)164 W
10 /Courier AF
10968 XM
(Value Control)164 W
11 /Times-Roman AF
19371 XM
(and)SH
10 /Courier AF
21398 XM
(Enable Control)164 W
11 /Times-Roman AF
30401 XM
(modules, and can)
164 W( be invoked from the "Control")165 W
6120 46157 MT
(submenu in the Gilt menubar.)SH
6120 48455 MT
(These modules implement the ideas discussed in)
23 W( [Myers)
SH( 91].  The paper includes examples of how to use)23 W
6120 49651 MT
(this feature,)
371 W( but a full set of documentation is still pending.  If there is sufficient demand for)372 W
6120 50847 MT
(documentation of)
413 W( this module, we will supply an addendum to this manual \050direct requests to)412 W
10 /Courier AF
6120 52043 MT
(garnet@cs.cmu.edu)SH
11 /Times-Roman AF
(\051.)SH
14 /Times-Bold AF
6120 55861 MT
(1.6. Run Mode)SH
11 /Times-Roman AF
6120 57057 MT
(To try out the interface, just click on the button in the command window labeled "Run".  This)
73 W( will grey)74 W
6120 58253 MT
(out most of the)
39 W( commands, and allow the gadgets in the work window to execute as they will for the end)38 W
6120 59449 MT
(user \050except that application functions will not be called\051.  To leave run)
210 W( mode, simply press on the)211 W
6120 60645 MT
("Build" button.)SH
14 /Times-Bold AF
6120 64463 MT
(1.7. Hacking Objects)SH
11 /Times-Roman AF
6120 65659 MT
(Gilt does not provide all options for all objects and gadgets.  If you want to change other properties)
103 W( of)102 W
6120 66855 MT
(objects that are not available from the property sheets, you)
103 W( could hit the HELP key while the mouse is)104 W
6120 68051 MT
(positioned over the object to bring up the Inspector \050see the Debugging manual, starting on page 461 for)54 W
6120 69247 MT
(details\051.)SH
6120 71545 MT
(You can also access the selected object directly from Lisp.)
15 W( If)
306 W( one object is selected, its name is printed in)16 W
ES
%%Page: 519 14
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.8)
SH( Using)
1800 W( Gilt-Created Dialog Boxes)SH
51386 XM
(Page 519)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(the command window.  Also the variable)76 W
10 /Courier AF
27202 XM
(user::*gilt-obj*)SH
11 /Times-Roman AF
37153 XM
(is set with the single selected object.)
76 W( If)425 W
8280 9151 MT
(multiple objects are selected, then)68 W
10 /Courier AF
23832 XM
(user::*gilt-obj*)SH
11 /Times-Roman AF
33775 XM
(is set with the list of objects)
68 W( selected.  You can)69 W
8280 10347 MT
(go into the Lisp listener window, and)
40 W( type Garnet commands to affect the selected object \050e.g.,)39 W
10 /Courier AF
50880 XM
(s-value)SH
11 /Times-Roman AF
8280 11543 MT
(some slots\051, and call)SH
10 /Courier AF
17537 XM
(\050opal:update-all\051)SH
11 /Times-Roman AF
(. This)
275 W( technique can also be used to add extra slots)
SH( to objects.)1 W
8280 12739 MT
(The changes you make will be saved with the object when it is written.)SH
14 /Times-Bold AF
8280 16557 MT
(1.8. Using Gilt-Created Dialog Boxes)SH
11 /Times-Roman AF
8280 17753 MT
(There are various ways to use Gilt-created collections of gadgets in an application.)SH
8280 20051 MT
(The file that Gilt creates is a normal Lisp text)
6 W( file that creates the appropriate Garnet objects when loaded.)5 W
8280 21247 MT
(The file)
386 W( should be compiled along with your other application files, in order to provide better)387 W
8280 22443 MT
(performance.)SH
12 /Times-Bold AF
8280 26127 MT
(1.8.1. Pop-up dialog box)SH
11 /Times-Roman AF
8280 27323 MT
(Probably the easiest way to use a set of gadgets is as a)
15 W( pop-up dialog box.  The application should be sure)14 W
8280 28519 MT
(to)SH
/Times-Italic SF
9411 XM
(load)SH
/Times-Roman SF
11642 XM
(the file that Gilt created before calling the functions below.)SH
8280 30817 MT
(When Gilt writes out the gadgets, it does)4 W
/Times-Italic SF
26552 XM
(not)SH
/Times-Roman SF
28238 XM
(save the values as the initial defaults.  Therefore, if you want)5 W
8280 32013 MT
(to have default values for any gadgets, you need to set them from your program.  This)
108 W( should be done)107 W
/Times-Italic SF
8280 33209 MT
(before)SH
/Times-Roman SF
11365 XM
(the window is displayed using the function:)SH
8 /Courier AF
10200 34422 MT
(gilt:Set-Initial-Value)SH
/Times-Italic SF
21240 XM
(top-gadget gadget-name value)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 35843 MT
(The)SH
10 /Courier AF
10282 XM
(top-gadget)SH
11 /Times-Roman AF
16575 XM
(is the top-level gadget name specified in the ")18 W
10 /Courier AF
(Top-level Gadget name)18 W
11 /Times-Roman AF
(" field of the)18 W
8280 37039 MT
(Save dialog box.  The)109 W
10 /Courier AF
18723 XM
(gadget-name)SH
11 /Times-Roman AF
25707 XM
(is the name of the)
109 W( particular gadget to be initialized.  This name)108 W
8280 38235 MT
(will be a)
213 W( keyword, and will have been specified as the)214 W
10 /Courier AF
34700 XM
(KNOWN-AS)SH
11 /Times-Roman AF
39989 XM
(property of the gadget using the)214 W
8280 39431 MT
(gadget's property sheet \050which appears when)
84 W( you hit the ")83 W
10 /Courier AF
(Properties...)SH
11 /Times-Roman AF
(" command\051.  The)83 W
10 /Courier AF
50988 XM
(value)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 40627 MT
(the value to be used as the default, in the appropriate format for that gadget.)SH
8280 42925 MT
(Next, the Gilt function)SH
10 /Courier AF
18515 XM
(show-in-window)SH
11 /Times-Roman AF
27190 XM
(can be used to display the dialog box in a window:)SH
8 /Courier AF
10200 44138 MT
(gilt:Show-In-Window)SH
/Times-Italic SF
19800 XM
(top-gadget)SH
/Courier SF
23745 XM
(&optional)SH
/Times-Italic SF
28545 XM
(x y modal-p)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 45559 MT
(The)SH
/Times-Italic SF
10284 XM
(top-gadget)SH
/Times-Roman SF
15344 XM
(is the)
19 W( gadget name used in the Save dialog box.  The size of the window is determined by)20 W
8280 46755 MT
(the size of)
75 W( the workspace window when the file was written.  The position of the window will either be)74 W
8280 47951 MT
(the position when)
178 W( written, or it can be specified as the)179 W
/Times-Italic SF
34257 XM
(x)SH
/Times-Roman SF
35199 XM
(and)SH
/Times-Italic SF
37241 XM
(y)SH
/Times-Roman SF
38183 XM
(parameters, which are relative to the)179 W
8280 49147 MT
(screen's upper-left corner.  When the)276 W
/Times-Italic SF
26577 XM
(modal-p)SH
/Times-Roman SF
30794 XM
(parameter is T, then)
276 W( interaction in all other Garnet)275 W
8280 50343 MT
(windows will be suspended until the window goes away \050e.g., when the user clicks the "OK" button\051.  If)52 W
8280 51539 MT
(you want the window relative to a position in another)
1138 W( window, the function)1137 W
10 /Courier AF
8280 52735 MT
(opal:convert-coordinates)SH
11 /Times-Roman AF
22955 XM
(is useful.)SH
8280 55033 MT
(The function)202 W
10 /Courier AF
14610 XM
(show-in-window-and-wait)SH
11 /Times-Roman AF
28887 XM
(performs the same)
202 W( function as)203 W
10 /Courier AF
43431 XM
(show-in-window)SH
11 /Times-Roman AF
(, but it)203 W
8280 56229 MT
(waits for the user to click on an OK or Cancel button before returning)
249 W( \050)248 W
10 /Courier AF
(show-in-window)SH
11 /Times-Roman AF
52026 XM
(returns)SH
8280 57425 MT
(immediately after bringing up the window\051.)SH
8 /Courier AF
10200 58638 MT
(gilt:Show-In-Window-And-Wait)SH
/Times-Italic SF
24120 XM
(top-gadget)SH
/Courier SF
28065 XM
(&optional)SH
/Times-Italic SF
32865 XM
(x y modal-p)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 60059 MT
(When the user clicks on the)
19 W( OK button, this function will return the values of all the gadgets in the dialog)20 W
8280 61255 MT
(box in the form of)SH
10 /Courier AF
16559 XM
(gilt:gadgets-values)SH
11 /Times-Roman AF
(, which is:)SH
8 /Courier AF
10200 62420 MT
(\050\050:FILENAME "/usr/bam/garnet/t1.lisp"\051 \050:VAL 49\051 \050:BUTTON "Start"\051\051)SH
11 /Times-Roman AF
8280 63841 MT
(where the keywords are the names \050)235 W
10 /Courier AF
(:known-as)SH
11 /Times-Roman AF
31418 XM
(slot\051 of the gadgets.  If the user hits Cancel, then)234 W
10 /Courier AF
8280 65037 MT
(show-in-window-and-wait)SH
11 /Times-Roman AF
22500 XM
(returns NIL.  Apply does not cause the dialog box to go away,)
145 W( so you)146 W
8280 66233 MT
(might want to supply an OK-Function for the dialog box.)SH
8280 68531 MT
(If selection functions were specified in the gadget's select-function)
182 W( slot using the ")181 W
10 /Courier AF
(Properties...)SH
11 /Times-Roman AF
(")SH
8280 69727 MT
(command, then these functions are called immediately when the gadgets are used.)SH
ES
%%Page: 520 15
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 520)
SH( Gilt)830 W
45648 XM
(Gilt Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(If the dialog box has an OK-Cancel or OK-Apply-Cancel gadget in it, then)
79 W( the function specified in the)80 W
6120 9151 MT
(")SH
10 /Courier AF
(Function-For-OK name)137 W
11 /Times-Roman AF
(" field of the)
137 W( Save dialog box will be called when the user hits the OK or)136 W
6120 10347 MT
(Apply buttons.  This function is parameterized as:)SH
8 /Courier AF
8040 11512 MT
(\050lambda \050top-gadget values\051)SH
11 /Times-Roman AF
6120 12933 MT
(The)SH
10 /Courier AF
8172 XM
(top-gadget)SH
11 /Times-Roman AF
14514 XM
(is the same as above.  The)67 W
10 /Courier AF
26773 XM
(values)SH
11 /Times-Roman AF
30715 XM
(parameter will be a list)
67 W( containing pairs of all the)68 W
6120 14129 MT
(gadget names of gadgets which have names, and the value of that gadget.  Again, the)
172 W( names are the)171 W
6120 15325 MT
(keywords supplied to the)SH
10 /Courier AF
17424 XM
(KNOWN-AS)SH
11 /Times-Roman AF
22499 XM
(property. For)
275 W( example,)SH
10 /Courier AF
33129 XM
(values)SH
11 /Times-Roman AF
37004 XM
(might contain:)SH
8 /Courier AF
8040 16490 MT
(\050\050:FILENAME "/usr/bam/garnet/test1"\051 \050:REINITIALIZE NIL\051\051)SH
11 /Times-Roman AF
6120 18788 MT
(The function)SH
8 /Courier AF
8040 20001 MT
(gilt:Value-Of)SH
/Times-Italic SF
14760 XM
(gadget-name values)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 21422 MT
(can be used to return the value of the specific gadget named)40 W
10 /Courier AF
33232 XM
(gadget-name)SH
11 /Times-Roman AF
40147 XM
(from the values list)40 W
10 /Courier AF
49045 XM
(values)SH
11 /Times-Roman AF
(.)SH
6120 22618 MT
(For example, if)553 W
10 /Courier AF
14805 XM
(v)SH
11 /Times-Roman AF
16232 XM
(is the above list, then)552 W
10 /Courier AF
28586 XM
(\050gilt:value-of :filename v\051)552 W
11 /Times-Roman AF
46717 XM
(would return)552 W
10 /Courier AF
6120 23814 MT
("/usr/bam/garnet/test1")SH
11 /Times-Roman AF
(.)SH
6120 26112 MT
(After the Function-For-OK is called, the dialog box window is made invisible if OK was hit, and)
71 W( left in)72 W
6120 27308 MT
(place if Apply was)
464 W( hit.  If Cancel was hit, then the window is simply made invisible.  If)463 W
10 /Courier AF
6120 28504 MT
(show-in-window)SH
11 /Times-Roman AF
14938 XM
(is called again on the same dialog box, the old window is reused, saving)
143 W( time and)144 W
6120 29700 MT
(space.)SH
6120 31998 MT
(To destroy the window associated with a gadget, use the function:)SH
8 /Courier AF
8040 33211 MT
(gilt:Destroy-Gadget-Window)SH
/Times-Italic SF
21000 XM
(top-gadget)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 34632 MT
(This does)89 W
/Times-Italic SF
10820 XM
(not)SH
/Times-Roman SF
12590 XM
(destroy the)89 W
10 /Courier AF
17900 XM
(top-gadget)SH
11 /Times-Roman AF
24264 XM
(itself. Note)
453 W( that destroying the)
89 W( top-gadget while the window is)88 W
6120 35828 MT
(displayed will not destroy the window.  However, destroying the window)
585 W( explicitly \050using)586 W
10 /Courier AF
6120 37024 MT
(opal:destroy)SH
11 /Times-Roman AF
(\051)SH
/Times-Italic SF
13961 XM
(will)SH
/Times-Roman SF
15888 XM
(destroy both the window and the gadget.)SH
14 /Times-Bold AF
6120 40842 MT
(1.9. Using Gilt-Created Objects in Windows)SH
11 /Times-Roman AF
6120 42038 MT
(If you want to use the gilt-created gadgets)
101 W( inside of an application window, you only need to create an)100 W
6120 43234 MT
(instance of the top-gadget, which is the top-level gadget name specified in)
155 W( the ")156 W
10 /Courier AF
(Top-level Gadget)156 W
6120 44430 MT
(name)SH
11 /Times-Roman AF
(" field of)
58 W( the Save dialog box.  The instance will have the same position in the application window)57 W
6120 45626 MT
(as it had in the)
42 W( Gilt workspace window.  If you use the standard Gilt OK-Cancel gadget, it will make the)43 W
6120 46822 MT
(application window be invisible when the OK or)
15 W( Cancel buttons are hit.  If you do not want this behavior,)14 W
6120 48018 MT
(then you need to create your own OK-Cancel buttons.)SH
6120 50316 MT
(The)SH
10 /Courier AF
8150 XM
(set-initial-value)SH
11 /Times-Roman AF
18670 XM
(described above can still be used for gilt gadgets in application windows.)
45 W( In)366 W
6120 51512 MT
(addition, the function)SH
8 /Courier AF
8040 52725 MT
(gilt:Gadget-Values)SH
/Times-Italic SF
17160 XM
(top-gadget)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 54146 MT
(can be used to return the values list of all gadgets with names.  The return)
124 W( value is in the form of the)123 W
10 /Courier AF
6120 55342 MT
(values)SH
11 /Times-Roman AF
9995 XM
(parameter passed to the Ok-Function.)SH
14 /Times-Bold AF
6120 59160 MT
(1.10. Hacking Gilt-Created Files)SH
11 /Times-Roman AF
6120 60356 MT
(Since the file that Gilt creates is a normal text)
19 W( file, it is possible to edit it with a normal text editor.  Some)20 W
6120 61552 MT
(care must)
151 W( be taken when doing this, however, if you want Gilt to be able to read the file back in for)150 W
6120 62748 MT
(further editing.  \050If you do not care about reading the files back in, then you can edit the)
22 W( file however you)23 W
6120 63944 MT
(like.\051)SH
6120 66242 MT
(The simplest changes are to edit the values of slots of the objects.  These edits will be preserved when)
17 W( the)16 W
6120 67438 MT
(file is read in and written back out.  Be sure not to change the value of the)SH
10 /Courier AF
38895 XM
(:gilt-ref)SH
11 /Times-Roman AF
44570 XM
(slot.)SH
6120 69736 MT
(When Gilt saves objects to a file, it sets the)32 W
10 /Courier AF
25717 XM
(:constant)SH
11 /Times-Roman AF
31424 XM
(slot of all the gadgets to)
32 W( T. If you expect to ever)33 W
6120 70932 MT
(change any properties of widgets in the dialog boxes when they are)
112 W( being used by an application, then)111 W
ES
%%Page: 521 16
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.10)
SH( Hacking)
1800 W( Gilt-Created Files)SH
51386 XM
(Page 521)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(you should hand-edit the Gilt-generated file to)
101 W( change the constant value \050typically by)102 W
10 /Courier AF
47753 XM
(:except)SH
11 /Times-Roman AF
(ing the)102 W
8280 9151 MT
(slots you plan to change dynamically\051.  \050Gilt reads in)
15 W( the file using)14 W
10 /Courier AF
38105 XM
(with-constants-disabled)SH
11 /Times-Roman AF
(, so the)14 W
8280 10347 MT
(defined constant slots will not bother Gilt.\051)SH
8280 12645 MT
(If you want to create new objects, then these can be put into the top level aggregadget definition.)
95 W( You)467 W
8280 13841 MT
(should follow the convention of having a)124 W
10 /Courier AF
27509 XM
(:box)SH
11 /Times-Roman AF
30308 XM
(\050or)SH
10 /Courier AF
31989 XM
(:points)SH
11 /Times-Roman AF
(\051 slot and putting the standard)
124 W( constraints)123 W
8280 15037 MT
(into the)210 W
10 /Courier AF
12306 XM
(:left)SH
11 /Times-Roman AF
15791 XM
(and)SH
10 /Courier AF
17864 XM
(:top)SH
11 /Times-Roman AF
20749 XM
(fields \050or)211 W
10 /Courier AF
25447 XM
(:x1, :y1, :x2)211 W
11 /Times-Roman AF
34155 XM
(and)SH
10 /Courier AF
36229 XM
(:y2)SH
11 /Times-Roman AF
(\051. For)
697 W( example, to add a circle, the)211 W
8280 16233 MT
(following code might be added into the top-level aggregadget's)SH
10 /Courier AF
36475 XM
(:parts)SH
11 /Times-Roman AF
40350 XM
(list:)SH
8 /Courier AF
12120 17398 MT
(\050:mycircle ,opal:circle)SH
13080 18263 MT
(\050:box \05050 67 30 30\051\051)SH
13080 19128 MT
(\050:left ,\050o-formula \050first \050kr:gvl :box\051\051\051\051)SH
13080 19993 MT
(\050:top ,\050o-formula \050second \050kr:gvl :box\051\051\051\051)SH
13080 20858 MT
(\050:width 30\051)SH
13080 21723 MT
(\050:height 30\051\051)SH
11 /Times-Roman AF
8280 23144 MT
(If you do not supply a)161 W
10 /Courier AF
19206 XM
(:gilt-ref)SH
11 /Times-Roman AF
25042 XM
(field, Gilt will allow the user to move the object around,)
161 W( but not)160 W
8280 24340 MT
(change its size or any other properties.  For some objects, it might)
16 W( work to specify the)17 W
10 /Courier AF
46590 XM
(:gilt-ref)SH
11 /Times-Roman AF
52282 XM
(slot as)17 W
10 /Courier AF
8280 25536 MT
("TYPE-RECTANGLE")SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18430 XM
("TYPE-LINE")SH
11 /Times-Roman AF
25305 XM
(or)SH
10 /Courier AF
26496 XM
("TYPE-TEXT")SH
11 /Times-Roman AF
(.)SH
8280 27834 MT
(If you add extra functions or comments to the file, they will)35 W
/Times-Italic SF
35247 XM
(not)SH
/Times-Roman SF
36963 XM
(be preserved if the file is written out)
35 W( and)34 W
8280 29030 MT
(read in.  Similarly, interactors added to the top level gadget will not be preserved.)SH
ES
%%Page: 522 17
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 522)
SH( Gilt)830 W
48478 XM
(References)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(References)SH
11 /Times-Roman AF
6120 11279 MT
([Myers 89])SH
14370 XM
(Brad A. Myers, Brad Vander Zanden, and Roger B. Dannenberg.)SH
14370 12475 MT
(Creating Graphical Interactive Application Objects by Demonstration.)SH
14370 13671 MT
(In)SH
/Times-Italic SF
15561 XM
(ACM SIGGRAPH Symposium on User Interface Software and Technology)SH
/Times-Roman SF
(, pages)SH
16020 14867 MT
(95-104. Proceedings)
275 W( UIST'89, Williamsburg, VA, November, 1989.)SH
6120 16818 MT
([Myers 90])SH
14370 XM
(Brad A. Myers, Dario A. Giuse, Roger B. Dannenberg, Brad Vander Zanden, David)SH
14370 18014 MT
(S. Kosbie, Edward Pervin, Andrew Mickish, and Philippe Marchal.)SH
14370 19210 MT
(Garnet: Comprehensive Support for Graphical, Highly-Interactive User Interfaces.)SH
/Times-Italic SF
14370 20406 MT
(IEEE Computer)SH
/Times-Roman SF
21702 XM
(23\05011\051:71-85, November, 1990.)SH
6120 22357 MT
([Myers 91])SH
14370 XM
(Brad A. Myers.)SH
14370 23553 MT
(Separating Application Code from Toolkits:  Eliminating the Spaghetti of Call-Backs.)SH
14370 24749 MT
(In)SH
/Times-Italic SF
15561 XM
(ACM SIGGRAPH Symposium on User Interface Software and Technology)SH
/Times-Roman SF
(, pages)SH
16020 25945 MT
(211-220. Proceedings)
275 W( UIST'91, Hilton Head, SC, November, 1991.)SH
ES
%%Page: 523 18
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Index)SH
51386 XM
(Page 523)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(Index)SH
8 /Times-Roman AF
8280 11525 MT
(*gilt-obj* 516,)
400 W( 518)SH
8280 13373 MT
(Align... \050in Gilt\051)
SH( 514)400 W
8280 15221 MT
(Build \050in Gilt\051)
SH( 518)400 W
8280 17069 MT
(Delete All \050in Gilt\051)
SH( 514)400 W
8280 17993 MT
(Delete Selected \050in Gilt\051)
SH( 514)400 W
8280 18917 MT
(Destroy-Gadget-Window \050in Gilt\051)
SH( 520)400 W
8280 19841 MT
(Do-Go \050Gilt\051)
SH( 508)400 W
8280 20765 MT
(Do-Stop \050Gilt\051)
SH( 508)400 W
8280 21689 MT
(Duplicate \050in Gilt\051)
SH( 513)400 W
8280 23537 MT
(Function-For-OK \050in Gilt\051)
SH( 520)400 W
8280 25385 MT
(Gadget-Values \050in Gilt\051)
SH( 520)400 W
8280 26309 MT
(Gadgets in Gilt)
SH( 510)400 W
8280 27233 MT
(Garnet-Gilt-Loader 508)400 W
8280 28157 MT
(Gilt 507)400 W
8280 29081 MT
(Gilt-obj 516,)
400 W( 518)SH
8280 30005 MT
(Gilt-ref slot \050in Gilt\051)
SH( 521)400 W
8280 31853 MT
(Known-as \050in Gilt\051)
SH( 515)400 W
8280 33701 MT
(OK-Apply-Cancel gadget \050in Gilt\051)
SH( 519)400 W
8280 34625 MT
(OK-Cancel gadget \050in Gilt\051)
SH( 519)400 W
8280 36473 MT
(Pop-Up Dialog Boxes \050from Gilt\051)
SH( 519)400 W
8280 37397 MT
(Properties... \050in Gilt\051)
SH( 515)400 W
8280 39245 MT
(Quitting Gilt)
SH( 508)400 W
8280 41093 MT
(Read... \050in Gilt\051)
SH( 517)400 W
8280 42017 MT
(Run \050in Gilt\051)
SH( 518)400 W
8280 43865 MT
(Save... \050in Gilt\051)
SH( 516)400 W
8280 44789 MT
(Set-Initial-Value \050in Gilt\051)
SH( 519)400 W
8280 45713 MT
(Show-In-Window \050in Gilt\051)
SH( 519)400 W
8280 46637 MT
(Show-In-Window-And-Wait \050in Gilt\051)
SH( 519)400 W
8280 47561 MT
(Starting Gilt)
SH( 508)400 W
8280 48485 MT
(Stopping Gilt)
SH( 508)400 W
8280 50333 MT
(To Bottom \050in Gilt\051)
SH( 513)400 W
8280 51257 MT
(To Top \050in Gilt\051)
SH( 513)400 W
8280 53105 MT
(Undo Last Delete \050in Gilt\051)
SH( 514)400 W
8280 54953 MT
(Value-Of \050in Gilt\051)
SH( 520)400 W
ES
%%Page: 524 19
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 524)
SH( Gilt)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
ES
%%Page: i 20
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Gilt)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
25591 8272 MT
(Table of Contents)SH
12 SS 
8280 9796 MT
(1. Gilt)SH
53280 XM
(507)SH
10 SS 
9780 11186 MT
(1.1. Introduction)SH
53580 XM
(507)SH
9780 12266 MT
(1.2. Loading Gilt)SH
53580 XM
(508)SH
9780 13346 MT
(1.3. User Interface)SH
53580 XM
(508)SH
11780 14426 MT
(1.3.1. Gadget Palettes)SH
53580 XM
(510)SH
11780 15506 MT
(1.3.2. Placing Gadgets)SH
53580 XM
(510)SH
11780 16586 MT
(1.3.3. Selecting and Editing Gadgets)SH
53580 XM
(511)SH
9780 17666 MT
(1.4. Editing Strings)SH
53580 XM
(512)SH
9780 18746 MT
(1.5. Commands)SH
53580 XM
(513)SH
11780 19826 MT
(1.5.1. To-Top and To-Bottom)SH
53580 XM
(513)SH
11780 20906 MT
(1.5.2. Copying Objects)SH
53580 XM
(513)SH
11780 21986 MT
(1.5.3. Aligning Objects)SH
53580 XM
(514)SH
11780 23066 MT
(1.5.4. Deleting Objects)SH
53580 XM
(515)SH
11780 24146 MT
(1.5.5. Properties)SH
53580 XM
(515)SH
11780 25226 MT
(1.5.6. Saving to a file)SH
53580 XM
(516)SH
11780 26306 MT
(1.5.7. Reading from a file)SH
53580 XM
(517)SH
11780 27386 MT
(1.5.8. Value and Enable Control)SH
53580 XM
(518)SH
9780 28466 MT
(1.6. Run Mode)SH
53580 XM
(518)SH
9780 29546 MT
(1.7. Hacking Objects)SH
53580 XM
(518)SH
9780 30626 MT
(1.8. Using Gilt-Created Dialog Boxes)SH
53580 XM
(519)SH
11780 31706 MT
(1.8.1. Pop-up dialog box)SH
53580 XM
(519)SH
9780 32786 MT
(1.9. Using Gilt-Created Objects in Windows)SH
53580 XM
(520)SH
9780 33866 MT
(1.10. Hacking Gilt-Created Files)SH
53580 XM
(520)SH
12 SS 
8280 35390 MT
(References)SH
53280 XM
(522)SH
8280 36914 MT
(Index)SH
53280 XM
(523)SH
ES
%%Trailer
%%Pages: 20
%%DocumentFonts: Times-Roman Times-Bold Symbol Times-Italic Courier
