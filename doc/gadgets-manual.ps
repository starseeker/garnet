%!PS-Adobe-2.0
%%Title: gadgets/gadgets-manual.mss
%%DocumentFonts: (atend)
%%Creator: Andrew Mickish and Scribe 7(1700)
%%CreationDate: 12 December 1994 15:19
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {showpage SV restore} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale
    /showpage {} def
    /letter {} def
    /lettersmall {} def
    /note {} def
    } bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
11 SS 
1 1 0 8280 7200 GB 
%%BeginDocument: single-sided.ps
%!PS-Adobe-2.0
%
%  This PostScript code turns off double-sided printing,
%  which is desirable since we want to be able to move the
%  Tables of Contents by hand after the manuals are printed.
%
statusdict begin
   false setduplexmode
end

%%EndDocument
 GE 16 /Times-Bold AF
26236 18976 MT
(Garnet Gadgets)SH
25393 20672 MT
(Reference Manual)SH
11 SS 
27753 23064 MT
(Andrew Mickish)SH
28182 24260 MT
(Brad A. Myers)SH
26715 25456 MT
(Rajan Parthasarathy)SH
/Times-Roman SF
28183 27382 MT
(December 1994)SH
/Times-Bold SF
29634 44214 MT
(Abstract)SH
/Times-Roman SF
8280 45966 MT
(The Garnet Gadget Set contains common user interface objects which can be customized for use)
119 W( in an)118 W
8280 47262 MT
(interface. Because)
825 W( the objects are extremely)
275 W( versatile, they may be employed in a wide range of)276 W
8280 48558 MT
(applications with a minimum of modification.  Examples of provided gadgets include)
150 W( menus, buttons,)149 W
8280 49854 MT
(scroll bars, sliders, and gauges.)SH
21010 55572 MT
(Copyright)SH
/Symbol SF
25747 XM
(\323)SH
/Times-Roman SF
26891 XM
(1994 - Carnegie Mellon University)SH
8280 62355 MT
(This research was sponsored by NCCOSC under Contract No.  N66001-94-C-6037, Arpa Order)
207 W( No.)208 W
8280 63651 MT
(B326. The)
381 W( views and conclusions contained in this document)
53 W( are those of the authors and should not be)52 W
8280 64947 MT
(interpreted as representing the official policies, either expressed or implied, of NCCOSC or)
192 W( the U.S.)193 W
8280 66243 MT
(Government.)SH
ES
%%Page: 349 2
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.1)
SH( Current)
1800 W( Gadgets)SH
51386 XM
(Page 349)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(1. Introduction)SH
11 /Times-Roman AF
8280 10524 MT
(Many user interfaces that span a wide variety of applications usually have)
78 W( several elements in common.)77 W
8280 11720 MT
(Menus and scroll bars, for example, are used so frequently that an)
259 W( interface designer would waste)260 W
8280 12916 MT
(considerable time and effort recreating those objects each time they were required in an application.)SH
8280 15214 MT
(The intent of the Garnet Gadget Set is to supply several)
236 W( frequently used objects that can be easily)235 W
8280 16410 MT
(customized by the designer.  By importing)
10 W( these pre-constructed objects into a larger Garnet interface, the)11 W
8280 17606 MT
(designer is)
76 W( able to specify in detail the desired appearance and behavior of the interface, while avoiding)75 W
8280 18802 MT
(the programming that this specification would otherwise entail.)SH
8280 21100 MT
(This document is a guide to using the Gadget Set.)
172 W( The)
621 W( objects were constructed using the complete)173 W
8280 22296 MT
(Garnet system, and their descriptions assume that the reader has some knowledge of KR,)
356 W( Opal,)355 W
8280 23492 MT
(Interactors, and Aggregadgets.)SH
14 /Times-Bold AF
8280 27310 MT
(1.1. Current Gadgets)SH
11 /Times-Roman AF
8280 28506 MT
(Most of the gadgets described in this manual are pictured in figures 1-1 through 1-4)SH
75 100 0 -945 72377 GB 
%%BeginDocument: gadgets/scroll-group-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TEMP WINDOW
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 23, 1993, 4:08 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 178 223 435 569
%%%Pages: 1
%%EndComments


/ArcDict 23 dict def
ArcDict /mtrx matrix put
/DrawArc { % x y xrad yrad startangle endangle line-color
           % cap join dash thickness fill-color => -
    ArcDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 moveto
            0 0 1 startangle endangle arc closepath
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
106 497 translate

%
% Begin new window
%
gsave
0 0 257 346 ClipToRectangle
gsave
0 0 257 346 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 253 342 2 2 2 2 DrawGenericWindowFrame
0 0 253 342 ClipToRectangle
gsave
50 -257 120 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
10 -257 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
13 -267 {
  { 13 -267 20 -260 20 -264 27 -264 27 -270 20 -270 20 -274 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
190 -257 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
207 -267 {
  { 207 -267 200 -260 200 -264 193 -264 193 -270 200 -270 200 -274 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
30 -257 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
34 -267 {
  { 34 -267 41 -274 41 -260 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
38 -267 {
  { 38 -267 45 -274 45 -260 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
170 -257 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
186 -267 {
  { 186 -267 179 -274 179 -260 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
182 -267 {
  { 182 -267 175 -274 175 -260 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
50 -258 18 18 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
57 -262 -271 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 165 -302 80 -302 DrawLine
10 -294 20 16 [0 0 0] 0 0 [] 1 null DrawRectangle
17 -295 -306 5 14 false [0 0 0] [1 1 1] (2) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 80 -307 80 -297 DrawLine
78 -313 -322 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 97 -307 97 -297 DrawLine
95 -313 -322 4 11 false [0 0 0] [1 1 1] (2) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 114 -307 114 -297 DrawLine
112 -313 -322 5 11 false [0 0 0] [1 1 1] (4) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 131 -307 131 -297 DrawLine
129 -313 -322 4 11 false [0 0 0] [1 1 1] (6) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 148 -307 148 -297 DrawLine
146 -313 -322 4 11 false [0 0 0] [1 1 1] (8) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 165 -307 165 -297 DrawLine
160 -313 -322 10 11 false [0 0 0] [1 1 1] (10) 10 /Courier DrawText
[0 0 0] 0 0 [] 2 80 -312 80 -292 DrawLine
[0 0 0] 0 0 [] 2 165 -312 165 -292 DrawLine
104 -290 {
  { 90 -290 97 -300 }
} [0 0 0] 0 0 [] -1 [0 0 0] DrawPolyline
35 -292 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
38 -302 {
  { 38 -302 45 -295 45 -299 52 -299 52 -305 45 -305 45 -309 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
190 -292 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
207 -302 {
  { 207 -302 200 -295 200 -299 193 -299 193 -305 200 -305 200 -309 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
55 -292 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
59 -302 {
  { 59 -302 66 -309 66 -295 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
63 -302 {
  { 63 -302 70 -309 70 -295 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
170 -292 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
186 -302 {
  { 186 -302 179 -309 179 -295 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
182 -302 {
  { 182 -302 175 -309 175 -295 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
10 -50 20 125 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
10 -10 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -13 {
  { 20 -13 27 -20 23 -20 23 -27 17 -27 17 -20 13 -20 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
10 -195 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -212 {
  { 20 -212 27 -205 23 -205 23 -198 17 -198 17 -205 13 -205 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
10 -30 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -34 {
  { 20 -34 27 -41 13 -41 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
20 -38 {
  { 20 -38 27 -45 13 -45 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
10 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -191 {
  { 20 -191 27 -184 13 -184 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
20 -187 {
  { 20 -187 27 -180 13 -180 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
11 -77 18 18 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
15 -81 -90 10 11 false [0 0 0] [1 1 1] (25) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 67 -170 67 -76 DrawLine
57 -10 20 16 [0 0 0] 0 0 [] 1 null DrawRectangle
64 -11 -22 5 14 false [0 0 0] [1 1 1] (6) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -76 62 -76 DrawLine
48 -71 -80 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -95 62 -95 DrawLine
48 -90 -99 4 11 false [0 0 0] [1 1 1] (2) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -114 62 -114 DrawLine
47 -109 -118 5 11 false [0 0 0] [1 1 1] (4) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -132 62 -132 DrawLine
48 -127 -136 4 11 false [0 0 0] [1 1 1] (6) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -151 62 -151 DrawLine
48 -146 -155 4 11 false [0 0 0] [1 1 1] (8) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 72 -170 62 -170 DrawLine
42 -165 -174 10 11 false [0 0 0] [1 1 1] (10) 10 /Courier DrawText
[0 0 0] 0 0 [] 2 77 -76 57 -76 DrawLine
[0 0 0] 0 0 [] 2 77 -170 57 -170 DrawLine
79 -140 {
  { 79 -124 69 -132 }
} [0 0 0] 0 0 [] -1 [0 0 0] DrawPolyline
57 -31 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
67 -34 {
  { 67 -34 74 -41 70 -41 70 -48 64 -48 64 -41 60 -41 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
57 -195 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
67 -212 {
  { 67 -212 74 -205 70 -205 70 -198 64 -198 64 -205 60 -205 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
57 -51 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
67 -55 {
  { 67 -55 74 -62 60 -62 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
67 -59 {
  { 67 -59 74 -66 60 -66 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
57 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
67 -191 {
  { 67 -191 74 -184 60 -184 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
67 -187 {
  { 67 -187 74 -180 60 -180 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
162.0 -108.0 51.0 51.0 0 180 [0 0 0] 0 0 [] 1 null DrawArc
[0 0 0] 0 0 [] 1 213 -108 111 -108 DrawLine
[0 0 0] 0 0 [] 1 210 -108 213 -108 DrawLine
218 -97 -106 10 11 false [0 0 0] [1 1 1] (10) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 201 -80 203 -78 DrawLine
208 -67 -76 4 11 false [0 0 0] [1 1 1] (8) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 177 -62 178 -59 DrawLine
176 -45 -54 4 11 false [0 0 0] [1 1 1] (6) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 147 -62 146 -59 DrawLine
144 -45 -54 5 11 false [0 0 0] [1 1 1] (4) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 123 -80 121 -78 DrawLine
112 -67 -76 4 11 false [0 0 0] [1 1 1] (2) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 114 -108 111 -108 DrawLine
102 -97 -106 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
162 -108 {
  { 162 -108 160 -106 178 -81 176 -79 186 -75 184 -87 182 -85 164 -110 }
} [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawPolyline
146 -113 -124 33 14 false [0 0 0] [1 1 1] (Gauge) 12 /Courier DrawText
150 -175 26 20 [0 0 0] 0 0 [] 1 null DrawRectangle
160 -178 -189 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
110 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
113 -185 {
  { 113 -185 120 -178 120 -182 127 -182 127 -188 120 -188 120 -192 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
196 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
213 -185 {
  { 213 -185 206 -178 206 -182 199 -182 199 -188 206 -188 206 -192 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
130 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
134 -185 {
  { 134 -185 141 -192 141 -178 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
138 -185 {
  { 138 -185 145 -192 145 -178 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
176 -175 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
192 -185 {
  { 192 -185 185 -192 185 -178 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
188 -185 {
  { 188 -185 181 -192 181 -178 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
13 -220 -232 14 15 false [0 0 0] [1 1 1] (\050a\051) 12 /Times-Bold DrawText
60 -220 -232 13 15 false [0 0 0] [1 1 1] (\050b\051) 12 /Times-Bold DrawText
153 -129 -141 13 15 false [0 0 0] [1 1 1] (\050c\051) 12 /Times-Bold DrawText
154 -200 -212 13 15 false [0 0 0] [1 1 1] (\050d\051) 12 /Times-Bold DrawText
222 -259 -271 14 15 false [0 0 0] [1 1 1] (\050e\051) 12 /Times-Bold DrawText
222 -293 -305 11 15 false [0 0 0] [1 1 1] (\050f\051) 12 /Times-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold /Courier Helvetica-Bold 
%%BoundingBox: 178 223 435 569

%%EndDocument
 GE 75 100 0 18330 72377 GB 
%%BeginDocument: gadgets/motif-scroll-group-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TEMP WINDOW
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 8, 1993, 2:52 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 178 223 435 569
%%%Pages: 1
%%EndComments


/ArcDict 23 dict def
ArcDict /mtrx matrix put
/DrawArc { % x y xrad yrad startangle endangle line-color
           % cap join dash thickness fill-color => -
    ArcDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 moveto
            0 0 1 startangle endangle arc closepath
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
106 497 translate

%
% Begin new window
%
gsave
0 0 257 346 ClipToRectangle
gsave
0 0 257 346 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 253 342 2 2 2 2 DrawGenericWindowFrame
0 0 253 342 ClipToRectangle
gsave
0 0 253 342 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
12 -259 196 16 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
14 -261 194 14 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
14 -261 192 12 [0 0 0] 0 0 [] -1 [0.76 0.76 0.76] DrawRectangle
42 -261 82 12 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
44 -263 80 10 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
44 -263 78 8 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
15 -266 {
  { 25 -261 25 -271 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[1 1 1] 0 0 [] 2 25 -261 15 -266 DrawLine
193 -272 {
  { 203 -267 193 -262 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[0.22 0.22 0.22] 0 0 [] 2 203 -267 193 -272 DrawLine
12 -12 16 201 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
14 -14 14 199 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
14 -14 12 197 [0 0 0] 0 0 [] -1 [0.76 0.76 0.76] DrawRectangle
14 -66 12 84 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
16 -68 10 82 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
16 -68 8 80 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
20 -15 {
  { 15 -25 24 -25 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[1 1 1] 0 0 [] 2 15 -25 20 -15 DrawLine
20 -208 {
  { 25 -198 15 -198 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[0.22 0.22 0.22] 0 0 [] 2 20 -208 25 -198 DrawLine
61 -12 16 201 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
63 -14 14 199 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
63 -14 12 197 [0 0 0] 0 0 [] -1 [0.76 0.76 0.76] DrawRectangle
63 -59 12 49 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
65 -61 10 47 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
65 -61 8 45 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
[1 1 1] 0 0 [] 2 73 -83 65 -83 DrawLine
[0.22 0.22 0.22] 0 0 [] 2 73 -85 65 -85 DrawLine
51 -76 -87 5 14 false [0 0 0] [1 1 1] (3) 12 /Courier DrawText
[1 1 1] 0 0 [] 2 211 -108 113 -108 DrawLine
162.0 -108.0 49.0 49.0 0 180 [0.22 0.22 0.22] 0 0 [] 2 [0.76 0.76 0.76] DrawArc
[0 0 0] 0 0 [] 1 209 -108 211 -108 DrawLine
216 -97 -106 10 11 false [0 0 0] [1 1 1] (10) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 200 -81 202 -79 DrawLine
207 -68 -77 4 11 false [0 0 0] [1 1 1] (8) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 176 -64 177 -61 DrawLine
175 -47 -56 4 11 false [0 0 0] [1 1 1] (6) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 148 -64 147 -61 DrawLine
145 -47 -56 5 11 false [0 0 0] [1 1 1] (4) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 124 -81 122 -79 DrawLine
113 -68 -77 4 11 false [0 0 0] [1 1 1] (2) 10 /Courier DrawText
[0 0 0] 0 0 [] 1 115 -108 113 -108 DrawLine
104 -97 -106 4 11 false [0 0 0] [1 1 1] (0) 10 /Courier DrawText
162 -108 {
  { 185 -76 183 -88 181 -86 164 -110 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
185 -76 {
  { 162 -108 160 -106 177 -82 175 -80 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
146 -113 -124 33 14 false [0 0 0] [1 1 1] (Gauge) 12 /Courier DrawText
124 -177 74 20 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
126 -179 72 18 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
126 -179 70 16 [0 0 0] 0 0 [] -1 [0.76 0.76 0.76] DrawRectangle
143 -179 33 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
145 -181 31 14 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
145 -181 29 12 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
127 -186 {
  { 141 -179 141 -193 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[1 1 1] 0 0 [] 2 141 -179 127 -186 DrawLine
179 -194 {
  { 193 -187 179 -180 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[0.22 0.22 0.22] 0 0 [] 2 193 -187 179 -194 DrawLine
153 -180 -191 12 14 false [0 0 0] [1 1 1] (20) 12 /Courier DrawText
154 -200 -212 10 15 false [0 0 0] [1 1 1] (\050j\051) 12 /Times-Bold DrawText
13 -220 -232 13 15 false [0 0 0] [1 1 1] (\050g\051) 12 /Times-Bold DrawText
62 -220 -232 13 15 false [0 0 0] [1 1 1] (\050h\051) 12 /Times-Bold DrawText
153 -129 -141 10 15 false [0 0 0] [1 1 1] (\050i\051) 12 /Times-Bold DrawText
222 -259 -271 14 15 false [0 0 0] [1 1 1] (\050k\051) 12 /Times-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold /Courier Helvetica-Bold 
%%BoundingBox: 178 223 435 569

%%EndDocument
 GE /Times-Bold SF
8280 57404 MT
(Figure 1-1:)SH
/Times-Roman SF
14053 XM
(The Garnet-style and Motif-style scroll bars, sliders, and gauges.)SH
10 /Times-Bold AF
43102 XM
(\050a\051)SH
/Courier SF
44868 XM
(v-scroll-bar)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
14053 58600 MT
(\050b\051)SH
/Courier SF
15875 XM
(v-slider)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
21225 XM
(\050c\051)SH
/Courier SF
22935 XM
(gauge)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
26485 XM
(\050d\051)SH
/Courier SF
28307 XM
(trill-device)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
36057 XM
(\050e\051)SH
/Courier SF
37767 XM
(h-scroll-bar)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
45517 XM
(\050f\051)SH
/Courier SF
47116 XM
(h-slider)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
14053 59796 MT
(\050g\051)SH
/Courier SF
15819 XM
(motif-v-scroll-bar)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
27169 XM
(\050h\051)SH
/Courier SF
28991 XM
(motif-slider)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
36741 XM
(\050i\051)SH
/Courier SF
38285 XM
(motif-gauge)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
45435 XM
(\050j\051)SH
/Courier SF
47034 XM
(motif-)SH
14053 60992 MT
(trill-device)SH
11 /Times-Roman AF
(,)SH
10 /Times-Bold AF
21803 XM
(\050k\051)SH
/Courier SF
23625 XM
(motif-slider)SH
11 /Symbol AF
10249 63068 MT
(\267)SH
/Times-Bold SF
11030 XM
(Gadgets used to choose a value from a range of values)SH
10 /Courier AF
11030 65019 MT
(v-scroll-bar)SH
11 /Times-Roman AF
18505 XM
(- Vertical scroll bar \050p. 361\051)SH
10 /Courier AF
11030 66714 MT
(v-slider)SH
11 /Times-Roman AF
16139 XM
(- Vertical slider \050same idea as a)
34 W( scroll bar, but with a tic-marked shaft rather than)35 W
14630 67910 MT
(a rectangular bounding box\051 \050p. 363\051)SH
10 /Courier AF
11030 69605 MT
(gauge)SH
11 /Times-Roman AF
14403 XM
(- Semi-circular gauge \050the needle on the)
98 W( gauge may be moved to select a value\051 \050p.)97 W
14630 70801 MT
(366\051)SH
ES
%%Page: 350 3
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 350)
SH( Gadgets)830 W
42260 XM
(Introduction Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
/Courier SF
8870 7955 MT
(trill-device)SH
11 /Times-Roman AF
16345 XM
(- Number input box with increment/decrement trill boxes \050p. 365\051)SH
10 /Courier AF
8870 9650 MT
(h-scroll-bar)SH
11 /Times-Roman AF
16345 XM
(- Horizontal scroll bar \050p. 361\051)SH
10 /Courier AF
8870 11345 MT
(h-slider)SH
11 /Times-Roman AF
13945 XM
(- Horizontal slider \050p. 363\051)SH
10 /Courier AF
8870 13040 MT
(motif-v-scroll-bar)SH
11 /Times-Roman AF
19945 XM
(- Vertical scroll bar \050p. 428\051)SH
10 /Courier AF
8870 14735 MT
(motif-slider)SH
11 /Times-Roman AF
16382 XM
(- Vertical slider \050same idea as a scroll)
37 W( bar, but with text beside the indicator)38 W
12470 15931 MT
(showing the current value\051 \050p. 430\051)SH
10 /Courier AF
8870 17626 MT
(motif-gauge)SH
11 /Times-Roman AF
15745 XM
(- Semi-circular gauge \050p. 432\051)SH
10 /Courier AF
8870 19321 MT
(motif-trill-device)SH
11 /Times-Roman AF
19945 XM
(- Number input with trill boxes \050p. 431\051)SH
10 /Courier AF
8870 21016 MT
(motif-h-scroll-bar)SH
11 /Times-Roman AF
19945 XM
(- Horizontal scroll bar \050p. 428\051)SH
75 100 0 -3555 65187 GB 
%%BeginDocument: gadgets/menu-group-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 8, 1993, 7:12 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 169 219 443 573
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-3 /image-3-font 16 16 <
ffff ff3f ff3f fe7f ee7f e4ff e0ff e01f e03f e07f e0ff e1ff e3ff e7ff efff
ffff>
DefImage

/image-2 /image-2-font 16 16 <
ff3f fe1f fe1f cc3f c43f c07f c00f c00f c01f c03f c07f c0ff c1ff c3ff c7ff
cfff>
DefImage

/image-1 /image-1-font 9 10 <
007f ffff ffff 007f ffff ffff 007f ffff ffff 007f>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
97 501 translate

%
% Begin new window
%
gsave
0 0 274 354 ClipToRectangle
gsave
0 0 274 354 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 270 350 2 2 2 2 DrawGenericWindowFrame
0 0 270 350 ClipToRectangle
gsave
135 -15 49 86 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
130 -10 49 86 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
131 -11 47 27 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
137 -14 -31 35 21 false [1 1 1] [1 1 1] (Title) 18 /Times-Roman DrawText
134 -41 -52 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
134 -60 -71 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
134 -79 -90 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
190 -25 20 67 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
190 -5 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
200 -8 {
  { 200 -8 207 -15 203 -15 203 -22 197 -22 197 -15 193 -15 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
190 -92 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
200 -109 {
  { 200 -109 207 -102 203 -102 203 -95 197 -95 197 -102 193 -102 }
} [0 0 0] 0 0 [] 1 [1 dup dup] DrawPolyline
191 -25 18 18 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
210 -5 50 107 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
218 -8 -25 35 21 false [0 0 0] [1 1 1] (Title) 18 /Times-Roman DrawText
210 -5 50 27 [0 0 0] 0 0 [] 2 null DrawRectangle
214 -35 -46 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
214 -55 -66 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
214 -75 -86 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
214 -95 -106 41 14 false [0 0 0] [1 1 1] (Label4) 12 /Courier DrawText
20 -150 61 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
10 -140 61 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
15 -145 51 24 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -150 -161 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
96 -150 61 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
86 -140 61 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
91 -145 51 24 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
96 -150 -161 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
172 -150 61 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
162 -140 61 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
167 -145 51 24 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
172 -150 -161 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
71 -205 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
66 -200 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
69 -203 14 14 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -205 -216 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
71 -235 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
66 -230 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
69 -233 14 14 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -235 -246 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
71 -265 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
66 -260 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
69 -263 14 14 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
20 -265 -276 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
209.5 -209.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
204.5 -204.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
204.5 -204.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [1 dup dup] DrawEllipse
147 -200 -211 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
209.5 -242.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
204.5 -237.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
204.5 -237.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [1 dup dup] DrawEllipse
147 -233 -244 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
209.5 -275.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
204.5 -270.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
204.5 -270.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [1 dup dup] DrawEllipse
147 -266 -277 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
50 -313 -324 39 14 false [0 0 0] [1 1 1] (Color:) 12 /Courier-Bold DrawText
104 -316 42 14 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
99 -311 42 14 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
99 -311 42 14 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
110 -311 -322 21 14 false [0 0 0] [1 1 1] (Red) 12 /Courier DrawText
0 0 52 14 [0 0 0] 0 0 [] -1 [1 dup dup] DrawRectangle
5 0 -11 42 14 false [0 0 0] [1 1 1] (Family) 12 /Courier DrawText
52 0 37 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
57 0 -11 27 14 false [1 1 1] [1 1 1] (Face) 12 /Courier DrawText
89 0 36 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
94 0 -11 26 14 false [1 1 1] [1 1 1] (Size) 12 /Courier DrawText
27 -102 19 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
25 -100 19 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
27 -102 15 16 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
30 -105 9 10 image-1 false [0 0 0] DrawBitmap
88 -43 -54 18 14 false [0 0 0] [1 1 1] (\050a\051) 12 /Courier-Bold DrawText
60 -102 -113 18 14 false [0 0 0] [1 1 1] (\050b\051) 12 /Courier-Bold DrawText
148 -117 -128 18 14 false [0 0 0] [1 1 1] (\050c\051) 12 /Courier-Bold DrawText
219 -117 -128 18 14 false [0 0 0] [1 1 1] (\050d\051) 12 /Courier-Bold DrawText
241 -155 -166 18 14 false [0 0 0] [1 1 1] (\050e\051) 12 /Courier-Bold DrawText
101 -220 -231 18 14 false [0 0 0] [1 1 1] (\050f\051) 12 /Courier-Bold DrawText
229 -214 -225 18 14 false [0 0 0] [1 1 1] (\050g\051) 12 /Courier-Bold DrawText
160 -312 -323 18 14 false [0 0 0] [1 1 1] (\050h\051) 12 /Courier-Bold DrawText
grestore

grestore


%
% Begin new window
%
gsave
4 -18 translate
() 0 0 79 60 2 2 2 2 DrawGenericWindowFrame
0 0 79 60 ClipToRectangle
gsave
3 -25 70 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
3 -5 -16 35 14 false [0 0 0] [1 1 1] (Fixed) 12 /Courier DrawText
5 -25 -36 33 14 false [1 1 1] [0 0 0] (Serif) 12 /Courier DrawText
5 -45 -56 68 14 false [0 0 0] [1 1 1] (Sans-Serif) 12 /Courier DrawText
54 -33 16 16 image-2 true [1 1 1] DrawBitmap
54 -33 16 16 image-3 true [0 0 0] DrawBitmap
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier /Times-Roman Helvetica-Bold 
%%BoundingBox: 169 219 443 573

%%EndDocument
 GE 75 100 0 16845 65412 GB 
%%BeginDocument: gadgets/motif-menu-group-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 23, 1993, 4:17 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 171 222 441 573
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 16 16 <
FFFF FF3F FF3F FE7F EE7F E4FF E0FF E01F E03F E07F E0FF E1FF E3FF E7FF EFFF
FFFF>
DefImage

/image-1 /image-1-font 16 16 <
FF3F FE1F FE1F CC3F C43F C07F C00F C00F C01F C03F C07F C0FF C1FF C3FF C7FF
CFFF>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
99 504 translate

%
% Begin new window
%
gsave
0 0 274 354 ClipToRectangle
gsave
0 0 274 354 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 270 350 2 2 2 2 DrawGenericWindowFrame
0 0 270 350 ClipToRectangle
gsave
0 0 270 350 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
10 -50 66 92 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
12 -52 64 90 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
12 -52 62 88 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
22 -56 -67 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
22 -78 -89 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
22 -100 -111 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
22 -122 -133 41 14 false [0 0 0] [1 1 1] (Label4) 12 /Courier DrawText
100 -50 16 94 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
102 -52 14 92 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
102 -52 12 90 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
102 -65 12 30 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
104 -67 10 28 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
104 -67 8 26 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
108 -53 {
  { 103 -63 112 -63 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[1 1 1] 0 0 [] 2 103 -63 108 -53 DrawLine
108 -139 {
  { 113 -129 103 -129 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
[0.22 0.22 0.22] 0 0 [] 2 108 -139 113 -129 DrawLine
118 -50 62 94 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
120 -52 60 92 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
120 -52 58 90 [0 0 0] 0 0 [] -1 [0.77 0.77 0.77] DrawRectangle
127 -56 -67 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
127 -78 -89 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
127 -100 -111 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
127 -122 -133 41 14 false [0 0 0] [1 1 1] (Label4) 12 /Courier DrawText
202 -57 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
204 -59 49 18 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
204 -59 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
207 -60 -71 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
202 -86 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
204 -88 49 18 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
204 -88 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
207 -89 -100 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
202 -115 51 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
204 -117 49 18 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
204 -117 47 16 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
207 -118 -129 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
18 -188 12 12 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
20 -190 10 10 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
20 -190 8 8 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
35 -187 -198 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
89 -188 12 12 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
91 -190 10 10 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
91 -190 8 8 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
106 -187 -198 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
160 -188 12 12 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
162 -190 10 10 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
162 -190 8 8 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
177 -187 -198 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
18 -221 {
  { 30 -221 24 -215 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
18 -221 {
  { 30 -221 24 -227 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
35 -214 -225 41 14 false [0 0 0] [1 1 1] (Label1) 12 /Courier DrawText
89 -221 {
  { 101 -221 95 -215 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
89 -221 {
  { 101 -221 95 -227 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
106 -214 -225 41 14 false [0 0 0] [1 1 1] (Label2) 12 /Courier DrawText
160 -221 {
  { 172 -221 166 -215 }
} [1 1 1] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
160 -221 {
  { 172 -221 166 -227 }
} [0.22 0.22 0.22] 0 0 [] 2 [0.90 0.90 0.90] DrawPolyline
177 -214 -225 41 14 false [0 0 0] [1 1 1] (Label3) 12 /Courier DrawText
10 -290 -301 39 14 false [0 0 0] [1 1 1] (Color:) 12 /Courier-Bold DrawText
53 -288 51 18 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
55 -290 49 16 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
55 -290 47 14 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
65 -290 -301 27 14 false [0 0 0] [1 1 1] (Blue) 12 /Courier DrawText
150 -290 -301 39 14 false [0 0 0] [1 1 1] (Color:) 12 /Courier-Bold DrawText
0 0 270 28 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
2 -2 268 26 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
2 -2 266 24 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
9 -7 -18 42 14 false [0 0 0] [1 1 1] (Family) 12 /Courier-Bold DrawText
59 -7 -18 27 14 false [0 0 0] [1 1 1] (Face) 12 /Courier-Bold DrawText
94 -7 -18 27 14 false [0 0 0] [1 1 1] (Size) 12 /Courier-Bold DrawText
241 -7 -18 18 14 false [0 0 0] [1 1 1] (\050i\051) 12 /Courier-Bold DrawText
32 -147 -158 18 14 false [0 0 0] [1 1 1] (\050j\051) 12 /Courier-Bold DrawText
137 -147 -158 18 14 false [0 0 0] [1 1 1] (\050k\051) 12 /Courier-Bold DrawText
223 -147 -158 18 14 false [0 0 0] [1 1 1] (\050l\051) 12 /Courier-Bold DrawText
232 -185 -196 18 14 false [0 0 0] [1 1 1] (\050m\051) 12 /Courier-Bold DrawText
232 -212 -223 18 14 false [0 0 0] [1 1 1] (\050n\051) 12 /Courier-Bold DrawText
122 -310 -321 18 14 false [0 0 0] [1 1 1] (\050o\051) 12 /Courier-Bold DrawText
grestore

grestore


%
% Begin new window
%
gsave
191 -264 translate
() 0 0 59 70 0 0 0 0 DrawGenericWindowFrame
0 0 59 70 ClipToRectangle
gsave
0 0 59 70 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
0 0 59 70 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
2 -2 57 68 [0 0 0] 0 0 [] -1 [0.22 0.22 0.22] DrawRectangle
2 -2 55 66 [0 0 0] 0 0 [] -1 [0.90 0.90 0.90] DrawRectangle
12 -6 -17 21 14 false [0 0 0] [1 1 1] (Red) 12 /Courier DrawText
12 -28 -39 27 14 false [0 0 0] [1 1 1] (Blue) 12 /Courier DrawText
12 -50 -61 34 14 false [0 0 0] [1 1 1] (Green) 12 /Courier DrawText
5 -65 {
  { 54 -49 5 -49 }
} [1 1 1] 0 0 [] 2 null DrawPolyline
54 -49 {
  { 5 -65 54 -65 }
} [0.22 0.22 0.22] 0 0 [] 2 null DrawPolyline
grestore

grestore

236 -321 16 16 image-1 true [1 1 1] DrawBitmap
236 -321 16 16 image-2 true [0 0 0] DrawBitmap
grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier Helvetica-Bold 
%%BoundingBox: 171 215 441 576

%%EndDocument
 GE /Times-Bold SF
6120 50514 MT
(Figure 1-2:)SH
/Times-Roman SF
11893 XM
(The Garnet-style and Motif-style buttons and menus.)SH
/Times-Bold SF
35752 XM
(\050a\051)SH
10 /Courier AF
37309 XM
(menubar)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 51710 MT
(\050b\051)SH
10 /Courier AF
13512 XM
(popup-menu-button)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
24262 XM
(\050c\051)SH
10 /Courier AF
25757 XM
(menu)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
28707 XM
(\050d\051)SH
10 /Courier AF
30326 XM
(scrolling-menu)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
39276 XM
(\050e\051)SH
10 /Courier AF
40771 XM
(text-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 52906 MT
(\050f\051)SH
10 /Courier AF
13266 XM
(x-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
22216 XM
(\050g\051)SH
10 /Courier AF
23773 XM
(radio-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
35123 XM
(\050h\051)SH
10 /Courier AF
36742 XM
(option-button)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 54102 MT
(\050i\051)SH
10 /Courier AF
13206 XM
(motif-menubar)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
21556 XM
(\050j\051)SH
10 /Courier AF
22929 XM
(motif-menu)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
29479 XM
(\050k\051)SH
10 /Courier AF
31098 XM
(motif-scrolling-menu)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 55298 MT
(\050l\051)SH
10 /Courier AF
13206 XM
(motif-text-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
27556 XM
(\050m\051)SH
10 /Courier AF
29479 XM
(motif-check-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 56494 MT
(\050n\051)SH
10 /Courier AF
13837 XM
(motif-radio-button-panel)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
29112 XM
(\050o\051)SH
10 /Courier AF
30994 XM
(motif-option-button)SH
11 /Times-Roman AF
42994 XM
(in its unselected and)325 W
11893 57690 MT
(selected state)SH
/Symbol SF
8089 59766 MT
(\267)SH
/Times-Bold SF
8870 XM
(Gadgets used to choose items from a list of possible choices)SH
10 /Courier AF
8870 61717 MT
(menubar)SH
11 /Times-Roman AF
13345 XM
(- A pull-down menu \050p. 378\051)SH
10 /Courier AF
8870 63412 MT
(popup-menu-button)SH
11 /Times-Roman AF
19413 XM
(- A button which pops up a menu when pressed.)
68 W( The)
412 W( appearance of)69 W
12470 64608 MT
(the button does not change with the selection.  \050p. 373\051)SH
10 /Courier AF
8870 66303 MT
(menu)SH
11 /Times-Roman AF
11545 XM
(- Vertical menu, single selection \050p. 374\051)SH
10 /Courier AF
8870 67998 MT
(scrolling-menu)SH
11 /Times-Roman AF
17569 XM
(- A menu with a)
24 W( scroll bar on one side, which allows a subset of all items)23 W
12470 69194 MT
(in the menu to be viewed. \050single or multiple selection\051 \050p. 376\051)SH
10 /Courier AF
8870 70889 MT
(text-buttons)SH
11 /Times-Roman AF
16543 XM
(- A panel of rectangular)
198 W( buttons, each with a choice centered inside the)199 W
ES
%%Page: 351 4
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.1)
SH( Current)
1800 W( Gadgets)SH
51386 XM
(Page 351)SH
46800 50 8280 4486 UL
11 SS 
14630 7955 MT
(button. As)
643 W( an option, the currently selected choice may appear in)
184 W( inverse video.)183 W
14630 9151 MT
(\050single selection\051 \050p. 367 and 369\051)SH
10 /Courier AF
11030 10846 MT
(x-buttons)SH
11 /Times-Roman AF
16895 XM
(- A panel of)
190 W( square buttons, each with a choice beside the button.  An "X")191 W
14630 12042 MT
(appears inside each currently selected button.  \050multiple selection\051 \050p. 367 and 370\051)SH
10 /Courier AF
11030 13737 MT
(radio-buttons)SH
11 /Times-Roman AF
19107 XM
(- A panel of circular buttons, each with)
2 W( a choice beside the button.  A black)1 W
14630 14933 MT
(circle appears inside the currently selected button.  \050single selection\051 \050p. 367 and 371\051)SH
10 /Courier AF
11030 16628 MT
(option-button)SH
11 /Times-Roman AF
19257 XM
(- A button which pops up a menu when pressed.  Selection of)
152 W( a choice)153 W
14630 17824 MT
(from the menu causes that item to appear as the new label of the button.  \050p. 371\051)SH
10 /Courier AF
11030 19519 MT
(motif-menubar)SH
11 /Times-Roman AF
19105 XM
(- A pull-down menu.  \050p. 441\051)SH
10 /Courier AF
11030 21214 MT
(motif-menu)SH
11 /Times-Roman AF
17305 XM
(- Vertical menu, single selection \050p. 438\051)SH
10 /Courier AF
11030 22909 MT
(motif-scrolling-menu)SH
11 /Times-Roman AF
23305 XM
(- A menu with an attached scroll bar.  \050p. 440\051)SH
10 /Courier AF
11030 24604 MT
(motif-text-buttons)SH
11 /Times-Roman AF
22368 XM
(- A panel of rectangular buttons, each with a choice)
263 W( appearing)262 W
14630 25800 MT
(inside the button.  \050single selection\051 \050p. 433 and 434\051)SH
10 /Courier AF
11030 27495 MT
(motif-check-buttons)SH
11 /Times-Roman AF
22742 XM
(- A panel of square buttons, each with a)
37 W( choice beside the buttons.)38 W
14630 28691 MT
(\050multiple selection\051 \050p. 433 and 435\051)SH
10 /Courier AF
11030 30386 MT
(motif-radio-buttons)SH
11 /Times-Roman AF
22980 XM
(- A panel of diamond buttons, each)
275 W( with a choice beside the)274 W
14630 31582 MT
(button. \050single)
275 W( selection\051 \050p. 433 and 436\051)SH
10 /Courier AF
11030 33277 MT
(motif-option-button)SH
11 /Times-Roman AF
22835 XM
(- A button which pops up a)
130 W( menu when pressed.  Selection of a)131 W
14630 34473 MT
(choice from the)
93 W( menu causes that item to appear as the new label of the button. \050p.)92 W
14630 35669 MT
(437\051)SH
65 100 0 5510 66310 GB 
%%BeginDocument: gadgets/text-group-pix.ps
%!PS-Adobe-2.0 EPSF 2.0
%%Title: Opal 27
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Oct 15, 1991, 1:45 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 84 361 527 431
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
12 -289 translate
gsave
0 648 443 70 ClipToRectangle
0 0 translate
gsave
10 636 625 39 14 0 false 0 0 0 false 0 0 0 false (Title:) 12 /Courier-Bold DrawText
60 636 625 77 14 0 false 0 0 0 false 0 0 0 false (Labeled-box) 12 /Courier DrawText
54 638 130 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 601 590 39 14 0 false 0 0 0 false 0 0 0 false (Title:) 12 /Courier-Bold DrawText
54 603 131 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
63 601 590 110 14 0 false 0 0 0 false 0 0 0 false (Scrolling-labele) 12 /Courier DrawText
176 601 591 7 13 0 false 0 0 0 false 0 0 0 false (...) 10 /Times-Roman DrawText
242 638 627 131 14 0 false 0 0 0 false 0 0 0 false (Scrolling-input-str) 12 /Courier DrawText
378 638 628 7 13 0 false 0 0 0 false 0 0 0 false (...) 10 /Times-Roman DrawText
191 636 625 18 14 0 false 0 0 0 false 0 0 0 false (\050a\051) 12 /Courier-Bold DrawText
191 602 591 18 14 0 false 0 0 0 false 0 0 0 false (\050b\051) 12 /Courier-Bold DrawText
414 639 628 18 14 0 false 0 0 0 false 0 0 0 false (\050c\051) 12 /Courier-Bold DrawText
grestore

gsave

%
% Begin new window
%
220 -30 translate
gsave
0 648 355 277 ClipToRectangle
0 0 translate
gsave
0 648 355 277 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
12 634 623 40 14 0 false 0 0 0 false 0 0 0 false (Label:) 12 /Courier-Bold DrawText
57 636 126 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
59 634 124 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
59 634 122 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
61 634 623 111 14 0 false 0 0 0 false 0 0 0 false (otif-scrolling-l) 12 /Courier DrawText
194 634 623 18 14 0 false 0 0 0 false 0 0 0 false (\050d\051) 12 /Courier-Bold DrawText
grestore

grestore

grestore

grestore

0 648 443 70 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman /Courier /Courier-Bold 
%%BoundingBox: 84 361 527 431

%%EndDocument
 GE 65 100 0 26325 65595 GB 
%%BeginDocument: gadgets/multifont-gadget-pix.ps
%!PS-Adobe-2.0 EPSF 2.0
%%Title: Opal 40
%%Creator: Make-PS-File -- Garnet Version 2.1beta
%%CreationDate: Oct 22, 1992, 1:47 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 211 350 401 442
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
139 -278 translate
gsave
0 648 190 92 ClipToRectangle
0 0 translate
gsave
5 643 632 21 14 0 false 0 0 0 false 0 0 0 false (The) 12 /Courier DrawText
26 643 632 133 14 0 false 0 0 0 false 0 0 0 false ( multifont-gadget  ) 12 /Courier-Bold DrawText
5 629 618 154 14 0 false 0 0 0 false 0 0 0 false (combines the multifont) 12 /Courier DrawText
159 629 618 7 14 0 false 0 0 0 false 0 0 0 false ( ) 12 /Courier-Oblique DrawText
5 615 604 56 14 0 false 0 0 0 false 0 0 0 false (objects ) 12 /Courier-Oblique DrawText
61 615 604 21 14 0 false 0 0 0 false 0 0 0 false (and) 12 /Courier DrawText
82 615 604 98 14 0 false 0 0 0 false 0 0 0 false ( interactors  ) 12 /Courier-Oblique DrawText
5 601 590 168 14 0 false 0 0 0 false 0 0 0 false (in a gadget that allows ) 12 /Courier DrawText
5 587 576 168 14 0 false 0 0 0 false 0 0 0 false (text editing with word- ) 12 /Courier DrawText
5 573 562 35 14 0 false 0 0 0 false 0 0 0 false (wrap ) 12 /Courier DrawText
89 587 2 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
170 646 635 18 14 0 false 0 0 0 false 0 0 0 false (\050e\051) 12 /Courier-Bold DrawText
grestore

grestore

0 648 190 92 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Oblique /Courier-Bold /Courier 
%%BoundingBox: 211 350 401 442

%%EndDocument
 GE /Times-Bold SF
8280 44597 MT
(Figure 1-3:)SH
/Times-Roman SF
14053 XM
(Text gadgets.)SH
/Times-Bold SF
20529 XM
(\050a\051)SH
10 /Courier AF
22086 XM
(labeled-box)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
29236 XM
(\050b\051)SH
10 /Courier AF
30855 XM
(scrolling-labeled-box)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
14053 45793 MT
(\050c\051)SH
10 /Courier AF
15548 XM
(scrolling-input-string)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
29298 XM
(\050d\051)SH
10 /Courier AF
30917 XM
(motif-scrolling-labeled-box)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
14053 46989 MT
(\050e\051)SH
10 /Courier AF
15548 XM
(multifont-gadget)SH
11 /Symbol AF
10249 49065 MT
(\267)SH
/Times-Bold SF
11030 XM
(Gadgets used to handle text input)SH
10 /Courier AF
11030 51016 MT
(labeled-box)SH
11 /Times-Roman AF
17906 XM
(- A framed)
1 W( text object that may be edited.  As the string gets longer, the frame)2 W
14630 52212 MT
(expands. \050p.)
275 W( 384\051)SH
10 /Courier AF
11030 53907 MT
(scrolling-labeled-box)SH
11 /Times-Roman AF
23937 XM
(- A scrolling input string in a)
32 W( box with a label.  The frame stays)31 W
14630 55103 MT
(fixed, and the string scrolls.  \050p. 385\051)SH
10 /Courier AF
11030 56798 MT
(scrolling-input-string)SH
11 /Times-Roman AF
24533 XM
(- Input a text string, but using a fixed width area and scroll)
28 W( the)29 W
14630 57994 MT
(string horizontally if necessary.  \050p. 385\051)SH
10 /Courier AF
11030 59689 MT
(motif-scrolling-labeled-box)SH
11 /Times-Roman AF
27549 XM
(- A labeled box with text inside that may be)
44 W( edited.  \050p.)43 W
14630 60885 MT
(448\051)SH
10 /Courier AF
11030 62580 MT
(multifont-gadget)SH
11 /Times-Roman AF
21082 XM
(- A text editing gadget that)
177 W( includes word wrap, text selection, and)178 W
14630 63776 MT
(many functions that allow manipulation of the text.  This gadget is discussed in)
85 W( the)84 W
14630 64972 MT
(Opal manual.)SH
ES
%%Page: 352 5
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 352)
SH( Gadgets)830 W
42260 XM
(Introduction Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 8100 46470 GB 
%%BeginDocument: gadgets/dialog-box-pix.ps
%!PS-Adobe-2.0 EPSF 2.0
%%Title: Opal 72
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Oct 15, 1991, 3:02 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 232 540 561
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
        /color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
          color-p {red green blue setrgbcolor} if
          transparent-p
          % The case where the background is not drawn
          { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
          % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-1
<0003 7ffb 901b 7ffb 901b 7ffb 901b 7ffb 901b 7ffb 0003>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.9957447 0.9957447 scale

%
% Begin new window
%
0 -160 translate
gsave
0 651 470 330 ClipToRectangle
0 0 translate
gsave
0 651 470 330 0 0 0 0 false 0 0 [] -1 0 0.00 0.00 0.00 true DrawRectangle
425 601 590 18 14 1 false 0 0 0 false 0 0 0 false (\050b\051) 12 /Courier-Bold DrawText
425 491 480 18 14 1 false 0 0 0 false 0 0 0 false (\050c\051) 12 /Courier-Bold DrawText
grestore

gsave

%
% Begin new window
%
262 -213 translate
gsave
0 651 200 110 ClipToRectangle
0 0 translate
gsave
0 651 200 110 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
7 644 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
9 642 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
9 642 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
12 641 630 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
67 644 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
69 642 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
69 642 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
72 641 630 35 14 0 false 0 0 0 false 0 0 0 false (Apply) 12 /Courier DrawText
127 644 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
129 642 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
129 642 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
132 641 630 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
5 560 549 95 14 0 false 0 0 0 false 0 0 0 false (FILLING-STYLE:) 12 /Courier DrawText
111 558 14 11 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
109 560 14 11 image-1 false 0 0 0 false DrawBitmap
5 574 563 74 14 0 false 0 0 0 false 0 0 0 false (LINE-STYLE:) 12 /Courier DrawText
90 572 14 11 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
88 574 14 11 image-1 false 0 0 0 false DrawBitmap
5 592 581 52 14 0 false 0 0 0 false 0 0 0 false (QUALITY:) 12 /Courier DrawText
68 590 124 15 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
66 592 124 15 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
68 592 581 31 14 0 false 0 0 0 false 0 0 0 false (:GOOD) 12 /Courier DrawText
109 592 581 46 14 0 false 0 0 0 false 0 0 0 false (:MEDIUM) 12 /Courier DrawText
165 592 581 24 14 0 false 0 0 0 false 0 0 0 false (:BAD) 12 /Courier DrawText
5 606 595 25 14 0 false 0 0 0 false 0 0 0 false (TOP:) 12 /Courier DrawText
39 606 595 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
5 620 609 32 14 0 false 0 0 0 false 0 0 0 false (LEFT:) 12 /Courier DrawText
46 620 609 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
160 561 550 18 14 0 false 0 0 0 false 0 0 0 false (\050d\051) 12 /Courier-Bold DrawText
grestore

grestore

0 651 200 110 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

gsave

%
% Begin new window
%
262 -111 translate
gsave
0 651 147 100 ClipToRectangle
0 0 translate
gsave
0 651 147 100 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
39 631 619 68 15 0 false 0 0 0 false 0 0 0 false (Is that OK?) 12 /Helvetica-Bold DrawText
12 595 57 21 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
14 593 55 19 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
14 593 53 17 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
17 592 580 18 15 0 false 0 0 0 false 0 0 0 false (OK) 12 /Helvetica-Bold DrawText
78 595 57 21 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
80 593 55 19 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
80 593 53 17 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
83 592 580 47 15 0 false 0 0 0 false 0 0 0 false (CANCEL) 12 /Helvetica-Bold DrawText
grestore

grestore

0 651 147 100 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

gsave

%
% Begin new window
%
262 0 translate
gsave
0 651 145 109 ClipToRectangle
0 0 translate
gsave
10 631 620 125 14 0 false 0 0 0 false 0 0 0 false (There was an error) 12 /Courier DrawText
60 593 29 30 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
55 598 29 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
58 595 23 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
63 590 579 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
grestore

grestore

0 651 145 109 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

gsave

%
% Begin new window
%
0 -10 translate
gsave
0 651 260 295 ClipToRectangle
0 0 translate
gsave
0 651 260 295 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
12 623 612 68 14 0 false 0 0 0 false 0 0 0 false (Directory:) 12 /Courier-Bold DrawText
85 625 163 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
87 623 161 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
87 623 159 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
88 623 612 97 14 0 false 0 0 0 false 0 0 0 false (/usr/amickish/) 12 /Courier DrawText
32 585 16 120 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
34 583 14 118 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
34 583 12 116 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
34 502 12 19 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
36 500 10 17 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
36 500 8 15 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
40 582 44 572 35 572 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 35 572 40 582 DrawLine
40 470 35 480 45 480 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 40 470 45 480 DrawLine
50 585 188 120 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
52 583 186 118 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
52 583 184 116 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
57 581 570 74 14 0 false 0 0 0 false 0 0 0 false (.Xdefaults~) 12 /Courier-Bold DrawText
57 562 551 39 14 0 false 0 0 0 false 0 0 0 false (.cshrc) 12 /Courier-Bold DrawText
57 543 532 46 14 0 false 0 0 0 false 0 0 0 false (.cshrc~) 12 /Courier-Bold DrawText
57 524 513 41 14 0 false 0 0 0 false 0 0 0 false (garnet) 12 /Courier-Bold DrawText
57 505 494 20 14 0 false 0 0 0 false 0 0 0 false (doc) 12 /Courier-Bold DrawText
57 486 475 67 14 0 false 0 0 0 false 0 0 0 false (.Xdefaults) 12 /Courier-Bold DrawText
12 441 430 60 14 0 false 0 0 0 false 0 0 0 false (Filename:) 12 /Courier-Bold DrawText
77 443 171 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 441 169 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 441 167 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
56 397 49 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
58 395 47 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
58 395 45 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
67 395 384 26 14 0 false 0 0 0 false 0 0 0 false (Save) 12 /Courier DrawText
134 397 49 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
136 395 47 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
136 395 45 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
138 395 384 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
220 401 390 18 14 0 false 0 0 0 false 0 0 0 false (\050a\051) 12 /Courier-Bold DrawText
grestore

grestore

0 651 260 295 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

grestore

0 651 470 330 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Helvetica-Bold /Courier /Courier-Bold 
%%BoundingBox: 72 232 540 561

%%EndDocument
 GE /Times-Bold SF
6120 31982 MT
(Figure 1-4:)SH
/Times-Roman SF
11893 XM
(Garnet dialog boxes.)SH
/Times-Bold SF
21576 XM
(\050a\051)SH
10 /Courier AF
23133 XM
(motif-save-gadget)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
33883 XM
(\050b\051)SH
10 /Courier AF
35502 XM
(error-gadget)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
11893 33178 MT
(\050c\051)SH
10 /Courier AF
13388 XM
(motif-query-gadget)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
24738 XM
(\050d\051)SH
10 /Courier AF
26357 XM
(motif-prop-sheet-with-OK)SH
11 /Symbol AF
8089 35254 MT
(\267)SH
/Times-Bold SF
8870 XM
(Dialog boxes for reading and writing to files)183 W
/Times-Roman SF
31234 XM
(\050the)SH
10 /Courier AF
33402 XM
(motif-save-gadget)SH
11 /Times-Roman AF
44060 XM
(is pictured in)183 W
8870 36450 MT
(figure 1-4\051)SH
10 /Courier AF
8870 38401 MT
(save-gadget)SH
11 /Times-Roman AF
15774 XM
(- Saves a file in a directory whose)
29 W( contents are displayed in a scrolling menu.)28 W
12470 39597 MT
(\050p. 407\051)SH
10 /Courier AF
8870 41292 MT
(load-gadget)SH
11 /Times-Roman AF
15889 XM
(- Loads a file from a directory whose contents are displayed in)
144 W( a scrolling)145 W
12470 42488 MT
(menu. \050p.)
275 W( 411\051)SH
10 /Courier AF
8870 44183 MT
(motif-save-gadget)SH
11 /Times-Roman AF
19429 XM
(- Saves a file)
84 W( in a directory whose contents are displayed in a Motif)83 W
12470 45379 MT
(style scrolling menu.  \050p. 450\051)SH
10 /Courier AF
8870 47074 MT
(motif-load-gadget)SH
11 /Times-Roman AF
19540 XM
(- Loads a file from)
195 W( a directory whose contents are displayed in a)196 W
12470 48270 MT
(Motif style scrolling menu.  \050p. 451\051)SH
/Symbol SF
8089 50346 MT
(\267)SH
/Times-Bold SF
8870 XM
(Dialog boxes for reporting errors to the user and asking)
491 W( for user input)490 W
/Times-Roman SF
48460 XM
(\050the)SH
10 /Courier AF
8870 51542 MT
(error-gadget)SH
11 /Times-Roman AF
16345 XM
(and)SH
10 /Courier AF
18208 XM
(motif-query-gadget)SH
11 /Times-Roman AF
29283 XM
(are pictured in figure 1-4\051.)SH
10 /Courier AF
8870 53493 MT
(error-gadget)SH
11 /Times-Roman AF
16345 XM
(- Used to display error messages in a window with an "OK" button \050p. 403\051)SH
10 /Courier AF
8870 55188 MT
(query-gadget)SH
11 /Times-Roman AF
16444 XM
(- A dialog box like the)99 W
10 /Courier AF
27243 XM
(error-gadget)SH
11 /Times-Roman AF
(, but with multiple buttons and the)100 W
12470 56384 MT
(ability to return values.  \050p. 406\051)SH
10 /Courier AF
8870 58079 MT
(motif-error-gadget)SH
11 /Times-Roman AF
20002 XM
(- A dialog box used)
57 W( to display error messages with an "OK" button)56 W
12470 59275 MT
(in the Motif style.  \050p. 448\051)SH
10 /Courier AF
8870 60970 MT
(motif-query-gadget)SH
11 /Times-Roman AF
19945 XM
(- A Motif style dialog box with multiple buttons.  \050p. 449\051)SH
/Symbol SF
8089 63046 MT
(\267)SH
/Times-Bold SF
8870 XM
(Property sheet gadgets)SH
/Times-Roman SF
19835 XM
(\050a Motif property sheet is pictured in figure 1-4\051)SH
10 /Courier AF
8870 64997 MT
(prop-sheet)SH
11 /Times-Roman AF
15226 XM
(- Displays)
81 W( a set of labels and values and allows the values to be edited.  This)82 W
12470 66193 MT
(gadget can be easily displayed in its own window.  \050p. 411\051)SH
10 /Courier AF
8870 67888 MT
(prop-sheet-for-obj)SH
11 /Times-Roman AF
20036 XM
(- A property sheet)
91 W( designed to display the slots in a Garnet object.)90 W
12470 69084 MT
(\050p. 415\051)SH
10 /Courier AF
8870 70779 MT
(prop-sheet-with-OK)SH
11 /Times-Roman AF
19945 XM
(- A property sheet with OK-Cancel buttons.  \050p. 418\051)SH
ES
%%Page: 353 6
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.2)
SH( Customization)1800 W
51386 XM
(Page 353)SH
46800 50 8280 4486 UL
/Courier SF
11030 7955 MT
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
27166 XM
(- A property)
261 W( sheet designed to display the slots in a)262 W
14630 9151 MT
(Garnet object with attached OK-Cancel buttons.  \050p. 419\051)SH
10 /Courier AF
11030 10846 MT
(motif-prop-sheet-with-OK)SH
11 /Times-Roman AF
25915 XM
(- A property sheet)
210 W( with OK-Cancel buttons in the Motif)209 W
14630 12042 MT
(style. \050p.)
275 W( 452\051)SH
10 /Courier AF
11030 13737 MT
(motif-propt-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
31455 XM
(- A Motif style)
350 W( property sheet designed to)351 W
14630 14933 MT
(display the slots in a Garnet object with attached OK-Cancel buttons.  \050p. 453\051)SH
/Symbol SF
10249 17009 MT
(\267)SH
/Times-Bold SF
11030 XM
(Scrolling windows)SH
10 /Courier AF
11030 18960 MT
(scrolling-window)SH
11 /Times-Roman AF
20905 XM
(- Supports a scrollable window \050p. 391\051)SH
10 /Courier AF
11030 20655 MT
(scrolling-window-with-bars)SH
11 /Times-Roman AF
26905 XM
(- Scrolling window complete with scroll bars.  \050p. 391\051)SH
10 /Courier AF
11030 22350 MT
(motif-scrolling-window-with-bars)SH
11 /Times-Roman AF
30505 XM
(- Motif style scrolling window \050p. 455\051)SH
/Symbol SF
10249 24426 MT
(\267)SH
/Times-Bold SF
11030 XM
(Special gadgets)SH
10 /Courier AF
11030 26377 MT
(arrow-line)SH
11 /Times-Roman AF
17305 XM
(- A line with an arrowhead at one end \050p. 395\051)SH
10 /Courier AF
11030 28072 MT
(double-arrow-line)SH
11 /Times-Roman AF
21505 XM
(- A line with arrowheads at both ends \050p. 396\051)SH
10 /Courier AF
11030 29767 MT
(browser-gadget)SH
11 /Times-Roman AF
19705 XM
(- Used to examine structures and hierarchies \050p. 397\051)SH
10 /Courier AF
11030 31462 MT
(graphics-selection)SH
11 /Times-Roman AF
22249 XM
(- Bounding boxes and interactors to move and change the)
144 W( size of)143 W
14630 32658 MT
(other graphical objects.  \050p. 386\051)SH
10 /Courier AF
11030 34353 MT
(multi-graphics-selection)SH
11 /Times-Roman AF
25724 XM
(- Same as)19 W
10 /Courier AF
30332 XM
(graphics-selection)SH
11 /Times-Roman AF
(, but for multiple objects.)19 W
14630 35549 MT
(\050p. 388\051)SH
10 /Courier AF
11030 37244 MT
(polyline-creator)SH
11 /Times-Roman AF
20905 XM
(- For creating and editing polylines.  \050p. 401\051)SH
10 /Courier AF
11030 38939 MT
(MouseLine)SH
11 /Times-Roman AF
16829 XM
(and)SH
10 /Courier AF
18816 XM
(MouseLinePopup)SH
11 /Times-Roman AF
27615 XM
(- A gadget that pops up a "help" string, informing the)124 W
14630 40135 MT
(user about the object that the mouse is held over.)SH
10 /Courier AF
11030 41830 MT
(standard-edit)SH
11 /Times-Roman AF
19250 XM
(- A module of predefined "cut" and "paste" procedures,)
145 W( and many other)146 W
14630 43026 MT
(common editing functions.  \050p. 423\051)SH
14 /Times-Bold AF
8280 46844 MT
(1.2. Customization)SH
11 /Times-Roman AF
8280 48040 MT
(The most important feature of the Garnet Gadgets is the ability)
28 W( to create a variety of interface styles from)27 W
8280 49236 MT
(a small collection of prototype objects.  Each)
16 W( gadget includes many parameters which may be customized)17 W
8280 50432 MT
(by the designer, providing a great)
101 W( deal of flexibility in the behavior of the gadgets.  The designer may,)100 W
8280 51628 MT
(however, choose to)
65 W( leave many of the default values unchanged, while modifying only those parameters)66 W
8280 52824 MT
(that integrate the object into the larger user interface.)SH
8280 55122 MT
(The location, size, functionality, etc.,)
70 W( of a gadget is determined by the values in each of its slots.  When)69 W
8280 56318 MT
(instances of gadgets are)
100 W( created, the instances inherit all of the slots and slot values from the prototype)101 W
8280 57514 MT
(object except those slots which are specifically)
105 W( assigned values by the designer.  The slot values in the)104 W
8280 58710 MT
(prototype can thus be considered "default" values for the instances, which may)
222 W( be overridden when)223 W
9 SS 
17791 59568 MT
(1)SH
11 SS 
8280 59931 MT
(instances are created.)69 W
18929 XM
(The designer may also add new slots not defined in)
69 W( the gadget prototype for use)68 W
8280 61127 MT
(by special applications in the larger interface.  Slot values may be changed after)
40 W( the instances are created)41 W
8280 62323 MT
(by using the KR function)SH
10 /Courier AF
19677 XM
(s-value)SH
11 /Times-Roman AF
(.)SH
10800 50 8280 70172 UL
7 SS 
9180 71673 MT
(1)SH
9 SS 
9530 72000 MT
(See the KR manual for a more detailed discussion of inheritance.)SH
ES
%%Page: 354 7
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 354)
SH( Gadgets)830 W
42260 XM
(Introduction Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(1.3. Using Gadget Objects)SH
11 /Times-Roman AF
6120 9334 MT
(The gadget objects reside in the)288 W
10 /Courier AF
22082 XM
(GARNET-GADGETS)SH
11 /Times-Roman AF
31045 XM
(package, which has the)
288 W( nickname "GG".  We)287 W
6120 10530 MT
(recommend that programmers explicitly reference the name of the package when creating instances of the)14 W
6120 11726 MT
(gadgets, as in)62 W
10 /Courier AF
12538 XM
(garnet-gadgets:v-scroll-bar)SH
11 /Times-Roman AF
29075 XM
(or)SH
10 /Courier AF
30328 XM
(gg:v-scroll-bar)SH
11 /Times-Roman AF
(. However,)
399 W( the package)
62 W( name)61 W
6120 12922 MT
(may be dropped if the line)16 W
10 /Courier AF
18068 XM
(\050use-package "GARNET-GADGETS"\051)16 W
11 /Times-Roman AF
36376 XM
(is executed before referring to gadget)17 W
6120 14118 MT
(objects.)SH
6120 16416 MT
(Before creating instances of gadget objects, a)
39 W( set of component modules must be loaded.  These modules)38 W
6120 17612 MT
(are loaded in)
28 W( the correct order when the "-loader" files corresponding to the desired gadgets are used \050see)29 W
6120 18808 MT
(Chapter 2\051.)SH
6120 21106 MT
(Since each top-level object)
32 W( is exported from the)31 W
10 /Courier AF
27691 XM
(GARNET-GADGETS)SH
11 /Times-Roman AF
36397 XM
(package, creating instances of gadget)31 W
6120 22302 MT
(objects is as easy as instantiating any other Garnet objects.  To use)
40 W( a gadget, an instance of the prototype)41 W
6120 23498 MT
(must be defined and added to an interactor window.  The following lines will)
36 W( display a vertical scroll bar)35 W
6120 24694 MT
(in a window:)SH
8 /Courier AF
8040 25859 MT
(\050create-instance 'MY-WIN inter:interactor-window)SH
9480 26724 MT
(\050:left 0\051 \050:top 0\051 \050:width 300\051 \050:height 500\051\051)SH
8040 27589 MT
(\050create-instance 'MY-AGG opal:aggregate\051)SH
8040 28454 MT
(\050s-value my-win :aggregate my-agg\051)SH
8040 29319 MT
(\050create-instance 'MY-SCROLL-BAR garnet-gadgets:v-scroll-bar\051)SH
8040 30184 MT
(\050opal:add-component my-agg my-scroll-bar\051)SH
8040 31049 MT
(\050opal:update my-win\051)SH
11 /Times-Roman AF
6120 32470 MT
(The first two instructions create an interactor window named)73 W
10 /Courier AF
33870 XM
(my-win)SH
11 /Times-Roman AF
37818 XM
(and an)
73 W( aggregate named)74 W
10 /Courier AF
49045 XM
(my-agg)SH
11 /Times-Roman AF
(.)SH
6120 33666 MT
(The third instruction sets the)228 W
10 /Courier AF
20123 XM
(:aggregate)SH
11 /Times-Roman AF
26626 XM
(slot of)228 W
10 /Courier AF
30138 XM
(my-win)SH
11 /Times-Roman AF
34241 XM
(to)SH
10 /Courier AF
35599 XM
(my-agg)SH
11 /Times-Roman AF
(, so that all graphical objects)227 W
6120 34862 MT
(attached to)219 W
10 /Courier AF
11628 XM
(my-agg)SH
11 /Times-Roman AF
15723 XM
(will be shown in)220 W
10 /Courier AF
24181 XM
(my-win)SH
11 /Times-Roman AF
(. The)
715 W( next two instructions create an instance of the)220 W
10 /Courier AF
6120 36058 MT
(v-scroll-bar)SH
11 /Times-Roman AF
13897 XM
(object named)302 W
10 /Courier AF
20671 XM
(my-scroll-bar)SH
11 /Times-Roman AF
29048 XM
(and add it as)
302 W( a component of)301 W
10 /Courier AF
44079 XM
(my-agg)SH
11 /Times-Roman AF
(. The)
877 W( last)301 W
6120 37254 MT
(instruction causes)SH
10 /Courier AF
14246 XM
(my-win)SH
11 /Times-Roman AF
18121 XM
(to become visible with)SH
10 /Courier AF
28387 XM
(my-scroll-bar)SH
11 /Times-Roman AF
36462 XM
(inside.)SH
6120 39552 MT
(In most cases, the use of a gadget will follow the same form as the)
98 W( preceding example.  The important)99 W
6120 40748 MT
(difference will be in the instantiation of the gadget object \050the fifth instruction above\051, where slots may)
11 W( be)10 W
6120 41944 MT
(given values)
150 W( that override the default values defined in the gadget prototype.  The following example)151 W
6120 43140 MT
(illustrates such a customization of the vertical scroll bar.)SH
6120 45438 MT
(Suppose that we would like to create a vertical scroll bar whose values span the interval [0..30], with)
63 W( its)62 W
6120 46634 MT
(upper-left coordinate at \05025,50\051.  This vertical scroll bar may be created by:)SH
8 /Courier AF
8040 47799 MT
(\050create-instance 'CUSTOM-BAR garnet-gadgets:v-scroll-bar)SH
9480 48664 MT
(\050:left 25\051)SH
9480 49529 MT
(\050:top 50\051)SH
9480 50394 MT
(\050:val-1 0\051)SH
9480 51259 MT
(\050:val-2 30\051\051)SH
11 /Times-Roman AF
6120 52680 MT
(This instruction creates an object called)
107 W( CUSTOM-BAR which is an instance of)108 W
10 /Courier AF
42969 XM
(v-scroll-bar)SH
11 /Times-Roman AF
(. The)491 W
6120 53876 MT
(vertical scroll bar CUSTOM-BAR has inherited all of the)
44 W( slots that were declared in the)43 W
10 /Courier AF
45720 XM
(v-scroll-bar)SH
11 /Times-Roman AF
6120 55072 MT
(prototype along with their default values, except for the coordinate and range values which have)
139 W( been)140 W
6120 56268 MT
(specified in this schema definition \050see section 3.1 for a)
234 W( list of customizable slots in the scroll bar)233 W
6120 57464 MT
(objects\051.)SH
14 /Times-Bold AF
6120 61282 MT
(1.4. Application Interface)SH
11 /Times-Roman AF
6120 62478 MT
(There are several ways that the)
224 W( gadgets can interface with your application.  This section describes)225 W
6120 63674 MT
(several ways the you can get the gadgets to "do something" to your application.)SH
12 /Times-Bold AF
6120 67358 MT
(1.4.1. The :value slot)SH
11 /Times-Roman AF
6120 68554 MT
(In most gadgets, there is a top-level)41 W
10 /Courier AF
22353 XM
(:value)SH
11 /Times-Roman AF
26269 XM
(slot. This)
357 W( slot is updated automatically after a user changes)41 W
6120 69750 MT
(the value or position of some part of the gadget.  This is therefore the main slot through)
196 W( which the)197 W
6120 70946 MT
(designer perceives action on the part of the user.)SH
ES
%%Page: 355 8
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.4)
SH( Application)
1800 W( Interface)SH
51386 XM
(Page 355)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10293 XM
(:value)SH
11 /Times-Roman AF
14196 XM
(slot may be accessed directly)
28 W( \050by the KR functions)27 W
10 /Courier AF
37078 XM
(gv)SH
11 /Times-Roman AF
38580 XM
(and)SH
10 /Courier AF
40470 XM
(gvl)SH
11 /Times-Roman AF
(\051 order to make other objects)27 W
8280 9151 MT
(in the larger interface dependent on the actions of the user.  The slot may also be set directly)
67 W( by the KR)68 W
8280 10347 MT
(function)SH
10 /Courier AF
12223 XM
(s-value)SH
11 /Times-Roman AF
16700 XM
(to change the)
2 W( current value or selection displayed by the gadget \050except in the scrolling)1 W
8280 11543 MT
(menu gadget, where the)SH
10 /Courier AF
19061 XM
(:selected-ranks)SH
11 /Times-Roman AF
28336 XM
(slot must be set\051.)SH
8280 13841 MT
(An instance of a)
43 W( gadget can be given initial values by setting the)44 W
10 /Courier AF
37472 XM
(:value)SH
11 /Times-Roman AF
41391 XM
(slot after the instance has been)44 W
8280 15037 MT
(created. In)
495 W( most)
110 W( gadgets, this slot may not be given a value in the)109 W
10 /Courier AF
39215 XM
(create-instance)SH
11 /Times-Roman AF
48599 XM
(call, since this)109 W
1406 50 26569 15237 UL
8280 16233 MT
(would override the formula in the slot.  Therefore, the general procedure for selecting an)
24 W( initial value in a)25 W
8280 17429 MT
(gadget is to create the instance, access the)53 W
10 /Courier AF
27425 XM
(:value)SH
11 /Times-Roman AF
31353 XM
(slot using)53 W
10 /Courier AF
35983 XM
(gv)SH
11 /Times-Roman AF
37511 XM
(\050to initialize the formula in)
53 W( the slot and)52 W
8280 18625 MT
(establish dependencies\051, and then use)SH
10 /Courier AF
25018 XM
(s-value)SH
11 /Times-Roman AF
29493 XM
(to set the slot to the desired initial value.)SH
8280 20923 MT
(See sections 5.1 and 5.4 for examples of the)SH
10 /Courier AF
27921 XM
(:value)SH
11 /Times-Roman AF
31796 XM
(slot in use.)SH
12 /Times-Bold AF
8280 24607 MT
(1.4.2. The :selection-function slot)SH
11 /Times-Roman AF
8280 25803 MT
(In most gadgets there is a)53 W
10 /Courier AF
20084 XM
(:selection-function)SH
11 /Times-Roman AF
31812 XM
(slot which holds the name of a function to be called)54 W
8280 26999 MT
(whenever the)155 W
10 /Courier AF
14758 XM
(:value)SH
11 /Times-Roman AF
18788 XM
(slot changes due to action by the user \050such as the pressing of a)
155 W( button\051.  The)154 W
10 /Courier AF
8280 28195 MT
(:selection-function)SH
11 /Times-Roman AF
20044 XM
(is not automatically called when the designer's interface sets the)89 W
10 /Courier AF
49525 XM
(:value)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 29391 MT
(directly.)SH
8280 31689 MT
(This is probably the most important link between)
193 W( the gadgets and your application.  By supplying a)192 W
8280 32885 MT
(gadget with a selection function, then the gadget can execute some application-specific procedure when)90 W
8280 34081 MT
(the user operates it.)SH
8280 36379 MT
(In the scroll bars, sliders, trill device, and gauge, this function)
12 W( is called after the user changes the value by)11 W
8280 37575 MT
(moving the indicator or typing in a new value \050the function)
88 W( is called repeatedly while the user drags an)89 W
8280 38771 MT
(indicator\051. In)
401 W( buttons and menus, it is called when the user changes the currently selected item or)
63 W( set of)62 W
8280 39967 MT
(items, and it precedes the function attached locally to the item.)
55 W( In)
386 W( the labeled box, scrolling-input-string)56 W
8280 41163 MT
(and scrolling-labeled-box, it is called after the user has finished editing the text \050i.e., after a carriage)180 W
8280 42359 MT
(return\051. In)
523 W( the)124 W
10 /Courier AF
15403 XM
(:graphics-selection)SH
11 /Times-Roman AF
27202 XM
(gadget, it is called whenever the user selects)
124 W( a new object or)125 W
8280 43555 MT
(deselects the current object.)SH
8280 45853 MT
(In the scrolling)
2 W( menu gadget, there are two selection functions, named)1 W
10 /Courier AF
39480 XM
(:scroll-selection-function)SH
11 /Times-Roman AF
8280 47049 MT
(and)SH
10 /Courier AF
10226 XM
(:menu-selection-function)SH
11 /Times-Roman AF
24984 XM
(which are called independently when)
83 W( the user moves the scroll bar)84 W
8280 48245 MT
(or selects a menu item, respectively.)SH
8280 50543 MT
(The function must)
51 W( take two parameters: the top-level gadget itself and the value of the top-level)50 W
10 /Courier AF
51480 XM
(:value)SH
11 /Times-Roman AF
8280 51739 MT
(slot:)SH
8 /Courier AF
10200 52904 MT
(\050lambda \050gadget-object value\051\051)SH
11 /Times-Roman AF
8280 54325 MT
(In x-buttons, the parameter)91 W
10 /Courier AF
20831 XM
(value)SH
11 /Times-Roman AF
24197 XM
(will be a list of strings.  The scrolling menu sends)
91 W( the menu item \050a)92 W
8280 55521 MT
(Garnet schema\051 on which the user just clicked as its)195 W
10 /Courier AF
33322 XM
(value)SH
11 /Times-Roman AF
(. Other)
665 W( gadgets will have only a)
195 W( single)194 W
8280 56717 MT
(number or string as their)SH
10 /Courier AF
19369 XM
(value)SH
11 /Times-Roman AF
(.)SH
8280 59015 MT
(An example use of)SH
10 /Courier AF
16832 XM
(:selection-function)SH
11 /Times-Roman AF
28507 XM
(is in section 5.2.)SH
12 /Times-Bold AF
8280 62699 MT
(1.4.3. The :items slot)SH
11 /Times-Roman AF
8280 63895 MT
(The button)
38 W( and menu gadgets are built up from items supplied by the designer.  These items are supplied)39 W
8280 65091 MT
(as a list in the)73 W
10 /Courier AF
14970 XM
(:items)SH
11 /Times-Roman AF
18918 XM
(slot of the gadgets.)73 W
/Times-Bold SF
28143 XM
(Note:)SH
/Times-Roman SF
31054 XM
(Do not destructively modify the)72 W
10 /Courier AF
45743 XM
(:items)SH
11 /Times-Roman AF
49690 XM
(list; instead,)72 W
8280 66287 MT
(create a new list using)SH
10 /Courier AF
18329 XM
(list)SH
11 /Times-Roman AF
21004 XM
(or copy the old value with)SH
10 /Courier AF
32796 XM
(copy-list)SH
11 /Times-Roman AF
38471 XM
(and modify the copy.)SH
ES
%%Page: 356 9
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 356)
SH( Gadgets)830 W
42260 XM
(Introduction Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(1.4.3.1. Item functions)SH
11 /Times-Roman AF
6120 9200 MT
(There are several ways to specify items:)SH
/Symbol SF
8089 10778 MT
(\267)SH
/Times-Bold SF
8870 XM
(List of strings)SH
/Times-Roman SF
15623 XM
(- This is the obvious case, such as)SH
10 /Courier AF
30806 XM
('\050"Open" "Close" "Erase"\051)SH
11 /Times-Roman AF
(.)SH
/Symbol SF
8089 12672 MT
(\267)SH
/Times-Bold SF
8870 XM
(List of atoms)250 W
/Times-Roman SF
16005 XM
(- In Garnet, the values of slots are often specified by)
250 W( atoms -- symbols)251 W
8870 13868 MT
(preceded by a colon \050e.g.,)86 W
10 /Courier AF
20904 XM
(:center)SH
11 /Times-Roman AF
(\051. If)
447 W( a formula in)
86 W( the larger interface depends upon the)85 W
10 /Courier AF
8870 15064 MT
(:value)SH
11 /Times-Roman AF
12880 XM
(slot of the button panel, then the)
135 W( designer may wish the items to be actual atoms)136 W
8870 16260 MT
(rather than strings, so that the value is immediately)
69 W( used without being coerced.  Such a list)68 W
8870 17456 MT
(would look like)277 W
10 /Courier AF
16882 XM
('\050:left :center :right\051)277 W
11 /Times-Roman AF
(. The)
829 W( items will appear to the user as)278 W
8870 18652 MT
(capitalized strings without colons.)SH
/Symbol SF
8089 20546 MT
(\267)SH
/Times-Bold SF
8870 XM
(List of objects)29 W
/Times-Roman SF
15830 XM
(- In addition to string labels, the gadgets can have labels that)
29 W( are objects \050like)28 W
8870 21742 MT
(circles and rectangles\051.  Such a list)
42 W( might look like)43 W
10 /Courier AF
31809 XM
(`\050,MY-CIRCLE ,MY-SQUARE ,OBJ3\051)43 W
11 /Times-Roman AF
(.)SH
8870 22938 MT
(Objects, strings, and atoms)
144 W( can be mixed together in any)143 W
10 /Courier AF
35475 XM
(:items)SH
11 /Times-Roman AF
39493 XM
(list. Most)
561 W( of the demo)143 W
8870 24134 MT
(functions for the gadgets use at least one object in the example.)SH
/Symbol SF
8089 26028 MT
(\267)SH
/Times-Bold SF
8870 XM
(List of label/function pairs)148 W
/Times-Roman SF
22176 XM
(- This mode is useful when the)
148 W( designer wishes to execute a)149 W
8870 27224 MT
(specific function upon selection of a button.)
31 W( If)
335 W( the)30 W
10 /Courier AF
31689 XM
(:items)SH
11 /Times-Roman AF
35594 XM
(slot contained the list)30 W
10 /Courier AF
45370 XM
('\050\050"Cut")SH
8870 28420 MT
(My-Cut\051 \050"Paste" My-Paste\051\051)38 W
11 /Times-Roman AF
(, then the function)38 W
10 /Courier AF
33578 XM
(My-Cut)SH
11 /Times-Roman AF
37492 XM
(would be executed when the)39 W
8870 29616 MT
(button labeled "Cut" becomes selected.  The designer must define these functions with two)100 W
8870 30812 MT
(parameters:)SH
8 /Courier AF
10790 31977 MT
(\050lambda \050gadget-object item-string\051\051)SH
11 /Times-Roman AF
8870 33398 MT
(The)SH
/Times-Italic SF
11247 XM
(gadget-object)SH
/Times-Roman SF
17962 XM
(is the top-level gadget \050such as a)392 W
10 /Courier AF
35337 XM
(text-button-panel)SH
11 /Times-Roman AF
(\051 and)
392 W( the)393 W
/Times-Italic SF
8870 34594 MT
(item-string)SH
/Times-Roman SF
13973 XM
(is the string \050or atom\051 of the item that was just selected.)SH
6120 36892 MT
(The item functions are executed along)
46 W( with the selection function whenever the user operates the gadget.)45 W
6120 38088 MT
(These functions are)
218 W( different, however, because the selection function is executed when any item is)219 W
1588 50 47654 38288 UL
6120 39284 MT
(selected, and the item functions are only executed when the item associated with them is selected.)SH
6120 41582 MT
(The gadgets always assume that if an element of the)6 W
10 /Courier AF
29394 XM
(:items)SH
11 /Times-Roman AF
33275 XM
(list is a list, then the first element in)
6 W( the item)5 W
6120 42778 MT
(is a label and the second element is a function.  If you intend)
261 W( to use the)262 W
10 /Courier AF
42025 XM
(:items)SH
11 /Times-Roman AF
46162 XM
(list for storing)262 W
6120 43974 MT
(application-specific data, you)
75 W( should avoid storing data in these reserved positions of the item elements.)74 W
6120 45170 MT
(It is fine to store arbitrary data in the third and subsequent elements of an item list.)SH
6120 47468 MT
(Section 5.3 shows an example implementation of item functions.)SH
12 /Times-Bold AF
6120 50432 MT
(1.4.3.2. Adding and removing items)SH
11 /Times-Roman AF
6120 51628 MT
(There are two ways to add and remove items from a button or menu gadget:  use)246 W
10 /Courier AF
46010 XM
(add-item)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 52824 MT
(remove-item)SH
11 /Times-Roman AF
13034 XM
(to change the)39 W
10 /Courier AF
19290 XM
(:items)SH
11 /Times-Roman AF
23204 XM
(list, or)
39 W( set the)38 W
10 /Courier AF
29560 XM
(:items)SH
11 /Times-Roman AF
33473 XM
(slot by hand using)38 W
10 /Courier AF
41937 XM
(s-value)SH
11 /Times-Roman AF
(. Both)
351 W( ways to)38 W
6120 54020 MT
(change items are shown in the example below.)SH
6120 56318 MT
(The various methods for changing items are)SH
8 /Courier AF
8040 57531 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(gadget item)SH
/Courier SF
18994 XM
([[:where])SH
/Times-Italic SF
23794 XM
(position[locator])SH
/Courier SF
29783 XM
([:key)SH
/Times-Italic SF
32663 XM
(function-name)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 59261 MT
(opal:Remove-Item)SH
/Times-Italic SF
16200 XM
(gadget)SH
/Courier SF
18857 XM
([)SH
/Times-Italic SF
(item)SH
/Courier SF
21194 XM
([:key)SH
/Times-Italic SF
24074 XM
(function-name)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 60991 MT
(opal:Remove-Nth-Item)SH
/Times-Italic SF
18120 XM
(gadget n)280 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 62721 MT
(opal:Change-Item)SH
/Times-Italic SF
16200 XM
(gadget item n)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 65019 MT
(These methods are)
19 W( described in the Aggregadgets manual.)20 W
10 /Courier AF
32504 XM
(Add-item)SH
11 /Times-Roman AF
37599 XM
(will add)20 W
/Times-Italic SF
41489 XM
(item)SH
/Times-Roman SF
43678 XM
(to the)20 W
10 /Courier AF
46468 XM
(:items)SH
11 /Times-Roman AF
50363 XM
(list of)20 W
/Times-Italic SF
6120 66215 MT
(gadget)SH
/Times-Roman SF
(, and will place it in the list according to the)SH
/Times-Italic SF
28728 XM
(position)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
32824 XM
(locator)SH
/Times-Roman SF
(, and)SH
/Times-Italic SF
38415 XM
(key)SH
/Times-Roman SF
40154 XM
(parameters.)SH
6120 68513 MT
(All gadgets that have)
339 W( an)338 W
10 /Courier AF
18718 XM
(:items)SH
11 /Times-Roman AF
22931 XM
(slot support)338 W
10 /Courier AF
29047 XM
(add-item)SH
11 /Times-Roman AF
34460 XM
(and the other methods \050except for the)338 W
10 /Courier AF
6120 69709 MT
(browser-gadget)SH
11 /Times-Roman AF
(, which has other item)
90 W( maintenance functions\051.  The documentation for the)91 W
10 /Courier AF
48720 XM
(menubar)SH
11 /Times-Roman AF
6120 70905 MT
(and)SH
10 /Courier AF
7983 XM
(motif-menu)SH
11 /Times-Roman AF
14258 XM
(describes special features supported by those gadgets.)SH
ES
%%Page: 357 10
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.5)
SH( Constants)
1800 W( with the Gadgets)SH
51386 XM
(Page 357)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(For example, consider adding an item to the X-BUTTONS-OBJ in the)SH
10 /Courier AF
39502 XM
(x-button-panel)SH
11 /Times-Roman AF
48177 XM
(demo.)SH
8 /Times-Italic AF
10200 9168 MT
(; Use opal:add-item in one step)SH
/Courier SF
10200 10033 MT
(\050opal:add-item gg:X-BUTTONS-OBJ "newitem-1"\051)SH
/Times-Italic SF
10200 11763 MT
(; Use s-value \050directly or indirectly\051)SH
/Courier SF
10200 12628 MT
(\050push "newitem-2" \050gv gg:X-BUTTONS-OBJ :items\051\051)SH
11 /Times-Roman AF
8280 14926 MT
(The)SH
10 /Courier AF
10327 XM
(push)SH
11 /Times-Roman AF
13064 XM
(function uses)62 W
10 /Courier AF
19298 XM
(s-value)SH
11 /Times-Roman AF
23835 XM
(indirectly.)SH
10 /Courier AF
29000 XM
(S-value)SH
11 /Times-Roman AF
33537 XM
(may also be used explicitly.  After changing the)62 W
10 /Courier AF
8280 16122 MT
(:items)SH
11 /Times-Roman AF
12230 XM
(list with)75 W
10 /Courier AF
16232 XM
(s-value)SH
11 /Times-Roman AF
(, the components of the gadget \050like the individual)
75 W( buttons in a button panel\051)76 W
8280 17318 MT
(will be adjusted during the next call to)162 W
10 /Courier AF
26746 XM
(opal:update)SH
11 /Times-Roman AF
(. If)
598 W( information about the gadget \050like its new)161 W
8280 18514 MT
(dimensions\051 is required)93 W
/Times-Italic SF
19160 XM
(before)SH
/Times-Roman SF
22338 XM
(the next update, the)
93 W( components can be adjusted manually with a call to)94 W
10 /Courier AF
8280 19710 MT
(opal:notice-items-changed)SH
11 /Times-Roman AF
23765 XM
(with the gadget)
210 W( as a parameter.  See the Aggregadgets Manual for)209 W
8280 20906 MT
(more information about)SH
10 /Courier AF
19003 XM
(opal:notice-items-changed)SH
11 /Times-Roman AF
(.)SH
8280 23204 MT
(Because of internal references to the)184 W
10 /Courier AF
25690 XM
(:items)SH
11 /Times-Roman AF
29749 XM
(slot, destructive modification of the)184 W
10 /Courier AF
46617 XM
(:items)SH
11 /Times-Roman AF
50676 XM
(list is not)184 W
8280 24400 MT
(allowed. If)
365 W( you change the list in the)45 W
10 /Courier AF
25303 XM
(:items)SH
11 /Times-Roman AF
29223 XM
(slot, you)
45 W( should create a new list \050e.g., with)44 W
10 /Courier AF
49019 XM
(list)SH
11 /Times-Roman AF
(\051, or use)44 W
10 /Courier AF
8280 25596 MT
(copy-list)SH
11 /Times-Roman AF
13955 XM
(on the original, and destructively modify the copy.)SH
14 /Times-Bold AF
8280 29414 MT
(1.5. Constants with the Gadgets)SH
11 /Times-Roman AF
8280 30610 MT
(At the top of most)
75 W( gadget definitions, there is a slot called)76 W
10 /Courier AF
34943 XM
(:maybe-constant)SH
11 /Times-Roman AF
44294 XM
(with a list of slots as its)76 W
8280 31806 MT
(value. These)
485 W( are the)
105 W( slots that will be declared constant in an instance of a gadget, if the instance was)104 W
8280 33002 MT
(created with its)29 W
10 /Courier AF
15362 XM
(:constant)SH
11 /Times-Roman AF
21066 XM
(slot set to T. By declaring a slot constant, the user promises)
29 W( that the value of)30 W
8280 34198 MT
(that slot will never change, and all formulas that depend)
196 W( on it can be thrown away and replaced by)195 W
8280 35394 MT
(absolute values.)SH
8280 37692 MT
(Removing formulas that depend on constant slots)
16 W( can free up a large amount of storage space.  Therefore,)17 W
8280 38888 MT
(users who have finished designing part of an interface may want to go)
6 W( back through their gadget instances)5 W
8280 40084 MT
(and delclare constant as many slots as possible.)SH
8280 42382 MT
(In addition to using the special T value in a)24 W
10 /Courier AF
27828 XM
(:constant)SH
11 /Times-Roman AF
33527 XM
(list, you can selectively declare slots constant)
24 W( by)25 W
8280 43578 MT
(listing them)
15 W( explicitly \050e.g.,)14 W
10 /Courier AF
20774 XM
(\050:constant '\050:left :top\051\051)14 W
11 /Times-Roman AF
(\051. You)
303 W( can also use the)14 W
10 /Courier AF
46468 XM
(:except)SH
11 /Times-Roman AF
50957 XM
(keyword,)SH
8280 44774 MT
(as in the following schema:)SH
8 /Courier AF
10200 45939 MT
(\050create-instance NIL gg:motif-radio-button-panel)SH
11640 46804 MT
(\050:constant '\050T :except :active-p\051\051)SH
11640 47669 MT
(\050:left 10\051\050:top 30\051)SH
11640 48534 MT
(\050:items '\050"Start" "Pause" "Quit"\051\051\051)SH
11 /Times-Roman AF
8280 49955 MT
(In this example,)
246 W( the user declares constant all of the slots in the)247 W
10 /Courier AF
39593 XM
(:maybe-constant)SH
11 /Times-Roman AF
49115 XM
(list, with the)247 W
8280 51151 MT
(exception of)133 W
10 /Courier AF
14287 XM
(:active-p)SH
11 /Times-Roman AF
(. This)
539 W( allows the value of the)132 W
10 /Courier AF
34032 XM
(:active-p)SH
11 /Times-Roman AF
39839 XM
(slot to change, and retains all the)132 W
8280 52347 MT
(formulas that depend on it \050so that the gadget will update its appearance correctly when)
178 W( the value is)179 W
8280 53543 MT
(toggled\051.)SH
8280 55841 MT
(Constants are discussed in detail in the KR manual.)SH
ES
%%Page: 358 11
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 358)
SH( Gadgets)830 W
38095 XM
(Accessing the Gadgets)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(2. Accessing the Gadgets)SH
14 SS 
6120 13146 MT
(2.1. Gadgets Modules)SH
11 /Times-Roman AF
6120 14342 MT
(The schemata definitions in the gadgets package are modularized)
146 W( so that one schema may be used by)145 W
6120 15538 MT
(several objects.  For example,)
230 W( trill boxes with arrows pointing to the left and right are used in the)231 W
6120 16734 MT
(horizontal scroll bar, the horizontal)
56 W( slider, and the trill device.  As a result, all of the code for the gadget)55 W
6120 17930 MT
(objects has a consistent style, and the gadgets themselves have a uniform look and feel.)SH
14 /Times-Bold AF
6120 21748 MT
(2.2. Loading the Gadgets)SH
11 /Times-Roman AF
6120 22944 MT
(Since much of the gadget code is shared by the top-level objects, a set of "parts" modules must be loaded)30 W
6120 24140 MT
(before some of the top-level gadgets.  The required modules are loaded in)
159 W( the proper order when the)158 W
6120 25336 MT
(loader files corresponding to the desired gadgets are used.)
163 W( The)
603 W( standard gadgets and their associated)164 W
6120 26532 MT
(loader files are listed in figure 2-1.  The motif gadgets and loader files appear)
59 W( in figure 2-2.  It is safe to)58 W
6120 27728 MT
(load the "xxx-loader" files multiple times\320they will not re-load the objects the second time.)SH
6120 30026 MT
(To load the entire Gadget Set, execute)513 W
10 /Courier AF
26815 XM
(\050load Garnet-Gadgets-Loader)514 W
11 /Times-Roman AF
(\051 after loading the)514 W
10 /Courier AF
6120 31222 MT
(Garnet-Loader)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
14558 XM
(This is not recommended, since there are so many gadgets, and you will only need a)87 W
6120 32418 MT
(few of them!)7 W
/Times-Roman SF
12136 XM
(To load particular objects, such)
7 W( as the)8 W
10 /Courier AF
29110 XM
(v-slider)SH
11 /Times-Roman AF
34193 XM
(and)SH
10 /Courier AF
36064 XM
(menu)SH
11 /Times-Roman AF
38747 XM
(gadgets, load the specific loader)8 W
6120 33614 MT
(files:)SH
8 /Courier AF
8040 34779 MT
(\050garnet-load "gadgets:v-slider-loader"\051)SH
8040 35644 MT
(\050garnet-load "gadgets:menu-loader"\051)SH
11 /Times-Roman AF
6120 37065 MT
(For a discussion of the)204 W
10 /Courier AF
17375 XM
(garnet-load)SH
11 /Times-Roman AF
24454 XM
(function, see the Overview at the beginning of)
204 W( this reference)203 W
6120 38261 MT
(manual.)SH
14 /Times-Bold AF
6120 42079 MT
(2.3. Gadget Files)SH
11 /Times-Roman AF
6120 43275 MT
(There are several gadgets files that normally have names that are longer than)
119 W( 31 characters.  Since the)120 W
6120 44471 MT
(Mac restricts the length of filenames to 31 characters, some gadget files)
8 W( have their names truncated on the)7 W
6120 45667 MT
(Mac. Mac)
1497 W( users may continue to specify the full-length names of these files by)
611 W( using)612 W
10 /Courier AF
6120 46863 MT
(user::garnet-load)SH
11 /Times-Roman AF
(, described in the Overview)
154 W( section of this manual, which translates the regular)153 W
6120 48059 MT
(names of the gadgets into their truncated 31-character names so they can be loaded.  It is recommended)76 W
6120 49255 MT
(that)SH
10 /Courier AF
8143 XM
(garnet-load)SH
11 /Times-Roman AF
15116 XM
(be used whenever any Garnet file is loaded, so that typically long)
98 W( and cumbersome)97 W
6120 50451 MT
(pathnames can be abbreviated by a short prefix.)SH
14 /Times-Bold AF
6120 54269 MT
(2.4. Gadget Demos)SH
9 /Times-Roman AF
49932 55180 MT
(2)SH
11 SS 
6120 55543 MT
(Most gadgets have small demo functions that are loaded)
231 W( along with their schema definitions.)230 W
51392 XM
(For)SH
6120 56739 MT
(example, after loading the)120 W
10 /Courier AF
18359 XM
("v-slider-loader")SH
11 /Times-Roman AF
(, you can)
120 W( do)121 W
10 /Courier AF
34692 XM
(gg:v-slider-go)SH
11 /Times-Roman AF
43488 XM
(to see a demo of the)121 W
6120 57935 MT
(vertical slider.)SH
6120 60233 MT
(A complete list of all gadget demos)
77 W( is included in the Demonstration Programs section of this reference)76 W
6120 61429 MT
(manual. The)
563 W( names)
144 W( of all gadget demos are also mentioned at the top of each section in this Gadget)145 W
6120 62625 MT
(manual.)SH
10800 50 6120 69158 UL
7 SS 
7020 70659 MT
(2)SH
9 SS 
7370 70986 MT
(Unless the)218 W
10 /Courier AF
11806 XM
(:garnet-debug)SH
9 /Times-Roman AF
20049 XM
(key was removed from from the)218 W
10 /Courier AF
33157 XM
(*features*)SH
9 /Times-Roman AF
39600 XM
(list when the Garnet software was)219 W
6120 72000 MT
(compiled or loaded \050see the Hints manual\051.)SH
ES
%%Page: 359 12
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.4)
SH( Gadget)
1800 W( Demos)SH
51386 XM
(Page 359)SH
46800 50 8280 4486 UL
46800 50 8280 8155 UL
/Courier SF
8280 9906 MT
(arrow-line)SH
11 /Times-Roman AF
14555 XM
(- "arrow-line-loader")SH
10 /Courier AF
8280 11102 MT
(browser-gadget)SH
11 /Times-Roman AF
16955 XM
(- "browser-gadget-loader")SH
10 /Courier AF
8280 12298 MT
(double-arrow-line)SH
11 /Times-Roman AF
18755 XM
(- "arrow-line-loader")SH
10 /Courier AF
8280 13494 MT
(error-gadget)SH
11 /Times-Roman AF
15755 XM
(- "error-gadget-loader")SH
10 /Courier AF
8280 14690 MT
(gauge)SH
11 /Times-Roman AF
11555 XM
(- "gauge-loader")SH
10 /Courier AF
8280 15886 MT
(graphics-selection)SH
11 /Times-Roman AF
19355 XM
(- "graphics-loader")SH
10 /Courier AF
8280 17082 MT
(h-scroll-bar)SH
11 /Times-Roman AF
15755 XM
(- "h-scroll-loader")SH
10 /Courier AF
8280 18278 MT
(h-slider)SH
11 /Times-Roman AF
13355 XM
(- "h-slider-loader")SH
10 /Courier AF
8280 19474 MT
(labeled-box)SH
11 /Times-Roman AF
15155 XM
(- "labeled-box-loader")SH
10 /Courier AF
8280 20670 MT
(load-gadget)SH
11 /Times-Roman AF
15155 XM
(- "save-gadget-loader")SH
10 /Courier AF
8280 21866 MT
(menu)SH
11 /Times-Roman AF
10955 XM
(- "menu-loader")SH
10 /Courier AF
8280 23062 MT
(menubar)SH
11 /Times-Roman AF
12755 XM
(- "menubar-loader")SH
10 /Courier AF
8280 24258 MT
(MouseLine)SH
11 /Times-Roman AF
13955 XM
(and)SH
10 /Courier AF
15818 XM
(MouseLinePopup)SH
11 /Times-Roman AF
24493 XM
(- "mouseline-loader")SH
10 /Courier AF
8280 25454 MT
(multifont-gadget)SH
11 /Times-Roman AF
18155 XM
(- "multifont-loader")SH
10 /Courier AF
8280 26650 MT
(multi-graphics-selection)SH
11 /Times-Roman AF
22955 XM
(- "multi-selection-loader")SH
10 /Courier AF
8280 27846 MT
(option-button)SH
11 /Times-Roman AF
16355 XM
(- "option-button-loader")SH
10 /Courier AF
8280 29042 MT
(popup-menu-button)SH
11 /Times-Roman AF
18755 XM
(- "popup-menu-button-loader")SH
10 /Courier AF
8280 30238 MT
(prop-sheet)SH
11 /Times-Roman AF
14555 XM
(- "prop-sheet-loader")SH
10 /Courier AF
8280 31434 MT
(prop-sheet-for-obj)SH
11 /Times-Roman AF
19355 XM
(- "prop-sheet-loader")SH
10 /Courier AF
8280 32630 MT
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
24155 XM
(- "prop-sheet-win-loader")SH
10 /Courier AF
8280 33826 MT
(prop-sheet-with-OK)SH
11 /Times-Roman AF
19355 XM
(- "prop-sheet-win-loader")SH
10 /Courier AF
8280 35022 MT
(query-gadget)SH
11 /Times-Roman AF
15755 XM
(- "error-gadget-loader")SH
10 /Courier AF
8280 36218 MT
(radio-button)SH
11 /Times-Roman AF
15755 XM
(- "radio-buttons-loader")SH
10 /Courier AF
8280 37414 MT
(radio-button-panel)SH
11 /Times-Roman AF
19355 XM
(- "radio-buttons-loader")SH
10 /Courier AF
8280 38610 MT
(save-gadget)SH
11 /Times-Roman AF
15155 XM
(- "save-gadget-loader")SH
10 /Courier AF
8280 39806 MT
(scrolling-input-string)SH
11 /Times-Roman AF
21755 XM
(- "scrolling-input-string-loader")SH
10 /Courier AF
8280 41002 MT
(scrolling-labeled-box)SH
11 /Times-Roman AF
21155 XM
(- "scrolling-labeled-box-loader".)SH
10 /Courier AF
8280 42198 MT
(scrolling-menu)SH
11 /Times-Roman AF
16955 XM
(- "scrolling-menu-loader")SH
10 /Courier AF
8280 43394 MT
(scrolling-window)SH
11 /Times-Roman AF
18155 XM
(- "scrolling-window-loader")SH
10 /Courier AF
8280 44590 MT
(scrolling-window-with-bars)SH
11 /Times-Roman AF
24155 XM
(- "scrolling-window-loader")SH
10 /Courier AF
8280 45786 MT
(standard-edit)SH
11 /Times-Roman AF
16355 XM
(- "standard-edit-loader")SH
10 /Courier AF
8280 46982 MT
(text-button)SH
11 /Times-Roman AF
15155 XM
(- "text-buttons-loader")SH
10 /Courier AF
8280 48178 MT
(text-button-panel)SH
11 /Times-Roman AF
18755 XM
(- "text-buttons-loader")SH
10 /Courier AF
8280 49374 MT
(trill-device)SH
11 /Times-Roman AF
15755 XM
(- "trill-device-loader")SH
10 /Courier AF
8280 50570 MT
(v-scroll-bar)SH
11 /Times-Roman AF
15755 XM
(- "v-scroll-loader")SH
10 /Courier AF
8280 51766 MT
(v-slider)SH
11 /Times-Roman AF
13355 XM
(- "v-slider-loader")SH
10 /Courier AF
8280 52962 MT
(x-button)SH
11 /Times-Roman AF
13355 XM
(- "x-buttons-loader")SH
10 /Courier AF
8280 54158 MT
(x-button-panel)SH
11 /Times-Roman AF
16955 XM
(- "x-buttons-loader")SH
/Times-Bold SF
8280 56109 MT
(Figure 2-1:)SH
/Times-Roman SF
14053 XM
(Loader files for Garnet Gadgets)SH
46800 50 8280 58061 UL
ES
%%Page: 360 13
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 360)
SH( Gadgets)830 W
38095 XM
(Accessing the Gadgets)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
/Courier SF
6120 9906 MT
(motif-check-button)SH
11 /Times-Roman AF
17195 XM
(- "motif-check-buttons-loader")SH
10 /Courier AF
6120 11102 MT
(motif-check-button-panel)SH
11 /Times-Roman AF
20795 XM
(- "motif-check-buttons-loader")SH
10 /Courier AF
6120 12298 MT
(motif-error-gadget)SH
11 /Times-Roman AF
17195 XM
(- "motif-error-gadget-loader")SH
10 /Courier AF
6120 13494 MT
(motif-gauge)SH
11 /Times-Roman AF
12995 XM
(- "motif-gauge-loader")SH
10 /Courier AF
6120 14690 MT
(motif-h-scroll-bar)SH
11 /Times-Roman AF
17195 XM
(- "motif-h-scroll-loader")SH
10 /Courier AF
6120 15886 MT
(motif-load-gadget)SH
11 /Times-Roman AF
16595 XM
(- "motif-save-gadget-loader"\051)SH
10 /Courier AF
6120 17082 MT
(motif-menu)SH
11 /Times-Roman AF
12395 XM
(- "motif-menu-loader")SH
10 /Courier AF
6120 18278 MT
(motif-menubar)SH
11 /Times-Roman AF
14195 XM
(- "motif-menubar-loader")SH
10 /Courier AF
6120 19474 MT
(motif-option-button)SH
11 /Times-Roman AF
17795 XM
(- "motif-option-button-loader")SH
10 /Courier AF
6120 20670 MT
(motif-prop-sheet-...)SH
11 /Times-Roman AF
18395 XM
(- "motif-prop-sheet-win-loader")SH
10 /Courier AF
6120 21866 MT
(motif-query-gadget)SH
11 /Times-Roman AF
17195 XM
(- "motif-error-gadget-loader")SH
10 /Courier AF
6120 23062 MT
(motif-radio-button)SH
11 /Times-Roman AF
17195 XM
(- "motif-radio-buttons-loader")SH
10 /Courier AF
6120 24258 MT
(motif-radio-button-panel)SH
11 /Times-Roman AF
20795 XM
(- "motif-radio-buttons-loader")SH
10 /Courier AF
6120 25454 MT
(motif-save-gadget)SH
11 /Times-Roman AF
16595 XM
(- "motif-save-gadget-loader")SH
10 /Courier AF
6120 26650 MT
(motif-scrolling-labeled-box)SH
11 /Times-Roman AF
22595 XM
(- "motif-scrolling-labeled-box-loader")SH
10 /Courier AF
6120 27846 MT
(motif-scrolling-menu)SH
11 /Times-Roman AF
18395 XM
(- "motif-scrolling-menu-loader")SH
10 /Courier AF
6120 29042 MT
(motif-scrolling-window-with-bars)SH
11 /Times-Roman AF
25595 XM
(- "motif-scrolling-window-loader")SH
10 /Courier AF
6120 30238 MT
(motif-slider)SH
11 /Times-Roman AF
13595 XM
(- "motif-slider")SH
10 /Courier AF
6120 31434 MT
(motif-text-button)SH
11 /Times-Roman AF
16595 XM
(- "motif-text-buttons-loader")SH
10 /Courier AF
6120 32630 MT
(motif-text-button-panel)SH
11 /Times-Roman AF
20195 XM
(- "motif-text-buttons-loader")SH
10 /Courier AF
6120 33826 MT
(motif-trill-device)SH
11 /Times-Roman AF
17195 XM
(- "motif-trill-device-loader")SH
10 /Courier AF
6120 35022 MT
(motif-v-scroll-bar)SH
11 /Times-Roman AF
17195 XM
(- "motif-v-scroll-loader")SH
/Times-Bold SF
6120 36973 MT
(Figure 2-2:)SH
/Times-Roman SF
11893 XM
(Loader files for Motif Gadgets)SH
46800 50 6120 38925 UL
ES
%%Page: 361 14
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.1)
SH( Scroll)
1800 W( Bars)SH
51386 XM
(Page 361)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(3. The Standard Gadget Objects)SH
11 /Times-Roman AF
8280 10524 MT
(Each of the)
192 W( objects in the Gadget Set is an interface mechanism through which the designer obtains)191 W
8280 11720 MT
(chosen values from the user.  The scroll bars, sliders, gauge, and trill device all have a)
172 W( "continuous")173 W
8280 12916 MT
(flavor, and are used to obtain values between maximum and minimum allowed values.  The)
65 W( buttons and)64 W
8280 14112 MT
(menus are more "discrete", and allow the selection of a single choice from several alternatives.)SH
8280 16410 MT
(The sections of this chapter describe the gadgets in detail.  Each object contains many customizable slots,)23 W
8280 17606 MT
(but the designer may choose to ignore most of them in any)
174 W( given application.  If slot values are not)173 W
8280 18802 MT
(specified when instances are created, then the default values will be used.)SH
8280 21100 MT
(Each description begins with a list of the customizable slots and default values for the gadget object.)SH
14 /Times-Bold AF
8280 24918 MT
(3.1. Scroll Bars)SH
8 /Courier AF
10200 26083 MT
(\050create-instance 'gg:V-Scroll-Bar opal:aggregadget)SH
11640 26948 MT
(\050:maybe-constant '\050:left :top :height :min-width :val-1 :val-2 :scr-trill-p)SH
20760 27813 MT
(:page-trill-p :indicator-text-p :page-incr :scr-incr)SH
20760 28678 MT
(:int-feedback-p :scroll-p :format-string :indicator-font)SH
20760 29543 MT
(:visible\051\051)SH
11640 30408 MT
(\050:left 0\051)SH
11640 31273 MT
(\050:top 0\051)SH
11640 32138 MT
(\050:height 250\051)SH
11640 33003 MT
(\050:min-width 20\051)SH
11640 33868 MT
(\050:val-1 0\051)SH
11640 34733 MT
(\050:val-2 100\051)SH
11640 35598 MT
(\050:scr-incr 1\051)SH
11640 36463 MT
(\050:page-incr 5\051)SH
11640 37328 MT
(\050:scr-trill-p T\051)SH
11640 38193 MT
(\050:page-trill-p T\051)SH
11640 39058 MT
(\050:indicator-text-p T\051)SH
11640 39923 MT
(\050:int-feedback-p T\051)SH
11640 40788 MT
(\050:scroll-p T\051)SH
11640 41653 MT
(\050:indicator-font \050opal:get-standard-font :fixed :roman :small\051\051)SH
11640 42518 MT
(\050:value \050o-formula ...\051\051)SH
11640 43383 MT
(\050:format-string "~a"\051)SH
11640 44248 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 45113 MT
(\051)SH
10200 48140 MT
(\050create-instance 'gg:H-Scroll-Bar opal:aggregadget)SH
11640 49005 MT
(\050:maybe-constant '\050:left :top :width :min-height :val-1 :val-2 :scr-trill-p)SH
20760 49870 MT
(:page-trill-p :indicator-text-p :page-incr :scr-incr)SH
20760 50735 MT
(:int-feedback-p :scroll-p :format-string :indicator-font :visible\051\051)SH
11640 51600 MT
(\050:left 0\051)SH
11640 52465 MT
(\050:top 0\051)SH
11640 53330 MT
(\050:width 250\051)SH
11640 54195 MT
(\050:min-height 20\051)SH
11640 55060 MT
(\050:val-1 0\051)SH
11640 55925 MT
(\050:val-2 100\051)SH
11640 56790 MT
(\050:scr-incr 1\051)SH
11640 57655 MT
(\050:page-incr 5\051)SH
11640 58520 MT
(\050:scr-trill-p T\051)SH
11640 59385 MT
(\050:page-trill-p T\051)SH
11640 60250 MT
(\050:indicator-text-p T\051)SH
11640 61115 MT
(\050:int-feedback-p T\051)SH
11640 61980 MT
(\050:scroll-p T\051)SH
11640 62845 MT
(\050:indicator-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
11640 63710 MT
(\050:value \050o-formula ...\051\051)SH
11640 64575 MT
(\050:format-string "~a"\051)SH
11640 65440 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 66305 MT
(\051)SH
11 /Times-Roman AF
8280 68603 MT
(The loader file for the)137 W
10 /Courier AF
18890 XM
(v-scroll-bar)SH
11 /Times-Roman AF
26502 XM
(is "v-scroll-loader".  The loader)
137 W( file for the)138 W
10 /Courier AF
46733 XM
(h-scroll-bar)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 69799 MT
("h-scroll-loader".)SH
ES
%%Page: 362 15
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 362)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6607 47250 GB 
%%BeginDocument: gadgets/scroll-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 2
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 9:42 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 128 257 483 534
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
56 -186 translate
gsave
0 648 355 277 ClipToRectangle
0 0 translate
gsave
40 608 20 210 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
40 628 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
50 625 43 618 47 618 47 611 53 611 53 618 57 618 50 625 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
40 398 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
50 381 43 388 47 388 47 395 53 395 53 388 57 388 50 381 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
41 525 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
120 568 170 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
80 568 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
83 558 90 551 90 555 97 555 97 561 90 561 90 565 83 558 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
310 568 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
327 558 320 551 320 555 313 555 313 561 320 561 320 565 327 558 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
100 568 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
104 558 111 565 111 551 104 558 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
108 558 115 565 115 551 108 558 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
290 568 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
306 558 299 565 299 551 306 558 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
302 558 295 565 295 551 302 558 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
184 567 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
188 563 554 11 11 0 false 0 0 0 false 0 0 0 false (42) 10 /Courier DrawText
80 488 250 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
136 487 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
140 483 474 10 11 0 false 0 0 0 false 0 0 0 false (24) 10 /Courier DrawText
grestore

grestore

0 648 355 277 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 128 257 483 534

%%EndDocument
 GE /Times-Bold SF
6120 29727 MT
(Figure 3-1:)SH
/Times-Roman SF
11893 XM
(Vertical and horizontal scroll bars)SH
6120 32025 MT
(The scroll bar is a common interface object used)
96 W( to specify a desired position somewhere in a range of)95 W
6120 33221 MT
(possible values.  The distance of the indicator from the top and)
38 W( bottom of its bounding box is a graphical)39 W
6120 34417 MT
(representation of the currently chosen value, relative to the minimum and maximum allowed values.)SH
6120 36715 MT
(The scroll bars in the Gadget Set,)102 W
10 /Courier AF
21802 XM
(v-scroll-bar)SH
11 /Times-Roman AF
29379 XM
(and)SH
10 /Courier AF
31344 XM
(h-scroll-bar)SH
11 /Times-Roman AF
(, allow the interface designer to)102 W
6120 37911 MT
(specify the minimum and maximum values of a range, while the)56 W
10 /Courier AF
35330 XM
(:value)SH
11 /Times-Roman AF
39261 XM
(slot is)
56 W( a report of the currently)57 W
6120 39107 MT
(chosen value in the range.)
83 W( The)
439 W( interval is determined by the values in)82 W
10 /Courier AF
38337 XM
(:val-1)SH
11 /Times-Roman AF
42294 XM
(and)SH
10 /Courier AF
44239 XM
(:val-2)SH
11 /Times-Roman AF
(, and either)82 W
6120 40303 MT
(slot may be the minimum or maximum of the range.)
56 W( The)
389 W( value in)57 W
10 /Courier AF
36208 XM
(:val-1)SH
11 /Times-Roman AF
40140 XM
(will correspond to the top of)57 W
6120 41499 MT
(the vertical scroll bar and the left of the)
43 W( horizontal scroll bar.  The)42 W
10 /Courier AF
36007 XM
(:value)SH
11 /Times-Roman AF
39924 XM
(slot may be accessed directly)42 W
6120 42695 MT
(by some function in the larger interface, and other formulas in the interface may depend)
140 W( on it.  If the)141 W
10 /Courier AF
6120 43891 MT
(:value)SH
11 /Times-Roman AF
9995 XM
(slot is set directly, then the appearance of the scroll bar will be updated accordingly.)SH
6120 46189 MT
(The trill boxes at each end of the)
19 W( scroll bar allow the user to increment and decrement)18 W
10 /Courier AF
44520 XM
(:value)SH
11 /Times-Roman AF
48413 XM
(by precise)18 W
6120 47385 MT
(amounts. The)
515 W( intent)
120 W( of the two sets of boxes is to give the user a choice between increment values --)121 W
6120 48581 MT
(either a conventional)
79 W( scroll of)78 W
10 /Courier AF
19921 XM
(:scr-incr)SH
11 /Times-Roman AF
25674 XM
(in the single arrow box or)78 W
10 /Courier AF
37750 XM
(:page-incr)SH
11 /Times-Roman AF
44103 XM
(in the double arrow)78 W
6120 49777 MT
(box. There)
275 W( is no restriction on whether one value must be larger or smaller than the other.)SH
6120 52075 MT
(In fact, the designer may choose to)
88 W( leave the trill boxes out completely.  The slots)89 W
10 /Courier AF
43768 XM
(:scr-trill-p)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 53271 MT
(:page-trill-p)SH
11 /Times-Roman AF
14223 XM
(may be set to NIL in order to prevent the appearance of the scroll boxes or page boxes,)27 W
6120 54467 MT
(respectively.)SH
6120 56765 MT
(The indicator may also)
108 W( be moved directly by mouse movements.  Dragging the indicator while the left)109 W
6120 57961 MT
(mouse button is pressed will cause a thick)
5 W( lined box to follow the mouse.  The indicator then moves to the)4 W
6120 59157 MT
(position of this feedback box when the mouse button is released.  If)9 W
10 /Courier AF
36235 XM
(:int-feedback-p)SH
11 /Times-Roman AF
45519 XM
(is set to)
9 W( NIL, the)10 W
6120 60353 MT
(thick lined box will not appear, and the indicator itself will follow the mouse.  A click of the left mouse)64 W
6120 61549 MT
(button in the background of the scroll bar will cause the indicator to jump to the position of the mouse.)SH
6120 63847 MT
(With each)
93 W( change of the indicator position, the)94 W
10 /Courier AF
27734 XM
(:value)SH
11 /Times-Roman AF
31703 XM
(slot is updated automatically to reflect the new)94 W
6120 65043 MT
(position. The)
1257 W( current value is reported as a text)
491 W( string inside the indicator unless the slot)490 W
10 /Courier AF
6120 66239 MT
(:indicator-text-p)SH
11 /Times-Roman AF
16595 XM
(is set to NIL.)SH
6120 68537 MT
(Since the scroll bar must be wide enough to accommodate the widest text string in)
19 W( its range of values, the)20 W
6120 69733 MT
(width of the vertical scroll)
89 W( bar \050and similarly the height of the horizontal scroll bar\051 is the maximum of)88 W
6120 70929 MT
(the width of the widest value)
227 W( and the)228 W
10 /Courier AF
24435 XM
(:min-width)SH
11 /Times-Roman AF
(. The)731 W
10 /Courier AF
33929 XM
(:min-width)SH
11 /Times-Roman AF
40432 XM
(will be used if there is no)228 W
ES
%%Page: 363 16
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.2)
SH( Sliders)1800 W
51386 XM
(Page 363)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(indicator text \050i.e.,)46 W
10 /Courier AF
16788 XM
(:indicator-text-p)SH
11 /Times-Roman AF
27309 XM
(is NIL\051, or)
46 W( if the)45 W
10 /Courier AF
35050 XM
(:min-width)SH
11 /Times-Roman AF
41370 XM
(is greater than the width of the)45 W
8280 9151 MT
(widest value.)SH
8280 11449 MT
(The slot)293 W
10 /Courier AF
12716 XM
(:scroll-p)SH
11 /Times-Roman AF
18684 XM
(is used to enable and disable)
293 W( the scrolling feature of the scroll bar.  When)294 W
10 /Courier AF
8280 12645 MT
(:scroll-p)SH
11 /Times-Roman AF
14130 XM
(is set to NIL, the trill boxes of the scroll bar become inactive and)
175 W( the background turns)174 W
8280 13841 MT
(white. This)
479 W( ability to disable)
102 W( scrolling is useful in applications where the range of the scroll bar is not)103 W
8280 15037 MT
(fixed. For)
287 W( example, in the)6 W
10 /Courier AF
20230 XM
(scrolling-menu)SH
11 /Times-Roman AF
28911 XM
(gadget, the scroll)
6 W( bar is disabled there are not enough items)5 W
8280 16233 MT
(to fill the entire menu.)SH
8280 18531 MT
(The font in which)SH
10 /Courier AF
16406 XM
(:value)SH
11 /Times-Roman AF
20281 XM
(is reported in the indicator may be set in the slot)SH
10 /Courier AF
41758 XM
(:indicator-font)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 22349 MT
(3.2. Sliders)SH
8 /Courier AF
10200 23514 MT
(\050create-instance 'gg:V-Slider opal:aggregadget)SH
11640 24379 MT
(\050:maybe-constant '\050:left :top :height :shaft-width :scr-incr :page-incr :val-1 :val-2)SH
20760 25244 MT
(:num-marks :scr-trill-p :page-trill-p :tic-marks-p :enumerate-p)SH
20760 26109 MT
(:value-feedback-p :scroll-p :value-feedback-font :enum-font)SH
20760 26974 MT
(:format-string :enum-format-string :visible\051\051)SH
11640 27839 MT
(\050:left 0\051)SH
11640 28704 MT
(\050:top 0\051)SH
11640 29569 MT
(\050:height 250\051)SH
11640 30434 MT
(\050:shaft-width 20\051)SH
11640 31299 MT
(\050:scr-incr 1\051)SH
11640 32164 MT
(\050:page-incr 5\051)SH
11640 33029 MT
(\050:val-1 0\051)SH
11640 33894 MT
(\050:val-2 100\051)SH
11640 34759 MT
(\050:num-marks 11\051)SH
11640 35624 MT
(\050:scr-trill-p T\051)SH
11640 36489 MT
(\050:page-trill-p T\051)SH
11640 37354 MT
(\050:tic-marks-p T\051)SH
11640 38219 MT
(\050:enumerate-p T\051)SH
11640 39084 MT
(\050:value-feedback-p T\051)SH
11640 39949 MT
(\050:scroll-p T\051)SH
11640 40814 MT
(\050:value-feedback-font opal:default-font\051)SH
11640 41679 MT
(\050:enum-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
11640 42544 MT
(\050:format-string "~a"\051)SH
11640 43409 MT
(\050:enum-format-string "~a"\051)SH
11640 44274 MT
(\050:value \050o-formula ...\051\051)SH
11640 45139 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 46004 MT
(\051)SH
10200 49031 MT
(\050create-instance 'gg:H-Slider opal:aggregadget)SH
11640 49896 MT
(\050:maybe-constant '\050:left :top :width :shaft-height :scr-incr :page-incr :val-1 :val-2)SH
20760 50761 MT
(:num-marks :tic-marks-p :enumerate-p :scr-trill-p :page-trill-p)SH
20760 51626 MT
(:scroll-p :value-feedback-p :value-feedback-font :enum-font)SH
20760 52491 MT
(:format-string :enum-format-string :visible\051\051)SH
11640 53356 MT
(\050:left 0\051)SH
11640 54221 MT
(\050:top 0\051)SH
11640 55086 MT
(\050:width 300\051)SH
11640 55951 MT
(\050:shaft-height 20\051)SH
11640 56816 MT
(\050:scr-incr 1\051)SH
11640 57681 MT
(\050:page-incr 5\051)SH
11640 58546 MT
(\050:val-1 0\051)SH
11640 59411 MT
(\050:val-2 100\051)SH
11640 60276 MT
(\050:num-marks 11\051)SH
11640 61141 MT
(\050:tic-marks-p T\051)SH
11640 62006 MT
(\050:enumerate-p T\051)SH
11640 62871 MT
(\050:scr-trill-p T\051)SH
11640 63736 MT
(\050:page-trill-p T\051)SH
11640 64601 MT
(\050:value-feedback-p T\051)SH
11640 65466 MT
(\050:scroll-p T\051)SH
11640 66331 MT
(\050:value-feedback-font opal:default-font\051)SH
11640 67196 MT
(\050:enum-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
11640 68061 MT
(\050:format-string "~a"\051)SH
11640 68926 MT
(\050:enum-format-string "~a"\051)SH
11640 69791 MT
(\050:value \050o-formula ...\051\051)SH
11640 70656 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 71521 MT
(\051)SH
ES
%%Page: 364 17
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 364)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6607 47250 GB 
%%BeginDocument: gadgets/slider-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 8
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 10:24 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 128 257 483 534
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
56 -186 translate
gsave
0 648 355 277 ClipToRectangle
0 0 translate
gsave
0 0 0 0 false 0 0 [] 1 73 423 73 562 DrawLine
60 628 27 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
67 627 616 12 14 0 false 0 0 0 false 0 0 0 false (15) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 562 68 562 DrawLine
54 567 558 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 548 68 548 DrawLine
48 553 544 10 11 0 false 0 0 0 false 0 0 0 false (10) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 534 68 534 DrawLine
48 539 530 10 11 0 false 0 0 0 false 0 0 0 false (20) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 520 68 520 DrawLine
48 525 516 10 11 0 false 0 0 0 false 0 0 0 false (30) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 506 68 506 DrawLine
47 511 502 11 11 0 false 0 0 0 false 0 0 0 false (40) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 492 68 492 DrawLine
48 497 488 10 11 0 false 0 0 0 false 0 0 0 false (50) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 479 68 479 DrawLine
48 484 475 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 465 68 465 DrawLine
48 470 461 10 11 0 false 0 0 0 false 0 0 0 false (70) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 451 68 451 DrawLine
48 456 447 10 11 0 false 0 0 0 false 0 0 0 false (80) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 437 68 437 DrawLine
48 442 433 10 11 0 false 0 0 0 false 0 0 0 false (90) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 78 423 68 423 DrawLine
42 428 419 16 11 0 false 0 0 0 false 0 0 0 false (100) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 2 83 562 63 562 DrawLine
0 0 0 0 false 0 0 [] 2 83 423 63 423 DrawLine
85 534 75 541 85 548 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
63 607 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
73 604 66 597 70 597 70 590 76 590 76 597 80 597 73 604 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
63 398 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
73 381 66 388 70 388 70 395 76 395 76 388 80 388 73 381 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
63 587 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
73 583 66 576 80 576 73 583 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
73 579 66 572 80 572 73 579 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
63 418 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
73 402 66 409 80 409 73 402 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
73 406 66 413 80 413 73 406 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 315 556 150 556 DrawLine
120 564 20 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
124 563 552 12 14 0 false 0 0 0 false 0 0 0 false (15) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 150 551 150 561 DrawLine
148 545 536 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 183 551 183 561 DrawLine
178 545 536 10 11 0 false 0 0 0 false 0 0 0 false (10) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 216 551 216 561 DrawLine
211 545 536 10 11 0 false 0 0 0 false 0 0 0 false (20) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 249 551 249 561 DrawLine
244 545 536 10 11 0 false 0 0 0 false 0 0 0 false (30) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 282 551 282 561 DrawLine
276 545 536 11 11 0 false 0 0 0 false 0 0 0 false (40) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 315 551 315 561 DrawLine
310 545 536 10 11 0 false 0 0 0 false 0 0 0 false (50) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 2 150 546 150 566 DrawLine
0 0 0 0 false 0 0 [] 2 315 546 315 566 DrawLine
208 568 200 558 192 568 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 275 476 165 476 DrawLine
0 0 0 0 false 0 0 [] 2 165 466 165 486 DrawLine
0 0 0 0 false 0 0 [] 2 275 466 275 486 DrawLine
228 488 221 478 214 488 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
120 486 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
123 476 130 469 130 473 137 473 137 479 130 479 130 483 123 476 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
300 486 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
317 476 310 469 310 473 303 473 303 479 310 479 310 483 317 476 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
140 486 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
144 476 151 483 151 469 144 476 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
148 476 155 483 155 469 148 476 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
280 486 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
296 476 289 483 289 469 296 476 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
292 476 285 483 285 469 292 476 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
grestore

grestore

0 648 355 277 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 128 257 483 534

%%EndDocument
 GE 6120 29727 MT
(The loader file for the)150 W
10 /Courier AF
16795 XM
(v-slider)SH
11 /Times-Roman AF
22020 XM
(is "v-slider-loader".  The loader file for the)151 W
10 /Courier AF
42359 XM
(h-slider)SH
11 /Times-Roman AF
47585 XM
(is "h-slider-)151 W
6120 30923 MT
(loader".)SH
6120 33556 MT
(The)SH
10 /Courier AF
8126 XM
(v-slider)SH
11 /Times-Roman AF
13222 XM
(and)SH
10 /Courier AF
15106 XM
(h-slider)SH
11 /Times-Roman AF
20202 XM
(gadgets have the same functionality as scroll bars, but they)
21 W( are used when)20 W
6120 34752 MT
(the context requires a different style.  The slider is comprised of)
36 W( a shaft with perpendicular tic-marks and)37 W
6120 35948 MT
(an indicator which points to the current chosen value.)
162 W( Optional)
598 W( trill boxes appear at each end of the)161 W
6120 37144 MT
(slider, and the indicator can be moved with the same mouse commands as the scroll bar.  The vertical)119 W
6120 38340 MT
(slider has an optional feedback box above the shaft where the current value is)
15 W( displayed \050this box is to the)14 W
6120 39536 MT
(left of the horizontal slider\051.  The value that appears in the feedback box may)
103 W( be edited directly by the)104 W
9 SS 
44215 40394 MT
(3)SH
11 SS 
6120 40757 MT
(user by pressing in the text box with the left mouse button and entering a new number.)SH
6120 43055 MT
(The slots)18 W
10 /Courier AF
10434 XM
(:value)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
14602 XM
(:val-1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18770 XM
(:val-2)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
22938 XM
(:scr-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
28906 XM
(:page-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
35473 XM
(:scr-trill-p)SH
11 /Times-Roman AF
(, and)17 W
10 /Courier AF
45120 XM
(:page-trill-p)SH
11 /Times-Roman AF
6120 44251 MT
(all have the same functionality as in scroll bars \050see section 3.1\051.)SH
6120 46549 MT
(The designer may specify the number of tic-marks)
65 W( to appear on the shaft in the slot)66 W
10 /Courier AF
44007 XM
(:num-marks)SH
11 /Times-Roman AF
(. This)407 W
6120 47745 MT
(number includes the tic-marks at each end of the shaft in addition to the internal tic-marks.  Tic-marks)108 W
6120 48941 MT
(may be left out by setting the)92 W
10 /Courier AF
19871 XM
(:tic-marks-p)SH
11 /Times-Roman AF
27438 XM
(slot to NIL.  If the slot)92 W
10 /Courier AF
38227 XM
(:enumerate-p)SH
11 /Times-Roman AF
45795 XM
(is set to T, then)93 W
6120 50137 MT
(each tic-mark will be identified by its position in)
21 W( the range of allowed values.  Also, numbers may appear)20 W
6120 51333 MT
(without tic-marks marks by setting)52 W
10 /Courier AF
21993 XM
(:enumerate-p)SH
11 /Times-Roman AF
29520 XM
(to T and)52 W
10 /Courier AF
33617 XM
(:tic-marks-p)SH
11 /Times-Roman AF
41145 XM
(to NIL.  The slot in which)53 W
6120 52529 MT
(to specify the font for the tic-mark numbers is)SH
10 /Courier AF
26617 XM
(:enum-font)SH
11 /Times-Roman AF
(.)SH
6120 54827 MT
(The slot)64 W
10 /Courier AF
10098 XM
(:shaft-width)SH
11 /Times-Roman AF
17637 XM
(in the vertical slider \050analogously,)63 W
10 /Courier AF
33226 XM
(:shaft-height)SH
11 /Times-Roman AF
41364 XM
(in the horizontal slider\051 is)63 W
6120 56023 MT
(used to specify the width of the trill boxes at the)
43 W( end of the shaft.  This determines the dimensions of the)44 W
6120 57219 MT
(\050invisible\051 bounding box for the interactors which manipulate the indicator.)SH
6120 59517 MT
(The slot)47 W
10 /Courier AF
10064 XM
(:scroll-p)SH
11 /Times-Roman AF
15786 XM
(is used to enable and disable the scrolling feature of the sliders, just as in the)
47 W( scroll)46 W
6120 60713 MT
(bars. When)561 W
10 /Courier AF
12107 XM
(:scroll-p)SH
11 /Times-Roman AF
17925 XM
(is set to NIL, the trill boxes of the slider become inactive, and the)
143 W( indicator)144 W
6120 61909 MT
(ceases to move.)SH
6120 64207 MT
(The font for the feedback of the current value)
41 W( \050which appears at the end of the shaft\051 may be specified in)40 W
10 /Courier AF
6120 65403 MT
(:value-feedback-font)SH
11 /Times-Roman AF
(. The)
1859 W( value feedback may be left out completely)
792 W( by setting)793 W
10 /Courier AF
6120 66599 MT
(:value-feedback-p)SH
11 /Times-Roman AF
16595 XM
(to NIL.)SH
10800 50 6120 70172 UL
7 SS 
7020 71673 MT
(3)SH
9 SS 
7370 72000 MT
(Backspace and several editing commands are provided through Interactors.  See "Text-Interactor" in the Interactors Manual.)SH
ES
%%Page: 365 18
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.3)
SH( Trill)
1800 W( Device)SH
51386 XM
(Page 365)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10277 XM
(:format-string)SH
11 /Times-Roman AF
18964 XM
(and)SH
10 /Courier AF
20838 XM
(:enum-format-string)SH
11 /Times-Roman AF
32524 XM
(slots allow you to control the formatting of the text)11 W
8280 9151 MT
(strings, in case the standard formatting is not appropriate.  This is mainly useful for)
244 W( floating point)245 W
8280 10347 MT
(numbers. The)
531 W( slots should)
128 W( each contain a string that can be passed to the lisp function)127 W
10 /Courier AF
48691 XM
(format)SH
11 /Times-Roman AF
(. The)529 W
8280 11543 MT
(default string is)SH
10 /Courier AF
15399 XM
("~a")SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 15361 MT
(3.3. Trill Device)SH
8 /Courier AF
10200 16526 MT
(\050create-instance 'gg:Trill-Device opal:aggregadget)SH
11640 17391 MT
(\050:maybe-constant '\050:left :top :min-frame-width :min-height :scr-incr :page-incr)SH
20760 18256 MT
(:val-1 :val-2 :scr-trill-p :page-trill-p :scroll-p)SH
20760 19121 MT
(:value-feedback-p :format-string :value-feedback-font :visible\051\051)SH
11640 19986 MT
(\050:left 0\051)SH
11640 20851 MT
(\050:top 0\051)SH
11640 21716 MT
(\050:min-frame-width 20\051)SH
11640 22581 MT
(\050:min-height 20\051)SH
11640 23446 MT
(\050:scr-incr 1\051)SH
11640 24311 MT
(\050:page-incr 5\051)SH
11640 25176 MT
(\050:val-1 0\051 \050:val-2 100\051)SH
11640 26041 MT
(\050:scr-trill-p T\051)SH
11640 26906 MT
(\050:page-trill-p T\051)SH
11640 27771 MT
(\050:scroll-p T\051)SH
11640 28636 MT
(\050:value-feedback-p T\051)SH
11640 29501 MT
(\050:value-feedback-font opal:default-font\051)SH
11640 30366 MT
(\050:value 20\051)SH
11640 31231 MT
(\050:format-string "~a"\051)SH
11640 32096 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 32961 MT
(\051)SH
11 SS 
75 100 0 8730 67408 GB 
%%BeginDocument: gadgets/trill-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 11
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 11:01 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 186 346 426 446
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
114 -274 translate
gsave
0 648 240 100 ClipToRectangle
0 0 translate
gsave
100 608 26 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
107 605 594 12 14 0 false 0 0 0 false 0 0 0 false (20) 12 /Courier DrawText
60 608 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
63 598 70 591 70 595 77 595 77 601 70 601 70 605 63 598 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
146 608 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
163 598 156 591 156 595 149 595 149 601 156 601 156 605 163 598 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
80 608 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
84 598 91 605 91 591 84 598 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
88 598 95 605 95 591 88 598 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
126 608 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
142 598 135 605 135 591 142 598 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
138 598 131 605 131 591 138 598 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
grestore

grestore

0 648 240 100 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 186 346 426 446

%%EndDocument
 GE /Times-Roman SF
8280 43756 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(trill-device)SH
11 /Times-Roman AF
25680 XM
(is "trill-device-loader".)SH
8280 46054 MT
(The)SH
10 /Courier AF
10277 XM
(trill-device)SH
11 /Times-Roman AF
17764 XM
(is a compact gadget which)
12 W( allows a value to be incremented and decremented over a)13 W
8280 47250 MT
(range as in the scroll)
70 W( bars and sliders, but with only the numerical value as feedback.  All slots function)69 W
8280 48446 MT
(exactly as in horizontal sliders, but without the shaft and tic-mark features.  As with sliders,)
36 W( the feedback)37 W
8280 49642 MT
(value may be edited by the user.)SH
8280 51940 MT
(A unique feature of the trill box is)
24 W( that either or both)23 W
10 /Courier AF
31963 XM
(:val-1)SH
11 /Times-Roman AF
35861 XM
(or)SH
10 /Courier AF
37075 XM
(:val-2)SH
11 /Times-Roman AF
40973 XM
(may be NIL, implying no lower)23 W
8280 53136 MT
(or upper bound on the input value, respectively.  If numerical values for both slots are supplied,)
151 W( then)152 W
8280 54332 MT
(clipping of the input value into the specified range occurs as usual.)
38 W( Otherwise,)350 W
10 /Courier AF
43816 XM
(:val-1)SH
11 /Times-Roman AF
47728 XM
(is assumed to be)37 W
8280 55528 MT
(the minimum value, and clipping will not occur at the NIL endpoints of the interval.)SH
8280 57826 MT
(The width of the trill device may be either static or dynamic.  If both)44 W
10 /Courier AF
39426 XM
(:val-1)SH
11 /Times-Roman AF
43345 XM
(and)SH
10 /Courier AF
45253 XM
(:val-2)SH
11 /Times-Roman AF
49173 XM
(are specified,)45 W
8280 59022 MT
(then the width of the value frame)
562 W( is the maximum of the widest allowed value and the)561 W
10 /Courier AF
8280 60218 MT
(:min-frame-width)SH
11 /Times-Roman AF
(. Otherwise,)
437 W( the value frame will expand with the width of the)
81 W( value, while never)82 W
8280 61414 MT
(falling below)SH
10 /Courier AF
14390 XM
(:min-frame-width)SH
11 /Times-Roman AF
(.)SH
8280 63712 MT
(The height of the trill device is the maximum)
80 W( of the greatest string height of all values in the range and)79 W
8280 64908 MT
(the value of the)
28 W( slot)29 W
10 /Courier AF
17373 XM
(:min-height)SH
11 /Times-Roman AF
(. The)333 W
10 /Courier AF
26870 XM
(:min-height)SH
11 /Times-Roman AF
33774 XM
(will be used if there is no indicator text or if the)29 W
10 /Courier AF
8280 66104 MT
(:min-height)SH
11 /Times-Roman AF
15155 XM
(is greater than the height of the tallest value.)SH
ES
%%Page: 366 19
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 366)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The)SH
10 /Courier AF
8212 XM
(:format-string)SH
11 /Times-Roman AF
16994 XM
(slot allows you to control the formatting of the text string, in)
107 W( case the standard)106 W
6120 9151 MT
(formatting is not appropriate.  This is mainly useful for floating)
84 W( point numbers.  This slot takes a string)85 W
6120 10347 MT
(that can be passed to the lisp function)SH
10 /Courier AF
22922 XM
(format)SH
11 /Times-Roman AF
(. The)
275 W( default string is)SH
10 /Courier AF
36451 XM
("~a")SH
11 /Times-Roman AF
(. For)
275 W( example:)SH
8 /Courier AF
8040 11512 MT
(\050create-instance 'TRILL garnet-gadgets:trill-device)SH
9480 12377 MT
(\050:left 35\051\050:top 70\051\050:val-1 0.0\051\050:val-2 1.0\051\050:scr-incr 0.01\051)SH
9480 13242 MT
(\050:page-incr 0.1\051\050:format-string "~4,2F"\051\051)SH
14 /Times-Bold AF
6120 17060 MT
(3.4. Gauge)SH
11 SS 
75 100 0 6570 55482 GB 
%%BeginDocument: gadgets/gauge-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 21
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 11:26 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 293 540 499
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.936 0.936 scale

%
% Begin new window
%
0 -236 translate
gsave
0 692 500 220 ClipToRectangle
0 0 translate
gsave
151.0 545.0 98.0 98.0 0 180 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawArc
0 0 0 0 false 0 0 [] 1 249 545 53 545 DrawLine
0 0 0 0 false 0 0 [] 1 244 545 249 545 DrawLine
254 556 547 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 238 577 243 579 DrawLine
248 590 581 10 11 0 false 0 0 0 false 0 0 0 false (20) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 222 605 226 608 DrawLine
231 619 610 11 11 0 false 0 0 0 false 0 0 0 false (40) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 198 626 200 630 DrawLine
205 641 632 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 167 637 168 642 DrawLine
163 656 647 10 11 0 false 0 0 0 false 0 0 0 false (80) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 135 637 134 642 DrawLine
126 656 647 16 11 0 false 0 0 0 false 0 0 0 false (100) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 104 626 102 630 DrawLine
81 641 632 16 11 0 false 0 0 0 false 0 0 0 false (120) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 80 605 76 608 DrawLine
55 619 610 16 11 0 false 0 0 0 false 0 0 0 false (140) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 64 577 59 579 DrawLine
38 590 581 16 11 0 false 0 0 0 false 0 0 0 false (160) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 58 545 53 545 DrawLine
32 556 547 16 11 0 false 0 0 0 false 0 0 0 false (180) 10 /Courier DrawText
151 545 155 542 184 593 190 589 190 613 170 601 176 598 147 548 151 545 18 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawPolyline
124 540 529 55 14 0 false 0 0 0 false 0 0 0 false (Pressure) 12 /Courier DrawText
131 522 511 40 14 0 false 0 0 0 false 0 0 0 false (60.000) 12 /Courier DrawText
365.5 544.5 73.5 73.5 0 180 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawArc
0 0 0 0 false 0 0 [] 1 439 544 292 544 DrawLine
0 0 0 0 false 0 0 [] 1 436 544 440 544 DrawLine
445 555 546 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 432 568 436 569 DrawLine
441 580 571 10 11 0 false 0 0 0 false 0 0 0 false (10) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 420 589 423 592 DrawLine
428 603 594 10 11 0 false 0 0 0 false 0 0 0 false (20) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 401 605 403 608 DrawLine
408 619 610 10 11 0 false 0 0 0 false 0 0 0 false (30) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 378 613 379 617 DrawLine
373 631 622 11 11 0 false 0 0 0 false 0 0 0 false (40) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 354 613 353 617 DrawLine
348 631 622 10 11 0 false 0 0 0 false 0 0 0 false (50) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 331 605 329 608 DrawLine
314 619 610 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 312 589 309 592 DrawLine
294 603 594 10 11 0 false 0 0 0 false 0 0 0 false (70) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 300 568 296 569 DrawLine
281 580 571 10 11 0 false 0 0 0 false 0 0 0 false (80) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 296 544 292 544 DrawLine
277 555 546 10 11 0 false 0 0 0 false 0 0 0 false (90) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 2 396 595 366 544 DrawLine
389 591 396 595 395 587 6 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawPolyline
328 539 528 76 14 0 false 0 0 0 false 0 0 0 false (Temperature) 12 /Courier DrawText
346 521 510 40 14 0 false 0 0 0 false 0 0 0 false (30.000) 12 /Courier DrawText
grestore

grestore

0 692 500 220 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 72 293 540 499

%%EndDocument
 GE 8 /Courier AF
8040 35003 MT
(\050create-instance 'gg:Gauge opal:aggregadget)SH
9480 35868 MT
(\050:maybe-constant '\050:left :top :width :polygon-needle-p :int-feedback-p)SH
18600 36733 MT
(:title :title-font :value-font :enum-font :num-marks)SH
18600 37598 MT
(:tic-marks-p :enumerate-p :value-feedback-p :text-offset)SH
18600 38463 MT
(:val-1 :val-2 :visible\051\051)SH
9480 39328 MT
(\050:left 0\051)SH
9480 40193 MT
(\050:top 0\051)SH
9480 41058 MT
(\050:width 230\051)SH
9480 41923 MT
(\050:val-1 0\051)SH
9480 42788 MT
(\050:val-2 180\051)SH
9480 43653 MT
(\050:num-marks 10\051)SH
9480 44518 MT
(\050:tic-marks-p T\051)SH
9480 45383 MT
(\050:enumerate-p T\051)SH
9480 46248 MT
(\050:value-feedback-p T\051)SH
9480 47113 MT
(\050:polygon-needle-p T\051)SH
9480 47978 MT
(\050:int-feedback-p T\051)SH
9480 48843 MT
(\050:text-offset 5\051)SH
9480 49708 MT
(\050:title "Gauge"\051)SH
9480 50573 MT
(\050:title-font opal:default-font\051)SH
9480 51438 MT
(\050:value-font opal:default-font\051)SH
9480 52303 MT
(\050:enum-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
9480 53168 MT
(\050:value \050o-formula ...\051\051)SH
9480 54033 MT
(\050:format-string "~a"\051)SH
/Times-Italic SF
22920 XM
(; How to print the feedback value)SH
/Courier SF
9480 54898 MT
(\050:enum-format-string "~a"\051)SH
/Times-Italic SF
22920 XM
(; How to print the tic-mark values)SH
/Courier SF
9480 55763 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 56628 MT
(\051)SH
11 /Times-Roman AF
6120 58926 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(gauge)SH
11 /Times-Roman AF
19320 XM
(is "gauge-loader".)SH
6120 61224 MT
(The)SH
10 /Courier AF
8174 XM
(gauge)SH
11 /Times-Roman AF
11518 XM
(object is a)
69 W( semi-circular meter with tic-marks around the perimeter.  As with scroll bars and)68 W
6120 62420 MT
(sliders, this object allows the user to specify a value between minimum and maximum)
59 W( values.  A needle)60 W
6120 63616 MT
(points to the currently chosen value, and may either be)
125 W( a bare arrow or a thick, arrow-shaped polygon)124 W
6120 64812 MT
(with a gray filling.  The needle may be rotated by)
85 W( dragging it with the left mouse button pressed.  Text)86 W
6120 66008 MT
(below the gauge reports the current value to which the needle is pointing.)SH
6120 68306 MT
(If the slot)63 W
10 /Courier AF
10800 XM
(:polygon-needle-p)SH
11 /Times-Roman AF
21338 XM
(is T, then the needle will be thick with a gray filling.)
63 W( If)
399 W( NIL, then the)62 W
6120 69502 MT
(needle will be a bare arrow.)SH
6120 71800 MT
(If)SH
10 /Courier AF
7238 XM
(:int-feedback-p)SH
11 /Times-Roman AF
16625 XM
(is T, then the needle will not follow the mouse directly, but instead a short line)112 W
ES
%%Page: 367 20
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.5)
SH( Buttons)1800 W
51386 XM
(Page 367)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(will appear and be rotated.  When the mouse button is released, the large needle)
25 W( will swing over to rest at)24 W
8280 9151 MT
(the new location.  The needle will follow the mouse directly if)SH
10 /Courier AF
35987 XM
(:int-feedback-p)SH
11 /Times-Roman AF
45262 XM
(is set to NIL.)SH
8280 11449 MT
(The slots)299 W
10 /Courier AF
13156 XM
(:num-marks)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20005 XM
(:tic-marks-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
28054 XM
(:enumerate-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
36103 XM
(:val-1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
40552 XM
(:val-2)SH
11 /Times-Roman AF
(, and)299 W
10 /Courier AF
47163 XM
(:enum-font)SH
11 /Times-Roman AF
53738 XM
(are)SH
8280 12645 MT
(implemented as in the sliders \050see section 3.2\051.  The)
41 W( value in)40 W
10 /Courier AF
35651 XM
(:val-1)SH
11 /Times-Roman AF
39566 XM
(corresponds to the right side of the)40 W
8280 13841 MT
(gauge.)SH
8280 16139 MT
(The title of the gauge is specified in)75 W
10 /Courier AF
24948 XM
(:title)SH
11 /Times-Roman AF
(. No)
425 W( title will)
75 W( appear if)76 W
10 /Courier AF
39646 XM
(:title)SH
11 /Times-Roman AF
43597 XM
(is NIL.  The fonts for the)76 W
8280 17335 MT
(title of the gauge and the current chosen value are specified in)260 W
10 /Courier AF
38948 XM
(:title-font)SH
11 /Times-Roman AF
46083 XM
(and)SH
10 /Courier AF
48205 XM
(:value-font)SH
11 /Times-Roman AF
(,)SH
8280 18531 MT
(respectively.)SH
8280 20829 MT
(If)SH
10 /Courier AF
9385 XM
(:value-feedback-p)SH
11 /Times-Roman AF
19958 XM
(is T, then numerical)
98 W( text will appear below the gauge indicating the currently)99 W
8280 22025 MT
(chosen value.  The value)
185 W( in)184 W
10 /Courier AF
21697 XM
(:text-offset)SH
11 /Times-Roman AF
29356 XM
(determines the distance between the gauge and the title)184 W
8280 23221 MT
(string, and between the title string and the value feedback.)SH
8280 25519 MT
(The)SH
10 /Courier AF
10276 XM
(:format-string)SH
11 /Times-Roman AF
18962 XM
(and)SH
10 /Courier AF
20836 XM
(:enum-format-string)SH
11 /Times-Roman AF
32522 XM
(slots allow you to control the formatting of)
11 W( the text)12 W
8280 26715 MT
(strings, in case)
245 W( the standard formatting is not appropriate.  This is mainly useful for floating point)244 W
8280 27911 MT
(numbers. The)
529 W( slots should each contain a string that can be passed to the lisp)
127 W( function)128 W
10 /Courier AF
48689 XM
(format)SH
11 /Times-Roman AF
(. The)531 W
8280 29107 MT
(default string is)SH
10 /Courier AF
15399 XM
("~a")SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 32925 MT
(3.5. Buttons)SH
11 /Times-Roman AF
8280 34121 MT
(The button objects in the Garnet Gadgets can be either a single stand-alone)
48 W( button, or a panel of buttons.)47 W
8280 35317 MT
(Each button in the set is related to the others by common)
59 W( interactors and constraints on both the sizes of)60 W
8280 36513 MT
(the buttons and the text beside \050or inside\051 the buttons.)SH
8280 38811 MT
(The button objects all have several common features.)SH
10480 40264 MT
(1.)SH
11580 XM
(When used as a panel,)
77 W( the buttons are implemented with aggrelists, so all slots that can be)76 W
9 SS 
40693 41122 MT
(4)SH
11 SS 
11580 41485 MT
(customized in an aggrelist can be customized in the button panels.)SH
41693 XM
(These slots are:)SH
10 /Courier AF
13780 43561 MT
(:direction)SH
11 /Times-Roman AF
20055 XM
(\320)SH
10 /Courier AF
21430 XM
(:vertical)SH
11 /Times-Roman AF
27105 XM
(or)SH
10 /Courier AF
28296 XM
(:horizontal)SH
11 /Times-Roman AF
35171 XM
(\050default)SH
10 /Courier AF
38866 XM
(:vertical)SH
11 /Times-Roman AF
(\051)SH
10 /Courier AF
13780 45256 MT
(:v-spacing)SH
11 /Times-Roman AF
20055 XM
(\320 distance between buttons, if vertical orientation \050default 5\051)SH
10 /Courier AF
13780 46951 MT
(:h-spacing)SH
11 /Times-Roman AF
20055 XM
(\320 same, if horizontal orientation)SH
10 /Courier AF
13780 48646 MT
(:fixed-width-p)SH
11 /Times-Roman AF
22600 XM
(\320 whether all the buttons should have)
145 W( the width of the value in)146 W
10 /Courier AF
17080 49842 MT
(:fixed-width-size)SH
11 /Times-Roman AF
(, or the width of each button should)
150 W( be determined by)149 W
17080 51038 MT
(the width of the string associated with that button \050default T\051)SH
10 /Courier AF
13780 52733 MT
(:fixed-height-p)SH
11 /Times-Roman AF
23055 XM
(\320 same, but with heights)SH
10 /Courier AF
13780 54428 MT
(:fixed-width-size)SH
11 /Times-Roman AF
24336 XM
(\320 width of all components \050default is the)
81 W( width of the widest)82 W
17080 55624 MT
(button, as determined by the widest string\051)SH
10 /Courier AF
13780 57319 MT
(:fixed-height-size)SH
11 /Times-Roman AF
24855 XM
(\320 same, but with heights)SH
10 /Courier AF
13780 59014 MT
(:h-align)SH
11 /Times-Roman AF
18866 XM
(\320 How to align buttons, if vertical orientation.  Allowed)
11 W( values are)10 W
10 /Courier AF
49055 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
17080 60210 MT
(:center)SH
11 /Times-Roman AF
(, or)449 W
10 /Courier AF
23919 XM
(:right)SH
11 /Times-Roman AF
(. \050default)449 W
10 /Courier AF
32663 XM
(:right)SH
11 /Times-Roman AF
36988 XM
(for radio-buttons and x-buttons,)450 W
10 /Courier AF
17080 61406 MT
(:center)SH
11 /Times-Roman AF
21555 XM
(for text-buttons\051)SH
10 /Courier AF
13780 63101 MT
(:rank-margin)SH
11 /Times-Roman AF
21444 XM
(\320 after this many buttons, a new row)
189 W( \050or column\051 will be started)188 W
17080 64297 MT
(\050default NIL\051)SH
10 /Courier AF
13780 65992 MT
(:pixel-margin)SH
11 /Times-Roman AF
22019 XM
(\320 absolute position in pixels after)
164 W( which a new row \050or column\051)165 W
17080 67188 MT
(will be started \050default NIL\051)SH
10800 50 8280 70172 UL
7 SS 
9180 71673 MT
(4)SH
9 SS 
9530 72000 MT
(See the Aggregadgets manual for greater detail.)SH
ES
%%Page: 368 21
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 368)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
11620 8080 MT
(:indent)SH
11 /Times-Roman AF
16095 XM
(\320 amount to indent the new row \050or column\051 in pixels \050default 0\051)SH
8320 10031 MT
(2.)SH
9420 XM
(In the button and menu objects,)
224 W( the)223 W
10 /Courier AF
26750 XM
(:value)SH
11 /Times-Roman AF
30848 XM
(slot contains to the string or atom of the)223 W
9420 11227 MT
(currently selected item \050in the)30 W
10 /Courier AF
22979 XM
(x-button-panel)SH
11 /Times-Roman AF
31684 XM
(this value)
30 W( is a list of selected items\051.  The)31 W
9420 12423 MT
(currently selected object is named)
115 W( in the)114 W
10 /Courier AF
28213 XM
(:value-obj)SH
11 /Times-Roman AF
34602 XM
(slot. In)
503 W( order to set an item to be)114 W
9420 13619 MT
(selected, either)
108 W( the)109 W
10 /Courier AF
18236 XM
(:value)SH
11 /Times-Roman AF
22220 XM
(slot of the button panel must be set with the desired string or)109 W
9420 14815 MT
(atom from the)146 W
10 /Courier AF
16365 XM
(:items)SH
11 /Times-Roman AF
20386 XM
(list, or the)146 W
10 /Courier AF
25530 XM
(:value-obj)SH
11 /Times-Roman AF
31951 XM
(slot must)
146 W( be set with the desired button)145 W
9420 16011 MT
(object \050see section 5.4 for examples of selecting buttons\051.)SH
8320 17905 MT
(3.)SH
9420 XM
(The)SH
10 /Courier AF
11535 XM
(:width)SH
11 /Times-Roman AF
15540 XM
(of the buttons is determined by)
130 W( the width of the longest item, and therefore)131 W
9420 19101 MT
(cannot be specified by the designer.)
36 W( However,)
346 W( the)35 W
10 /Courier AF
32250 XM
(:width)SH
11 /Times-Roman AF
36160 XM
(is computed internally and may)35 W
9420 20297 MT
(be accessed after the object is instantiated.  \050The :height is computed similarly.\051)SH
8320 22191 MT
(4.)SH
9420 XM
(The shadow below each button has the effect of)
178 W( simulating a floating three-dimensional)179 W
9420 23387 MT
(button. When)
611 W( the left mouse button is clicked on one)
168 W( of the gadget buttons, the button)167 W
9420 24583 MT
(frame moves onto the shadow and appears to be depressed.)
148 W( The)
573 W( slot)149 W
10 /Courier AF
41770 XM
(:shadow-offset)SH
11 /Times-Roman AF
9420 25779 MT
(specifies the amount of shadow that appears under the button when it is not)
151 W( pressed.  A)150 W
9420 26975 MT
(value of zero implies that no shadow will appear \050i.e., no floating effect\051.)SH
8320 28869 MT
(5.)SH
9420 XM
(There is a gray border in the frame of each of the buttons, the)
185 W( width of which may be)186 W
9420 30065 MT
(specified in the slot)SH
10 /Courier AF
18280 XM
(:gray-width)SH
11 /Times-Roman AF
(.)SH
8320 31959 MT
(6.)SH
9420 XM
(The strings or atoms associated with)
172 W( each button are specified in the)171 W
10 /Courier AF
41779 XM
(:items)SH
11 /Times-Roman AF
45825 XM
(slot. See)617 W
9420 33155 MT
(section 1.4.3 for a discussion of specifying items and item functions.)SH
8320 35049 MT
(7.)SH
9420 XM
(The font in which the button labels appear may be specified in the)SH
10 /Courier AF
38775 XM
(:font)SH
11 /Times-Roman AF
42050 XM
(slot.)SH
8320 36943 MT
(8.)SH
9420 XM
(Most of the buttons and button panels have)
48 W( a)49 W
10 /Courier AF
29865 XM
(:toggle-p)SH
11 /Times-Roman AF
35589 XM
(slot. When)
373 W( the value of this slot)49 W
9420 38139 MT
(is T, then the button will become)
51 W( deselected if it is clicked a second time.  Otherwise, after)50 W
9420 39335 MT
(the button)
938 W( is selected the first time, it is always selected \050though its)939 W
10 /Courier AF
9420 40531 MT
(:selection-function)SH
11 /Times-Roman AF
21208 XM
(and associated item functions will continue)
113 W( to be executed each)112 W
9420 41727 MT
(time it is pressed.)SH
75 100 0 6570 81023 GB 
%%BeginDocument: gadgets/button-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 35
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 2:22 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 284 540 508
%%%Pages: 1
%%EndComments


/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
        /color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
          color-p {red green blue setrgbcolor} if
          transparent-p
          % The case where the background is not drawn
          { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
          % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-2
<ffff ff3f ff3f fe7f ee7f e4ff e0ff e01f e03f e07f e0ff e1ff e3ff e7ff efff
ffff>
def

/image-1
<ff3f fe1f fe1f cc3f c43f c07f c00f c00f c01f c03f c07f c0ff c1ff c3ff c7ff
cfff>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.936 0.936 scale

%
% Begin new window
%
0 -226 translate
gsave
0 692 500 240 ClipToRectangle
0 0 translate
gsave
30 672 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 682 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 677 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
47 672 661 28 14 0 false 0 0 0 false 0 0 0 false (Bach) 12 /Courier DrawText
30 623 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 633 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 628 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
25 628 73 24 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
30 623 612 63 14 1 false 0 0 0 false 0 0 0 false (Beethoven) 12 /Courier DrawText
30 574 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 574 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
35 569 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
50 564 553 42 14 0 false 0 0 0 false 0 0 0 false (Mozart) 12 /Courier DrawText
30 525 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 535 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 530 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
38 525 514 47 14 0 false 0 0 0 false 0 0 0 false (Strauss) 12 /Courier DrawText
272 562 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 567 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 564 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
234 562 551 28 14 0 false 0 0 0 false 0 0 0 false (Bold) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 2 284 551 270 564 DrawLine
0 0 0 0 false 0 0 [] 2 284 564 270 551 DrawLine
272 532 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 537 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 534 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
222 532 521 40 14 0 false 0 0 0 false 0 0 0 false (Italic) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 2 284 521 270 534 DrawLine
0 0 0 0 false 0 0 [] 2 284 534 270 521 DrawLine
272 502 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 507 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 504 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
200 502 491 62 14 0 false 0 0 0 false 0 0 0 false (Underline) 12 /Courier DrawText
234.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
229.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
229.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
150 670 659 63 14 0 false 0 0 0 false 0 0 0 false (Helvetica) 12 /Courier DrawText
335.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
330.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
330.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
273 670 659 41 14 0 false 0 0 0 false 0 0 0 false (Geneva) 12 /Courier DrawText
436.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
431.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
431.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
368 670 659 47 14 0 false 0 0 0 false 0 0 0 false (Courier) 12 /Courier DrawText
234.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
229.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
229.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
178 640 629 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
335.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
330.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
330.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
280 640 629 34 14 0 false 0 0 0 false 0 0 0 false (Times) 12 /Courier DrawText
436.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
431.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
431.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
374 640 629 41 14 0 false 0 0 0 false 0 0 0 false (Symbol) 12 /Courier DrawText
330.5 635.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
172 105 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
172 105 16 16 image-2 true 0 0 0 false DrawBitmap
100 549 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
100 549 16 16 image-2 true 0 0 0 false DrawBitmap
grestore

grestore

0 692 500 240 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 72 284 540 508

%%EndDocument
 GE /Times-Bold SF
6120 61475 MT
(Figure 3-2:)SH
/Times-Roman SF
11893 XM
(Text buttons, radio buttons, and x-buttons)SH
ES
%%Page: 369 22
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.5)
SH( Buttons)1800 W
51386 XM
(Page 369)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.5.1. Text Buttons)SH
8 /Courier AF
10200 9169 MT
(\050create-instance 'gg:Text-Button opal:aggregadget)SH
11640 10034 MT
(\050:maybe-constant '\050:left :top :shadow-offset :text-offset :gray-width)SH
20760 10899 MT
(:string :toggle-p :font :final-feedback-p :visible\051\051)SH
11640 11764 MT
(\050:left 0\051)SH
11640 12629 MT
(\050:top 0\051)SH
11640 13494 MT
(\050:shadow-offset 10\051)SH
11640 14359 MT
(\050:text-offset 5\051)SH
11640 15224 MT
(\050:gray-width 5\051)SH
11640 16089 MT
(\050:string "Text Button"\051)SH
11640 16954 MT
(\050:toggle-p T\051)SH
11640 17819 MT
(\050:font opal:default-font\051)SH
11640 18684 MT
(\050:final-feedback-p T\051)SH
11640 19549 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
11640 20414 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)
SH( ;)960 W
/Times-Italic SF
31040 XM
(This slot is set by the interactor)SH
/Courier SF
11640 21279 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 22144 MT
(\051)SH
10200 25171 MT
(\050create-instance 'gg:Text-Button-Panel opal:aggregadget)SH
11640 26036 MT
(\050:maybe-constant '\050:left :top :direction :v-spacing :h-spacing :h-align)SH
20760 26901 MT
(:fixed-width-p :fixed-width-size :fixed-height-p)SH
20760 27766 MT
(:fixed-height-size :indent :rank-margin :pixel-margin)SH
20760 28631 MT
(:shadow-offset :text-offset :gray-width :final-feedback-p)SH
20760 29496 MT
(:toggle-p :font :items :visible\051\051)SH
11640 30361 MT
(\050:left 0\051)SH
11640 31226 MT
(\050:top 0\051)SH
11640 32091 MT
(\050:shadow-offset 10\051)SH
11640 32956 MT
(\050:text-offset 5\051)SH
11640 33821 MT
(\050:gray-width 5\051)SH
11640 34686 MT
(\050:final-feedback-p T\051)SH
11640 35551 MT
(\050:toggle-p NIL\051)SH
11640 36416 MT
(\050:font opal:default-font\051)SH
11640 37281 MT
(\050:items '\050"Text 1" "Text 2" "Text 3" "Text 4"\051\051)SH
11640 38146 MT
(\050:value-obj NIL\051)SH
11640 39011 MT
(\050:value \050o-formula \050gvl :value-obj :string\051\051\051)SH
11640 39876 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 40741 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
8280 43799 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(text-button)SH
11 /Times-Roman AF
25080 XM
(and)SH
10 /Courier AF
26943 XM
(text-button-panel)SH
11 /Times-Roman AF
37418 XM
(is "text-buttons-loader".)SH
8280 46097 MT
(The)SH
10 /Courier AF
10322 XM
(text-button-panel)SH
11 /Times-Roman AF
20854 XM
(object is a set of rectangular buttons, with the string or)
57 W( atom associated with)58 W
8280 47293 MT
(each button centered)
38 W( inside.  When a button is pressed, the text of the button will appear in inverse video)37 W
8280 48489 MT
(if)SH
10 /Courier AF
9227 XM
(:final-feedback-p)SH
11 /Times-Roman AF
19702 XM
(is T. The)SH
10 /Courier AF
23918 XM
(text-button)SH
11 /Times-Roman AF
30793 XM
(is just a single button.)SH
8280 50787 MT
(The distance from the beginning of the longest label to the inside edge of the button frame is specified in)37 W
10 /Courier AF
8280 51983 MT
(:text-offset)SH
11 /Times-Roman AF
(. The)
555 W( value in)140 W
10 /Courier AF
22778 XM
(:text-offset)SH
11 /Times-Roman AF
30393 XM
(will affect the height and width of every)
140 W( button when)139 W
8280 53179 MT
(specified.)SH
ES
%%Page: 370 23
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 370)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.5.2. X Buttons)SH
8 /Courier AF
8040 9169 MT
(\050create-instance 'gg:X-Button opal:aggregadget)SH
9480 10034 MT
(\050:maybe-constant '\050:left :top :button-width :button-height)SH
18600 10899 MT
(:shadow-offset :text-offset :gray-width)SH
18600 11764 MT
(:text-on-left-p :toggle-p :string :font :visible\051\051)SH
9480 12629 MT
(\050:left 0\051)SH
9480 13494 MT
(\050:top 0\051)SH
9480 14359 MT
(\050:button-width 20\051)SH
9480 15224 MT
(\050:button-height 20\051)SH
9480 16089 MT
(\050:shadow-offset 5\051)SH
9480 16954 MT
(\050:text-offset 5\051)SH
9480 17819 MT
(\050:gray-width 3\051)SH
9480 18684 MT
(\050:text-on-left-p T\051)SH
9480 19549 MT
(\050:string "X Button"\051)SH
9480 20414 MT
(\050:toggle-p T\051)SH
9480 21279 MT
(\050:font opal:default-font\051)SH
9480 22144 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
9480 23009 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)SH
/Times-Italic SF
27240 XM
(; Set by interactor)SH
/Courier SF
9480 23874 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
27240 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 24739 MT
(\051)SH
8040 27766 MT
(\050create-instance 'gg:X-Button-Panel opal:aggregadget)SH
9480 28631 MT
(\050:maybe-constant '\050:left :top :direction :v-spacing :h-spacing :h-align)SH
18600 29496 MT
(:fixed-width-p :fixed-width-size :fixed-height-p :fixed-height-size)SH
18600 30361 MT
(:indent :rank-margin :pixel-margin :button-width :button-height)SH
18600 31226 MT
(:shadow-offset :text-offset :gray-width :text-on-left-p)SH
18600 32091 MT
(:font :items :visible\051\051)SH
9480 32956 MT
(\050:left 0\051)SH
9480 33821 MT
(\050:top 0\051)SH
9480 34686 MT
(\050:button-width 20\051)SH
9480 35551 MT
(\050:button-height 20\051)SH
9480 36416 MT
(\050:shadow-offset 5\051)SH
9480 37281 MT
(\050:text-offset 5\051)SH
9480 38146 MT
(\050:gray-width 3\051)SH
9480 39011 MT
(\050:text-on-left-p T\051)SH
9480 39876 MT
(\050:font opal:default-font\051)SH
9480 40741 MT
(\050:items '\050"X-label 1" "X-label 2" "X-label 3"\051\051)SH
9480 41606 MT
(\050:value-obj NIL\051)SH
9480 42471 MT
(\050:value \050o-formula \050mapcar #'\050lambda \050object\051)SH
24360 43336 MT
(\050gv object :string\051\051)SH
22440 44201 MT
(\050gvl :value-obj\051\051\051\051)SH
9480 45066 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22440 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 45931 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
6120 48989 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(x-button)SH
11 /Times-Roman AF
21120 XM
(and)SH
10 /Courier AF
22983 XM
(x-button-panel)SH
11 /Times-Roman AF
31658 XM
(is "x-buttons-loader".)SH
6120 51287 MT
(The)SH
10 /Courier AF
8105 XM
(x-button-panel)SH
11 /Times-Roman AF
16780 XM
(object is also a set of rectangular buttons, but the item associated with each)
SH( button)1 W
6120 52483 MT
(appears either to the left or to the right)
9 W( of the button.  Any number of buttons may be selected at one time,)8 W
6120 53679 MT
(and clicking on a selected button de-selects it.  Currently selected buttons are graphically)
21 W( indicated by the)22 W
6120 54875 MT
(presence of a large "X" in the button frames.  The)SH
10 /Courier AF
28274 XM
(x-button)SH
11 /Times-Roman AF
33349 XM
(is just a single button.)SH
6120 57173 MT
(Since the)38 W
10 /Courier AF
10534 XM
(x-button-panel)SH
11 /Times-Roman AF
19247 XM
(allows selection of several items at once, the)38 W
10 /Courier AF
39436 XM
(:value)SH
11 /Times-Roman AF
43349 XM
(slot is a list)
38 W( of strings)37 W
6120 58369 MT
(\050or atoms\051, rather than a single string.  Similarly,)SH
10 /Courier AF
27872 XM
(:value-obj)SH
11 /Times-Roman AF
34147 XM
(is a list of objects.)SH
6120 60667 MT
(The slot)7 W
10 /Courier AF
9984 XM
(:text-on-left-p)SH
11 /Times-Roman AF
19266 XM
(specifies whether the text will appear on)
7 W( the right or left of the x-buttons.  A)8 W
6120 61863 MT
(NIL value indicates the text should appear on the right.  When text appears)
31 W( on the right, the designer will)30 W
6120 63059 MT
(probably want to set)SH
10 /Courier AF
15346 XM
(:h-align)SH
11 /Times-Roman AF
20421 XM
(to)SH
10 /Courier AF
21552 XM
(:left)SH
11 /Times-Roman AF
24827 XM
(in order to left-justify the text against the buttons.)SH
6120 65357 MT
(The distance from the labels to the buttons is specified in)SH
10 /Courier AF
31507 XM
(:text-offset)SH
11 /Times-Roman AF
(.)SH
6120 67655 MT
(The slots)119 W
10 /Courier AF
10636 XM
(:button-width)SH
11 /Times-Roman AF
18830 XM
(and)SH
10 /Courier AF
20812 XM
(:button-height)SH
11 /Times-Roman AF
29606 XM
(specify the width and height of the)
119 W( x-buttons.  The)120 W
6120 68851 MT
("X" will stretch to accommodate these dimensions.)SH
ES
%%Page: 371 24
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.6)
SH( Option)
1800 W( Button)SH
51386 XM
(Page 371)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.5.3. Radio Buttons)SH
8 /Courier AF
10200 9169 MT
(\050create-instance 'gg:Radio-Button opal:aggregadget)SH
11640 10034 MT
(\050:maybe-constant '\050:left :top :button-diameter :shadow-offset :text-offset)SH
20760 10899 MT
(:gray-width :string :text-on-left-p :toggle-p :font :visible\051\051)SH
11640 11764 MT
(\050:left 0\051 \050:top 0\051)SH
11640 12629 MT
(\050:button-diameter 23\051)SH
11640 13494 MT
(\050:shadow-offset 5\051 \050:text-offset 5\051 \050:gray-width 3\051)SH
11640 14359 MT
(\050:string "Radio button"\051)SH
11640 15224 MT
(\050:toggle-p T\051)SH
11640 16089 MT
(\050:text-on-left-p T\051)SH
11640 16954 MT
(\050:font opal:default-font\051)SH
11640 17819 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
11640 18684 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)SH
/Times-Italic SF
29400 XM
(; Set by interactor)SH
/Courier SF
11640 19549 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
29400 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 20414 MT
(\051)SH
10200 23441 MT
(\050create-instance 'gg:Radio-Button-Panel opal:aggregadget)SH
11640 24306 MT
(\050:maybe-constant '\050:left :top :direction :v-spacing :h-spacing :h-align)SH
20760 25171 MT
(:fixed-width-p :fixed-width-size :fixed-height-p :fixed-height-size)SH
20760 26036 MT
(:indent :rank-margin :pixel-margin :button-diameter :shadow-offset)SH
20760 26901 MT
(:text-offset :gray-width :text-on-left-p :toggle-p :font)SH
20760 27766 MT
(:items :visible\051\051)SH
11640 28631 MT
(\050:left 0\051)SH
11640 29496 MT
(\050:top 0\051)SH
11640 30361 MT
(\050:button-diameter 23\051)SH
11640 31226 MT
(\050:shadow-offset 5\051)SH
11640 32091 MT
(\050:text-offset 5\051)SH
11640 32956 MT
(\050:gray-width 3\051)SH
11640 33821 MT
(\050:text-on-left-p T\051)SH
11640 34686 MT
(\050:toggle-p T\051)SH
11640 35551 MT
(\050:font opal:default-font\051)SH
11640 36416 MT
(\050:items '\050"Radio-text 1" "Radio-text 2" "Radio-text 3" "Radio-text 4"\051\051)SH
11640 37281 MT
(\050:value-obj NIL\051)SH
11640 38146 MT
(\050:value \050o-formula \050gvl :value-obj :string\051\051\051)SH
11640 39011 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 39876 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
8280 42934 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(radio-button)SH
11 /Times-Roman AF
25680 XM
(and)SH
10 /Courier AF
27543 XM
(radio-button-panel)SH
11 /Times-Roman AF
38618 XM
(is "radio-buttons-loader".)SH
8280 45232 MT
(The)SH
10 /Courier AF
10318 XM
(radio-button-panel)SH
11 /Times-Roman AF
21446 XM
(is a set of circular buttons with items appearing to either the left or right of)53 W
8280 46428 MT
(the buttons \050implementation of)47 W
10 /Courier AF
22340 XM
(:text-on-left-p)SH
11 /Times-Roman AF
31662 XM
(and)SH
10 /Courier AF
33572 XM
(:text-offset)SH
11 /Times-Roman AF
41094 XM
(is identical to x-buttons\051.)
47 W( Only)370 W
8280 47624 MT
(one button may be selected)
96 W( at a time, with an inverse circle indicating the currently selected button.  A)95 W
10 /Courier AF
8280 48820 MT
(radio-button)SH
11 /Times-Roman AF
15755 XM
(is a single button.)SH
14 /Times-Bold AF
8280 52638 MT
(3.6. Option Button)SH
8 /Courier AF
10200 53803 MT
(\050create-instance 'gg:Option-Button opal:aggregadget)SH
11160 54668 MT
(\050:maybe-constant '\050:left :top :text-offset :label :button-offset :button-shadow-offset)SH
20280 55533 MT
(:items :initial-item :button-font :label-font :button-fixed-width-p)SH
20280 56398 MT
(:v-spacing :keep-menu-in-screen-p :menu-h-align\051\051)SH
11160 57263 MT
(\050:left 40\051 \050:top 40\051)SH
11160 58128 MT
(\050:text-offset 4\051)SH
11160 58993 MT
(\050:label "Option button:"\051)SH
11160 59858 MT
(\050:button-offset 10\051)SH
11160 60723 MT
(\050:button-shadow-offset 5\051)SH
11160 61588 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" "Item 4"\051\051)SH
11160 62453 MT
(\050:initial-item \050o-formula \050first \050gvl :items\051\051\051\051)SH
11160 63318 MT
(\050:button-font opal:default-font\051)SH
11160 64183 MT
(\050:label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 65048 MT
(\050:value \050o-formula \050gvl :option-text-button :string\051\051\051)SH
11160 65913 MT
(\050:button-fixed-width-p T\051)SH
11160 66778 MT
(\050:v-spacing 0\051)SH
11160 67643 MT
(\050:menu-h-align :left\051)SH
11160 68508 MT
(\050:keep-menu-in-screen-p T\051)SH
11160 69373 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 70238 MT
(...\051)SH
11 /Times-Roman AF
8280 71659 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(option-button)SH
11 /Times-Roman AF
26280 XM
(is "option-button-loader".)SH
ES
%%Page: 372 25
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 372)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 -4320 45075 GB 
%%BeginDocument: gadgets/option-button-normal.ps
%!PS-Adobe-2.0
%%Title: Option Demo
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 4:22 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 216 351 396 441
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
144 -279 translate
gsave
0 648 180 90 ClipToRectangle
0 0 translate
gsave
15 633 622 39 14 0 false 0 0 0 false 0 0 0 false (Color:) 12 /Courier-Bold DrawText
66 635 37 22 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
64 637 37 22 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
64 637 37 22 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
68 633 622 29 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier-BoldOblique DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-BoldOblique /Courier-Bold 
%%BoundingBox: 216 351 396 441

%%EndDocument
 GE 75 100 0 16830 42675 GB 
%%BeginDocument: gadgets/option-button-pressed.ps
%!PS-Adobe-2.0
%%Title: 
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 4:07 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 222 319 391 473
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
150 -247 translate
gsave
0 648 169 154 ClipToRectangle
0 0 translate
gsave
%0 648 169 154 0 0 0 0 false 0 0 [] -1 0 1.00 1.00 1.00 true DrawRectangle
grestore

gsave

%
% Begin new window
%
0 -13 translate
gsave
0 648 169 42 ClipToRectangle
0 0 translate
gsave
85 598 587 27 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier DrawText
15 633 622 39 14 0 false 0 0 0 false 0 0 0 false (Color:) 12 /Courier-Bold DrawText
grestore

grestore

grestore

gsave

%
% Begin new window
%
64 0 translate
gsave
0 648 84 154 ClipToRectangle
0 0 translate
gsave
0 648 84 154 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
0 648 84 154 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
1 625 82 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
4 644 633 23 14 0 false 0 0 0 false 0 0 0 false (Red) 12 /Courier-BoldOblique DrawText
4 622 611 29 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier-BoldOblique DrawText
4 600 589 35 14 0 false 0 0 0 false 0 0 0 false (Green) 12 /Courier-BoldOblique DrawText
4 578 567 42 14 0 false 0 0 0 false 0 0 0 false (Yellow) 12 /Courier-BoldOblique DrawText
4 556 545 71 14 0 false 0 0 0 false 0 0 0 false (Aquamarine) 12 /Courier-BoldOblique DrawText
4 534 523 28 14 0 false 0 0 0 false 0 0 0 false (Cyan) 12 /Courier-BoldOblique DrawText
4 512 501 76 14 0 false 0 0 0 false 0 0 0 false (Fluorescent) 12 /Courier-BoldOblique DrawText
grestore

grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-BoldOblique /Courier-Bold /Courier 
%%BoundingBox: 222 319 391 473

%%EndDocument
 GE /Times-Bold SF
6120 20502 MT
(Figure 3-3:)SH
/Times-Roman SF
11893 XM
(An option button in its normal state \050left\051, and showing the available options)
26 W( after the button)27 W
11893 21698 MT
(is pressed \050right\051.)SH
6120 23996 MT
(When the left mouse button)
134 W( is clicked and held on an option button, a menu will pop up, from which)133 W
6120 25192 MT
(items can be selected by moving the pointer to the desired item and releasing)
76 W( the mouse button.  Figure)77 W
6120 26388 MT
(3-3 shows an option button in its normal state \050on the left\051 and when the button is pressed.)SH
6120 28686 MT
(The)SH
10 /Courier AF
8510 XM
(:items)SH
11 /Times-Roman AF
12790 XM
(slot is a list of strings or Garnet objects, which will appear in the menu.  The)404 W
10 /Courier AF
6120 29882 MT
(:initial-item)SH
11 /Times-Roman AF
14310 XM
(slot contains the initial item that)
115 W( will appear in the button.  This slot MUST be non-)116 W
6120 31078 MT
(NIL, and should contain either an element of the)SH
10 /Courier AF
27746 XM
(:items)SH
11 /Times-Roman AF
31621 XM
(list, or a formula to calculate the same.)SH
6120 33376 MT
(The)SH
10 /Courier AF
8587 XM
(:text-offset)SH
11 /Times-Roman AF
16544 XM
(slot specifies how far)
482 W( from the frame the text should begin.  The slot)481 W
10 /Courier AF
6120 34572 MT
(:button-offset)SH
11 /Times-Roman AF
15711 XM
(specifies how far from the)
916 W( label the button should begin.  The)917 W
10 /Courier AF
6120 35768 MT
(:button-shadow-offset)SH
11 /Times-Roman AF
18995 XM
(contains the size of the button's shadow.)SH
6120 38066 MT
(The)SH
10 /Courier AF
8191 XM
(:label)SH
11 /Times-Roman AF
12152 XM
(slot contains a string that)
86 W( appears before the option button.  If no label is desired, this slot)85 W
6120 39262 MT
(can be set to the empty string, "".)SH
6120 41560 MT
(The)SH
10 /Courier AF
8216 XM
(:button-font)SH
11 /Times-Roman AF
15802 XM
(and)SH
10 /Courier AF
17776 XM
(:label-font)SH
11 /Times-Roman AF
24762 XM
(slots specify the fonts to use in the button and the label.  The)112 W
6120 42756 MT
(font of the items in the menu is the same as the font in the)SH
10 /Courier AF
31875 XM
(:button-font)SH
11 /Times-Roman AF
39350 XM
(slot.)SH
6120 45054 MT
(The)SH
10 /Courier AF
8135 XM
(:value)SH
11 /Times-Roman AF
12040 XM
(slot contains the currently selected item, which is the same as the value in the)30 W
10 /Courier AF
46826 XM
(:string)SH
11 /Times-Roman AF
51330 XM
(slot)SH
6120 46250 MT
(of the button.)SH
6120 48548 MT
(The)SH
10 /Courier AF
8128 XM
(:button-fixed-width-p)SH
11 /Times-Roman AF
21026 XM
(slot specifies)
23 W( whether to keep the button's width constant or not.  If it is)24 W
6120 49744 MT
(set to T, the button's width will be the width of the longest string in the)52 W
10 /Courier AF
38577 XM
(:items)SH
11 /Times-Roman AF
42504 XM
(slot. If)
379 W( it is set to)
52 W( NIL,)51 W
6120 50940 MT
(the width of the button will be the width of the currently selected item.)SH
6120 53238 MT
(The value in)SH
10 /Courier AF
11893 XM
(:v-spacing)SH
11 /Times-Roman AF
18168 XM
(specifies the amount of space between each menu item.)SH
6120 55536 MT
(The)SH
10 /Courier AF
8187 XM
(:menu-h-align)SH
11 /Times-Roman AF
16344 XM
(slot should be either)82 W
10 /Courier AF
25838 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29470 XM
(:center)SH
11 /Times-Roman AF
(, or)83 W
10 /Courier AF
35577 XM
(:right)SH
11 /Times-Roman AF
(, and specifies the justification)83 W
6120 56732 MT
(of the menu items.)SH
6120 59030 MT
(If the)39 W
10 /Courier AF
8824 XM
(:keep-menu-in-screen-p)SH
11 /Times-Roman AF
22338 XM
(slot is T, then the menu will never pop out of the screen,)
39 W( i.e., the top)38 W
6120 60226 MT
(of the menu will never be less than the screen's top, and the bottom of the menu will never)
3 W( be greater than)4 W
6120 61422 MT
(the screen's bottom.  If this slot is set to NIL, the menu may pop out of)
16 W( the top or out of the bottom of the)15 W
6120 62618 MT
(screen. NOTE:)
515 W( If the number)
120 W( of items in the menu makes it so that both the top of the menu and the)121 W
6120 63814 MT
(bottom of the menu are out of the screen, this slot will be disregarded.)SH
ES
%%Page: 373 26
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.7)
SH( Popup-Menu-Button)1800 W
51386 XM
(Page 373)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.7. Popup-Menu-Button)SH
11 SS 
75 100 0 8767 44835 GB 
%%BeginDocument: gadgets/popupmenubutton.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jun 23, 1993, 3:32 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 194 315 417 476
%%%Pages: 1
%%EndComments


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 9 10 <
007f ffff ffff 007f ffff ffff 007f ffff ffff 007f>
DefImage

/image-1 /image-1-font 4 4 <
f0 f0 f0 f0>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
122 404 translate

%
% Begin new window
%
gsave
0 0 223 161 ClipToRectangle
gsave
0 0 223 161 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 180 90 2 2 2 2 DrawGenericWindowFrame
0 0 180 90 ClipToRectangle
gsave
17 -12 19 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
15 -10 19 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
17 -12 15 16 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
20 -15 9 10 image-2 false [0 0 0] DrawBitmap
85 -50 -61 38 14 false [0 0 0] [1 1 1] ("Blue") 12 /Courier DrawText
15 -50 -61 70 14 false [0 0 0] [1 1 1] (Selected: ) 12 /Courier DrawText
132 -12 19 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
132 -12 19 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
134 -14 15 16 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
137 -17 9 10 image-2 false [0 0 0] DrawBitmap
grestore

grestore


%
% Begin new window
%
gsave
132 -34 translate
() 0 0 83 98 0 0 0 0 DrawGenericWindowFrame
0 0 83 98 ClipToRectangle
gsave
0 0 83 98 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
0 0 83 98 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
1 -15 81 12 [0 0 0] 0 0 [] 1 null DrawRectangle
3 0 -11 21 14 false [0 0 0] [1 1 1] (Red) 12 /Courier DrawText
3 -14 -25 27 14 false [0 0 0] [1 1 1] (Blue) 12 /Courier DrawText
3 -28 -39 34 14 false [0 0 0] [1 1 1] (Green) 12 /Courier DrawText
3 -42 -53 42 14 false [0 0 0] [1 1 1] (Yellow) 12 /Courier DrawText
3 -56 -67 69 14 false [0 0 0] [1 1 1] (Aquamarine) 12 /Courier DrawText
3 -70 -81 27 14 false [0 0 0] [1 1 1] (Cyan) 12 /Courier DrawText
3 -84 -95 77 14 false [0 0 0] [1 1 1] (Fluorescent) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier Helvetica-Bold 
%%BoundingBox: 194 315 417 476

%%EndDocument
 GE 8 /Courier AF
10200 22706 MT
(\050create-instance 'gg:Popup-Menu-Button gg:text-button)SH
11160 23571 MT
(\050:left 0\051)SH
11160 24436 MT
(\050:top 0\051)SH
11160 25301 MT
(\050:string gg:lines-bitmap\051)SH
11160 26166 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" "Item 4"\051\051)SH
11160 27031 MT
(\050:v-spacing 0\051)SH
11160 27896 MT
(\050:h-align :LEFT\051)SH
11160 28761 MT
(\050:item-font opal:default-font\051)SH
11160 29626 MT
(\050:item-to-string-function)SH
11640 30491 MT
(#'\050lambda \050item\051)SH
13560 31356 MT
(\050if item)SH
15480 32221 MT
(\050if \050or \050stringp item\051 \050schema-p item\051\051)SH
17400 33086 MT
(item)SH
17400 33951 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
15480 34816 MT
(""\051\051\051)SH
11160 35681 MT
(\050:min-menu-width 0\051)SH
11160 36546 MT
(\050:shadow-offset 2\051)SH
11160 37411 MT
(\050:text-offset 3\051)SH
11160 38276 MT
(\050:gray-width 2\051)SH
11160 39141 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 40006 MT
(\050:value \050o-formula ...\051\051)SH
11160 40871 MT
(\050:position :below\051)SH
11160 41736 MT
(\050:keep-menu-in-screen-p T\051)SH
11 /Times-Roman AF
8280 43157 MT
(The loader file for the)224 W
10 /Courier AF
19325 XM
(popup-menu-button)SH
11 /Times-Roman AF
30024 XM
(is)SH
10 /Courier AF
31257 XM
(popup-menu-button-loader)SH
11 /Times-Roman AF
(, and you)
224 W( can see a)223 W
8280 44353 MT
(demo by executing)SH
10 /Courier AF
16925 XM
(\050gg:popup-menu-button-go\051)SH
11 /Times-Roman AF
(. \050Sorry,)
275 W( there isn't a Motif version yet.\051)SH
8280 46651 MT
(This is a combination of a button and a popup menu.)
40 W( When)
356 W( you press on the button, the menu is shown,)41 W
8280 47847 MT
(and then you can select something from)
62 W( the menu, and then the menu disappears.  If you release outside)61 W
8280 49043 MT
(of the menu, the menu just goes away and keeps its current value.  The button itself can)
45 W( show a string or)46 W
8280 50239 MT
(an arbitrary Garnet object \050e.g., a bitmap, as shown here\051.)SH
8280 52537 MT
(The)SH
10 /Courier AF
10265 XM
(:left)SH
11 /Times-Roman AF
13540 XM
(and)SH
10 /Courier AF
15403 XM
(:top)SH
11 /Times-Roman AF
18078 XM
(determine when the button goes.)SH
8280 54835 MT
(The)SH
10 /Courier AF
10327 XM
(:string)SH
11 /Times-Roman AF
14864 XM
(slot determines what)
62 W( is shown in the button.  It can be a regular string \050e.g.,)61 W
10 /Courier AF
49262 XM
("Value")SH
11 /Times-Roman AF
(\051 or)61 W
8280 56031 MT
(an arbitrary Garnet object.  The default)
82 W( value is the)83 W
10 /Courier AF
31857 XM
(gg:lines-bitmap)SH
11 /Times-Roman AF
41215 XM
(shown above.  Another bitmap)83 W
8280 58572 MT
(provided is)SH
10 /Courier AF
13474 XM
(gg:downarrow-bitmap)SH
11 /Times-Roman AF
25149 XM
(which looks like)SH
1 1 0 3196 97072 GB 
%%BeginDocument: gadgets/downarrowpopup.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Opal 37
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jun 23, 1993, 3:49 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 295 385 317 408
%%%Pages: 1
%%EndComments


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 9 10 <
f7ff ebff ddff beff 1c7f ddff ddff ddff ddff c1ff>
DefImage

/image-1 /image-1-font 4 4 <
f0 f0 f0 f0>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
223 336 translate

%
% Begin new window
%
gsave
0 0 22 23 ClipToRectangle
gsave
0 0 22 23 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 22 23 ClipToRectangle
gsave
2 -2 19 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
0 0 19 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
2 -2 15 16 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
5 -5 9 10 image-2 false [0 0 0] DrawBitmap
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 295 385 317 408

%%EndDocument
 GE 34896 XM
(.)SH
8280 60870 MT
(The)SH
10 /Courier AF
10325 XM
(:items)SH
11 /Times-Roman AF
14260 XM
(slot holds the items that are shown in the popup menu.  It can have the)
60 W( standard format for)59 W
8280 62066 MT
(items \050e.g., a list of strings, objects, pairs of strings and functions, etc.\051.  See)
183 W( section 1.4.3 for more)184 W
8280 63262 MT
(information.)SH
8280 65560 MT
(The)SH
10 /Courier AF
10508 XM
(:v-spacing, :h-align,)243 W
11 /Times-Roman AF
23869 XM
(and)SH
10 /Courier AF
25975 XM
(:item-font)SH
11 /Times-Roman AF
32493 XM
(control the)
243 W( display of the menu items.  See the)242 W
8280 66756 MT
(Gadgets manual for menus for more information.)SH
8280 69054 MT
(The)SH
10 /Courier AF
10342 XM
(:min-menu-width)SH
11 /Times-Roman AF
19694 XM
(slot can contain a minimum width for)
77 W( the popup menu.  You might use this to)78 W
8280 70250 MT
(make the menu line up with a text entry field.)SH
ES
%%Page: 374 27
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 374)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The)SH
10 /Courier AF
8105 XM
(:item-to-string-function)SH
11 /Times-Roman AF
22780 XM
(can be used to convert the values in the)SH
10 /Courier AF
40343 XM
(:items)SH
11 /Times-Roman AF
44218 XM
(list into strings.)SH
6120 10253 MT
(The)SH
10 /Courier AF
8284 XM
(:shadow-offset)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
17413 XM
(:text-offset)SH
11 /Times-Roman AF
25067 XM
(and)SH
10 /Courier AF
27109 XM
(:gray-width)SH
11 /Times-Roman AF
34163 XM
(parameters control the appearance of)
179 W( the)178 W
6120 11449 MT
(button itself.)SH
6120 13747 MT
(When the user selects a menu item, the)SH
10 /Courier AF
23561 XM
(:selection-function)SH
11 /Times-Roman AF
35236 XM
(is called with parameters:)SH
10 /Courier AF
6120 14943 MT
(\050lambda \050gadget value\051\051)348 W
11 /Times-Roman AF
(, where the gadget is the)
348 W( popup-menu-button and the value is the)349 W
6120 16139 MT
(appropriate item from)SH
10 /Courier AF
16047 XM
(:items)SH
11 /Times-Roman AF
(. The)275 W
10 /Courier AF
22457 XM
(:value)SH
11 /Times-Roman AF
26332 XM
(slot will also be set with the appropriate item.)SH
6120 18437 MT
(The position of the menu with respect to the button is controlled by the)110 W
10 /Courier AF
39190 XM
(:position)SH
11 /Times-Roman AF
44975 XM
(parameter. Legal)495 W
6120 19633 MT
(options are:)SH
10 /Courier AF
8320 21584 MT
(:below)SH
11 /Times-Roman AF
12195 XM
(- the menu is below and left justified with the button \050the default\051.)SH
10 /Courier AF
8320 23279 MT
(:left)SH
11 /Times-Roman AF
11595 XM
(- the menu will be centered vertically at the left of the button.)SH
10 /Courier AF
8320 24974 MT
(:right)SH
11 /Times-Roman AF
12195 XM
(- the menu will be centered vertically at the right of the button.)SH
8320 26669 MT
(a list of two numbers \050x y\051 - the menu will be at this location.  The)83 W
10 /Courier AF
39243 XM
(:position)SH
11 /Times-Roman AF
45001 XM
(slot can contain a)84 W
11620 27865 MT
(formula that calculates these numbers.)SH
6120 30163 MT
(If)SH
10 /Courier AF
7447 XM
(:keep-menu-in-screen-p)SH
11 /Times-Roman AF
21242 XM
(is non-NIL, then the position computed)
320 W( based on the)319 W
10 /Courier AF
47520 XM
(:position)SH
11 /Times-Roman AF
6120 31359 MT
(argument will be adjusted so the menu always stays in the screen.  Otherwise, the menu might extend off)34 W
6120 32555 MT
(the screen edges.)SH
14 /Times-Bold AF
6120 36373 MT
(3.8. Menu)SH
8 /Courier AF
8040 37538 MT
(\050create-instance 'gg:Menu opal:aggregadget)SH
9480 38403 MT
(\050:maybe-constant '\050:left :top :v-spacing :h-align :shadow-offset)SH
18600 39268 MT
(:text-offset :title :title-font :items :item-font)SH
18600 40133 MT
(:item-to-string-function :visible\051\051)SH
9480 40998 MT
(\050:left 0\051)SH
9480 41863 MT
(\050:top 0\051)SH
9480 42728 MT
(\050:v-spacing 0\051)SH
9480 43593 MT
(\050:h-align :left\051)SH
9480 44458 MT
(\050:shadow-offset 5\051)SH
9480 45323 MT
(\050:text-offset 4\051)SH
9480 46188 MT
(\050:min-menu-width 0\051)SH
9480 47053 MT
(\050:title NIL\051)SH
9480 47918 MT
(\050:title-font \050create-instance NIL opal:font)SH
17160 48783 MT
(\050:family :serif\051)SH
17160 49648 MT
(\050:size :large\051)SH
17160 50513 MT
(\050:face :roman\051\051\051)SH
9480 51378 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" "Item 4"\051\051)SH
9480 52243 MT
(\050:item-font opal:default-font\051)SH
9480 53108 MT
(\050:item-to-string-function #'\050lambda \050item\051)SH
23880 53973 MT
(\050if item)SH
25800 54838 MT
(\050if \050or \050stringp item\051 \050schema-p item\051\051)SH
27720 55703 MT
(item)SH
26760 56568 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
24840 57433 MT
(""\051\051\051)SH
9480 58298 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 59163 MT
(\050:value-obj NIL\051)SH
9480 60028 MT
(\050:value \050o-formula \050gvl :value-obj :string\051\051\051\051)SH
ES
%%Page: 375 28
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.9)
SH( Scrolling)
1800 W( Menu)SH
51386 XM
(Page 375)SH
46800 50 8280 4486 UL
11 SS 
75 100 0 8730 42525 GB 
%%BeginDocument: gadgets/menu-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 10
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 3:47 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 321 431 471
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -249 translate
gsave
0 648 250 150 ClipToRectangle
0 0 translate
gsave
105 623 49 117 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
100 628 49 117 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
101 627 47 27 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
104 624 607 41 21 1 false 0 0 0 false 0 0 0 false (Menu) 18 /Times-Roman DrawText
104 595 584 20 14 0 false 0 0 0 false 0 0 0 false (Cut) 12 /Courier DrawText
104 573 562 27 14 0 false 0 0 0 false 0 0 0 false (Copy) 12 /Courier DrawText
104 551 540 34 14 0 false 0 0 0 false 0 0 0 false (Paste) 12 /Courier DrawText
104 529 518 27 14 0 false 0 0 0 false 0 0 0 false (Undo) 12 /Courier DrawText
grestore

grestore

0 648 250 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Times-Roman 
%%BoundingBox: 181 321 431 471

%%EndDocument
 GE 8280 20748 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(menu)SH
11 /Times-Roman AF
20880 XM
(is "menu-loader".)SH
8280 23046 MT
(The)SH
10 /Courier AF
10307 XM
(menu)SH
11 /Times-Roman AF
13023 XM
(object is a set of text items surrounded by a rectangular frame, with an optional title above the)41 W
8280 24242 MT
(items in inverse video.  When an)
186 W( item is selected, a box is momentarily drawn around the item and)187 W
8280 25438 MT
(associated item functions and global functions are executed.)SH
8280 27736 MT
(The)SH
10 /Courier AF
10435 XM
(:items)SH
11 /Times-Roman AF
14480 XM
(slot may be a list of strings, atoms, string/function pairs or atom/function)
170 W( pairs, as with)169 W
8280 28932 MT
(buttons \050see section 3.5\051.  If this slot is)17 W
10 /Courier AF
25696 XM
(s-value)SH
11 /Times-Roman AF
('d with a new list)
17 W( of items, the components of the gadget)18 W
8280 30128 MT
(will be adjusted automatically during the next call to)SH
10 /Courier AF
31713 XM
(opal:update)SH
11 /Times-Roman AF
(.)SH
8280 32426 MT
(The amount of shadow that)
64 W( appears below the menu frame \050the menu frame is stationary\051 is specified in)63 W
10 /Courier AF
8280 33622 MT
(:shadow-offset)SH
11 /Times-Roman AF
(. A)
275 W( value of zero implies that no shadow will appear.)SH
8280 35920 MT
(The slot)217 W
10 /Courier AF
12564 XM
(:h-align)SH
11 /Times-Roman AF
17856 XM
(determines how the menu items)
217 W( are justified in the frame.  Allowed values are)218 W
10 /Courier AF
8280 37116 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11830 XM
(:center)SH
11 /Times-Roman AF
16305 XM
(and)SH
10 /Courier AF
18168 XM
(:right)SH
11 /Times-Roman AF
(.)SH
8280 39414 MT
(The slot)SH
10 /Courier AF
12130 XM
(:text-offset)SH
11 /Times-Roman AF
19605 XM
(is the margin spacing -- the distance from the frame to the longest string.)SH
8280 41712 MT
(The slot)SH
10 /Courier AF
12130 XM
(:item-font)SH
11 /Times-Roman AF
18405 XM
(determines the font in which the items will appear.)SH
8280 44010 MT
(A title for the)
37 W( menu may be specified as a string in the)36 W
10 /Courier AF
32914 XM
(:title)SH
11 /Times-Roman AF
36825 XM
(slot. If)347 W
10 /Courier AF
40355 XM
(:title)SH
11 /Times-Roman AF
44266 XM
(is NIL, then no title will)36 W
8280 45206 MT
(appear. The)
275 W( font in which the title should appear is specified in)SH
10 /Courier AF
36566 XM
(:title-font)SH
11 /Times-Roman AF
(.)SH
8280 47504 MT
(The)SH
10 /Courier AF
10272 XM
(:items)SH
11 /Times-Roman AF
14154 XM
(slot may be a list)
7 W( of any objects, including strings, atoms, schemas, string/function pairs, etc.)8 W
8280 48700 MT
(The default scrolling menu assumes that)4 W
10 /Courier AF
26328 XM
(:items)SH
11 /Times-Roman AF
30207 XM
(contains a list as)
4 W( described in section 3.5, but this can be)3 W
8280 49896 MT
(easily changed by the)
51 W( designer.  A function defined in)52 W
10 /Courier AF
32836 XM
(:item-to-string-function)SH
11 /Times-Roman AF
47563 XM
(takes an item \050or)52 W
8280 51092 MT
(the first element of an item pair\051)
65 W( and returns a string corresponding to that item for display in the menu.)64 W
8280 52288 MT
(The default function for this slot is)SH
8 /Courier AF
10200 53453 MT
(\050lambda \050item\051)SH
11160 54318 MT
(\050if item)SH
13080 55183 MT
(\050if \050stringp item\051)SH
15000 56048 MT
(item)SH
15000 56913 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
13080 57778 MT
(""\051\051)SH
11 /Times-Roman AF
8280 60076 MT
(This function takes an item and returns it if it is a string, or coerces it into a)
35 W( string if it was an atom.  See)36 W
8280 61272 MT
(section 5.5 for an example where the)SH
10 /Courier AF
24772 XM
(:items)SH
11 /Times-Roman AF
28647 XM
(list is composed of Garnet schemas.)SH
ES
%%Page: 376 29
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 376)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(3.9. Scrolling Menu)SH
11 SS 
75 100 0 6570 45210 GB 
%%BeginDocument: gadgets/scrolling-menu-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 15
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 4:02 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 156 311 456 481
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
84 -239 translate
gsave
0 648 300 170 ClipToRectangle
0 0 translate
gsave
20 588 20 47 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
20 628 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 625 23 618 27 618 27 611 33 611 33 618 37 618 30 625 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
20 521 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 504 23 511 27 511 27 518 33 518 33 511 37 511 30 504 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
20 608 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 604 23 597 37 597 30 604 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
30 600 23 593 37 593 30 600 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
20 541 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 525 23 532 37 532 30 525 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
30 529 23 536 37 536 30 529 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
40 628 71 127 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
55 625 608 41 21 0 false 0 0 0 false 0 0 0 false (Menu) 18 /Times-Roman DrawText
41 627 69 25 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
44 598 587 41 14 0 false 0 0 0 false 0 0 0 false (Geneva) 12 /Courier DrawText
44 578 567 34 14 0 false 0 0 0 false 0 0 0 false (Times) 12 /Courier DrawText
44 558 547 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
44 538 527 47 14 0 false 0 0 0 false 0 0 0 false (Courier) 12 /Courier DrawText
44 518 507 63 14 0 false 0 0 0 false 0 0 0 false (Helvetica) 12 /Courier DrawText
233 608 20 87 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
233 628 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
243 625 236 618 240 618 240 611 246 611 246 618 250 618 243 625 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
233 521 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
243 504 236 511 240 511 240 518 246 518 246 511 250 511 243 504 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
234 562 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
150 628 83 127 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
154 625 613 75 15 0 false 0 0 0 false 0 0 0 false (Scrolling Menu) 12 /Times-Italic DrawText
151 627 81 20 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
154 603 592 40 14 0 false 0 0 0 false 0 0 0 false (Item 8) 12 /Courier DrawText
154 582 571 40 14 0 false 0 0 0 false 0 0 0 false (Item 9) 12 /Courier DrawText
154 561 550 47 14 0 false 0 0 0 false 0 0 0 false (Item 10) 12 /Courier DrawText
154 540 529 47 14 0 false 0 0 0 false 0 0 0 false (Item 11) 12 /Courier DrawText
154 519 508 47 14 0 false 0 0 0 false 0 0 0 false (Item 12) 12 /Courier DrawText
grestore

grestore

0 648 300 170 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Italic /Courier /Times-Roman 
%%BoundingBox: 156 311 456 481

%%EndDocument
 GE 8 /Courier AF
8040 23381 MT
(\050create-instance 'gg:Scrolling-Menu opal:aggregadget)SH
9480 24246 MT
(\050:maybe-constant '\050:left :top :scroll-on-left-p :min-scroll-bar-width :scr-trill-p)SH
18600 25111 MT
(:page-trill-p :indicator-text-p :scr-incr :page-incr)SH
18600 25976 MT
(:int-scroll-feedback-p :indicator-font :min-frame-width :v-spacing)SH
18600 26841 MT
(:h-align :multiple-p :items :item-to-string-function :item-font)SH
18600 27706 MT
(:num-visible :int-menu-feedback-p :final-feedback-p :text-offset)SH
18600 28571 MT
(:title :title-font :visible\051\051)SH
9480 29436 MT
(\050:left 0\051 \050:top 0\051)SH
/Times-Italic SF
9480 31166 MT
(;; Scroll bar slots)SH
/Courier SF
9480 32031 MT
(\050:scroll-on-left-p T\051)SH
9480 32896 MT
(\050:min-scroll-bar-width 20\051)SH
9480 33761 MT
(\050:scr-trill-p T\051)SH
9480 34626 MT
(\050:page-trill-p T\051)SH
9480 35491 MT
(\050:indicator-text-p NIL\051)SH
9480 36356 MT
(\050:scr-incr 1\051)SH
9480 37221 MT
(\050:page-incr 5\051)SH
9480 38086 MT
(\050:int-scroll-feedback-p NIL\051)SH
9480 38951 MT
(\050:indicator-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
9480 39816 MT
(\050:scroll-selection-function NIL\051)SH
/Times-Italic SF
9480 41546 MT
(;; Menu slots)SH
/Courier SF
9480 42411 MT
(\050:min-frame-width 0\051)SH
9480 43276 MT
(\050:v-spacing 6\051)SH
9480 44141 MT
(\050:h-align :left\051)SH
9480 45006 MT
(\050:multiple-p T\051)SH
9480 45871 MT
(\050:toggle-p T\051)SH
9480 46736 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" ... "Item 20"\051\051)SH
9480 47601 MT
(\050:item-to-string-function)SH
11400 48466 MT
(#'\050lambda \050item\051)SH
13320 49331 MT
(\050if item)SH
15240 50196 MT
(\050if \050stringp item\051)SH
17160 51061 MT
(item)SH
17160 51926 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
15240 52791 MT
(""\051\051\051)SH
9480 53656 MT
(\050:item-font opal:default-font\051)SH
9480 54521 MT
(\050:num-visible 5\051)SH
9480 55386 MT
(\050:int-menu-feedback-p T\051)SH
9480 56251 MT
(\050:final-feedback-p T\051)SH
9480 57116 MT
(\050:text-offset 4\051)SH
9480 57981 MT
(\050:title NIL\051)SH
9480 58846 MT
(\050:title-font \050create-instance NIL opal:font)SH
17160 59711 MT
(\050:family :serif\051)SH
17160 60576 MT
(\050:size :large\051)SH
17160 61441 MT
(\050:face :roman\051\051\051)SH
9480 62306 MT
(\050:menu-selection-function NIL\051)SH
9480 63171 MT
(\050:selected-ranks NIL\051)SH
9480 64036 MT
(\050:value \050o-formula ...\051\051\051)SH
11 /Times-Roman AF
6120 66334 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(scrolling-menu)SH
11 /Times-Roman AF
24720 XM
(gadget is "scrolling-menu-loader".)SH
6120 68632 MT
(The)SH
10 /Courier AF
8152 XM
(scrolling-menu)SH
11 /Times-Roman AF
16874 XM
(object is a combination of a vertical scroll bar and a menu which allows the user)47 W
6120 69828 MT
(to only see a subset of the available choices in a menu at one)
40 W( time.  The set of visible choices is changed)41 W
6120 71024 MT
(by moving the scroll bar, which causes the choices to scroll up or down in the menu.)SH
ES
%%Page: 377 30
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.9)
SH( Scrolling)
1800 W( Menu)SH
51386 XM
(Page 377)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.9.1. Scroll Bar Control)SH
11 /Times-Roman AF
8280 9200 MT
(If the slot)218 W
10 /Courier AF
13425 XM
(:scroll-on-left-p)SH
11 /Times-Roman AF
24118 XM
(is T, then the scroll)
218 W( bar will appear on the left side of the menu.)217 W
8280 10396 MT
(Otherwise, the scroll bar will be on the right.)SH
8280 12694 MT
(The slot)11 W
10 /Courier AF
12152 XM
(:min-scroll-bar-width)SH
11 /Times-Roman AF
25038 XM
(determines the minimum width of the scroll bar.  The scroll bar)
11 W( will)12 W
8280 13890 MT
(be wider than this width only if the indicator text is too wide to fit into this width.)SH
8280 16188 MT
(The interim feedback of the scroll)
52 W( bar is controlled by the slot)51 W
10 /Courier AF
36389 XM
(:int-scroll-feedback-p)SH
11 /Times-Roman AF
(. If)
377 W( this slot)51 W
8280 17384 MT
(is set to T, then a)
16 W( thick-lined box will follow the mouse when the user drags the indicator.  Otherwise, the)17 W
8280 18580 MT
(indicator will follow the mouse directly.)SH
8280 20878 MT
(A function may be specified in)203 W
10 /Courier AF
23366 XM
(:scroll-selection-function)SH
11 /Times-Roman AF
39443 XM
(to be executed whenever the user)202 W
8280 22074 MT
(changes the scroll bar, either by clicking)
125 W( on the trill boxes or by dragging the indicator.  The function)126 W
8280 23270 MT
(takes the same parameters as the usual selection function described in section 1.4.2.)SH
8280 25568 MT
(The slots)227 W
10 /Courier AF
13012 XM
(:scr-trill-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20988 XM
(:page-trill-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29564 XM
(:scr-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
35740 XM
(:page-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
42516 XM
(:indicator-text-p)SH
11 /Times-Roman AF
(, and)226 W
10 /Courier AF
8280 26764 MT
(:indicator-font)SH
11 /Times-Roman AF
17642 XM
(are all used for the scroll bar in the scrolling)
87 W( menu in the same way as the vertical)88 W
8280 27960 MT
(scroll bar described in section 3.1.)SH
12 /Times-Bold AF
8280 31644 MT
(3.9.2. Menu Control)SH
11 /Times-Roman AF
8280 32840 MT
(The minimum width of the scrolling menu frame is determined by)80 W
10 /Courier AF
38581 XM
(:min-frame-width)SH
11 /Times-Roman AF
(. The)
435 W( scrolling)79 W
8280 34036 MT
(menu will appear wider than this value only if the title or the longest item)
41 W( string will not fit in a menu of)42 W
8280 35232 MT
(this width.)SH
8280 37530 MT
(The)SH
10 /Courier AF
10265 XM
(:v-spacing)SH
11 /Times-Roman AF
16540 XM
(slot determines the distance between each item in the menu.)SH
8280 39828 MT
(The justification)
191 W( of the items in the menu is determined by the slot)190 W
10 /Courier AF
40296 XM
(:h-align)SH
11 /Times-Roman AF
45561 XM
(which may be either)190 W
10 /Courier AF
8280 41024 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11830 XM
(:center)SH
11 /Times-Roman AF
(, or)SH
10 /Courier AF
17771 XM
(:right)SH
11 /Times-Roman AF
(.)SH
8280 43322 MT
(If the value of)9 W
10 /Courier AF
14790 XM
(:multiple-p)SH
11 /Times-Roman AF
21674 XM
(is T, then the user may)
9 W( make multiple selections in the menu by clicking on)10 W
8280 44518 MT
(items while holding down the shift key.  If this slot is NIL, then only single selections are permitted.)SH
8280 46816 MT
(The)SH
10 /Courier AF
10422 XM
(:toggle-p)SH
11 /Times-Roman AF
16254 XM
(slot specifies whether to toggle the current selection when it is clicked on again.)
157 W( If)588 W
10 /Courier AF
8280 48012 MT
(:toggle-p)SH
11 /Times-Roman AF
14076 XM
(is NIL, then a selected item can be clicked upon for any number of times and it will)
121 W( stay)122 W
8280 49208 MT
(selected. If)
405 W( the)65 W
10 /Courier AF
15533 XM
(:toggle-p)SH
11 /Times-Roman AF
21273 XM
(slot is set to T \050the default\051, clicking on an already selected item)
65 W( will cause)64 W
8280 50404 MT
(the item to become unselected.  NOTE: Clicking on a selected item)
70 W( while doing multiple selections will)71 W
8280 51600 MT
(always toggle the selection, regardless of the value of the)SH
10 /Courier AF
33723 XM
(:toggle-p)SH
11 /Times-Roman AF
39398 XM
(slot.)SH
8280 53898 MT
(The)SH
10 /Courier AF
10268 XM
(:item-to-string-function)SH
11 /Times-Roman AF
24946 XM
(slot is identical in operation)
3 W( to the one described for the)2 W
10 /Courier AF
49747 XM
(gg:menu)SH
11 /Times-Roman AF
54224 XM
(in)SH
8280 55094 MT
(section 3.8.  If the)53 W
10 /Courier AF
16762 XM
(:items)SH
11 /Times-Roman AF
20690 XM
(slot does not contain a list of the)
53 W( usual items or item/function pairs, then this)54 W
8280 56290 MT
(function should return the)
697 W( conversion of each element into a valid item.  The default)696 W
10 /Courier AF
8280 57486 MT
(:item-to-string-function)SH
11 /Times-Roman AF
23323 XM
(assumes that the)368 W
10 /Courier AF
31912 XM
(:items)SH
11 /Times-Roman AF
36155 XM
(list is composed of the usual)
368 W( items or)369 W
8280 58682 MT
(item/function pairs.)SH
8280 60980 MT
(The slot)SH
10 /Courier AF
12130 XM
(:num-visible)SH
11 /Times-Roman AF
19605 XM
(determines how many items should be visible in the menu at one time.)SH
8280 63278 MT
(A box will appear around the item being selected)
238 W( while the mouse button is held down if the slot)237 W
10 /Courier AF
8280 64474 MT
(:int-menu-feedback-p)SH
11 /Times-Roman AF
20555 XM
(is T.)SH
8280 66772 MT
(Selected items will appear in inverse video if the slot)SH
10 /Courier AF
31864 XM
(:final-feedback-p)SH
11 /Times-Roman AF
42339 XM
(is set to T.)SH
8280 69070 MT
(The slot)SH
10 /Courier AF
12130 XM
(:text-offset)SH
11 /Times-Roman AF
19605 XM
(determines the distance from each string to the menu frame.)SH
8280 71368 MT
(A title will appear above the menu if a title string)
22 W( is specified in)23 W
10 /Courier AF
36942 XM
(:title)SH
11 /Times-Roman AF
(. If)321 W
10 /Courier AF
42443 XM
(:title)SH
11 /Times-Roman AF
46341 XM
(is NIL, then no title)23 W
ES
%%Page: 378 31
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 378)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(will appear.  The font of the title is in)SH
10 /Courier AF
22831 XM
(:title-font)SH
11 /Times-Roman AF
(.)SH
6120 10253 MT
(The font of the items is in)SH
10 /Courier AF
17761 XM
(:item-font)SH
11 /Times-Roman AF
(.)SH
6120 12551 MT
(The)SH
10 /Courier AF
8152 XM
(:selected-ranks)SH
11 /Times-Roman AF
17474 XM
(slot is used by the designer to select items in the menu.  The slot contains a)
47 W( list)46 W
6120 13747 MT
(of indices which)
109 W( correspond to the ranks of the selected items in the)110 W
10 /Courier AF
37697 XM
(:items)SH
11 /Times-Roman AF
41682 XM
(list. The)
495 W( ranks are zero-)110 W
6120 14943 MT
(based. For)
519 W( example, if)
122 W( the)121 W
10 /Courier AF
18824 XM
(:selected-ranks)SH
11 /Times-Roman AF
28220 XM
(slot contained)121 W
10 /Courier AF
34878 XM
('\0500 3\051)121 W
11 /Times-Roman AF
(, then the first and fourth items)121 W
6120 16139 MT
(\050not necessarily visible\051 in the scrolling menu will be selected.)SH
6120 18437 MT
(A function defined in)13 W
10 /Courier AF
15886 XM
(:menu-selection-function)SH
11 /Times-Roman AF
30574 XM
(will be executed whenever the user selects an item)14 W
6120 19633 MT
(from the menu.  This function takes two parameters,)SH
8 /Courier AF
8040 20798 MT
(\050lambda \050gadget scrolling-menu-item\051\051)SH
11 /Times-Roman AF
6120 22219 MT
(where)SH
/Times-Italic SF
9303 XM
(gadget)SH
/Times-Roman SF
12794 XM
(is the programmer's instance of the)222 W
10 /Courier AF
29948 XM
(scrolling-menu)SH
11 /Times-Roman AF
38845 XM
(and)SH
/Times-Italic SF
40930 XM
(scrolling-menu-item)SH
/Times-Roman SF
50346 XM
(is the)221 W
6120 23415 MT
(object just selected by)
18 W( the user.  The item associated with the user's selection can be obtained through the)19 W
10 /Courier AF
6120 24611 MT
(:item)SH
11 /Times-Roman AF
9395 XM
(slot of the)SH
/Times-Italic SF
14070 XM
(scrolling-menu-item)SH
/Times-Roman SF
(:)SH
8 /Courier AF
8040 25824 MT
(\050gv scrolling-menu-item :item\051)SH
/Times-Italic SF
22920 XM
(--> The item just selected)SH
14 /Times-Bold AF
6120 29642 MT
(3.10. Menubar)SH
8 /Courier AF
8040 30807 MT
(\050create-instance 'gg:Menubar opal:aggrelist)SH
9480 31672 MT
(\050:left 0\051\050:top 0\051)SH
9480 32537 MT
(\050:items NIL\051)SH
9480 33402 MT
(\050:title-font \050create-instance NIL opal:font \050:size :large\051\051\051)SH
9480 34267 MT
(\050:item-font \050create-instance NIL opal:font \050:face :italic\051\051\051)SH
9480 35132 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 35997 MT
(\051)SH
11 SS 
75 100 0 6607 71543 GB 
%%BeginDocument: gadgets/menubar-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 13
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 3, 1992, 4:22 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 218 333 393 458
%%%Pages: 1
%%EndComments


/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
        /color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
          color-p {red green blue setrgbcolor} if
          transparent-p
          % The case where the background is not drawn
          { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
          % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-2
<ffff ff3f ff3f fe7f ee7f e4ff e0ff e01f e03f e07f e0ff e1ff e3ff e7ff efff
ffff>
def

/image-1
<ff3f fe1f fe1f cc3f c43f c07f c00f c00f c01f c03f c07f c0ff c1ff c3ff c7ff
cfff>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
146 -262 translate
gsave
0 648 175 125 ClipToRectangle
0 0 translate
gsave
0 648 52 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
5 648 637 42 14 0 false 1.00 1.00 1.00 true 0 0 0 false (Family) 12 /Courier DrawText
52 648 37 14 0 0 0 0 false 0 0 [] -1 1 0 0 0 false DrawRectangle
57 648 637 27 14 0 false 0 0 0 false 0 0 0 false (Face) 12 /Courier DrawText
89 648 36 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
94 648 637 26 14 0 false 1.00 1.00 1.00 true 0 0 0 false (Size) 12 /Courier DrawText
10 448 437 34 14 0 false 0 0 0 false 0 0 0 false (fixed) 12 /Courier DrawText
75 448 437 34 14 0 false 0 0 0 false 0 0 0 false (roman) 12 /Courier DrawText
140 448 437 42 14 0 false 0 0 0 false 0 0 0 false (medium) 12 /Courier DrawText
75 418 407 33 14 0 false 0 0 0 false 0 0 0 false (combo) 12 /Courier DrawText
grestore

gsave

%
% Begin new window
%
52 -14 translate
gsave
0 648 86 96 ClipToRectangle
0 0 translate
gsave
5 643 632 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
5 619 76 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
5 619 608 28 14 1 false 0 0 0 false 0 0 0 false (Bold) 12 /Courier DrawText
59 614 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
59 614 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
59 614 16 16 image-2 true 0 0 0 false DrawBitmap
5 595 584 40 14 0 false 0 0 0 false 0 0 0 false (Italic) 12 /Courier DrawText
5 571 560 76 14 0 false 0 0 0 false 0 0 0 false (Bold-Italic) 12 /Courier DrawText
grestore

grestore

0 648 86 96 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 175 125 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 218 333 393 458

%%EndDocument
 GE /Times-Bold SF
6120 48320 MT
(Figure 3-4:)SH
/Times-Roman SF
11893 XM
(Picture of a pull-down menu \050an instance of)SH
10 /Courier AF
31503 XM
(menubar)SH
11 /Times-Roman AF
(\051)SH
6120 50271 MT
(The)SH
10 /Courier AF
8147 XM
(menubar)SH
11 /Times-Roman AF
12664 XM
(gadget is a set of pull down menus that is similar to the Macintosh design.)
42 W( When)
358 W( the user)41 W
6120 51467 MT
(clicks on an inverse bar item, a submenu pops up and the user can then choose one of the displayed items.)SH
/Times-Bold SF
6120 53765 MT
(NOTE:)SH
/Times-Roman SF
10858 XM
(There is no)352 W
10 /Courier AF
17137 XM
(:value)SH
11 /Times-Roman AF
21364 XM
(slot in this gadget.  The designer should)
352 W( define functions in the)353 W
10 /Courier AF
6120 54961 MT
(:selection-function)SH
11 /Times-Roman AF
17911 XM
(or)SH
10 /Courier AF
19218 XM
(:items)SH
11 /Times-Roman AF
23209 XM
(slots to propagate the user's selections to the rest of)
116 W( the interface)115 W
6120 56157 MT
(\050see below\051.)SH
6120 58455 MT
(The complete)164 W
10 /Courier AF
12740 XM
(menubar)SH
11 /Times-Roman AF
17379 XM
(gadget is a collection of three objects.  In)
164 W( addition to the top-level)165 W
10 /Courier AF
48720 XM
(menubar)SH
11 /Times-Roman AF
6120 59651 MT
(object, there are)163 W
10 /Courier AF
13937 XM
(bar-item)SH
11 /Times-Roman AF
19175 XM
(and)SH
10 /Courier AF
21201 XM
(submenu-item)SH
11 /Times-Roman AF
28839 XM
(objects. The)601 W
10 /Courier AF
35254 XM
(menubar)SH
11 /Times-Roman AF
39892 XM
(is an aggrelist of)163 W
10 /Courier AF
48120 XM
(bar-item)SH
11 /Times-Roman AF
6120 60847 MT
(objects, which are the inverse-video text objects that appear horizontally at the top of the window.)
81 W( The)439 W
10 /Courier AF
6120 62043 MT
(submenu-item)SH
11 /Times-Roman AF
13595 XM
(objects are vertically arranged in an aggrelist within each)SH
10 /Courier AF
39036 XM
(bar-item)SH
11 /Times-Roman AF
(.)SH
6120 64341 MT
(The programmer may approach the)102 W
10 /Courier AF
22419 XM
(menubar)SH
11 /Times-Roman AF
26996 XM
(from two perspectives:  the traditional Garnet way which)102 W
6120 65537 MT
(involves setting the)169 W
10 /Courier AF
15458 XM
(:items)SH
11 /Times-Roman AF
19503 XM
(slot and allowing the gadget to maintain its own components, or from a)170 W
6120 66733 MT
(bottom-up approach which involves creating the sub-objects and manually adding \050and)
97 W( removing\051 them)96 W
6120 67929 MT
(from the)SH
10 /Courier AF
10152 XM
(menubar)SH
11 /Times-Roman AF
14627 XM
(instance.)SH
6120 70227 MT
(Programmers who choose the Garnet approach can ignore most of the functions described below,)
103 W( since)104 W
6120 71423 MT
(interaction with the)292 W
10 /Courier AF
15825 XM
(menubar)SH
11 /Times-Roman AF
20591 XM
(will almost exclusively involve setting the)291 W
10 /Courier AF
41221 XM
(:items)SH
11 /Times-Roman AF
45387 XM
(slot. The)
857 W( other)291 W
ES
%%Page: 379 32
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.10)
SH( Menubar)1800 W
51386 XM
(Page 379)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(approach requires creating instances of)232 W
10 /Courier AF
26878 XM
(bar-item)SH
11 /Times-Roman AF
32186 XM
(and)SH
10 /Courier AF
34282 XM
(submenu-item)SH
11 /Times-Roman AF
41990 XM
(gadgets and adding them as)233 W
8280 9151 MT
(components to a)SH
10 /Courier AF
15765 XM
(menubar)SH
11 /Times-Roman AF
20240 XM
(using the support functions.)SH
12 /Times-Bold AF
8280 12835 MT
(3.10.1. Item Selection Functions)SH
11 /Times-Roman AF
8280 14031 MT
(There are three)
155 W( levels of functions in the)154 W
10 /Courier AF
27594 XM
(menubar)SH
11 /Times-Roman AF
32223 XM
(gadget that may be called when the user makes a)154 W
8280 15227 MT
(selection. Functions)
677 W( can be attached to individual submenu-items, whole submenus, or the top-level)202 W
10 /Courier AF
8280 16423 MT
(menubar)SH
11 /Times-Roman AF
(. All)
275 W( three types of functions take the parameters)SH
8 /Courier AF
10200 17588 MT
(\050lambda \050gadget menu-item submenu-item\051\051)SH
11 /Times-Roman AF
8280 19886 MT
(When a function is)
150 W( supplied in the)149 W
10 /Courier AF
24693 XM
(:selection-function)SH
11 /Times-Roman AF
36517 XM
(slot of the)149 W
10 /Courier AF
41639 XM
(menubar)SH
11 /Times-Roman AF
(, it will be executed)149 W
8280 21082 MT
(whenever any item is selected from any of the submenus.)
4 W( If)
284 W( a function is attached to a submenu \050e.g., it is)5 W
8280 22278 MT
(the value for)20 W
/Times-Italic SF
14173 XM
(m1func)SH
/Times-Roman SF
17706 XM
(in the)20 W
10 /Courier AF
20496 XM
(:items)SH
11 /Times-Roman AF
24391 XM
(syntax of section 3.10.2\051, then)
20 W( it is executed when any item is chosen)19 W
8280 23474 MT
(from that submenu.  If a function is attached to a submenu-item \050e.g.,)37 W
/Times-Italic SF
39523 XM
(mX,Yfunc)SH
/Times-Roman SF
(\051, then it is executed only)38 W
8280 24670 MT
(when that submenu-item is selected.)SH
8280 26968 MT
(The order for calling these functions is:  first,)
157 W( the submenu function is called, then the submenu-item)156 W
8280 28164 MT
(function is called, and finally the)SH
10 /Courier AF
23035 XM
(:selection-function)SH
11 /Times-Roman AF
34710 XM
(is called.)SH
12 /Times-Bold AF
8280 31848 MT
(3.10.2. Programming the Menubar in the Traditional Garnet Way)SH
11 /Times-Roman AF
8280 33044 MT
(The)SH
10 /Courier AF
10265 XM
(:items)SH
11 /Times-Roman AF
14140 XM
(slot of the)SH
10 /Courier AF
18815 XM
(menubar)SH
11 /Times-Roman AF
23290 XM
(is a complicated list with the following format:)SH
8 /Courier AF
10200 34209 MT
(\050:items '\050\050"m1" m1func \050\050"m1,1" [m1,1func]\051...\050"m1,N" [m1,Nfunc]\051\051\051)SH
15000 35074 MT
(\050"m2" m2func \050\050"m2,1" [m2,1func]\051...\050"m2,N" [m2,Nfunc]\051\051\051)SH
15000 35939 MT
(...\051\051)SH
11 /Times-Roman AF
8280 37360 MT
(where)SH
/Times-Italic SF
11405 XM
("mN")SH
/Times-Roman SF
14296 XM
(is a string or atom that is)
164 W( the title of a menu \050atoms appear as capitalized strings in the)165 W
8280 38556 MT
(submenu titles\051,)143 W
/Times-Italic SF
15869 XM
("mX,Y")SH
/Times-Roman SF
19564 XM
(is a string or atom in menu)
143 W( X, row Y,)142 W
/Times-Italic SF
37732 XM
(mNfunc)SH
/Times-Roman SF
41571 XM
(is executed when any item in)142 W
8280 39752 MT
(menu N is selected, and)74 W
/Times-Italic SF
19402 XM
(mX,Yfunc)SH
/Times-Roman SF
23998 XM
(is executed when item)74 W
/Times-Italic SF
34374 XM
("mX,Y")SH
/Times-Roman SF
38000 XM
(is selected.)
74 W( See)
425 W( section 3.10.1 for the)75 W
8280 40948 MT
(parameters of these functions.  NOTE:)
115 W( the)
504 W( syntax above requires that the submenu-items be described)114 W
8280 42144 MT
(with lists, even when no submenu-item functions are supplied \050i.e., the)
44 W( list)45 W
10 /Courier AF
41806 XM
(\050"m1,1"\051)SH
11 /Times-Roman AF
46926 XM
(is required instead)45 W
8280 43340 MT
(of just the string)SH
10 /Courier AF
15736 XM
("m1,1")SH
11 /Times-Roman AF
(\051.)SH
8280 45638 MT
(In order to maintain the syntax of the sublists, the)
90 W( submenu functions \050)89 W
/Times-Italic SF
(m1func)SH
/Times-Roman SF
44030 XM
(and)SH
/Times-Italic SF
45982 XM
(m2func)SH
/Times-Roman SF
49584 XM
(above\051 must)89 W
8280 46834 MT
(always be supplied.  Thus, NIL should be placed in this position if no function is to)
73 W( be executed for the)74 W
8280 48030 MT
(submenu. The)
275 W( submenu-item functions \050)SH
/Times-Italic SF
(m1,1func)SH
/Times-Roman SF
30704 XM
(etc. above\051)
275 W( are optional and may be omitted.)SH
8280 50328 MT
(The)SH
10 /Courier AF
10577 XM
(:title-font)SH
11 /Times-Roman AF
17764 XM
(is the font for the)312 W
10 /Courier AF
27175 XM
(bar-item)SH
11 /Times-Roman AF
32561 XM
(objects which appear in inverse video, and the)311 W
10 /Courier AF
8280 51524 MT
(:item-font)SH
11 /Times-Roman AF
14555 XM
(is the font for the)SH
10 /Courier AF
22406 XM
(submenu-item)SH
11 /Times-Roman AF
29881 XM
(objects arranged vertically in the pop-up menus.)SH
ES
%%Page: 380 33
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 380)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.10.2.1. An example)SH
8 /Courier AF
8040 10065 MT
(\050create-instance 'WIN inter:interactor-window)SH
9480 10930 MT
(\050:left 750\051\050:top 80\051\050:width 200\051\050:height 200\051)SH
9480 11795 MT
(\050:title "Menubar Example"\051\051)SH
8040 12660 MT
(\050s-value WIN :aggregate \050create-instance 'TOP-AGG opal:aggregate\051\051)SH
8040 13525 MT
(\050opal:update WIN\051)SH
8040 15255 MT
(\050defun Fixed-Fn \050gadget menu-item submenu-item\051)SH
9000 16120 MT
(\050format t "Calling Fixed-Fn with ~S ~S ~S.~%" gadget menu-item submenu-item\051\051)SH
8040 17850 MT
(\050defun Face-Fn \050gadget menu-item submenu-item\051)SH
9000 18715 MT
(\050format t "Calling Face-Fn with ~S ~S ~S.~%" gadget menu-item submenu-item\051\051)SH
8040 20445 MT
(\050create-instance 'DEMO-MENUBAR garnet-gadgets:menubar)SH
9480 21310 MT
(\050:items)SH
9960 22175 MT
('\050\050"family" NIL)SH
11400 23040 MT
(\050\050"fixed" Fixed-Fn\051\050"serif"\051\050"sans-serif"\051\051\051)SH
10920 23905 MT
(\050"face" Face-Fn)SH
11400 24770 MT
(\050\050"roman"\051\050"bold"\051\050"italic"\051\050"bold-italic"\051\051\051)SH
10920 25635 MT
(\050"size" NIL)SH
11400 26500 MT
(\050\050"small"\051\050"medium"\051\050"large"\051\050"very-large"\051\051\051\051\051\051)SH
8040 28230 MT
(\050opal:add-component TOP-AGG DEMO-MENUBAR\051)SH
8040 29095 MT
(\050opal:update WIN\051)SH
11 /Times-Bold AF
6120 31712 MT
(Figure 3-5:)SH
/Times-Roman SF
11893 XM
(The code to generate the picture in Figure 3-4)SH
6120 34010 MT
(The code in Figure 3-5 creates the)16 W
10 /Courier AF
21533 XM
(menubar)SH
11 /Times-Roman AF
26024 XM
(picture shown in Figure 3-4.)
16 W( It)
308 W( illustrates the Garnet method)17 W
6120 35206 MT
(for handling the)SH
10 /Courier AF
13421 XM
(menubar)SH
11 /Times-Roman AF
17896 XM
(gadget.)SH
12 /Times-Bold AF
6120 38170 MT
(3.10.2.2. Adding items to the menubar)SH
11 /Times-Roman AF
6120 39366 MT
(There are two types of items that)
108 W( can be added to a)107 W
10 /Courier AF
30072 XM
(menubar)SH
11 /Times-Roman AF
(: an)
489 W( entire submenu can be added to the)107 W
6120 40562 MT
(top-level)SH
10 /Courier AF
10305 XM
(menubar)SH
11 /Times-Roman AF
(, or single submenu-item can be added to a submenu.)SH
6120 42860 MT
(The)SH
10 /Courier AF
8105 XM
(add-item)SH
11 /Times-Roman AF
13180 XM
(method for the)SH
10 /Courier AF
19931 XM
(menubar)SH
11 /Times-Roman AF
24406 XM
(can be used to add submenus --)SH
8 /Courier AF
8040 44073 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(menubar submenu)SH
/Courier SF
21128 XM
([[:where])SH
/Times-Italic SF
25928 XM
(position [locator])SH
/Courier SF
32117 XM
([:key)SH
/Times-Italic SF
34997 XM
(index-function)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 45494 MT
(Using the standard Garnet method, the)SH
/Times-Italic SF
23379 XM
(submenu)SH
/Times-Roman SF
27564 XM
(parameter should be a sublist of a top-level items list,)SH
6120 46690 MT
(\050e.g.,)SH
10 /Courier AF
8906 XM
('\050"underline" NIL)
282 W( \050\050"none"\051 \050"single"\051 \050"double"\051\051\051)283 W
11 /Times-Roman AF
(. The)
841 W( remaining optional)283 W
6120 47886 MT
(parameters follow the standard)64 W
10 /Courier AF
20242 XM
(add-item)SH
11 /Times-Roman AF
25381 XM
(definition described in the Aggregadgets)
64 W( manual, and refer to)63 W
6120 49082 MT
(the placement of the new submenu among the)
10 W( existing submenus.)11 W
/Times-Italic SF
35684 XM
(Locator)SH
/Times-Roman SF
39454 XM
(should be some element of the)11 W
6120 50278 MT
(current)SH
/Times-Italic SF
9667 XM
(:items)SH
/Times-Roman SF
12788 XM
(list, or may be the title of a submenu when the)158 W
/Times-Italic SF
35178 XM
(index-function)SH
/Times-Roman SF
41965 XM
(is)SH
10 /Courier AF
43132 XM
(#'car)SH
11 /Times-Roman AF
46564 XM
(\050see examples)157 W
6120 51474 MT
(below\051.)SH
6120 53772 MT
(For example, each of the following lines will add a new submenu to DEMO-MENUBAR in Figure 3-5:)SH
8 /Courier AF
8040 54937 MT
(\050opal:add-item DEMO-MENUBAR '\050"font-name" NIL \050\050"courier"\051 \050"times"\051 \050"geneva"\051\051\051\051)SH
8040 55802 MT
(\050opal:add-item DEMO-MENUBAR)SH
15240 56667 MT
('\050"other-fonts" NIL \050\050"helvetica"\051 \050"chicago"\051\051\051)SH
15240 57532 MT
(:after '\050"family" NIL \050\050"fixed" Fixed-Fn\051\050"serif"\051\050"sans-serif"\051\051\051\051)SH
8040 58397 MT
(\050opal:add-item DEMO-MENUBAR)SH
15240 59262 MT
('\050"symbols" NIL \050\050"mathematical"\051 \050"greek"\051\051\051)SH
15240 60127 MT
(:before "face" :key #'car\051)SH
11 /Times-Roman AF
6120 62425 MT
(Individual submenu-items can be added to a)SH
10 /Courier AF
25823 XM
(menubar)SH
11 /Times-Roman AF
30298 XM
(with the following function:)SH
8 /Courier AF
8040 63638 MT
(add-submenu-item)SH
/Times-Italic SF
16200 XM
(menubar submenu-title submenu-item)SH
/Courier SF
28764 XM
([[:where])SH
/Times-Italic SF
33564 XM
(position [locator])SH
/Courier SF
39753 XM
([:key)SH
/Times-Italic SF
42633 XM
(index-function)SH
/Courier SF
(]]\051)SH
11 /Times-Roman AF
6120 65059 MT
(This function adds the new)246 W
/Times-Italic SF
19539 XM
(submenu-item)SH
/Times-Roman SF
26230 XM
(to the menubar, and places it)
246 W( in the submenu named by)247 W
/Times-Italic SF
6120 66255 MT
(submenu-title)SH
/Times-Roman SF
(. The)
479 W( new)102 W
/Times-Italic SF
17432 XM
(submenu-item)SH
/Times-Roman SF
23978 XM
(description should be a list containing a string \050or atom\051 and an)101 W
6120 67451 MT
(optional function \050e.g.,)SH
10 /Courier AF
16446 XM
('\050"italic"\051)SH
11 /Times-Roman AF
23321 XM
(or)SH
10 /Courier AF
24512 XM
('\050"italic" italic-fn\051)SH
11 /Times-Roman AF
(\051.)SH
6120 69749 MT
(For example, the following lines will add new submenu-items to the DEMO-MENUBAR in Figure 3-5:)SH
ES
%%Page: 381 34
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.10)
SH( Menubar)1800 W
51386 XM
(Page 381)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050garnet-gadgets:add-submenu-item DEMO-MENUBAR "face" '\050"outline"\051\051)SH
10200 8564 MT
(\050garnet-gadgets:add-submenu-item DEMO-MENUBAR "size" '\050"very small"\051)SH
32280 9429 MT
(:before "small" :key #'car\051)SH
11 /Times-Roman AF
8280 10850 MT
(As shown in the second example, the)211 W
/Times-Italic SF
26375 XM
(position)SH
/Times-Roman SF
30408 XM
(and)SH
/Times-Italic SF
32483 XM
(locator)SH
/Times-Roman SF
36148 XM
(parameters should correspond to existing)212 W
8280 12046 MT
(submenu items.)SH
12 /Times-Bold AF
8280 15010 MT
(3.10.2.3. Removing items from the menubar)SH
11 /Times-Roman AF
8280 16206 MT
(Just as submenus and submenu-items)
167 W( can be added to the)166 W
10 /Courier AF
35422 XM
(menubar)SH
11 /Times-Roman AF
(, these two types of items can be)166 W
8280 17402 MT
(removed.)SH
8 /Courier AF
10200 18615 MT
(opal:Remove-Item)SH
/Times-Italic SF
18360 XM
(menubar submenu)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 20036 MT
(This function)
133 W( removes the)134 W
/Times-Italic SF
20607 XM
(submenu)SH
/Times-Roman SF
24926 XM
(from)SH
/Times-Italic SF
27473 XM
(menubar)SH
/Times-Roman SF
(. For)
543 W( traditional Garnet programming, the)134 W
/Times-Italic SF
51170 XM
(submenu)SH
/Times-Roman SF
8280 21232 MT
(should be a sublist of the top-level)SH
10 /Courier AF
23709 XM
(:items)SH
11 /Times-Roman AF
27584 XM
(list, or just the title of a submenu \050a string or atom\051.)SH
8280 23530 MT
(For example, the following lines will remove an item from the DEMO-MENUBAR in Figure 3-5:)SH
8 /Courier AF
10200 24695 MT
(\050opal:remove-item DEMO-MENUBAR)SH
18840 25560 MT
('\050"face" Face-Fn \050\050"roman"\051\050"bold"\051\050"italic"\051\050"bold-italic"\051\051\051\051)SH
10200 26425 MT
(\050opal:remove-item DEMO-MENUBAR "size"\051)SH
11 /Times-Roman AF
8280 28723 MT
(The following function is used to remove submenu-items from a)SH
10 /Courier AF
36936 XM
(menubar)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
10200 29936 MT
(gg:Remove-Submenu-Item)SH
/Times-Italic SF
21240 XM
(menubar submenu-title submenu-item)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Italic AF
8280 31357 MT
(Submenu-item)SH
/Times-Roman SF
14855 XM
(may either be)
8 W( the list description of the submenu-item \050i.e.,)7 W
10 /Courier AF
41230 XM
(\050"italic"\051)SH
11 /Times-Roman AF
(\051 or just the string)7 W
8280 32553 MT
(\050or atom\051 of the submenu-item \050i.e.,)SH
10 /Courier AF
24317 XM
("italic")SH
11 /Times-Roman AF
(\051.)SH
8280 34851 MT
(For example,)SH
8 /Courier AF
10200 36016 MT
(\050garnet-gadgets:remove-submenu-item DEMO-MENUBAR "size" "small"\051)SH
12 /Times-Bold AF
8280 39700 MT
(3.10.3. Programming the Menubar with Components)SH
11 /Times-Roman AF
8280 40896 MT
(In the bottom-up approach to programming the)278 W
10 /Courier AF
31213 XM
(menubar)SH
11 /Times-Roman AF
(, the user)
278 W( must create components of the)279 W
10 /Courier AF
8280 42092 MT
(menubar)SH
11 /Times-Roman AF
12952 XM
(\050i.e., instances of)197 W
10 /Courier AF
21301 XM
(bar-item)SH
11 /Times-Roman AF
26573 XM
(and)SH
10 /Courier AF
28633 XM
(submenu-item)SH
11 /Times-Roman AF
36305 XM
(gadgets\051 and attach them piece-by-piece.)197 W
8280 43288 MT
(This design is loosely based on the interface to the Macintosh menubar in)
21 W( Macintosh Common Lisp.  The)22 W
8280 44484 MT
(functions for creating the components are described in section)
29 W( 3.10.3.2.  Section 3.10.3.3 explains how to)28 W
8280 45680 MT
(attach these components to the)SH
10 /Courier AF
22057 XM
(menubar)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 48644 MT
(3.10.3.1. An example)SH
11 /Times-Roman AF
8280 49840 MT
(The code in Figure 3-6 creates a)331 W
10 /Courier AF
25043 XM
(menubar)SH
11 /Times-Roman AF
29850 XM
(and several component pieces, and then attaches the)332 W
8280 51036 MT
(components to the)SH
10 /Courier AF
16621 XM
(menubar)SH
11 /Times-Roman AF
(. This)
275 W( illustrates the bottom-up approach to programming the)SH
10 /Courier AF
48226 XM
(menubar)SH
11 /Times-Roman AF
(.)SH
8280 53334 MT
(Notice that the)191 W
10 /Courier AF
15604 XM
(menubar)SH
11 /Times-Roman AF
20270 XM
(instance must be added to the top-level aggregate before any bar-items are)191 W
8280 54530 MT
(attached. This)
563 W( ensures that the)144 W
10 /Courier AF
22981 XM
(menubar)SH
11 /Times-Roman AF
27600 XM
(will be initialized with the)
144 W( proper main window before new)145 W
8280 55726 MT
(submenu windows are added.)SH
12 /Times-Bold AF
8280 58690 MT
(3.10.3.2. Creating components of the menubar)SH
11 /Times-Roman AF
8280 59886 MT
(The functions in this section are used to create the three types)
67 W( of components that comprise a pull-down)66 W
8280 61082 MT
(menu -- the)383 W
10 /Courier AF
14774 XM
(menubar)SH
11 /Times-Roman AF
19632 XM
(\050the top-level part\051, the)383 W
10 /Courier AF
31579 XM
(bar-item)SH
11 /Times-Roman AF
37037 XM
(\050which contains a submenu\051, and the)383 W
10 /Courier AF
8280 62278 MT
(submenu-item)SH
11 /Times-Roman AF
(. Once)
323 W( the parts of the pull-down menu are created, they are attached using the functions)24 W
8280 63474 MT
(of section 3.10.3.3.)
142 W( Please)
560 W( see section 3.10.3.3 for examples of the creation functions and attachment)143 W
8280 64670 MT
(functions together.)SH
8 /Courier AF
10200 65883 MT
(gg:Make-Menubar)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 67304 MT
(Returns an instance of)SH
10 /Courier AF
18360 XM
(menubar)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 68517 MT
(gg:Make-Bar-Item &key)SH
/Times-Italic SF
20760 XM
(desc font title)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 69938 MT
(This function returns)
80 W( an instance of)79 W
10 /Courier AF
24640 XM
(bar-item)SH
11 /Times-Roman AF
(. If)
433 W( any of the keys are supplied, then the corresponding)79 W
8280 71134 MT
(slots of the)156 W
10 /Courier AF
13851 XM
(bar-item)SH
11 /Times-Roman AF
19082 XM
(instance are set with those values.  The)156 W
/Times-Italic SF
37771 XM
(desc)SH
/Times-Roman SF
40156 XM
(parameter is the)
156 W( description of a)157 W
ES
%%Page: 382 35
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 382)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'WIN inter:interactor-window)SH
9480 8564 MT
(\050:left 750\051\050:top 80\051\050:width 200\051\050:height 200\051)SH
9480 9429 MT
(\050:title "Menubar Example"\051\051)SH
8040 10294 MT
(\050s-value WIN :aggregate \050create-instance 'TOP-AGG opal:aggregate\051\051)SH
8040 11159 MT
(\050opal:update WIN\051)SH
/Times-Italic SF
8040 12889 MT
(; Create the menubar and the bar-item)SH
/Courier SF
8040 13754 MT
(\050setf demo-menubar \050garnet-gadgets:make-menubar\051\051)SH
8040 14619 MT
(\050setf mac-bar \050garnet-gadgets:make-bar-item :title "Mac Fonts"\051\051)SH
/Times-Italic SF
8040 16349 MT
(; Create submenu-items)SH
/Courier SF
8040 17214 MT
(\050setf sub-1 \050garnet-gadgets:make-submenu-item :desc '\050"Gothic"\051\051\051)SH
8040 18079 MT
(\050setf sub-2 \050garnet-gadgets:make-submenu-item :desc '\050"Venice"\051\051\051)SH
8040 18944 MT
(\050setf sub-3 \050garnet-gadgets:make-submenu-item :desc '\050"Old English"\051\051\051)SH
/Times-Italic SF
8040 20674 MT
(; Add the submenu-items to the bar-item)SH
/Courier SF
8040 21539 MT
(\050opal:add-item mac-bar sub-1\051)SH
8040 22404 MT
(\050opal:add-item mac-bar sub-2 :before sub-1\051)SH
8040 23269 MT
(\050opal:add-item mac-bar sub-3 :after "Venice" :key #'car\051)SH
/Times-Italic SF
8040 24999 MT
(; Add the menubar to the top-level aggregate)SH
/Courier SF
8040 25864 MT
(\050opal:add-component TOP-AGG demo-menubar\051)SH
/Times-Italic SF
8040 27594 MT
(; Add the bar-item to the menubar and update the window)SH
/Courier SF
8040 28459 MT
(\050opal:add-item demo-menubar mac-bar\051)SH
8040 29324 MT
(\050opal:update WIN\051)SH
11 /Times-Bold AF
6120 31941 MT
(Figure 3-6:)SH
/Times-Roman SF
11893 XM
(The creation of a menubar and its components)SH
6120 33892 MT
(submenu \050e.g.,)109 W
10 /Courier AF
13089 XM
('\050"underline" NIL \050\050"none"\051\050"single"\051\050"double"\051\051\051)109 W
11 /Times-Roman AF
(\051. The)493 W
/Times-Italic SF
46209 XM
(font)SH
/Times-Roman SF
48304 XM
(is the font)108 W
6120 35088 MT
(of the submenu-items within the submenu,)
134 W( and)135 W
/Times-Italic SF
27958 XM
(title)SH
/Times-Roman SF
30080 XM
(is a string or atom that will be the heading of the)135 W
6120 36284 MT
(submenu. If)
661 W( the title was already specified in the)193 W
/Times-Italic SF
29951 XM
(desc)SH
/Times-Roman SF
32373 XM
(parameter, then no)192 W
/Times-Italic SF
41439 XM
(title)SH
/Times-Roman SF
43618 XM
(parameter should be)192 W
6120 37480 MT
(supplied.)SH
8 /Courier AF
8040 38693 MT
(gg:Make-Submenu-Item &key)SH
/Times-Italic SF
20520 XM
(desc enabled)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 40114 MT
(This function returns an instance of)344 W
10 /Courier AF
24068 XM
(submenu-item)SH
11 /Times-Roman AF
(. If)
963 W( any of the keys are supplied, then the)345 W
6120 41310 MT
(corresponding slots)
61 W( of the)60 W
10 /Courier AF
18031 XM
(submenu-item)SH
11 /Times-Roman AF
25566 XM
(instance are set with those values.  The)60 W
/Times-Italic SF
43487 XM
(desc)SH
/Times-Roman SF
45776 XM
(parameter is the)60 W
6120 42506 MT
(description of a submenu-item)
179 W( \050e.g.,)180 W
10 /Courier AF
23207 XM
('\050"italic"\051)SH
11 /Times-Roman AF
30262 XM
(or)SH
10 /Courier AF
31633 XM
('\050"italic" italic-fn\051)180 W
11 /Times-Roman AF
(\051. The)
635 W( default for)180 W
/Times-Italic SF
6120 43702 MT
(enabled)SH
/Times-Roman SF
9877 XM
(is T.)SH
12 /Times-Bold AF
6120 46666 MT
(3.10.3.3. Adding components to the menubar)SH
11 /Times-Roman AF
6120 47862 MT
(Just as with the traditional Garnet approach, the two types of components that can be added to)
223 W( the)222 W
10 /Courier AF
6120 49058 MT
(menubar)SH
11 /Times-Roman AF
10607 XM
(gadget are instances of the)12 W
10 /Courier AF
22608 XM
(bar-item)SH
11 /Times-Roman AF
27695 XM
(gadget and instances of the)12 W
10 /Courier AF
39942 XM
(submenu-item)SH
11 /Times-Roman AF
47429 XM
(gadget. The)299 W
10 /Courier AF
6120 50254 MT
(add-item)SH
11 /Times-Roman AF
11359 XM
(method can be used to add new)
164 W( bar-items to a menubar, or to add new submenu-items to)163 W
6120 51450 MT
(existing bar-items.  Also, the following)308 W
10 /Courier AF
25506 XM
(Set-...)SH
11 /Times-Roman AF
30289 XM
(functions can be used)
308 W( to install a collection of)309 W
6120 52646 MT
(components all at once.)SH
8 /Courier AF
8040 53859 MT
(gg:Set-Menubar)SH
/Times-Italic SF
15240 XM
(menubar new-bar-items)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 55280 MT
(Removes all current bar-items from)80 W
/Times-Italic SF
22495 XM
(menubar)SH
/Times-Roman SF
26760 XM
(and installs the)80 W
/Times-Italic SF
33875 XM
(new-bar-items)SH
/Times-Roman SF
(. The)435 W
/Times-Italic SF
43278 XM
(new-bar-items)SH
/Times-Roman SF
49986 XM
(should)SH
6120 56476 MT
(be a list of)SH
10 /Courier AF
11008 XM
(bar-item)SH
11 /Times-Roman AF
16083 XM
(instances.)SH
8 /Courier AF
8040 57689 MT
(gg:Set-Submenu)SH
/Times-Italic SF
15240 XM
(bar-item submenu-items)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 59110 MT
(Sets)SH
/Times-Italic SF
8532 XM
(bar-item)SH
/Times-Roman SF
12898 XM
(to have)303 W
/Times-Italic SF
16986 XM
(submenu-items)SH
/Times-Roman SF
24162 XM
(in its submenu.)304 W
/Times-Italic SF
32621 XM
(Submenu-items)SH
/Times-Roman SF
39920 XM
(is a list of)304 W
10 /Courier AF
45720 XM
(submenu-item)SH
11 /Times-Roman AF
6120 60306 MT
(instances.)SH
8 /Courier AF
8040 61519 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(menubar bar-item)SH
/Courier SF
21038 XM
([[:where])SH
/Times-Italic SF
25838 XM
(position [locator])SH
/Courier SF
32027 XM
([:key)SH
/Times-Italic SF
34907 XM
(index-function)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 62384 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(bar-item submenu-item)SH
/Courier SF
22681 XM
([[:where])SH
/Times-Italic SF
27481 XM
(position [locator])SH
/Courier SF
33670 XM
([:key)SH
/Times-Italic SF
36550 XM
(index-function)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 64682 MT
(The)SH
/Times-Italic SF
8183 XM
(menubar)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
12721 XM
(bar-item)SH
/Times-Roman SF
(, and)78 W
/Times-Italic SF
19078 XM
(submenu-item)SH
/Times-Roman SF
25601 XM
(parameters above should be supplied with objects created)
78 W( by)77 W
6120 65878 MT
(the functions in section)
215 W( 3.10.3.2.  The optional parameters follow the standard)216 W
10 /Courier AF
43351 XM
(add-item)SH
11 /Times-Roman AF
48642 XM
(definition)SH
6120 67074 MT
(described in the Aggregadgets manual, and refer to the placement of the new)202 W
10 /Courier AF
42830 XM
(bar-item)SH
11 /Times-Roman AF
48106 XM
(among the)201 W
6120 68270 MT
(existing bar-items.)198 W
/Times-Italic SF
15452 XM
(Locator)SH
/Times-Roman SF
19409 XM
(may be either an existing)198 W
10 /Courier AF
31733 XM
(menubar)SH
11 /Times-Roman AF
36407 XM
(component, or some element of the)199 W
10 /Courier AF
6120 69466 MT
(:items)SH
11 /Times-Roman AF
9995 XM
(list \050like a submenu-title\051 used together with the)SH
/Times-Italic SF
31381 XM
(index-function)SH
/Times-Roman SF
38010 XM
(\050see below\051.)SH
6120 71764 MT
(After creating three)31 W
10 /Courier AF
15098 XM
(bar-item)SH
11 /Times-Roman AF
20204 XM
(instances, the example below shows how the bar-items can be attached)
31 W( as)30 W
ES
%%Page: 383 36
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.10)
SH( Menubar)1800 W
51386 XM
(Page 383)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(components to a)SH
10 /Courier AF
15765 XM
(menubar)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 9120 MT
(\050setf bar1 \050garnet-gadgets:make-bar-item)SH
16440 9985 MT
(:desc '\050"font-name" NIL \050\050"courier"\051 \050"times"\051 \050"geneva"\051\051\051\051\051)SH
10200 10850 MT
(\050setf bar2 \050garnet-gadgets:make-bar-item)SH
16440 11715 MT
(:desc '\050"other-fonts" NIL \050\050"helvetica"\051 \050"chicago"\051\051\051\051\051)SH
10200 12580 MT
(\050setf bar3 \050garnet-gadgets:make-bar-item)SH
16440 13445 MT
(:desc '\050"symbols" NIL \050\050"mathematical"\051 \050"greek"\051\051\051\051\051)SH
10200 14310 MT
(\050opal:add-item DEMO-MENUBAR bar1\051)SH
10200 15175 MT
(\050opal:add-item DEMO-MENUBAR bar2 :after "family" :key #'car\051)SH
10200 16040 MT
(\050opal:add-item DEMO-MENUBAR bar3 :after bar2\051)SH
11 /Times-Roman AF
8280 18338 MT
(The following)
149 W( instructions show how submenu-items can be attached to oa)150 W
10 /Courier AF
43136 XM
(bar-item)SH
11 /Times-Roman AF
(. A)575 W
10 /Courier AF
50280 XM
(bar-item)SH
11 /Times-Roman AF
8280 19534 MT
(object is first created, and then several submenu-items are attached to it using)SH
10 /Courier AF
42674 XM
(add-item)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
10200 20699 MT
(\050setf mac-bar \050garnet-gadgets:make-bar-item :title "Mac Fonts"\051\051)SH
10200 21564 MT
(\050setf sub-1 \050garnet-gadgets:make-submenu-item :desc '\050"Gothic"\051\051\051)SH
10200 22429 MT
(\050setf sub-2 \050garnet-gadgets:make-submenu-item :desc '\050"Venice"\051\051\051)SH
10200 23294 MT
(\050setf sub-3 \050garnet-gadgets:make-submenu-item :desc '\050"Old English"\051\051\051)SH
10200 24159 MT
(\050opal:add-item mac-bar sub-1\051)SH
10200 25024 MT
(\050opal:add-item mac-bar sub-2 :before sub-1\051)SH
10200 25889 MT
(\050opal:add-item mac-bar sub-3 :after "Venice" :key #'car\051)SH
12 /Times-Bold AF
8280 28853 MT
(3.10.3.4. Removing components from the menubar)SH
11 /Times-Roman AF
8280 30049 MT
(The)SH
10 /Courier AF
10723 XM
(bar-item)SH
11 /Times-Roman AF
16256 XM
(and)SH
10 /Courier AF
18577 XM
(submenu-item)SH
11 /Times-Roman AF
26510 XM
(components can be removed from)
458 W( the)457 W
10 /Courier AF
46116 XM
(menubar)SH
11 /Times-Roman AF
51048 XM
(with the)457 W
10 /Courier AF
8280 31245 MT
(remove-item)SH
11 /Times-Roman AF
15155 XM
(method:)SH
8 /Courier AF
10200 32458 MT
(opal:Remove-Item)SH
/Times-Italic SF
18360 XM
(menubar bar-item)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
10200 33671 MT
(opal:Remove-Item)SH
/Times-Italic SF
18360 XM
(bar-item submenu-item)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 35969 MT
(For example, if)
36 W( we have already created a)37 W
10 /Courier AF
27231 XM
(bar-item)SH
11 /Times-Roman AF
32343 XM
(called BAR-1 and added it to DEMO-MENUBAR,)37 W
8280 37165 MT
(then the following line will remove that item:)SH
8 /Courier AF
10200 38330 MT
(\050opal:remove-item DEMO-MENUBAR bar1\051)SH
11 /Times-Roman AF
8280 40628 MT
(The)SH
10 /Courier AF
10477 XM
(remove-item)SH
11 /Times-Roman AF
17564 XM
(method can also be used to remove submenu-items from bar-items.  In)
212 W( order to)211 W
8280 41824 MT
(remove a submenu item from the)292 W
10 /Courier AF
24878 XM
(bar-item)SH
11 /Times-Roman AF
30245 XM
(instance MAC-BAR, the following line can be)
292 W( used)293 W
8280 43020 MT
(\050provided SUB-1 is an existing)SH
10 /Courier AF
22243 XM
(submenu-item)SH
11 /Times-Roman AF
29718 XM
(that was added to MAC-BAR\051:)SH
8 /Courier AF
10200 44185 MT
(\050opal:remove-item mac-bar sub-1\051)SH
12 /Times-Bold AF
8280 47869 MT
(3.10.4. Finding Components of the Menubar)SH
8 /Courier AF
10200 49082 MT
(gg:Menubar-Components)SH
/Times-Italic SF
20760 XM
(menubar)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 50503 MT
(Returns a list of the)SH
10 /Courier AF
17171 XM
(bar-item)SH
11 /Times-Roman AF
22246 XM
(instances installed in)SH
/Times-Italic SF
31687 XM
(menubar)SH
/Times-Roman SF
(.)SH
8 /Courier AF
10200 51716 MT
(gg:Submenu-Components)SH
/Times-Italic SF
20760 XM
(bar-item)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 53137 MT
(Returns a list of)SH
10 /Courier AF
15552 XM
(submenu-item)SH
11 /Times-Roman AF
23027 XM
(instances that are installed in)SH
/Times-Italic SF
36010 XM
(bar-item)SH
/Times-Roman SF
('s submenu.)SH
8 /Courier AF
10200 54350 MT
(gg:Get-Bar-Component)SH
/Times-Italic SF
20280 XM
(menubar item)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 55771 MT
(Returns the first)114 W
10 /Courier AF
15985 XM
(bar-item)SH
11 /Times-Roman AF
21173 XM
(object in)113 W
/Times-Italic SF
25493 XM
(menubar)SH
/Times-Roman SF
29791 XM
(that corresponds to)113 W
/Times-Italic SF
38775 XM
(item)SH
/Times-Roman SF
(. The)501 W
/Times-Italic SF
43818 XM
(item)SH
/Times-Roman SF
46100 XM
(parameter may be a)113 W
8280 56967 MT
(string or an atom, or one of the sublists of the)SH
/Times-Italic SF
28566 XM
(menubar)SH
/Times-Roman SF
('s)SH
10 /Courier AF
33545 XM
(:items)SH
11 /Times-Roman AF
37420 XM
(list.)SH
8 /Courier AF
10200 58180 MT
(gg:Get-Submenu-Component)SH
/Times-Italic SF
22200 XM
(bar-item item)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 59601 MT
(Returns the first)25 W
10 /Courier AF
15718 XM
(submenu-item)SH
11 /Times-Roman AF
23218 XM
(object in)25 W
/Times-Italic SF
27362 XM
(bar-item)SH
/Times-Roman SF
31450 XM
(that corresponds to)26 W
/Times-Italic SF
40173 XM
(item)SH
/Times-Roman SF
(. The)327 W
/Times-Italic SF
44955 XM
(item)SH
/Times-Roman SF
47150 XM
(parameter may be)26 W
8280 60797 MT
(a string or an atom, or a string/function pair that describes a)SH
10 /Courier AF
34825 XM
(submenu-item)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 62010 MT
(gg:Find-Submenu-Component)SH
/Times-Italic SF
22680 XM
(menubar submenu-title submenu-item)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 63431 MT
(Similar to)170 W
10 /Courier AF
13266 XM
(get-submenu-component)SH
11 /Times-Roman AF
(, except that)170 W
10 /Courier AF
31996 XM
(find-submenu-component)SH
11 /Times-Roman AF
45640 XM
(finds the appropriate)169 W
10 /Courier AF
8280 64627 MT
(bar-item)SH
11 /Times-Roman AF
13625 XM
(instance in the given)270 W
/Times-Italic SF
24053 XM
(menubar)SH
/Times-Roman SF
(. Returns)
817 W( the)271 W
10 /Courier AF
35188 XM
(submenu-item)SH
11 /Times-Roman AF
42934 XM
(object that corresponds to)271 W
/Times-Italic SF
8280 65823 MT
(submenu-item)SH
/Times-Roman SF
(. The)
807 W( parameter)266 W
/Times-Italic SF
22995 XM
(submenu-title)SH
/Times-Roman SF
29524 XM
(should be the string or atom that is the title of some)265 W
8280 67019 MT
(submenu.)SH
/Times-Italic SF
13871 XM
(Submenu-item)SH
/Times-Roman SF
20835 XM
(should be a string or atom, or a string/function pair that)
397 W( describes a)398 W
10 /Courier AF
8280 68215 MT
(submenu-item)SH
11 /Times-Roman AF
15755 XM
(already installed in)SH
/Times-Italic SF
24400 XM
(submenu-title)SH
/Times-Roman SF
(.)SH
ES
%%Page: 384 37
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 384)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.10.5. Enabling and Disabling Components)SH
8 /Courier AF
8040 9217 MT
(gg:Menubar-Disable-Component)SH
/Times-Italic SF
21960 XM
(menubar-component)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 10638 MT
(Disables)SH
/Times-Italic SF
10273 XM
(menubar-component)SH
/Times-Roman SF
('s interactors and makes its label grayed-out.  The user will not be)
90 W( able to)89 W
6120 11834 MT
(select)SH
/Times-Italic SF
9103 XM
(menubar-component)SH
/Times-Roman SF
18684 XM
(while it is disabled.)204 W
/Times-Italic SF
28810 XM
(Menubar-component)SH
/Times-Roman SF
38513 XM
(is an)
204 W( instance of)205 W
10 /Courier AF
46724 XM
(bar-item)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
6120 13030 MT
(submenu-item)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 14243 MT
(gg:Menubar-Enable-Component)SH
/Times-Italic SF
21480 XM
(menubar-component)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 15664 MT
(Enables)SH
/Times-Italic SF
9990 XM
(menubar-component)SH
/Times-Roman SF
('s interactors and returns its label to solid text.)113 W
/Times-Italic SF
41149 XM
(Menubar-component)SH
/Times-Roman SF
50761 XM
(is an)112 W
6120 16860 MT
(instance of)SH
10 /Courier AF
11190 XM
(bar-item)SH
11 /Times-Roman AF
16265 XM
(or)SH
10 /Courier AF
17456 XM
(submenu-item)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 18073 MT
(gg:Menubar-Enabled-P)SH
/Times-Italic SF
18120 XM
(menubar-component)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 19494 MT
(Returns T if the)148 W
/Times-Italic SF
13922 XM
(menubar-component)SH
/Times-Roman SF
23447 XM
(is enabled.)148 W
/Times-Italic SF
29145 XM
(Menubar-component)SH
/Times-Roman SF
38792 XM
(is an instance of)149 W
10 /Courier AF
46780 XM
(bar-item)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
6120 20690 MT
(submenu-item)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 24374 MT
(3.10.6. Other Menubar Functions)SH
8 /Courier AF
8040 25587 MT
(gg:Menubar-Get-Title)SH
/Times-Italic SF
18120 XM
(menubar-component)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 27008 MT
(Returns the string or atom associated with)151 W
/Times-Italic SF
25965 XM
(menubar-component)SH
/Times-Roman SF
(. The)575 W
/Times-Italic SF
38327 XM
(menubar-component)SH
/Times-Roman SF
47854 XM
(must be an)150 W
6120 28204 MT
(instance of a)SH
10 /Courier AF
11953 XM
(bar-item)SH
11 /Times-Roman AF
17028 XM
(or)SH
10 /Courier AF
18219 XM
(submenu-item)SH
11 /Times-Roman AF
25694 XM
(gadget.)SH
8 /Courier AF
8040 29417 MT
(gg:Menubar-Set-Title)SH
/Times-Italic SF
18120 XM
(menubar-component string)280 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 30838 MT
(Changes the title of)53 W
/Times-Italic SF
15192 XM
(menubar-component)SH
/Times-Roman SF
24622 XM
(to)SH
/Times-Italic SF
25806 XM
(string)SH
/Times-Roman SF
28702 XM
(and, if)53 W
/Times-Italic SF
31893 XM
(menubar-component)SH
/Times-Roman SF
41323 XM
(is installed in a)54 W
10 /Courier AF
48445 XM
(menubar)SH
11 /Times-Roman AF
(,)SH
6120 32034 MT
(sets the)137 W
10 /Courier AF
9938 XM
(:items)SH
11 /Times-Roman AF
13949 XM
(slot of the)136 W
10 /Courier AF
19032 XM
(menubar)SH
11 /Times-Roman AF
23643 XM
(appropriately.)SH
/Times-Italic SF
30604 XM
(Menubar-component)SH
/Times-Roman SF
40239 XM
(can be either an instance of)136 W
10 /Courier AF
6120 33230 MT
(bar-item)SH
11 /Times-Roman AF
11347 XM
(or)SH
10 /Courier AF
12691 XM
(submenu-item)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
21022 XM
(String)SH
/Times-Roman SF
24140 XM
(is a string or an atom, suitable for putting in the)153 W
10 /Courier AF
47027 XM
(:items)SH
11 /Times-Roman AF
51055 XM
(slot.)SH
6120 34426 MT
(Returns)SH
/Times-Italic SF
9817 XM
(string)SH
/Times-Roman SF
(.)SH
8 /Courier AF
8040 35639 MT
(gg:Menubar-Installed-P)SH
/Times-Italic SF
19080 XM
(menubar-component)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 37060 MT
(Returns NIL if)219 W
/Times-Italic SF
13528 XM
(menubar-component)SH
/Times-Roman SF
23124 XM
(is not attached to a)219 W
10 /Courier AF
32742 XM
(menubar)SH
11 /Times-Roman AF
(; otherwise returns the object it is)219 W
6120 38256 MT
(installed in \050either a)SH
10 /Courier AF
15162 XM
(menubar)SH
11 /Times-Roman AF
19637 XM
(or a)SH
10 /Courier AF
21591 XM
(bar-item)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
6120 42074 MT
(3.11. Labeled Box)SH
11 SS 
5 10 0 14220 65371 GB 
%%BeginDocument: gadgets/labeled-box-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 45
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 4:43 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 346 406 446
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -274 translate
gsave
0 648 200 100 ClipToRectangle
0 0 translate
gsave
40 607 592 61 20 0 false 0 0 0 false 0 0 0 false (Label:) 18 /Courier-Bold DrawText
112 606 591 53 19 0 false 0 0 0 false 0 0 0 false (Field) 18 /Courier DrawText
106 608 65 23 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 200 100 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 206 346 406 446

%%EndDocument
 GE 8 /Courier AF
8040 49567 MT
(\050create-instance 'gg:Labeled-Box opal:aggregadget)SH
9480 50432 MT
(\050:maybe-constant '\050:left :top :label-offset :field-offset :min-frame-width)SH
18600 51297 MT
(:label-string :field-font :label-font :visible\051\051)SH
9480 52162 MT
(\050:left 0\051)SH
9480 53027 MT
(\050:top 0\051)SH
9480 53892 MT
(\050:min-frame-width 10\051)SH
9480 54757 MT
(\050:label-offset 5\051)SH
9480 55622 MT
(\050:field-offset 6\051)SH
9480 56487 MT
(\050:label-string "Label:"\051)SH
9480 57352 MT
(\050:value "Field"\051)SH
9480 58217 MT
(\050:field-font opal:default-font\051)SH
9480 59082 MT
(\050:label-font \050create-instance NIL opal:font \050:face :bold\051\051\051)SH
9480 59947 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 60812 MT
(\051)SH
11 /Times-Roman AF
6120 63110 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(labeled-box)SH
11 /Times-Roman AF
22920 XM
(is "labeled-box-loader".)SH
6120 65408 MT
(The)SH
10 /Courier AF
8133 XM
(labeled-box)SH
11 /Times-Roman AF
15036 XM
(gadget is comprised of)
28 W( a dynamic box with text both inside and to the left of the box.)29 W
6120 66604 MT
(The text to the left of)
62 W( the box is a permanent label and may not be changed by the user.  The text inside)61 W
6120 67800 MT
(the box may)
127 W( be edited, however, and the width of the box will grow with the width of the string.  As)128 W
6120 68996 MT
(always, the current string inside the box may be accessed by the top level)SH
10 /Courier AF
38651 XM
(:value)SH
11 /Times-Roman AF
42526 XM
(slot.)SH
6120 71294 MT
(The width of the text frame will not fall below)SH
10 /Courier AF
26832 XM
(:min-frame-width)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 385 38
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.13)
SH( Scrolling-Labeled-Box)1800 W
51386 XM
(Page 385)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The label to appear beside the box is in)46 W
10 /Courier AF
26197 XM
(:label-string)SH
11 /Times-Roman AF
(. The)
365 W( distance from the label to the left side of)45 W
8280 9151 MT
(the box is specified in)SH
10 /Courier AF
18209 XM
(:label-offset)SH
11 /Times-Roman AF
(, and the font of the label is in)SH
10 /Courier AF
39451 XM
(:label-font)SH
11 /Times-Roman AF
(.)SH
8280 11449 MT
(The distance from the box to)
130 W( the inner text is in)131 W
10 /Courier AF
30887 XM
(:field-offset)SH
11 /Times-Roman AF
(, and the font of the inner text is in)131 W
10 /Courier AF
8280 12645 MT
(:field-font)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 16463 MT
(3.12. Scrolling-Input-String)SH
8 /Courier AF
10200 17628 MT
(\050create-instance 'gg:Scrolling-Input-String opal:aggregadget)SH
11640 18493 MT
(\050:maybe-constant '\050:left :top :width :font :line-style :visible\051\051)SH
11640 19358 MT
(\050:left 0\051)SH
11640 20223 MT
(\050:top 0\051)SH
11640 21088 MT
(\050:width 100\051 ;)SH
/Times-Italic SF
18560 XM
(The width of the string area in pixels.)SH
/Courier SF
11640 21953 MT
(\050:value "Type here"\051 ;)SH
/Times-Italic SF
(The string that will originally appear in the)SH
/Courier SF
21720 22818 MT
(;)SH
/Times-Italic SF
22600 XM
(box and that will be changed.)SH
/Courier SF
11640 23683 MT
(\050:selection-function NIL\051 ;)SH
/Times-Italic SF
25080 XM
(Function to be executed after editing text)SH
/Courier SF
11640 24548 MT
(\050:font opal:default-font\051 ;)SH
/Times-Italic SF
25080 XM
(**Must be fixed width**)SH
/Courier SF
11640 25413 MT
(\050:line-style opal:default-line-style\051\051 ;)SH
/Times-Italic SF
(line style can be used to set the color of the string)SH
11 SS 
75 100 0 8730 57985 GB 
%%BeginDocument: gadgets/scrolling-input.PS
%!PS-Adobe-2.0
%%Title: Opal 2
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 12:23 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 226 371 386 421
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
154 -299 translate
gsave
0 648 160 50 ClipToRectangle
0 0 translate
gsave
47 631 620 83 14 0 false 0 0 0 false 0 0 0 false (ing that won) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 73 631 73 617 DrawLine
40 631 621 7 13 0 false 0 0 0 false 0 0 0 false (...) 10 /Times-Roman DrawText
133 631 621 7 13 0 false 0 0 0 false 0 0 0 false (...) 10 /Times-Roman DrawText
grestore

grestore

0 648 160 50 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman /Courier 
%%BoundingBox: 226 371 386 421

%%EndDocument
 GE /Times-Roman SF
8280 32458 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(scrolling-input-string)SH
11 /Times-Roman AF
31680 XM
(gadget is "scrolling-input-string-loader".)SH
8280 34756 MT
(This allows the user to enter a one-line edited string of)
49 W( arbitrary length, but only requires a fixed area on)48 W
8280 35952 MT
(the screen since if the string gets too long, it is automatically scrolled left and right as needed.)
6 W( Three)
288 W( little)7 W
8280 37148 MT
(dots \050an ellipsis\051 are displayed on either side of the string if any text is not visible on that side.)SH
8280 39446 MT
(The user interface is as follows:)
54 W( To start editing, click with the left mouse button on the string.  To stop,)53 W
8280 40642 MT
(hit)SH
10 /Courier AF
9817 XM
(return)SH
11 /Times-Roman AF
(. To)
475 W( abort, hit)100 W
10 /Courier AF
20486 XM
(^g)SH
11 /Times-Roman AF
(. If)
475 W( the string)
100 W( gets to be too large to fit into the specified width, then the)101 W
8280 41838 MT
(string inside is scrolled left and right so the cursor is always visible.  The cursor can be)
75 W( moved and text)74 W
8280 43034 MT
(deleted with the usual editing commands \050see the Interactors manual, page 170\051.)SH
8280 45332 MT
(The top level)23 W
10 /Courier AF
14428 XM
(:value)SH
11 /Times-Roman AF
18326 XM
(slot is set with the final value of the string appearing inside the)
23 W( box.  This slot may)24 W
8280 46528 MT
(be set directly to change the initial value, and)
19 W( formulas may depend on it.  A function may be specified in)18 W
8280 47724 MT
(the)SH
10 /Courier AF
9999 XM
(:selection-function)SH
11 /Times-Roman AF
21774 XM
(slot to be executed after the field text has changed \050i.e., after)
100 W( the carriage)101 W
8280 48920 MT
(return\051. Room)
485 W( is left on both sides of the string for a)
105 W( "..." symbol which shows whether the string has)104 W
8280 50116 MT
(been scrolled or not.  Therefore, the)
14 W( string will not appear exactly at the)15 W
10 /Courier AF
40310 XM
(:left)SH
11 /Times-Roman AF
43600 XM
(or extend the full)15 W
10 /Courier AF
51480 XM
(:width)SH
11 /Times-Roman AF
8280 51312 MT
(\050since room is left for the ...'s even when they are not needed\051.)SH
14 /Times-Bold AF
8280 55130 MT
(3.13. Scrolling-Labeled-Box)SH
8 /Courier AF
10200 56295 MT
(\050create-instance 'gg:Scrolling-Labeled-Box opal:aggregadget)SH
11640 57160 MT
(\050:maybe-constant '\050:left :top :width :label-offset :field-offset)SH
20760 58025 MT
(:label-string :field-font :label-font :visible\051\051)SH
11640 58890 MT
(\050:left 0\051 \050:top 0\051)SH
11640 59755 MT
(\050:width 130\051 ;)SH
/Times-Italic SF
(The width of the entire area in pixels.)SH
/Times-BoldItalic SF
31315 XM
(This must be big enough)SH
/Courier SF
17880 60620 MT
(;)SH
/Times-BoldItalic SF
(for the label and at least a few characters of the string!)SH
/Courier SF
11640 61485 MT
(\050:value "Field"\051 ;)SH
/Times-Italic SF
(The string that will originally appear in the)SH
/Courier SF
19800 62350 MT
(;)SH
/Times-Italic SF
20680 XM
(box and that will be changed.)SH
/Courier SF
11640 63215 MT
(\050:selection-function NIL\051 ;)SH
/Times-Italic SF
25080 XM
(Function to be executed after editing text)SH
/Courier SF
11640 64080 MT
(\050:field-font opal:default-font\051 ;)SH
/Times-Italic SF
(**Must be fixed width**)SH
/Courier SF
11640 65810 MT
(\050:label-string "Label:"\051 ;)SH
/Times-Italic SF
24600 XM
(The string that will appear beside the box)SH
/Courier SF
11640 66675 MT
(\050:label-offset 5\051 ;)SH
/Times-Italic SF
21240 XM
(The distance between the label and the box)SH
/Courier SF
11640 67540 MT
(\050:field-offset 2\051 ;)SH
/Times-Italic SF
21240 XM
(The distance between the field text and the box)SH
/Courier SF
11640 68405 MT
(\050:label-font \050create-instance NIL opal:default-font \050:face :bold\051\051\051\051)SH
20280 69270 MT
(;)SH
/Times-Italic SF
21240 XM
(The font of the string beside the box, can be variable-width)SH
ES
%%Page: 386 39
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 386)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6570 39000 GB 
%%BeginDocument: gadgets/scrolling-labeled-box.PS
%!PS-Adobe-2.0
%%Title: Opal 4
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 12:32 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 196 369 416 424
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
124 -296 translate
gsave
0 648 220 55 ClipToRectangle
0 0 translate
gsave
40 626 615 40 14 0 false 0 0 0 false 0 0 0 false (Label:) 12 /Courier-Bold DrawText
85 628 85 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
94 626 615 63 14 0 false 0 0 0 false 0 0 0 false (This is a) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 107 626 107 612 DrawLine
161 626 616 7 13 0 false 0 0 0 false 0 0 0 false (...) 10 /Times-Roman DrawText
grestore

grestore

0 648 220 55 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman /Courier /Courier-Bold 
%%BoundingBox: 196 369 416 424

%%EndDocument
 GE 6120 13623 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(scrolling-labeled-box)SH
11 /Times-Roman AF
28920 XM
(gadget is "scrolling-labeled-box-loader".)SH
6120 15921 MT
(This is a combination of the)10 W
10 /Courier AF
18768 XM
(scrolling-input)SH
11 /Times-Roman AF
28053 XM
(gadget and the)10 W
10 /Courier AF
34772 XM
(labeled-box)SH
11 /Times-Roman AF
41657 XM
(gadget. It)
293 W( has a label and)9 W
6120 17117 MT
(a box around the text.  It operates just like the)SH
10 /Courier AF
26526 XM
(scrolling-input-string)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
6120 20935 MT
(3.14. Graphics-Selection)SH
8 /Courier AF
8040 22100 MT
(\050create-instance 'gg:Graphics-Selection opal:aggregadget)SH
9480 22965 MT
(\050:start-where NIL\051)SH
9480 23830 MT
(\050:start-event :leftdown\051)SH
9480 24695 MT
(\050:running-where T\051)SH
9480 25560 MT
(\050:modify-function NIL\051)SH
9480 26425 MT
(\050:check-line T\051)SH
9480 27290 MT
(\050:movegrow-boxes-p T\051)SH
9480 28155 MT
(\050:movegrow-lines-p T\051)SH
9480 29020 MT
(\050:value NIL\051)SH
9480 29885 MT
(\050:active-p T\051)SH
9480 30750 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 31615 MT
(\051)SH
11 SS 
75 100 0 -930 68136 GB 
%%BeginDocument: gadgets/select-rect-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 31
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 12:22 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 321 406 471
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -249 translate
gsave
0 648 200 150 ClipToRectangle
0 0 translate
gsave
20 618 40 25 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
100 618 50 55 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 115 553 50 528 DrawLine
97 604 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
97 583 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
97 566 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
113 566 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
132 566 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
147 566 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
147 583 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
147 604 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
147 621 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
132 621 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
113 621 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
97 621 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
grestore

grestore

0 648 200 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 206 321 406 471

%%EndDocument
 GE 75 100 0 14070 68136 GB 
%%BeginDocument: gadgets/select-line-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 32
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 12:23 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 321 406 471
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -249 translate
gsave
0 648 200 150 ClipToRectangle
0 0 translate
gsave
20 618 40 25 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
100 618 50 55 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 115 553 50 528 DrawLine
47 531 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
112 556 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
79 544 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 200 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 206 321 406 471

%%EndDocument
 GE /Times-Bold SF
6120 45813 MT
(Figure 3-7:)SH
/Times-Roman SF
11893 XM
(Selection of a rectangle and a line with)SH
10 /Courier AF
29303 XM
(graphics-selection)SH
11 /Times-Roman AF
6120 49401 MT
(The loader file for)SH
10 /Courier AF
14426 XM
(graphics-selection)SH
11 /Times-Roman AF
25501 XM
(is "graphics-loader".)SH
6120 51699 MT
(The)SH
10 /Courier AF
8146 XM
(graphics-selection)SH
11 /Times-Roman AF
19262 XM
(object is used to move and change the size of)
41 W( other graphical objects.  \050The)42 W
10 /Courier AF
6120 52895 MT
(multi-graphics-selection)SH
11 /Times-Roman AF
20801 XM
(can select and move multiple objects -- see section 3.15.\051  When the user)6 W
6120 54091 MT
(clicks on a graphical object \050from a set of)
97 W( objects chosen by the designer\051, the object becomes selected)98 W
6120 55287 MT
(and small selection squares appear around the perimeter of the object.  The user)
67 W( can then drag the white)66 W
6120 56483 MT
(squares to move the object or drag the)
166 W( black boxes to change the size of the object.  Pressing in the)167 W
6120 57679 MT
(background \050i.e., on)
28 W( no object\051 causes the currently selected object to become unselected.  Clicking on an)27 W
6120 58875 MT
(object also causes the previously selected)
185 W( object to become unselected since only one object may be)186 W
6120 60071 MT
(selected at a time.)
50 W( While)
374 W( moving and growing, if the mouse goes outside of)49 W
10 /Courier AF
40616 XM
(:running-where)SH
11 /Times-Roman AF
49340 XM
(or if the)49 W
10 /Courier AF
6120 61267 MT
(^g)SH
11 /Times-Roman AF
7595 XM
(key is pressed, the operation aborts.)SH
6120 63565 MT
(The)SH
10 /Courier AF
8193 XM
(graphics-selection)SH
11 /Times-Roman AF
19356 XM
(gadget should be added as)
88 W( a component to some aggregate or aggregadget)89 W
6120 64761 MT
(of the larger interface, just)
41 W( like any other gadget.  The objects in the interface that will be affected by the)40 W
10 /Courier AF
6120 65957 MT
(graphics-selection)SH
11 /Times-Roman AF
17195 XM
(gadget are determined by the slots)SH
10 /Courier AF
32529 XM
(:start-where)SH
11 /Times-Roman AF
40004 XM
(and)SH
10 /Courier AF
41867 XM
(:running-where)SH
11 /Times-Roman AF
(.)SH
6120 68255 MT
(The)SH
10 /Courier AF
8286 XM
(graphics-selection)SH
11 /Times-Roman AF
19542 XM
(gadget sets the)181 W
10 /Courier AF
26836 XM
(:box)SH
11 /Times-Roman AF
29692 XM
(slot of the object being moved or grown.  This)
181 W( is)182 W
6120 69451 MT
(consistent with the behavior)
279 W( of the)278 W
10 /Courier AF
23249 XM
(move-grow-interactor)SH
11 /Times-Roman AF
(, discussed in the Interactors manual.)278 W
6120 70647 MT
(Therefore, you should create your objects with)242 W
10 /Courier AF
28644 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
32436 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
35628 XM
(:width)SH
11 /Times-Roman AF
(, and)242 W
10 /Courier AF
42125 XM
(:height)SH
11 /Times-Roman AF
46842 XM
(formulas that)243 W
6120 71843 MT
(reference the)SH
10 /Courier AF
12102 XM
(:box)SH
11 /Times-Roman AF
14777 XM
(slot.)SH
ES
%%Page: 387 40
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.15)
SH( Multi-Graphics-Selection)1800 W
51386 XM
(Page 387)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10307 XM
(:start-where)SH
11 /Times-Roman AF
17824 XM
(slot must be)
42 W( given a value to pass to an interactor to determine which items may be)41 W
8280 9151 MT
(selected. The)
279 W( value must be one of)
2 W( the valid)3 W
10 /Courier AF
28188 XM
(...-or-none)SH
11 /Times-Roman AF
35066 XM
(forms for the interactors)3 W
10 /Courier AF
46012 XM
(:start-where)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 10347 MT
(\050see the Interactors Manual for a list of allowable values\051.)SH
8280 12645 MT
(The)SH
10 /Courier AF
10460 XM
(:start-event)SH
11 /Times-Roman AF
18130 XM
(slot specifies the event that will cause an object to be selected.)
195 W( The)
664 W( default is)194 W
10 /Courier AF
8280 13841 MT
(:leftdown)SH
11 /Times-Roman AF
(, so if the left mouse button is clicked over an object in)
58 W( the)59 W
10 /Courier AF
40553 XM
(:start-where)SH
11 /Times-Roman AF
(, that object will)59 W
8280 15037 MT
(become selected.)SH
8280 17335 MT
(The)SH
10 /Courier AF
10463 XM
(:running-where)SH
11 /Times-Roman AF
19336 XM
(slot is the area in which the objects can move and grow \050see the Interactors)197 W
8280 18531 MT
(Manual for allowable values\051.)SH
8280 20829 MT
(If the)100 W
10 /Courier AF
11107 XM
(:check-line)SH
11 /Times-Roman AF
18083 XM
(slot is non-NIL, then the)101 W
10 /Courier AF
29648 XM
(graphics-selection)SH
11 /Times-Roman AF
40824 XM
(gadget will check the)101 W
10 /Courier AF
50880 XM
(:line-p)SH
11 /Times-Roman AF
8280 22025 MT
(slot in the selected object, and)
88 W( if it is non-NIL then the interactor will select and change the object as a)87 W
8280 23221 MT
(line. Instances)
315 W( of)20 W
10 /Courier AF
16393 XM
(opal:line)SH
11 /Times-Roman AF
22088 XM
(and)SH
10 /Courier AF
23971 XM
(gg:arrow-line)SH
11 /Times-Roman AF
32066 XM
(already have their)20 W
10 /Courier AF
40279 XM
(:line-p)SH
11 /Times-Roman AF
44774 XM
(slots set to T. For other)20 W
8280 24417 MT
(objects that should be selected as lines, the designer must set the)249 W
10 /Courier AF
39893 XM
(:line-p)SH
11 /Times-Roman AF
44617 XM
(slots explicitly \050e.g., a)249 W
8280 25613 MT
(composite object like an)SH
10 /Courier AF
19278 XM
(arrow-line)SH
11 /Times-Roman AF
25553 XM
(is not really a line, though it should be treated like one\051.)SH
8280 27911 MT
(If)SH
10 /Courier AF
9296 XM
(:movegrow-lines-p)SH
11 /Times-Roman AF
19780 XM
(is NIL, then the)9 W
10 /Courier AF
26995 XM
(graphics-selection)SH
11 /Times-Roman AF
38079 XM
(object will not allow)
9 W( a user to drag the)10 W
8280 29107 MT
(selection squares of a line, and a beep will be issued if the user clicks on a selection square of a line.)SH
8280 31405 MT
(If)SH
10 /Courier AF
9325 XM
(:movegrow-boxes-p)SH
11 /Times-Roman AF
19838 XM
(is NIL, then)
38 W( the)37 W
10 /Courier AF
27167 XM
(graphics-selection object)37 W
11 /Times-Roman AF
42516 XM
(will not allow a user to drag)37 W
8280 32601 MT
(the selection squares of a non-line, and a beep will be issued if)
61 W( the user clicks on a selection square of a)62 W
8280 33797 MT
(non-line.)SH
8280 36095 MT
(The)SH
10 /Courier AF
10283 XM
(graphics-selection)SH
11 /Times-Roman AF
21376 XM
(gadget will be active when the)
18 W( value of its)17 W
10 /Courier AF
40381 XM
(:active-p)SH
11 /Times-Roman AF
46073 XM
(slot is T. To turn off)17 W
8280 37291 MT
(the gadget, set this slot to NIL.)SH
8280 39589 MT
(The)SH
10 /Courier AF
10293 XM
(:selection-function)SH
11 /Times-Roman AF
21996 XM
(slot specifies a function to be executed upon the)
28 W( selection of any object by)29 W
8280 40785 MT
(the user.  This function must take the parameters:)SH
8 /Courier AF
10200 41950 MT
(\050lambda \050gadget-object new-selection\051\051)SH
11 /Times-Roman AF
8280 43371 MT
(The)SH
10 /Courier AF
10517 XM
(new-selection)SH
11 /Times-Roman AF
18844 XM
(parameter may be NIL if no objects are selected \050i.e., the user clicks in)
252 W( the)251 W
8280 44567 MT
(background\051.)SH
8280 46865 MT
(The designer can supply a)86 W
10 /Courier AF
20469 XM
(:modify-function)SH
11 /Times-Roman AF
30430 XM
(that will be called after an object is modified.  It takes)86 W
8280 48061 MT
(these parameters:)SH
8 /Courier AF
10200 49226 MT
(\050lambda \050gadget-object selected-object new-points\051\051)SH
11 /Times-Roman AF
8280 50647 MT
(The)SH
10 /Courier AF
10265 XM
(new-points)SH
11 /Times-Roman AF
16540 XM
(will be a list of 4 numbers, either)SH
10 /Courier AF
31357 XM
(left,top,width,height)SH
11 /Times-Roman AF
44232 XM
(or)SH
10 /Courier AF
45423 XM
(x1,y1,x2,y2)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 388 41
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 388)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(3.15. Multi-Graphics-Selection)SH
8 /Courier AF
8040 9303 MT
(\050create-instance 'gg:Multi-Graphics-Selection opal:aggregadget)SH
/Times-Italic SF
9000 10168 MT
(;; programmer-settable slots)SH
/Courier SF
9480 11033 MT
(\050:active-p T\051)SH
/Times-Italic SF
18600 XM
(;; whether objects can be selected with the gadget)SH
/Courier SF
9480 11898 MT
(\050:start-where NIL\051)SH
/Times-Italic SF
18600 XM
(;; supply a valid start-where here)SH
/Courier SF
9480 12763 MT
(\050:running-where T\051)SH
/Times-Italic SF
18600 XM
(;; if supplied, then this is the area in which the)SH
18600 13628 MT
(;; objects can move and grow)SH
/Courier SF
9480 14493 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
21960 XM
(;; this is called when the selection changes)SH
/Courier SF
9480 15358 MT
(\050:modify-function NIL\051)SH
/Times-Italic SF
20520 XM
(;; called when an object is changed size or position)SH
/Courier SF
9480 16223 MT
(\050:check-line T\051)SH
/Times-Italic SF
20520 XM
(;; whether to check for :line-p in objects)SH
/Courier SF
9480 17088 MT
(\050:check-polygon T\051)SH
/Times-Italic SF
20520 XM
(;; whether to check for :polygon-p in objects)SH
/Courier SF
9480 17953 MT
(\050:check-group T\051)SH
/Times-Italic SF
20520 XM
(;; whether to check for :group-p in objects)SH
/Courier SF
9480 18818 MT
(\050:check-grow-p NIL\051)SH
/Times-Italic SF
20520 XM
(;; whether to check for :grow-p in objects)SH
/Courier SF
9480 19683 MT
(\050:check-move-p NIL\051)SH
/Times-Italic SF
20520 XM
(;; whether to check for :move-p in objects)SH
/Courier SF
9480 20548 MT
(\050:move-multiple-p T\051)SH
/Times-Italic SF
20520 XM
(;; whether to move multiple objects as a group)SH
/Courier SF
9480 21413 MT
(\050:grow-multiple-p T\051)SH
/Times-Italic SF
20520 XM
(;; whether to grow multiple objects as a group)SH
/Courier SF
9480 22278 MT
(\050:input-filter NIL\051)SH
/Times-Italic SF
20520 XM
(;; used by the move-grow-interactor for gridding, etc.)SH
/Courier SF
9480 23143 MT
(\050:want-undo NIL\051)SH
/Times-Italic SF
20520 XM
(;; whether to save information to allow undo)SH
/Courier SF
9480 24008 MT
(\050:multiple-select-p T\051)SH
/Times-Italic SF
20520 XM
(;; if T, then multiple objects can be selected.)SH
/Courier SF
9480 25738 MT
(\050:other-multi-graphics-selection NIL])SH
/Times-Italic SF
28200 XM
(;; Used when several multi-selection gadgets in)SH
28200 26603 MT
(;; different windows are working in conjunction.)SH
/Courier SF
9480 28333 MT
(\050:allow-component-select NIL\051)SH
/Times-Italic SF
26280 XM
(;; if T, then pressing with)SH
10 /Courier AF
34566 XM
(control)SH
8 /Times-Italic AF
38966 XM
(will select)SH
26280 29198 MT
(;; the component under the selected object.)SH
/Courier SF
9480 30063 MT
(\050:down-to-component-function gg::Point-To-Comp\051)SH
/Times-Italic SF
33000 XM
(;; a function that gets the)SH
33000 30928 MT
(;; appropriate component out)SH
33000 31793 MT
(;; of the object under the mouse.)SH
9000 33523 MT
(;; slots the programmer can access)SH
/Courier SF
9480 34388 MT
(\050:current-selected-object NIL\051)SH
/Times-Italic SF
24360 XM
(;; set with new selection or object to be moved)SH
24360 35253 MT
(;; or grown before other slots are set.)SH
/Courier SF
9480 36118 MT
(\050:value NIL\051\051)SH
/Times-Italic SF
16680 XM
(;; current object or objects selected **DO NOT SET**)SH
11 SS 
75 100 0 -10080 72109 GB 
%%BeginDocument: gadgets/multi-selection-pix1.ps
%!PS-Adobe-2.0
%%Title: Opal 26
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 12:13 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 216 321 396 471
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
144 -249 translate
gsave
0 648 180 150 ClipToRectangle
0 0 translate
gsave
15 638 75 65 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
110 563 60 55 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 160 613 25 518 DrawLine
12 641 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
37 641 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
62 641 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
86 641 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
86 620 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
86 598 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
86 577 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
62 577 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
37 577 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
12 577 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
12 598 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
12 620 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 180 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 216 321 396 471

%%EndDocument
 GE 75 100 0 3695 72109 GB 
%%BeginDocument: gadgets/multi-selection-pix2.ps
%!PS-Adobe-2.0
%%Title: Opal 28
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 12:14 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 216 321 396 471
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
144 -249 translate
gsave
0 648 180 150 ClipToRectangle
0 0 translate
gsave
15 638 75 65 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
110 563 60 55 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 160 613 25 518 DrawLine
22 521 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
89 569 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
157 616 7 7 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
grestore

grestore

0 648 180 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 216 321 396 471

%%EndDocument
 GE 75 100 0 17470 72109 GB 
%%BeginDocument: gadgets/multi-selection-pix3.ps
%!PS-Adobe-2.0
%%Title: Opal 3
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 11:18 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 216 321 396 471
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
144 -249 translate
gsave
0 648 180 150 ClipToRectangle
0 0 translate
gsave
15 638 75 65 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
110 563 60 55 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 160 609 25 518 DrawLine
12 641 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
86 641 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
86 577 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
12 577 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
89 567 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
107 566 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
166 566 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
166 512 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
107 512 7 7 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 180 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 216 321 396 471

%%EndDocument
 GE /Times-Roman SF
6120 50332 MT
(The loader file for)SH
10 /Courier AF
14426 XM
(multi-graphics-selection)SH
11 /Times-Roman AF
29101 XM
(is "multi-selection-loader".)SH
6120 52630 MT
(The)SH
10 /Courier AF
8200 XM
(multi-selection)SH
11 /Times-Roman AF
17569 XM
(gadget is somewhat like the)94 W
10 /Courier AF
30534 XM
(graphics-selection)SH
11 /Times-Roman AF
(. The)
463 W( major difference is)94 W
6120 53826 MT
(that multiple objects can be selected and manipulated by)
111 W( the user, and that the programmer must use a)112 W
6120 55022 MT
(function to set the)47 W
10 /Courier AF
14496 XM
(:value)SH
11 /Times-Roman AF
18418 XM
(slot. Another)
369 W( difference is the way that the gadget checks whether move and)46 W
6120 56218 MT
(grow is allowed.)SH
6120 58516 MT
(This gadget exhibits the following features:)SH
/Symbol SF
8089 60094 MT
(\267)SH
/Times-Roman SF
8870 XM
(Given a list of)
35 W( graphical objects, the)36 W
10 /Courier AF
25309 XM
(multi-graphics-selection)SH
11 /Times-Roman AF
40020 XM
(aggregadget will cause)36 W
8870 61290 MT
(selection squares to appear on the bounding box of selected objects.)SH
/Symbol SF
8089 63184 MT
(\267)SH
/Times-Roman SF
8870 XM
(One or more objects may be selected at a time, even when the objects are in)
243 W( different)242 W
8870 64380 MT
(windows.)SH
/Symbol SF
8089 66274 MT
(\267)SH
/Times-Roman SF
8870 XM
(A built-in interactor displays the)
34 W( selection squares around an object at the time of a specified)35 W
8870 67470 MT
(event \050such as clicking a mouse button on the object\051.)SH
/Symbol SF
8089 69364 MT
(\267)SH
/Times-Roman SF
8870 XM
(Each selection square allows the user to move or grow the object by)
92 W( dragging the selection)91 W
8870 70560 MT
(square.)SH
ES
%%Page: 389 42
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.15)
SH( Multi-Graphics-Selection)1800 W
51386 XM
(Page 389)SH
46800 50 8280 4486 UL
11 /Symbol AF
10249 8080 MT
(\267)SH
/Times-Roman SF
11030 XM
(The user can move and grow several objects simultaneously.)SH
/Symbol SF
10249 9974 MT
(\267)SH
/Times-Roman SF
11030 XM
(All of the objects inside a region \050drawn by dragging the mouse\051 can be selected.)SH
12 /Times-Bold AF
8280 13658 MT
(3.15.1. Programming Interface)SH
11 /Times-Roman AF
8280 14854 MT
(Create an instance of the)19 W
10 /Courier AF
19522 XM
(gg:multi-graphics-selection)SH
11 /Times-Roman AF
36017 XM
(gadget and supply the)20 W
10 /Courier AF
45995 XM
(:start-where)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 16050 MT
(with a valid list that)
133 W( can be passed to an interactor.  This)132 W
10 /Courier AF
35050 XM
(:start-where)SH
11 /Times-Roman AF
42657 XM
(must return the items to be)132 W
8280 17246 MT
(selected. It)
571 W( should be an)148 W
10 /Courier AF
20317 XM
(...-or-none)SH
11 /Times-Roman AF
27340 XM
(form, such as)148 W
10 /Courier AF
33955 XM
(:element-of-or-none)SH
11 /Times-Roman AF
(. An)
573 W( example of the)149 W
8280 18442 MT
(parameter to)SH
10 /Courier AF
14082 XM
(:start-where)SH
11 /Times-Roman AF
21557 XM
(is:)SH
8 /Courier AF
10200 19607 MT
(\050list :element-of-or-none MYAGG\051)SH
11 /Times-Roman AF
8280 21905 MT
(The)SH
10 /Courier AF
10322 XM
(:value)SH
11 /Times-Roman AF
14254 XM
(slot of the)57 W
10 /Courier AF
19100 XM
(multi-graphics-selection)SH
11 /Times-Roman AF
33831 XM
(object supplies the object\050s\051 the user selects.  If)56 W
10 /Courier AF
8280 23101 MT
(:multiple-select-p)SH
11 /Times-Roman AF
19375 XM
(is NIL \050the default\051, then it is a single object)
20 W( or NIL.  If)21 W
10 /Courier AF
44280 XM
(:multiple-select-p)SH
11 /Times-Roman AF
8280 24297 MT
(is T, then will)
554 W( always be a list or NIL \050even if only one object is selected\051.  Also, a)553 W
10 /Courier AF
8280 25493 MT
(:selection-function)SH
11 /Times-Roman AF
19981 XM
(can be supplied and will)
26 W( be called each time the selection changes.  It takes the)27 W
8280 26689 MT
(parameters)SH
8 /Courier AF
10200 27854 MT
(\050lambda \050gadget new-selection\051)SH
11 /Times-Roman AF
8280 29275 MT
(where)SH
/Times-Italic SF
11241 XM
(new-selection)SH
/Times-Roman SF
17564 XM
(is the new value of)SH
10 /Courier AF
26147 XM
(:value)SH
11 /Times-Roman AF
(.)SH
8280 31573 MT
(When your interface contains selectable objects in several)
38 W( windows, you can put a multi-selection gadget)37 W
8280 32769 MT
(in each window and coordinate them all.  Each gadget's)131 W
10 /Courier AF
34483 XM
(:other-multi-graphics-selection)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 33965 MT
(should contain a list of ALL the multi-selection gadgets.  Then, each)
243 W( gadget's)242 W
10 /Courier AF
45926 XM
(:value)SH
11 /Times-Roman AF
50043 XM
(will reflect)242 W
8280 35161 MT
(selections in all windows.  A known bug is that the selection order)
147 W( is NOT preserved across multiple)148 W
8280 36357 MT
(windows \050you can't tell which object was selected first or last\051.  Also, you cannot drag objects)
58 W( from one)57 W
8280 37553 MT
(window to another.)SH
8280 39851 MT
(The user can change the size and/or position of the objects by pressing on the selection handles \050see)171 W
8280 41047 MT
(below\051. If)
935 W( the)330 W
10 /Courier AF
16105 XM
(:check-line)SH
11 /Times-Roman AF
23309 XM
(slot is non-NIL, then the)329 W
10 /Courier AF
36014 XM
(:line-p)SH
11 /Times-Roman AF
40818 XM
(slot in the object returned by)329 W
10 /Courier AF
8280 42243 MT
(:start-where)SH
11 /Times-Roman AF
15764 XM
(will be gvd, and if it)
9 W( is non-NIL then the interactor will change the object as a line.  Note)10 W
8280 43439 MT
(that instances of)152 W
10 /Courier AF
16159 XM
(opal:line)SH
11 /Times-Roman AF
21986 XM
(and)SH
10 /Courier AF
24001 XM
(gg:arrow-line)SH
11 /Times-Roman AF
32228 XM
(have their)152 W
10 /Courier AF
37174 XM
(:line-p)SH
11 /Times-Roman AF
41801 XM
(slot set to T by default.  For)151 W
8280 44635 MT
(other objects, the programmer must set the)193 W
10 /Courier AF
28693 XM
(:line-p)SH
11 /Times-Roman AF
33361 XM
(slots explicitly.  There is analogous interaction)193 W
8280 45831 MT
(between the)398 W
10 /Courier AF
14634 XM
(:check-group)SH
11 /Times-Roman AF
22507 XM
(and)SH
10 /Courier AF
24768 XM
(:check-polygon)SH
11 /Times-Roman AF
33841 XM
(slots of the gadget and the)398 W
10 /Courier AF
48020 XM
(:group-p)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 47027 MT
(:polygon-p)SH
11 /Times-Roman AF
14555 XM
(slots of the selected objects.)SH
8280 49325 MT
(The programmer)
142 W( can supply a)143 W
10 /Courier AF
22463 XM
(:modify-function)SH
11 /Times-Roman AF
32481 XM
(that will be called after an object is modified.  It)143 W
8280 50521 MT
(takes these parameters:)SH
8 /Courier AF
10200 51686 MT
(\050gadget selected-object new-points\051)SH
11 /Times-Roman AF
8280 53107 MT
(The)SH
/Times-Italic SF
10265 XM
(new-points)SH
/Times-Roman SF
15368 XM
(will be a list of 4 numbers, either)SH
10 /Courier AF
30185 XM
(left,top,width,height)SH
11 /Times-Roman AF
43060 XM
(or)SH
10 /Courier AF
44251 XM
(x1,y1,x2,y2)SH
11 /Times-Roman AF
(.)SH
/Times-Bold SF
8280 55405 MT
(Programmer-settable slots:)SH
/Times-Roman SF
8280 57703 MT
(In summary, public slots of the)SH
10 /Courier AF
22243 XM
(multi-graphics-selection)SH
11 /Times-Roman AF
36918 XM
(gadget are:)SH
10 /Courier AF
10480 59654 MT
(:active-p)SH
11 /Times-Roman AF
16311 XM
(- If)
156 W( T, then the gadget will operate.  If NIL, then none of the interactors will work.)155 W
13780 60850 MT
(Setting to NIL does not clear the selection, however.)SH
1406 50 22702 61050 UL
10 /Courier AF
10480 62545 MT
(:start-where)SH
11 /Times-Roman AF
17955 XM
(- Supply a valid start-where here.)SH
10 /Courier AF
10480 64240 MT
(:running-where)SH
11 /Times-Roman AF
19155 XM
(- If supplied, then this is the area in which the objects can move and grow.)SH
10 /Courier AF
10480 65935 MT
(:selection-function)SH
11 /Times-Roman AF
22155 XM
(- This is called when the selection changes.)SH
10 /Courier AF
10480 67630 MT
(:modify-function)SH
11 /Times-Roman AF
20355 XM
(- This is called when an object is changed size or position.)SH
10 /Courier AF
10480 69325 MT
(:check-line)SH
11 /Times-Roman AF
17480 XM
(- If T, the objects are checked for their)125 W
10 /Courier AF
35827 XM
(:line-p)SH
11 /Times-Roman AF
40427 XM
(slot and if that is)
125 W( non-NIL, then)126 W
13780 70521 MT
(move or grown as a line.)SH
ES
%%Page: 390 43
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 390)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
8320 7955 MT
(:check-polygon)SH
11 /Times-Roman AF
17039 XM
(- If T, the objects are checked for)
44 W( their)43 W
10 /Courier AF
34655 XM
(:polygon-p)SH
11 /Times-Roman AF
40973 XM
(slot and if that is non-NIL,)43 W
11620 9151 MT
(then they are moved or grown as a polygon \050by changing their)SH
10 /Courier AF
39294 XM
(:point-list)SH
11 /Times-Roman AF
46169 XM
(slot\051.)SH
10 /Courier AF
8320 10846 MT
(:check-group)SH
11 /Times-Roman AF
15849 XM
(- If T, the objects are checked for)
54 W( their)55 W
10 /Courier AF
33559 XM
(:group-p)SH
11 /Times-Roman AF
38689 XM
(slot and if that is non-NIL, then)55 W
11620 12042 MT
(the individual components of the group are modified.)SH
10 /Courier AF
8320 13737 MT
(:check-grow-p)SH
11 /Times-Roman AF
16413 XM
(- If T, then)
18 W( checks in each object to see if)17 W
10 /Courier AF
35049 XM
(:grow-p)SH
11 /Times-Roman AF
39541 XM
(is T, and if so, then will grow,)17 W
11620 14933 MT
(else won't.  If NIL, then everything can grow.  Default NIL.)SH
10 /Courier AF
8320 16628 MT
(:check-move-p)SH
11 /Times-Roman AF
16403 XM
(- If T, then checks in each object to see if)8 W
10 /Courier AF
34937 XM
(:move-p)SH
11 /Times-Roman AF
39420 XM
(is T, and if so, then will move,)8 W
11620 17824 MT
(else won't.  If NIL, then everything can move.  Default NIL.)SH
10 /Courier AF
8320 19519 MT
(:move-multiple-p)SH
11 /Times-Roman AF
18280 XM
(- If T, then if multiple items are selected and you press on a move box, then)84 W
11620 20715 MT
(moves all of the objects.  If NIL, then just moves the object you point to.  Default=T.)SH
10 /Courier AF
8320 22410 MT
(:grow-multiple-p)SH
11 /Times-Roman AF
18209 XM
(- If T, then when multiple items are selected, grow boxes appear)
14 W( at the corners)15 W
11620 23606 MT
(of the whole selection, and pressing there will grow all the objects.  If)
216 W( NIL, then those)215 W
11620 24802 MT
(handles don't appear.)SH
10 /Courier AF
8320 26497 MT
(:input-filter)SH
11 /Times-Roman AF
16495 XM
(- This is used by the move-grow-interactor for gridding.)
100 W( Consult)
477 W( the Interactors)101 W
11620 27693 MT
(manual for a list of allowed values.)SH
10 /Courier AF
8320 29388 MT
(:want-undo)SH
11 /Times-Roman AF
14595 XM
(- If T, then saves information \050conses\051 so that you can call)SH
10 /Courier AF
40466 XM
(undo-last-move-grow)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8320 31083 MT
(:allow-component-select)SH
11 /Times-Roman AF
23021 XM
(- Whether to allow selection of components)
626 W( \050see below\051.)625 W
11620 32279 MT
(Default=NIL.)SH
10 /Courier AF
8320 33974 MT
(:down-to-component-function)SH
11 /Times-Roman AF
24830 XM
(- A function that determines which component)
35 W( of an object has)36 W
11620 35170 MT
(just been selected \050see below\051.  Default=NIL.)SH
10 /Courier AF
8320 36865 MT
(:multiple-select-p)SH
11 /Times-Roman AF
19395 XM
(- If T, then multiple objects can be selected.  Default=NIL.)SH
/Times-Bold SF
6120 39163 MT
(Slots that can be accessed:)SH
10 /Courier AF
8320 41114 MT
(:value)SH
11 /Times-Roman AF
12300 XM
(- set with list of the current selections, in reverse order the user selected)
105 W( the objects \050first)104 W
11620 42310 MT
(selected object is last in the list\051.)366 W
/Times-Bold SF
29427 XM
(Do not set this)
366 W( slot.)367 W
/Times-Roman SF
41067 XM
(Instead, use the function)367 W
10 /Courier AF
11620 43506 MT
(Set-Selection)SH
11 /Times-Roman AF
19695 XM
(\050see below\051.)SH
10 /Courier AF
8320 45201 MT
(:current-selected-object)SH
11 /Times-Roman AF
22995 XM
(- set with new selection before other slots are set.)SH
/Times-Bold SF
6120 47499 MT
(Selecting components of the currently selected object:)SH
/Times-Roman SF
6120 49797 MT
(You can enable the selecting of the components of the selected objects by)
858 W( setting)857 W
10 /Courier AF
6120 50993 MT
(:allow-component-select)SH
11 /Times-Roman AF
20207 XM
(to T. For example, if the)12 W
10 /Courier AF
31277 XM
(:start-where)SH
11 /Times-Roman AF
38764 XM
(lists a set of objects, this)
12 W( feature)13 W
6120 52189 MT
(can allow the selection of the)171 W
/Times-Italic SF
20280 XM
(parts)SH
/Times-Roman SF
22988 XM
(of those objects.  When component selection)
171 W( is enabled, then by)170 W
6120 53385 MT
(pressing the)84 W
10 /Courier AF
11848 XM
(control-left)SH
11 /Times-Roman AF
19407 XM
(mouse button over a selected object, that object will be)
84 W( deselected, and its)85 W
6120 54581 MT
(component will be selected instead.  Similarly, if the)456 W
10 /Courier AF
33656 XM
(control-middle)SH
11 /Times-Roman AF
42786 XM
(mouse button or the)455 W
10 /Courier AF
6120 55777 MT
(control-shift-left)SH
11 /Times-Roman AF
17210 XM
(mouse button is hit over a selected object, then that object)
15 W( is de-selected, and the)16 W
6120 56973 MT
(object underneath is added to the)
211 W( selection set.  The slot)210 W
10 /Courier AF
33301 XM
(:down-to-component-function)SH
11 /Times-Roman AF
49986 XM
(should)SH
6120 58169 MT
(contain a function to get the appropriate component)
136 W( out of the object under the mouse.  This function)137 W
6120 59365 MT
(might call)
110 W( a method in the selected object.  Parameters are)109 W
10 /Courier AF
33222 XM
(\050lambda obj x y\051)109 W
11 /Times-Roman AF
(. It)
493 W( should return the)109 W
6120 60561 MT
(object to be selected, or NIL.  The default function calls)SH
10 /Courier AF
31013 XM
(opal:point-to-component)SH
11 /Times-Roman AF
45088 XM
(directly.)SH
/Times-Bold SF
6120 62859 MT
(Slots of the objects that can be selected are:)SH
10 /Courier AF
8320 64810 MT
(:line-p)SH
11 /Times-Roman AF
12795 XM
(- this should be T if the object should be moved as a line, and NIL if as a rectangle)SH
10 /Courier AF
8320 66505 MT
(:group-p)SH
11 /Times-Roman AF
13437 XM
(- this should be)
42 W( T if the object is some instance of opal:aggregate and all its components)43 W
11620 67701 MT
(should be moved as a group)SH
10 /Courier AF
8320 69396 MT
(:polygon-p)SH
11 /Times-Roman AF
14696 XM
(- this should be T)
101 W( if the object is a polyline and it should be moved by changing its)100 W
10 /Courier AF
11620 70592 MT
(:point-list)SH
11 /Times-Roman AF
18495 XM
(slot)SH
ES
%%Page: 391 44
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.16)
SH( Scrolling-Windows)1800 W
51386 XM
(Page 391)SH
46800 50 8280 4486 UL
/Courier SF
10480 7955 MT
(:points)SH
11 /Times-Roman AF
14955 XM
(- if)SH
10 /Courier AF
16543 XM
(:line-p)SH
11 /Times-Roman AF
21018 XM
(is T,)
SH( then the)1 W
10 /Courier AF
27040 XM
(:points)SH
11 /Times-Roman AF
31516 XM
(slot of the object is changed as the object is moved or)1 W
13780 9151 MT
(grown.)SH
10 /Courier AF
10480 10846 MT
(:box)SH
11 /Times-Roman AF
13278 XM
(- if)123 W
10 /Courier AF
15112 XM
(:line-p)SH
11 /Times-Roman AF
19710 XM
(is NIL, then the)123 W
10 /Courier AF
27381 XM
(:box)SH
11 /Times-Roman AF
30179 XM
(slot of the object is changed as)
123 W( the object is moved or)122 W
13780 12042 MT
(grown.)SH
10 /Courier AF
10480 13737 MT
(:grow-p)SH
11 /Times-Roman AF
14955 XM
(- if this object can be changed size)SH
10 /Courier AF
10480 15432 MT
(:move-p)SH
11 /Times-Roman AF
14955 XM
(- if this object can be moved)SH
/Times-Bold SF
8280 17730 MT
(Useful Functions:)SH
8 /Courier AF
10200 18943 MT
(gg:Set-Selection)SH
/Times-Italic SF
18360 XM
(gadget new-selection)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Italic AF
8280 21241 MT
(Gadget)SH
/Times-Roman SF
11949 XM
(should be a)156 W
10 /Courier AF
17702 XM
(multi-graphics-selection)SH
11 /Times-Roman AF
32533 XM
(gadget, and)156 W
/Times-Italic SF
38190 XM
(new-selection)SH
/Times-Roman SF
44670 XM
(is a list of objects that)157 W
8280 22437 MT
(should be selected, or a single object to be selected,)
27 W( or NIL to turn off all selections.  The list passed in is)26 W
8280 23633 MT
(not damaged.)SH
8 /Courier AF
10200 24846 MT
(gg:Undo-Last-Move-Grow)SH
/Times-Italic SF
21240 XM
(multi-graphics-selection-gadget)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 27144 MT
(When)SH
10 /Courier AF
11323 XM
(:want-undo)SH
11 /Times-Roman AF
17740 XM
(is non-NIL \050default is NIL\051, then calling this function will)
142 W( undo the last move or)143 W
8280 28340 MT
(grow and the selection will return to whatever it was)
36 W( when the objects were moved or grown.  If you call)35 W
10 /Courier AF
8280 29536 MT
(undo-last-move-grow)SH
11 /Times-Roman AF
20074 XM
(again, it undoes the undo \050one-level undo\051.)
119 W( It)
514 W( is your responsibility to make)120 W
8280 30732 MT
(sure that no objects were deleted or whatever between the grow and the call to undo.)SH
/Times-Italic SF
8280 33030 MT
(Garnet does not yet have a general mechanism for Undo, so you should use this feature with care.  It is)67 W
8280 34226 MT
(currently your responsibility to keep track of what the last operation was and undo it.)SH
12 /Times-Bold AF
8280 37910 MT
(3.15.2. End User Operation)SH
11 /Times-Roman AF
8280 39106 MT
(The user can press on any object with the)
194 W( left button, and it will become selected.  Pressing on the)195 W
8280 40302 MT
(background, causes no)
24 W( object to be selected \050the current object becomes de-selected\051.  Selecting an object)23 W
8280 41498 MT
(with the left button causes the previous object)
219 W( to be de-selected.  If the application allows multiple)220 W
8280 42694 MT
(selection, then clicking with shift-left or middle on an object toggles it in the selection set.)SH
8280 44992 MT
(Once an object is selected, it)
62 W( can be grown by pressing with the left button on one of the black boxes or)61 W
8280 46188 MT
(moved by pressing on a white box.  While moving and growing, if the mouse)
81 W( goes outside of :running-)82 W
8280 47384 MT
(where or if)SH
10 /Courier AF
13379 XM
(^g)SH
11 /Times-Roman AF
14854 XM
(is pressed, the operation aborts.)SH
8280 49682 MT
(The gadget)
56 W( also allows the user to change the size of several objects at once.  When multiple objects are)55 W
8280 50878 MT
(selected, outline handles appear around each object, and the whole set can)
63 W( be moved by pressing on any)64 W
8280 52074 MT
(of these handles.  Additionally, when)59 W
10 /Courier AF
25314 XM
(:grow-multiple-p)SH
11 /Times-Roman AF
35248 XM
(is non-NIL, black)
59 W( handles appear at the four)58 W
8280 53270 MT
(corners of the collection of objects, and these can be used to scale the entire group.)SH
8280 55568 MT
(The gadget also allows objects to be selected)
85 W( in a region.  If you press down and drag before releasing,)86 W
8280 56764 MT
(then only)
46 W( the objects fully inside the dragged rectangle will become selected.  If you do this with the left)45 W
8280 57960 MT
(button, then they will be selected.  If you)
147 W( do this with shift-left or the middle button, then all objects)148 W
8280 59156 MT
(inside the rectangle will be toggled in the selection set \050added if not there, removed if there\051.)SH
14 /Times-Bold AF
8280 62974 MT
(3.16. Scrolling-Windows)SH
11 /Times-Roman AF
8280 64170 MT
(There are two scrolling-window)
148 W( gadgets which have the standard Garnet look and feel, and two other)147 W
8280 65366 MT
(scrolling-window gadgets that have the Motif look and feel)
38 W( \050see section 4.18\051.  These windows are based)39 W
8280 66562 MT
(on the design from Roderick J. Williams at the University of Leeds for the Garnet)
286 W( contest.  The)285 W
10 /Courier AF
8280 67758 MT
(scrolling-window)SH
11 /Times-Roman AF
18320 XM
(gadget allows you to do your)
165 W( own scrolling.  The)166 W
10 /Courier AF
41880 XM
(scrolling-window-with-)SH
8280 68954 MT
(bars)SH
11 /Times-Roman AF
11011 XM
(gadget comes with a horizontal and vertical scroll bar,)
56 W( which you can have on either side \050and can)55 W
8280 70150 MT
(turn off)
162 W( explicitly\051.  Each scroll bar will go blank if the entire area to be scrolled in is visible in the)163 W
8280 71346 MT
(window.)SH
ES
%%Page: 392 45
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 392)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6532 47175 GB 
%%BeginDocument: gadgets/scrolling-window-gadget.PS
%!PS-Adobe-2.0
%%Title: Scrolling Window
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 11:36 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 110 259 503 533
%%%Pages: 1
%%EndComments


/SetUserScreenDict 22 dict def
SetUserScreenDict begin
  /tempctm matrix def
  /temprot matrix def
  /tempscale matrix def
  /ConcatProcs
   {/proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add
      array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
   } def
  /resmatrix matrix def
  /findresolution
   { 72 0 resmatrix defaultmatrix dtransform
     /yres exch def /xres exch def
     xres dup mul yres dup mul add sqrt
   } def
end

/SetUserScreen
  { SetUserScreenDict begin
    /spotfunction exch def
    /cellsize exch def
    /m tempctm currentmatrix def
    /rm 0 temprot rotate def
    /sm cellsize dup tempscale scale def
    sm rm m m concatmatrix m concatmatrix pop
    1 0 m dtransform /y1 exch def /x1 exch def
    /veclength x1 dup mul y1 dup mul add sqrt def
    /frequency findresolution veclength div def
    /newscreenangle y1 x1 atan def
    m 2 get m 1 get mul m 0 get m 3 get mul sub
     0 gt
     { { neg } /spotfunction load ConcatProcs
         /spotfunction exch def
     } if
    frequency newscreenangle /spotfunction load setscreen
  end
} def

/SetPatternDict 18 dict def
SetPatternDict begin
  /bitison
   { /ybit exch def /xbit exch def
     /bytevalue bstring ybit bwidth mul xbit 8 idiv
       add get def
     /mask 1 7 xbit 8 mod sub bitshift def
     bytevalue mask and 0 ne
    } def
end

/BitPatternSpotFunction
  { SetPatternDict begin
     /y exch def /x exch def
     /xindex x 1 add 2 div bpside mul cvi def
     /yindex y 1 add 2 div bpside mul cvi def
     xindex yindex bitison
      { /onbits onbits 1 add def 1 }
      { /offbits offbits 1 add def 0 }
      ifelse
    end
  } def

/SetPattern
  { SetPatternDict begin
    /cellsz exch def
    /bwidth exch def
    /bpside exch def
    /bstring exch def
    /onbits 0 def /offbits 0 def
    cellsz /BitPatternSpotFunction load
     SetUserScreen
    {} settransfer
    offbits offbits onbits add div setgray
    end
  } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-1
<ff80 f780 e380 c180 8080 c180 e380 f780 ff80>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
38 -187 translate
gsave
0 648 393 274 ClipToRectangle
0 0 translate
gsave
0 608 20 174 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
0 648 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 645 3 638 7 638 7 631 13 631 13 638 17 638 10 645 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
0 414 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 397 3 404 7 404 7 411 13 411 13 404 17 404 10 397 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
0 628 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 624 3 617 17 617 10 624 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
10 620 3 613 17 613 10 620 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
0 434 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 418 3 425 17 425 10 418 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
10 422 3 429 17 429 10 422 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
1 608 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
60 394 293 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
20 394 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
23 384 30 377 30 381 37 381 37 387 30 387 30 391 23 384 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
373 394 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
390 384 383 377 383 381 376 381 376 387 383 387 383 391 390 384 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
40 394 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
44 384 51 391 51 377 44 384 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
48 384 55 391 55 377 48 384 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
353 394 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
369 384 362 391 362 377 369 384 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
365 384 358 391 358 377 365 384 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
60 393 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
grestore

gsave

%
% Begin new window
%
20 0 translate
gsave
0 648 373 254 ClipToRectangle
0 0 translate
gsave
grestore

gsave

%
% Begin new window
%
0 0 translate
gsave
0 648 500 500 ClipToRectangle
0 0 translate
gsave
0 648 30 30 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
470 648 30 30 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 178 30 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
470 178 30 30 0 0 0 0 false 0 0 [] 1 0.75 0 0 0 false DrawRectangle
image-1 9 2 15.36
250.0 398.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -2 0 0 0 false DrawEllipse
grestore

grestore

grestore

grestore

grestore

grestore

0 648 393 274 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 110 259 503 533

%%EndDocument
 GE 8 /Courier AF
8040 29246 MT
(\050create-instance 'gg:Scrolling-Window opal:aggregadget)SH
9480 30111 MT
(\050:maybe-constant '\050:title :parent-window\051\051)SH
9480 30976 MT
(\050:left 0\051  ;)SH
/Times-Italic SF
15720 XM
(left, top, width and height of window)SH
/Courier SF
9480 31841 MT
(\050:top 0\051)SH
9480 32706 MT
(\050:position-by-hand NIL\051 ;)SH
/Times-Italic SF
21960 XM
(if T, then left,top ignored and user asked for window position)SH
/Courier SF
9480 33571 MT
(\050:width 150\051 ;)SH
/Times-Italic SF
(width and height of inside of outer window)SH
/Courier SF
9480 34436 MT
(\050:height 150\051)SH
9480 35301 MT
(\050:border-width 2\051 ;)SH
/Times-Italic SF
19080 XM
(of window)SH
/Courier SF
9480 36166 MT
(\050:parent-window NIL\051 ;)SH
/Times-Italic SF
20520 XM
(window this scrolling-window is inside of, or NIL if top level)SH
/Courier SF
9480 37031 MT
(\050:double-buffered-p NIL\051)SH
9480 37896 MT
(\050:omit-title-bar-p NIL\051)SH
9480 38761 MT
(\050:title "Scrolling-Window"\051)SH
9480 39626 MT
(\050:icon-title \050o-formula \050gvl :title\051\051\051 ;)SH
/Times-Italic SF
(Default is the same as the title)SH
/Courier SF
9480 40491 MT
(\050:total-width 200\051)
SH( ;)960 W
/Times-Italic SF
20520 XM
(total size of the scrollable area inside)SH
/Courier SF
9480 41356 MT
(\050:total-height 200\051)SH
9480 42221 MT
(\050:X-Offset 0\051  ;)SH
/Times-Italic SF
17640 XM
(offset in of the scrollable area)SH
/Courier SF
9480 43086 MT
(\050:Y-Offset 0\051)SH
9480 43951 MT
(\050:visible T\051  ;)SH
/Times-Italic SF
17160 XM
(whether the entire window is visible \050mapped\051)SH
/Courier SF
9480 45681 MT
(;;)SH
/Times-BoldItalic SF
11120 XM
(Read-Only slots)SH
/Courier SF
9480 46546 MT
(\050:Inner-Window NIL\051  ;)SH
/Times-Italic SF
20520 XM
(these are created by the update method)SH
/Courier SF
9480 47411 MT
(\050:inner-aggregate NIL\051 ;)SH
/Times-Italic SF
21480 XM
(add your objects to this aggregate \050but have to update first\051)SH
/Courier SF
9480 48276 MT
(\050:outer-window NIL\051 ;)SH
/Times-Italic SF
20040 XM
(call Opal:Update on this window \050or on gadget itself\051)SH
ES
%%Page: 393 46
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.16)
SH( Scrolling-Windows)1800 W
51386 XM
(Page 393)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'gg:Scrolling-Window-With-Bars opal:aggregadget)SH
11640 8564 MT
(\050:maybe-constant '\050:left :top :width :height :border-width :title)SH
20760 9429 MT
(:total-width :total-height :h-scroll-bar-p :v-scroll-bar-p)SH
20760 10294 MT
(:h-scroll-on-top-p :v-scroll-on-left-p :min-scroll-bar-width)SH
20760 11159 MT
(:scr-trill-p :page-trill-p :indicator-text-p :h-scr-incr)SH
20760 12024 MT
(:h-page-incr :v-scr-incr :v-page-incr :int-feedback-p)SH
20760 12889 MT
(:indicator-font :parent-window :icon-title :visible\051\051)SH
11640 13754 MT
(;;)SH
/Times-Italic SF
13080 XM
(Window slots)SH
/Courier SF
11640 14619 MT
(\050:left 0\051  ;)SH
/Times-Italic SF
17880 XM
(left, top, width and height of outermost window)SH
/Courier SF
11640 15484 MT
(\050:top 0\051)SH
11640 16349 MT
(\050:position-by-hand NIL\051 ;)SH
/Times-Italic SF
24120 XM
(if T, then left,top ignored and user asked for window position)SH
/Courier SF
11640 17214 MT
(\050:width 150\051 ;)SH
/Times-Italic SF
(width and height of inside of outer window)SH
/Courier SF
11640 18079 MT
(\050:height 150\051)SH
11640 18944 MT
(\050:border-width 2\051 ;)SH
/Times-Italic SF
21240 XM
(of outer window)SH
/Courier SF
11640 19809 MT
(\050:parent-window NIL\051 ;)SH
/Times-Italic SF
22680 XM
(window this scrolling-window is inside of, or NIL if top level)SH
/Courier SF
11640 20674 MT
(\050:double-buffered-p NIL\051)SH
11640 21539 MT
(\050:omit-title-bar-p NIL\051)SH
11640 22404 MT
(\050:title "Scrolling-Window"\051)SH
11640 23269 MT
(\050:icon-title \050o-formula \050gvl :title\051\051\051 ;)SH
/Times-Italic SF
(Default is the same as the title)SH
/Courier SF
11640 24134 MT
(\050:total-width 200\051)
SH( ;)960 W
/Times-Italic SF
22680 XM
(total size of the scrollable area inside)SH
/Courier SF
11640 24999 MT
(\050:total-height 200\051)SH
11640 25864 MT
(\050:X-Offset 0\051  ;)SH
/Times-Italic SF
19800 XM
(x offset in of the scrollable area. CANNOT BE A FORMULA)SH
/Courier SF
11640 26729 MT
(\050:Y-Offset 0\051  ;)SH
/Times-Italic SF
19800 XM
(CANNOT BE A FORMULA)SH
/Courier SF
11640 27594 MT
(\050:visible T\051  ;)SH
/Times-Italic SF
19320 XM
(whether the window and bars are visible \050mapped\051)SH
/Courier SF
11640 29324 MT
(\050:h-scroll-bar-p T\051  ;)SH
/Times-Italic SF
22680 XM
(Is there a horizontal scroll bar?)SH
/Courier SF
11640 30189 MT
(\050:v-scroll-bar-p T\051  ;)SH
/Times-Italic SF
22680 XM
(Is there a vertical scroll bar?)SH
/Courier SF
11640 31919 MT
(;;)SH
/Times-Italic SF
13080 XM
(Scroll Bar slots)SH
/Courier SF
11640 32784 MT
(\050:h-scroll-on-top-p NIL\051  ;)SH
/Times-Italic SF
25080 XM
(whether horiz scroll bar is on top or bottom)SH
/Courier SF
11640 33649 MT
(\050:v-scroll-on-left-p T\051)
SH( ;)960 W
/Times-Italic SF
25080 XM
(whether vert scroll bar is on left or right)SH
/Courier SF
11640 34514 MT
(\050:min-scroll-bar-width 20\051 ;)SH
/Times-Italic SF
25560 XM
(these control both scroll bars)SH
/Courier SF
11640 35379 MT
(\050:scr-trill-p T\051  ;)SH
/Times-Italic SF
(single-line increment arrow buttons visible?)SH
/Courier SF
11640 36244 MT
(\050:page-trill-p T\051 ;)SH
/Times-Italic SF
(page jump arrow buttons visible?)SH
/Courier SF
11640 37109 MT
(\050:h-scr-incr 10\051  ;)SH
/Times-Italic SF
21240 XM
(in pixels)SH
/Courier SF
11640 37974 MT
(\050:h-page-incr \050o-formula \050- \050gvl :width\051 10\051\051\051 ;)SH
/Times-Italic SF
35160 XM
(default jumps one page minus 10 pixels)SH
/Courier SF
11640 38839 MT
(\050:v-scr-incr 10\051  ;)SH
/Times-Italic SF
21240 XM
(in pixels)SH
/Courier SF
11640 39704 MT
(\050:v-page-incr \050o-formula \050- \050gvl :height\051 10\051\051\051 ;)SH
/Times-Italic SF
35640 XM
(default jumps one page minus 10 pixels)SH
/Courier SF
11640 40569 MT
(\050:int-feedback-p T\051 ;)SH
/Times-Italic SF
22200 XM
(use NIL to have contents move continuously)SH
/Courier SF
11640 41434 MT
(\050:indicator-text-p NIL\051 ;)SH
/Times-Italic SF
24120 XM
(Whether the pixel position is shown in the bars)SH
/Courier SF
11640 42299 MT
(\050:indicator-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
11640 44029 MT
(;;)SH
/Times-BoldItalic SF
13080 XM
(Read-Only slots)SH
/Courier SF
11640 44894 MT
(\050:Inner-Window NIL\051  ;)SH
/Times-Italic SF
22680 XM
(these are created by the update method)SH
/Courier SF
11640 45759 MT
(\050:inner-aggregate NIL\051 ;)SH
/Times-Italic SF
23640 XM
(add your objects to this aggregate \050but have to update first\051)SH
/Courier SF
11640 46624 MT
(\050:outer-window NIL\051 ;)SH
/Times-Italic SF
22200 XM
(call Opal:Update on this window \050or on gadget itself\051)SH
/Courier SF
11640 47489 MT
(\050:clip-window NIL\051)SH
11 /Times-Roman AF
8280 50652 MT
(The loader file for both scrolling-window gadgets is "scrolling-window-loader".)SH
/Times-Bold SF
8280 52950 MT
(Caveats:)SH
/Symbol SF
10249 54514 MT
(\267)SH
/Times-Bold SF
11030 XM
(If the scrolling-window has a)293 W
10 /Courier AF
26338 XM
(:parent-window)SH
11 /Times-Bold AF
(, update the parent window before)292 W
11030 55682 MT
(instantiating the scrolling-window.)SH
/Symbol SF
10249 57534 MT
(\267)SH
/Times-Bold SF
11030 XM
(Update the scrolling-window gadget before referring to its inner/outer windows and)201 W
11030 58702 MT
(aggregates.)SH
/Symbol SF
10249 60554 MT
(\267)SH
/Times-Bold SF
11030 XM
(The instance of the scrolling-window should not be added to an aggregate.)SH
1528 50 31934 60754 UL
/Times-Roman SF
8280 62852 MT
(These gadgets supply a scrollable)
184 W( region using the X window manager's ability to have subwindows)183 W
8280 64048 MT
(bigger than the parent)
112 W( window.  Garnet moves the subwindow around inside the parent window and X)113 W
8280 65244 MT
(handles the clipping.  All the objects in the window are instantiated \050and therefore take)
56 W( up memory\051, but)55 W
8280 66440 MT
(they will not be drawn if outside.  You must specify the total area)
334 W( to be scrolled in using the)335 W
10 /Courier AF
8280 67636 MT
(:total-width)SH
11 /Times-Roman AF
15865 XM
(and)SH
10 /Courier AF
17838 XM
(:total-height)SH
11 /Times-Roman AF
26023 XM
(fields. \050Therefore,)
495 W( the)
110 W( scrolling window gadgets do not support)109 W
8280 68832 MT
(semi-infinite planes--you must pick a size for the user to scroll around in.\051  Often,)
78 W( you can compute the)79 W
8280 70028 MT
(size based on the contents to be displayed in the window.)
2 W( There)
277 W( can be a formula in the)1 W
10 /Courier AF
47285 XM
(:total-*)SH
11 /Times-Roman AF
52361 XM
(fields,)SH
8280 71224 MT
(but it should have an initial value.)54 W
/Times-Italic SF
24204 XM
(Note: It is illegal to have windows with a zero or negative width and)55 W
ES
%%Page: 394 47
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 394)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 /Times-Italic AF
6120 7952 MT
(height, so the)SH
10 /Courier AF
12292 XM
(:total-width)SH
11 /Times-Italic AF
19767 XM
(and)SH
10 /Courier AF
21692 XM
(:total-height)SH
11 /Times-Italic AF
29767 XM
(should always be greater than zero.)SH
/Times-Roman SF
6120 10250 MT
(The width and height specified for)
60 W( the window is the inside of the outer window, not counting the scroll)59 W
6120 11446 MT
(bars. For)589 W
10 /Courier AF
11051 XM
(scrolling-windows)SH
11 /Times-Roman AF
(, this will usually be the same as the size of the visible region.  For)158 W
10 /Courier AF
6120 12642 MT
(Scrolling-Window-With-Bars)SH
11 /Times-Roman AF
(, the visible portion is smaller by the size of the scroll bars, which is)90 W
6120 13838 MT
(usually the value of the)SH
10 /Courier AF
16659 XM
(:min-scroll-bar-width)SH
11 /Times-Roman AF
29534 XM
(slot \050unless you turn on indicator text\051.)SH
6120 16136 MT
(Each of these gadgets is special in that they add)
188 W( themselves to the windows that they create.  Since)189 W
6120 17332 MT
(windows are not like other Gadgets, you need to follow special rules with scrolling windows.)SH
6120 19630 MT
(First,)SH
/Times-Italic SF
8781 XM
(do not add scrolling-window or scrolling-window-with-bars gadgets to any aggregates or)
93 W( include)92 W
6120 20826 MT
(them in aggregadgets)108 W
/Times-Roman SF
(. If)
491 W( you want a scrolling window to)
108 W( be inside another window, you must use the)109 W
10 /Courier AF
6120 22022 MT
(:parent-window)SH
11 /Times-Roman AF
14795 XM
(slot instead.)SH
6120 24320 MT
(Second,)SH
/Times-Italic SF
10043 XM
(you must call)135 W
10 /Courier AF
16589 XM
(opal:update)SH
11 /Times-Italic AF
23599 XM
(on a scrolling window)
135 W( gadget immediately after creating it, and)134 W
6120 25516 MT
(before adding anything to the windows.)131 W
/Times-Roman SF
24599 XM
(The update method causes the windows to be created.)
131 W( If)
538 W( you)132 W
6120 26712 MT
(want to create a)
64 W( prototype of a scrolling window \050and specify special values for some of the fields\051, you)63 W
6120 27908 MT
(can skip the update call, but then you cannot add any contents to the window.)SH
6120 30206 MT
(The aggregate to add the contents to is provided in the slot)73 W
10 /Courier AF
33025 XM
(:inner-aggregate)SH
11 /Times-Roman AF
42974 XM
(of the gadget after the)74 W
6120 31402 MT
(update call.  To make)
586 W( the scrolling-window a subwindow of another window, specify the)585 W
10 /Courier AF
6120 32598 MT
(:parent-window)SH
11 /Times-Roman AF
14823 XM
(of the scrolling-window.  If you want to put a)
28 W( sub-window inside a scrolling-window,)29 W
6120 33794 MT
(use the window)
213 W( in the)212 W
10 /Courier AF
17111 XM
(:inner-window)SH
11 /Times-Roman AF
25398 XM
(slot of the scrolling window as the)212 W
10 /Courier AF
42311 XM
(:parent)SH
11 /Times-Roman AF
46998 XM
(of the newly)212 W
6120 34990 MT
(created window.)SH
6120 37288 MT
(As an example:)SH
8 /Courier AF
8040 38453 MT
(\050create-instance 'MYSCROLL garnet-gadgets:scrolling-window-with-bars)SH
9480 39318 MT
(\050:left 650\051\050:top 10\051\050:width 300\051\050:height 400\051)SH
/Times-Italic SF
9480 40183 MT
(;;note that the next two formulas must have initial values)SH
/Courier SF
9480 41048 MT
(\050:total-width \050o-formula \050gvl :inner-aggregate :width\051 200\051\051)SH
9480 41913 MT
(\050:total-height \050o-formula \050gvl :inner-aggregate :height\051 200\051\051\051)SH
8040 42778 MT
(\050opal:update MYSCROLL\051 ;)SH
/Times-Italic SF
(Must update scrolling windows before using them.)SH
/Courier SF
8040 43643 MT
(\050opal:add-components \050gv MYSCROLL :inner-aggregate\051)SH
/Times-Italic SF
13800 44508 MT
(all the objects to be added to the scrolling window)SH
/Courier SF
13800 45373 MT
(\051)SH
8040 46238 MT
(;;;)SH
/Times-Italic SF
(create a scrolling window inside the other scrolling window, just for fun)SH
/Courier SF
8040 47103 MT
(\050create-instance 'SUB-SCROLLING-WINDOW garnet-gadgets:scrolling-window-with-bars)SH
9480 47968 MT
(\050:left 15\051\050:top 15\051\050:width 150\051\050:height 150\051)SH
9480 48833 MT
(\050:parent-window \050gv MYSCROLL :inner-window\051\051\051)SH
11 /Times-Roman AF
6120 51131 MT
(With)SH
10 /Courier AF
8868 XM
(Scrolling-Windows)SH
11 /Times-Roman AF
(, but)274 W
/Times-Italic SF
21847 XM
(not)SH
10 /Courier AF
23802 XM
(Scrolling-windows-with-Bars)SH
11 /Times-Roman AF
(, you can explicitly set the)274 W
10 /Courier AF
6120 52327 MT
(:X-offset)SH
11 /Times-Roman AF
12183 XM
(and)SH
10 /Courier AF
14434 XM
(:Y-Offset)SH
11 /Times-Roman AF
20497 XM
(fields using)388 W
10 /Courier AF
26651 XM
(s-value)SH
11 /Times-Roman AF
31514 XM
(to adjust the position of the contents.)
388 W( For)1050 W
10 /Courier AF
6120 53523 MT
(Scrolling-windows-with-Bars)SH
11 /Times-Roman AF
(, you must use)
203 W( the following procedures to have your application)204 W
6120 54719 MT
(program scroll the window.  This is necessary to get the scroll bars to be updated correctly to show)
87 W( the)86 W
6120 55915 MT
(window position.  These procedures also work with)SH
10 /Courier AF
29123 XM
(Scrolling-Windows)SH
11 /Times-Roman AF
(.)SH
/Times-Bold SF
6120 58213 MT
(Useful functions:)SH
8 /Courier AF
8040 59426 MT
(gg:Scroll-Win-Inc)SH
/Times-Italic SF
16680 XM
(scroll-win-gadget xinc yinc)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 61724 MT
(This function scrolls a window by adding the specified)
20 W( values, which can be negative.  Note that)21 W
/Times-Italic SF
49204 XM
(xinc)SH
/Times-Roman SF
51332 XM
(and)SH
/Times-Italic SF
6120 62920 MT
(yinc)SH
/Times-Roman SF
8329 XM
(are usually zero or negative)
102 W( numbers, since they are the offset top-left corner of the inner window)101 W
6120 64116 MT
(from the top-left of the)
145 W( clipping window, so to see down in the document, the inner window must be)146 W
6120 65312 MT
(moved up.)SH
8 /Courier AF
8040 66525 MT
(gg:Scroll-Win-To)SH
/Times-Italic SF
16200 XM
(scroll-win-gadget x y)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 68823 MT
(This function scrolls a window by putting the specified coordinate at the upper left corner of)
153 W( the clip)152 W
6120 70019 MT
(window.)SH
8 /Courier AF
8040 71232 MT
(gg:Show-Box)SH
/Times-Italic SF
13800 XM
(scroll-win left top right bottom)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
ES
%%Page: 395 48
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.17)
SH( Arrow-line)
1800 W( and Double-Arrow-Line)SH
51386 XM
(Page 395)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(This function causes the scrolling-window)140 W
/Times-Italic SF
27951 XM
(scroll-win)SH
/Times-Roman SF
32828 XM
(to scroll so that the region specified)
140 W( by)141 W
/Times-Italic SF
51302 XM
(left)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
53399 XM
(top)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
8280 9151 MT
(right)SH
/Times-Roman SF
10741 XM
(and)SH
/Times-Italic SF
12650 XM
(bottom)SH
/Times-Roman SF
16027 XM
(is visible.  If the box is already visible,)
46 W( it will not cause the window to scroll.  This can)45 W
8280 10347 MT
(be used to cause the cursor in a text window, for)
11 W( example, or a "current item" to be visible.  It is also used)12 W
8280 11543 MT
(by the)SH
10 /Courier AF
11274 XM
(focus-multifont)SH
11 /Times-Roman AF
20549 XM
(interactor.)SH
8280 13841 MT
(If the box)
51 W( is larger than the visible region of the scrolling-window, the bottom and/or the rightmost parts)50 W
8280 15037 MT
(of the box may remain hidden.)SH
14 /Times-Bold AF
8280 18855 MT
(3.17. Arrow-line and Double-Arrow-Line)SH
11 SS 
75 100 0 8730 55177 GB 
%%BeginDocument: gadgets/arrow-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 8
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 10:18 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 321 406 471
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -249 translate
gsave
0 648 200 150 ClipToRectangle
0 0 translate
gsave
0 0 0 0 false 0 0 [] 1 160 598 30 598 DrawLine
160 603 170 598 160 593 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 160 548 40 548 DrawLine
40 543 30 548 40 553 40 543 8 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
160 553 170 548 160 543 160 553 8 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
grestore

grestore

0 648 200 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 206 321 406 471

%%EndDocument
 GE /Times-Roman SF
8280 32854 MT
(The)SH
10 /Courier AF
10671 XM
(arrow-line)SH
11 /Times-Roman AF
17352 XM
(and)SH
10 /Courier AF
19621 XM
(double-arrow-line)SH
11 /Times-Roman AF
30502 XM
(objects are comprised of a line and)
406 W( one or more)407 W
8280 34050 MT
(arrowheads, effectively forming)
76 W( a single- or double-headed arrow.  These objects are provided since the)75 W
8280 35246 MT
(standard)SH
10 /Courier AF
12281 XM
(opal:arrowhead)SH
11 /Times-Roman AF
20956 XM
(does not have an attached line.)SH
12 /Times-Bold AF
8280 38930 MT
(3.17.1. Arrow-Line)SH
8 /Courier AF
10200 40095 MT
(\050create-instance 'gg:Arrow-Line opal:aggregadget)SH
11640 40960 MT
(\050:maybe-constant '\050:x1 :y1 :x2 :y2 :line-style :open-p :filling-style :visible\051\051)SH
11640 41825 MT
(\050:X1 0\051 \050:Y1 0\051)SH
11640 42690 MT
(\050:X2 20\051 \050:Y2 20\051)SH
11640 43555 MT
(\050:line-style opal:default-line-style\051)SH
11640 44420 MT
(\050:filling-style NIL\051)SH
11640 45285 MT
(\050:open-p T\051\051)SH
11 /Times-Roman AF
8280 46706 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(arrow-line)SH
11 /Times-Roman AF
24480 XM
(is "arrow-line-loader".)SH
8280 49004 MT
(The origin)
67 W( \050or tail\051 of the)68 W
10 /Courier AF
19989 XM
(arrow-line)SH
11 /Times-Roman AF
26332 XM
(is the point)68 W
10 /Courier AF
31701 XM
(\050:x1,y1\051)SH
11 /Times-Roman AF
(, and the tip is at)68 W
10 /Courier AF
44456 XM
(\050:x2,y2\051)SH
11 /Times-Roman AF
(. The)
411 W( values)68 W
8280 50200 MT
(for these slots may be formulas that depend on the value of slots)
31 W( in other Garnet objects.  For example, if)30 W
10 /Courier AF
8280 51396 MT
(:x2)SH
11 /Times-Roman AF
10505 XM
(and)SH
10 /Courier AF
12518 XM
(:y2)SH
11 /Times-Roman AF
14743 XM
(depended on the)150 W
10 /Courier AF
22676 XM
(:left)SH
11 /Times-Roman AF
26101 XM
(and)SH
10 /Courier AF
28114 XM
(:top)SH
11 /Times-Roman AF
30939 XM
(coordinates of some rectangle, then the arrow)
150 W( would)151 W
9 SS 
47039 52254 MT
(5)SH
11 SS 
8280 52617 MT
(point to the top, left corner of the rectangle regardless of the movement of the rectangle.)SH
8280 54915 MT
(The appearance of the arrowheads themselves may also)
38 W( be customized.  The)37 W
10 /Courier AF
42600 XM
(:line-style)SH
11 /Times-Roman AF
49512 XM
(slot contains)37 W
8280 56111 MT
(a value indicating the thickness of all lines in the)45 W
10 /Courier AF
30482 XM
(arrow-line)SH
11 /Times-Roman AF
36802 XM
(object. Opal)
365 W( exports a set of pre-defined)46 W
8280 57307 MT
(line styles, which must be preceded by the Opal package name, as)
22 W( in)21 W
10 /Courier AF
39017 XM
(opal:line-0)SH
11 /Times-Roman AF
(. Available)
317 W( line style)21 W
8280 58503 MT
(classes are:)652 W
10 /Courier AF
15763 XM
(no-line, thin-line,)
652 W( line-0, line-1, line-2, line-4, line-8,)653 W
8280 59699 MT
(dotted-line)SH
11 /Times-Roman AF
15155 XM
(and)SH
10 /Courier AF
17018 XM
(dashed-line)SH
11 /Times-Roman AF
(. Other)
275 W( line style classes may also be defined \050see the Opal Manual\051.)SH
8280 61997 MT
(The slot)133 W
10 /Courier AF
12396 XM
(:filling-style)SH
11 /Times-Roman AF
21204 XM
(determines the shade of gray that will appear inside the)
133 W( arrowheads.  Pre-)132 W
8280 63193 MT
(defined filling styles are exported from Opal, and must again be preceded by the Opal package name.)138 W
8280 64389 MT
(Available filling styles are)236 W
10 /Courier AF
21138 XM
(no-fill, black-fill, white-fill,)
236 W( gray-fill, light-gray-)235 W
8280 65585 MT
(fill, dark-gray-fill,)149 W
11 /Times-Roman AF
21453 XM
(and)SH
10 /Courier AF
23465 XM
(diamond-fill)SH
11 /Times-Roman AF
(. The)
575 W( Opal function)150 W
10 /Courier AF
40579 XM
(halftone)SH
11 /Times-Roman AF
45804 XM
(may also be used to)150 W
8280 66781 MT
(generate a filling style, as in)63 W
10 /Courier AF
21335 XM
(\050:filling-style \050opal:halftone 50\051\051)63 W
11 /Times-Roman AF
(, which is)
63 W( half-way between)62 W
8280 67977 MT
(black and white fill.)SH
10800 50 8280 70172 UL
7 SS 
9180 71673 MT
(5)SH
9 SS 
9530 72000 MT
(See the KR manual for a detailed discussion of constraints and formulas.)SH
ES
%%Page: 396 49
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 396)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The slot)SH
10 /Courier AF
9970 XM
(:open-p)SH
11 /Times-Roman AF
14445 XM
(determines whether a line is drawn across the base of the arrowhead.)SH
6120 10588 MT
(Additional features of)
243 W( the arrowhead may be customized by accessing the slot)244 W
10 /Courier AF
43622 XM
(:arrowhead)SH
11 /Times-Roman AF
50141 XM
(of the)244 W
10 /Courier AF
6120 11784 MT
(arrow-line)SH
11 /Times-Roman AF
(. For)
649 W( example, the following)
187 W( instruction would set the)186 W
10 /Courier AF
38183 XM
(:diameter)SH
11 /Times-Roman AF
44044 XM
(of an)186 W
10 /Courier AF
46920 XM
(arrow-line)SH
11 /Times-Roman AF
6120 12980 MT
(arrowhead to 20:)SH
8 /Courier AF
8040 14145 MT
(\050s-value \050gv MY-ARROW-LINE :arrowhead\051 :diameter 20\051)SH
11 /Times-Roman AF
6120 15566 MT
(The same customization may also be implemented when the instance is created:)SH
8 /Courier AF
8040 16731 MT
(\050create-instance 'MY-ARROW-LINE garnet-gadgets:arrow-line)SH
9480 17596 MT
(\050:parts `\050:line \050:arrowhead :modify)SH
22920 18461 MT
(\050:diameter 20\051\051\051\051\051)SH
12 /Times-Bold AF
6120 22145 MT
(3.17.2. Double-Arrow-Line)SH
8 /Courier AF
8040 23310 MT
(\050create-instance 'gg:Double-Arrow-Line opal:aggregadget)SH
9480 24175 MT
(\050:maybe-constant '\050:x1 :y1 :x2 :y2 :line-style :open-p :filling-style)SH
18600 25040 MT
(:arrowhead-p :visible\051\051)SH
9480 25905 MT
(\050:X1 0\051 \050:Y1 0\051)SH
9480 26770 MT
(\050:X2 40\051 \050:Y2 40\051)SH
9480 27635 MT
(\050:line-style opal:default-line-style\051)SH
9480 28500 MT
(\050:filling-style NIL\051)SH
9480 29365 MT
(\050:open-p T\051)SH
9480 30230 MT
(\050:arrowhead-p :both\051\051)SH
11 /Times-Roman AF
6120 31651 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(double-arrow-line)SH
11 /Times-Roman AF
26520 XM
(is "arrow-line-loader".)SH
6120 33949 MT
(The endpoints of)
273 W( the)274 W
10 /Courier AF
16562 XM
(double-arrow-line)SH
11 /Times-Roman AF
27311 XM
(are at points)274 W
10 /Courier AF
33784 XM
(\050:x1,:y1\051)SH
11 /Times-Roman AF
39733 XM
(and)SH
10 /Courier AF
41870 XM
(\050:x2,:y2\051)SH
11 /Times-Roman AF
(. The)
823 W( slots)274 W
10 /Courier AF
6120 35145 MT
(:line-style)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13464 XM
(:filling-style)SH
11 /Times-Roman AF
(, and)194 W
10 /Courier AF
24665 XM
(:open-p)SH
11 /Times-Roman AF
29334 XM
(are used exactly as in the)194 W
10 /Courier AF
41797 XM
(arrow-line)SH
11 /Times-Roman AF
(, with both)193 W
6120 36341 MT
(arrowheads taking identical properties.)SH
6120 38974 MT
(The additional)
85 W( slot)86 W
10 /Courier AF
14902 XM
(:arrowhead-p)SH
11 /Times-Roman AF
22463 XM
(designates which end\050s\051 of the line will have arrowheads.  Allowed)86 W
6120 40170 MT
(values are:)SH
10 /Courier AF
8320 42121 MT
(0)SH
11 /Times-Roman AF
9195 XM
(or)SH
10 /Courier AF
10386 XM
(NIL)SH
11 /Times-Roman AF
12461 XM
(- No arrowheads)SH
10 /Courier AF
8320 43816 MT
(1)SH
11 /Times-Roman AF
9195 XM
(- Arrowhead at coordinate)SH
10 /Courier AF
21043 XM
(\050:x1,:y1\051)SH
8320 45511 MT
(2)SH
11 /Times-Roman AF
9195 XM
(- Arrowhead at coordinate)SH
10 /Courier AF
21043 XM
(\050:x2,:y2\051)SH
8320 47206 MT
(3)SH
11 /Times-Roman AF
9195 XM
(or)SH
10 /Courier AF
10386 XM
(:both)SH
11 /Times-Roman AF
13661 XM
(- Arrowheads at both ends)SH
6120 49504 MT
(The arrowheads may be further customized as in the)53 W
10 /Courier AF
29900 XM
(arrow-line)SH
11 /Times-Roman AF
36228 XM
(object. The)
381 W( arrowheads are)
53 W( available)52 W
6120 50700 MT
(in the slots)SH
10 /Courier AF
11163 XM
(:arrowhead1)SH
11 /Times-Roman AF
18038 XM
(and)SH
10 /Courier AF
19901 XM
(:arrowhead2)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 397 50
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.18)
SH( Browser)
1800 W( Gadget)SH
51386 XM
(Page 397)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.18. Browser Gadget)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Browser-Gadget opal:aggregadget)SH
11640 10168 MT
(\050:maybe-constant '\050:left :top :num-menus :num-rows :menu-items-generating-function)SH
20760 11033 MT
(:menu-function :item-to-string-function :additional-selection-p)SH
20760 11898 MT
(:item-font :title-font :visible\051\051)SH
/Times-Italic SF
11640 13628 MT
(;; Browser parameters)SH
/Courier SF
11640 14493 MT
(\050:left 0\051)SH
11640 15358 MT
(\050:top 0\051)SH
11640 16223 MT
(\050:num-menus 3\051)SH
11640 17088 MT
(\050:num-rows 5\051)SH
11640 17953 MT
(\050:menu-items-generating-function NIL\051)SH
11640 18818 MT
(\050:item-to-string-function #'\050lambda \050item\051 item\051\051)SH
/Times-Italic SF
36120 XM
(;; assume item is a string)SH
11640 20548 MT
(;; Additional-selection parameters)SH
/Courier SF
11640 21413 MT
(\050:additional-selection-p T\051)SH
11640 22278 MT
(\050:additional-selection \050o-formula ... \051\051)SH
11640 23143 MT
(\050:additional-selection-function NIL\051)SH
11640 24008 MT
(\050:additional-selection-coordinate NIL\051)SH
/Times-Italic SF
11640 25738 MT
(;; Scrolling-Menu parameters)SH
/Courier SF
11640 26603 MT
(\050:item-font opal:default-font\051)SH
11640 27468 MT
(\050:title-font \050create-instance NIL opal:font \050:face :italic\051\051\051)SH
11640 28333 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 29198 MT
(\051)SH
11 SS 
75 100 0 8730 65220 GB 
%%BeginDocument: gadgets/browser-gadget-pix.ps
%!PS-Adobe-2.0
%%Title: SCHEMA BROWSER
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 11:49 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 324 540 467
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.7852349 0.7852349 scale

%
% Begin new window
%
0 -322 translate
gsave
0 825 596 182 ClipToRectangle
0 0 translate
gsave
30 810 134 120 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
48 807 796 98 14 0 false 0 0 0 false 0 0 0 false (Browser-Gadget) 12 /Courier-Oblique DrawText
31 809 132 18 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
31 789 132 19 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
34 787 776 97 14 1 false 0 0 0 false 0 0 0 false (Menu-List-5492) 12 /Courier DrawText
34 767 756 103 14 0 false 0 0 0 false 0 0 0 false (Scroll-Bar-5489) 12 /Courier DrawText
34 747 736 124 14 0 false 0 0 0 false 0 0 0 false (Gray-Feedback-5486) 12 /Courier DrawText
34 727 716 104 14 0 false 0 0 0 false 0 0 0 false (Dummy-Rect-5480) 12 /Courier DrawText
10 770 20 40 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
10 810 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 807 13 800 17 800 17 793 23 793 23 800 27 800 20 807 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
10 710 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 693 13 700 17 700 17 707 23 707 23 700 27 700 20 693 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
10 790 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 786 13 779 27 779 20 786 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
20 782 13 775 27 775 20 782 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
10 730 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 714 13 721 27 721 20 714 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
20 718 13 725 27 725 20 718 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
194 810 176 120 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
233 807 796 98 14 0 false 0 0 0 false 0 0 0 false (Menu-List-5492) 12 /Courier-Oblique DrawText
195 809 174 18 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
198 787 776 166 14 0 false 0 0 0 false 0 0 0 false (Scrolling-Menu-1479-1513) 12 /Courier DrawText
195 770 174 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
198 767 756 166 14 1 false 0 0 0 false 0 0 0 false (Scrolling-Menu-1479-1548) 12 /Courier DrawText
198 747 736 166 14 0 false 0 0 0 false 0 0 0 false (Scrolling-Menu-1479-1583) 12 /Courier DrawText
174 770 20 40 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
174 810 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
184 807 177 800 181 800 181 793 187 793 187 800 191 800 184 807 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
174 710 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
184 693 177 700 181 700 181 707 187 707 187 700 191 700 184 693 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
174 790 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
184 786 177 779 191 779 184 786 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
184 782 177 775 191 775 184 782 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
174 730 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
184 714 177 721 191 721 184 714 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
184 718 177 725 191 725 184 718 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
400 810 175 120 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
404 807 796 167 14 0 false 0 0 0 false 0 0 0 false (Scrolling-Menu-1479-1548) 12 /Courier-Oblique DrawText
401 809 173 18 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
404 787 776 69 14 0 false 0 0 0 false 0 0 0 false (Frame-5631) 12 /Courier DrawText
404 767 756 118 14 0 false 0 0 0 false 0 0 0 false (Feedback-Obj-5628) 12 /Courier DrawText
404 747 736 104 14 0 false 0 0 0 false 0 0 0 false (Menu-Title-5625) 12 /Courier DrawText
404 727 716 132 14 0 false 0 0 0 false 0 0 0 false (Menu-Item-List-5622) 12 /Courier DrawText
401 710 173 19 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
404 707 696 103 14 1 false 0 0 0 false 0 0 0 false (Scroll-Bar-5618) 12 /Courier DrawText
380 770 20 40 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
380 810 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
390 807 383 800 387 800 387 793 393 793 393 800 397 800 390 807 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
380 710 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
390 693 383 700 387 700 387 707 393 707 393 700 397 700 390 693 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
380 790 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
390 786 383 779 397 779 390 786 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
390 782 383 775 397 775 390 782 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
380 730 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
390 714 383 721 397 721 390 714 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
390 718 383 725 397 725 390 718 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
50 680 484 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
10 680 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
13 670 20 663 20 667 27 667 27 673 20 673 20 677 13 670 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
554 680 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
571 670 564 663 564 667 557 667 557 673 564 673 564 677 571 670 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
30 680 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
34 670 41 677 41 663 34 670 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
38 670 45 677 45 663 38 670 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
534 680 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
550 670 543 677 543 663 550 670 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
546 670 539 677 539 663 546 670 8 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
50 679 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
-1 826 0 0 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Oblique 
%%BoundingBox: 72 324 540 467

%%EndDocument
 GE /Times-Roman SF
8280 43218 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(browser-gadget)SH
11 /Times-Roman AF
26880 XM
(is "browser-gadget-loader".)SH
8280 45516 MT
(The)SH
10 /Courier AF
10420 XM
(browser-gadget)SH
11 /Times-Roman AF
19250 XM
(is a)
155 W( sophisticated interface device which may be used to examine hierarchical)156 W
8280 46712 MT
(structures, such as Garnet object networks)
215 W( and directory trees.  The gadget is composed of a set of)214 W
8280 47908 MT
(scrolling menus, where the selections in each scrolling menu correspond to the children of the item)216 W
8280 49104 MT
(appearing in the title.  Clicking on one of the menu selections causes that)
8 W( selection to appear as the title of)7 W
8280 50300 MT
(the next scrolling menu,)
150 W( with all of its children appearing as choices in the new menu.  Additionally,)151 W
8280 51496 MT
(clicking the middle mouse button over a menu selection causes)
37 W( a gray feedback box to appear, indicating)36 W
8280 52692 MT
(a secondary selection.)SH
8280 54990 MT
(Two demos, named "demo-schema-browser" and "demo-file-browser", are included)
45 W( in the Garnet)46 W
10 /Courier AF
52080 XM
(demos)SH
11 /Times-Roman AF
8280 56186 MT
(sub-directory as examples of how the)239 W
10 /Courier AF
26452 XM
(browser-gadget)SH
11 /Times-Roman AF
35366 XM
(is used in an)
239 W( interface.  With the schema)238 W
8280 57382 MT
(browser, the user may examine the inheritance and aggregate hierarchies of Garnet, while the)
11 W( file browser)12 W
8280 58578 MT
(can be used to examine the file hierarchy of Unix directories.)SH
12 /Times-Bold AF
8280 62262 MT
(3.18.1. User Interface)SH
11 /Times-Roman AF
8280 63458 MT
(An instance of the)25 W
10 /Courier AF
16688 XM
(browser-gadget)SH
11 /Times-Roman AF
25388 XM
(may initially appear in a window with an item already)
25 W( displayed in)24 W
8280 64654 MT
(the first menu.  \050Alternatively, the designer may provide a mechanism such as a)108 W
10 /Courier AF
45164 XM
(labeled-box)SH
11 /Times-Roman AF
52148 XM
(gadget)SH
8280 65850 MT
(through which the user initializes)
17 W( a fresh browser with the first item.\051  The selections in the first menu are)16 W
8280 67046 MT
(derived from the item)
12 W( in the title through a specified function.  When the user clicks the left mouse button)13 W
8280 68242 MT
(on one of the menu choices, that selection will)
34 W( appear in the title of the next menu, with all of that item's)33 W
8280 69438 MT
("children" appearing as choices.  If the item that)
96 W( the user selects does not generate any children, then a)97 W
8280 70634 MT
(new menu is not generated.)SH
ES
%%Page: 398 51
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 398)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The user may also click on a menu selection with the middle)
97 W( mouse button, causing the selection to be)96 W
6120 9151 MT
(bordered by a gray rectangle.  This)
38 W( selection is called the "additional selection", and there is only one for)39 W
6120 10347 MT
(all of the menus in the)SH
10 /Courier AF
16202 XM
(browser-gadget)SH
11 /Times-Roman AF
(.)SH
6120 12645 MT
(The choices that are visible in each menu)
83 W( are controlled by the scroll bars appearing on the sides of the)82 W
6120 13841 MT
(menus. If)
385 W( there are more menu selections derived from the title item than can be shown)
55 W( in a menu, then)56 W
6120 15037 MT
(the background of the scroll bar will be gray)
139 W( and a white indicator box will appear.  Clicking the left)138 W
6120 16233 MT
(mouse button on the trill boxes at the top and bottom of the scroll bars will "scroll" more selections)
60 W( into)61 W
6120 17429 MT
(the menu.  Clicking on the single arrow trill boxes causes the visible selections to scroll one at a time, and)9 W
6120 18625 MT
(clicking on the double arrow trill boxes will cause an entire "page" of new selections to appear \050one page)32 W
6120 19821 MT
(is equal to the number of)
56 W( items visible in the menu\051.  The user may also drag the indicator of a scrolling)55 W
6120 21017 MT
(menu scroll bar to adjust the visible selections.)SH
6120 23315 MT
(Analogously, the horizontal scroll bar appearing below the)
207 W( menus may be adjusted to change which)208 W
6120 24511 MT
(menus are displayed.  When there are more menus to show than are)
118 W( allowed at one time, then the trill)117 W
6120 25707 MT
(boxes can be clicked to scroll either one menu at a time or a whole "screen" of menus.  Dragging)
128 W( the)129 W
6120 26903 MT
(indicator in this scroll)
57 W( bar will cause a black rectangle to follow the mouse, rather than the indicator box)56 W
6120 28099 MT
(itself. When)
505 W( the user releases the black rectangle,)
115 W( the indicator will jump to the position where it was)116 W
6120 29295 MT
(released.)SH
12 /Times-Bold AF
6120 32979 MT
(3.18.2. Programming Interface)SH
6120 35943 MT
(3.18.2.1. Overview)SH
11 /Times-Roman AF
6120 37139 MT
(It is important to note that the programming interface to the)63 W
10 /Courier AF
33300 XM
(browser-gadget)SH
11 /Times-Roman AF
42038 XM
(is different than in other)63 W
6120 38335 MT
(Garnet gadgets.  Due to the complexity of the gadget, this section is provided as a guide to)
69 W( the essential)70 W
6120 39531 MT
(elements of the)219 W
10 /Courier AF
13772 XM
(browser-gadget)SH
11 /Times-Roman AF
22666 XM
(so that the designer can create)
219 W( and use an instance immediately.)218 W
6120 40727 MT
(Subsequent sections describe in greater detail the slots and functions mentioned in this section.)SH
6120 43025 MT
(When creating an instance of the)273 W
10 /Courier AF
22478 XM
(browser-gadget)SH
11 /Times-Roman AF
(, there is one slot that must be)
273 W( set.  The slot)274 W
2140 50 42201 43225 UL
10 /Courier AF
6120 44221 MT
(:menu-items-generating-function)SH
11 /Times-Roman AF
25066 XM
(must be provided with a function that generates)
71 W( children from)70 W
6120 45417 MT
(the items that are to be shown in the titles of the menus.  This function)
42 W( takes an item and returns a list of)43 W
6120 46613 MT
(items that correspond to menu selections.  These items can be of any type, but if they are)
20 W( not strings, then)19 W
6120 47809 MT
(the slot)43 W
10 /Courier AF
9690 XM
(:item-to-string-function)SH
11 /Times-Roman AF
24408 XM
(must also be)
43 W( set with a function to derive strings from the items)44 W
1772 50 26866 48009 UL
6120 49005 MT
(\050its default value is the identity function\051.  These functions are discussed further in section 3.18.3.)SH
6120 51303 MT
(The)SH
10 /Courier AF
8138 XM
(:items)SH
11 /Times-Roman AF
12046 XM
(slot adheres)
33 W( to the convention that if an element of this list is a list, then the second element)32 W
6120 52499 MT
(is an item-function.  The)1 W
10 /Courier AF
17245 XM
(:item-to-string-function)SH
11 /Times-Roman AF
31921 XM
(\050described below\051 is applied to the first element)2 W
6120 53695 MT
(of the item list)
66 W( to get a label for a menu selection.  If data is to be stored in the elements of the)65 W
10 /Courier AF
49320 XM
(:items)SH
11 /Times-Roman AF
6120 54891 MT
(list, it should be included as the third or greater elements in the item lists \050see section 1.4.3\051.)SH
6120 57189 MT
(To install an item in a)32 W
10 /Courier AF
16213 XM
(browser-gadget)SH
11 /Times-Roman AF
24921 XM
(instance, the function)33 W
10 /Courier AF
34734 XM
(set-first-item)SH
11 /Times-Roman AF
43442 XM
(should be called with)33 W
6120 58385 MT
(the parameters of the)
210 W( name of the browser instance and the new item.  A subsequent update of the)209 W
6120 59581 MT
(window containing the instance will show the item appearing in the first)
118 W( menu with all of its children.)119 W
6120 60777 MT
(Other functions used to manipulate the)SH
10 /Courier AF
23472 XM
(browser-gadget)SH
11 /Times-Roman AF
32147 XM
(are discussed in section 3.18.6.)SH
12 /Times-Bold AF
6120 63741 MT
(3.18.2.2. An example)SH
11 /Times-Roman AF
6120 64937 MT
(Suppose that we want to)
45 W( define an instance of the)44 W
10 /Courier AF
28618 XM
(browser-gadget)SH
11 /Times-Roman AF
37337 XM
(to look at the inheritance hierarchy)44 W
6120 66133 MT
(of Garnet schemas.  First, create)
303 W( an instance called BROWSER-1 with the appropriate generating)304 W
6120 67329 MT
(functions \050these particular lambda-expressions are analyzed in 3.18.3\051.)SH
ES
%%Page: 399 52
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.18)
SH( Browser)
1800 W( Gadget)SH
51386 XM
(Page 399)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'BROWSER-1 garnet-gadgets:browser-gadget)SH
11640 8564 MT
(\050:menu-items-generating-function #'\050lambda \050item\051)SH
29400 9429 MT
(\050gv item :is-a-inv\051\051\051)SH
11640 10294 MT
(\050:item-to-string-function #'\050lambda \050item\051)SH
26040 11159 MT
(\050if item)SH
27960 12024 MT
(\050string-capitalize \050kr:name-for-schema item\051\051)SH
27960 12889 MT
(""\051\051\051\051)SH
11 /Times-Roman AF
8280 14310 MT
(The BROWSER-1 schema can be added to a Garnet window in the usual way:)SH
8 /Courier AF
10200 15475 MT
(\050create-instance 'WIN inter:interactor-window)SH
11640 16340 MT
(\050:width 600\051 \050:height 200\051)SH
11640 17205 MT
(\050:aggregate \050create-instance 'AGG opal:aggregate\051\051\051)SH
10200 18070 MT
(\050opal:add-component AGG BROWSER-1\051)SH
10200 18935 MT
(\050opal:update WIN\051)SH
11 /Times-Roman AF
8280 20356 MT
(Now, we can initialize the BROWSER-1 object with a Garnet schema,)
138 W( such as the)137 W
10 /Courier AF
46680 XM
(opal:rectangle)SH
11 /Times-Roman AF
8280 21552 MT
(schema:)SH
8 /Courier AF
10200 22717 MT
(\050garnet-gadgets:set-first-item BROWSER-1 opal:rectangle\051)SH
10200 23582 MT
(\050opal:update WIN\051)SH
11 /Times-Roman AF
8280 25003 MT
(All instances of)51 W
10 /Courier AF
15613 XM
(opal:rectangle)SH
11 /Times-Roman AF
24340 XM
(that currently exist will be shown in the first menu.  Clicking on one)52 W
8280 26199 MT
(of the selections in this menu will cause that selection to appear in the title of)
6 W( the second menu, with all of)5 W
8280 27395 MT
(its instances as selections.)SH
8280 29693 MT
(Since)SH
10 /Courier AF
11268 XM
(opal:rectangle)SH
11 /Times-Roman AF
20212 XM
(is an instance of the)269 W
10 /Courier AF
30568 XM
(opal:graphical-object)SH
11 /Times-Roman AF
43712 XM
(schema, we can use)
269 W( the)270 W
10 /Courier AF
8280 30889 MT
(push-first-item)SH
11 /Times-Roman AF
17890 XM
(\050described in section 3.18.6\051 to show all of the objects that are)
335 W( instances of)334 W
10 /Courier AF
8280 32085 MT
(opal:graphical-object)SH
11 /Times-Roman AF
(. If)
275 W( we call)SH
8 /Courier AF
10200 33250 MT
(\050garnet-gadgets:push-first-item BROWSER-1 opal:graphical-object\051)SH
11 /Times-Roman AF
8280 34671 MT
(then the "Rectangle" title will be moved into the second menu along with all of its selections, and)
128 W( the)129 W
8280 35867 MT
("Graphical-Object" item will be displayed in the first menu with all of its instances.)
138 W( The)
549 W( "Rectangle")137 W
8280 37063 MT
(selection under the "Graphical-Object")
48 W( title will be highlighted, since it was matched with the title of the)49 W
8280 38259 MT
(second menu.)SH
12 /Times-Bold AF
8280 41943 MT
(3.18.3. Generating Functions for Items and Strings)SH
11 /Times-Roman AF
8280 43139 MT
(The slot)110 W
10 /Courier AF
12350 XM
(:menu-items-generating-function)SH
11 /Times-Roman AF
31334 XM
(contains a function which generates menu selections)109 W
8280 44335 MT
(from each item in the scrolling menu titles.  The function takes an)58 W
/Times-Italic SF
38300 XM
(item)SH
/Times-Roman SF
40527 XM
(as a parameter,)
58 W( and returns a list)59 W
8280 45531 MT
(of menu items)
417 W( which correspond to the selections in the scrolling menus.  For example, if a)416 W
10 /Courier AF
8280 46727 MT
(browser-gadget)SH
11 /Times-Roman AF
16981 XM
(instance is to be initialized)
26 W( with a Garnet schema, and the menus should display all of)27 W
8280 47923 MT
(the instances of each item, then)
104 W( the)103 W
10 /Courier AF
24706 XM
(:menu-items-generating-function)SH
11 /Times-Roman AF
43684 XM
(appearing in the example)103 W
8280 49119 MT
(of section 3.18.2.2 is appropriate.  It should be)
97 W( noted that this function does not need to return a list of)98 W
8280 50315 MT
(strings, but that eventually strings will be generated from the items that it)
151 W( returns \050via the function in)150 W
10 /Courier AF
8280 51511 MT
(:item-to-string-function)SH
11 /Times-Roman AF
(\051.)SH
8280 53809 MT
(The function in the slot)83 W
10 /Courier AF
19236 XM
(:item-to-string-function)SH
11 /Times-Roman AF
33995 XM
(is used to generate strings from arbitrary items)84 W
8280 55005 MT
(obtained from the)490 W
10 /Courier AF
17845 XM
(:menu-items-generating-function)SH
11 /Times-Roman AF
(. If)
1255 W( the generated items are strings)489 W
8280 56201 MT
(themselves, then the)103 W
10 /Courier AF
17815 XM
(:item-to-string-function)SH
11 /Times-Roman AF
32593 XM
(may retain its)
103 W( default value.  The strings returned)104 W
8280 57397 MT
(by the)230 W
10 /Courier AF
11734 XM
(:item-to-string-function)SH
11 /Times-Roman AF
26638 XM
(will be displayed as the titles and selections of the scrolling)229 W
8280 58593 MT
(menus. In)
345 W( the example of section)
35 W( 3.18.2.2, the)36 W
10 /Courier AF
29432 XM
(:menu-items-generating-function)SH
11 /Times-Roman AF
48343 XM
(returns a list of)36 W
8280 59789 MT
(Garnet schemas.  So the supplied)167 W
10 /Courier AF
24159 XM
(:item-to-string-function)SH
11 /Times-Roman AF
39000 XM
(takes a schema as a parameter and)166 W
8280 60985 MT
(returns the string name of the schema.  Notice that when there are fewer items than there are)
47 W( menus, this)48 W
8280 62181 MT
(function will generate empty strings for the titles of the blank menus.)SH
12 /Times-Bold AF
8280 65865 MT
(3.18.4. Other Browser-Gadget Slots)SH
11 /Times-Roman AF
8280 67061 MT
(The number of menus to be)
139 W( displayed horizontally in the)138 W
10 /Courier AF
34899 XM
(browser-gadget)SH
11 /Times-Roman AF
43712 XM
(is determined by the slot)138 W
10 /Courier AF
8280 68257 MT
(:num-menus)SH
11 /Times-Roman AF
(. Since)
449 W( the set of menus in the gadget is implemented with an aggrelist, the)
87 W( menu objects)88 W
8280 69453 MT
(will be adjusted automatically to correspond with the new value during the)
106 W( next call to)105 W
10 /Courier AF
48205 XM
(opal:update)SH
11 /Times-Roman AF
(.)SH
8280 70649 MT
(Analogously, the slot)92 W
10 /Courier AF
18212 XM
(:num-rows)SH
11 /Times-Roman AF
23979 XM
(determines the number of vertical selections to appear at one)
92 W( time in)93 W
8280 71845 MT
(each scrolling menu.)SH
ES
%%Page: 400 53
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 400)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The slots)160 W
10 /Courier AF
10718 XM
(:title-font)SH
11 /Times-Roman AF
17753 XM
(and)SH
10 /Courier AF
19776 XM
(:item-font)SH
11 /Times-Roman AF
26211 XM
(control the)
160 W( fonts for the titles of the menus and the menu)159 W
6120 9151 MT
(selections, respectively.)SH
6120 11449 MT
(The function specified in)20 W
10 /Courier AF
17502 XM
(:selection-function)SH
11 /Times-Roman AF
29197 XM
(is executed when the user selects)
20 W( an item from one of)21 W
6120 12645 MT
(the scrolling menus.  The parameters of this function are)SH
8 /Courier AF
8040 13810 MT
(\050lambda \050browser-instance item\051\051)SH
11 /Times-Roman AF
6120 15231 MT
(where the)343 W
/Times-Italic SF
11386 XM
(item)SH
/Times-Roman SF
13897 XM
(is an object generated by the function specified in)342 W
10 /Courier AF
39120 XM
(:menu-items-generating-)SH
6120 16427 MT
(function)SH
11 /Times-Roman AF
(. This)
815 W( function is executed after some)
270 W( internal bookkeeping is performed to update the)271 W
10 /Courier AF
6120 17623 MT
(browser-gadget)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 21307 MT
(3.18.5. The Additional Selection)SH
11 /Times-Roman AF
6120 22503 MT
(When the user presses the middle)
16 W( mouse button over one of the scrolling menu selections, the outline of a)15 W
6120 23699 MT
(gray rectangle will appear over the selection.)
135 W( The)
546 W( item chosen in this manner is called an "additional)136 W
6120 24895 MT
(selection".)SH
6120 27193 MT
(Whether this feature is active is determined by the value of the slot)SH
10 /Courier AF
35841 XM
(:additional-selection-p)SH
11 /Times-Roman AF
(.)SH
6120 29491 MT
(The item identified by the additional selection)
978 W( may be accessed through the slot)977 W
10 /Courier AF
6120 30687 MT
(:additional-selection)SH
11 /Times-Roman AF
(. The)
297 W( value in this slot will correspond to some item returned by the)
11 W( function)12 W
6120 31883 MT
(specified in)45 W
10 /Courier AF
11586 XM
(:menu-items-generating-function)SH
11 /Times-Roman AF
(.)SH
/Times-Bold SF
31101 XM
(Note:)SH
/Times-Roman SF
33985 XM
(this slot cannot be set directly to move)
45 W( the)44 W
6120 33079 MT
(gray feedback box.  Instead, the)SH
10 /Courier AF
20412 XM
(:additional-selection-coordinate)SH
11 /Times-Roman AF
39887 XM
(slot must be set.)SH
6120 35377 MT
(Since items may frequently be scrolled off to the side of)
141 W( the browser, it may not be possible to name)142 W
6120 36573 MT
(explicitly the item which the gray feedback object should)
48 W( appear over.  However, the "coordinate" of the)47 W
6120 37769 MT
(additional selection can always be named in the slot)154 W
10 /Courier AF
30631 XM
(:additional-selection-coordinate)SH
11 /Times-Roman AF
(. This)583 W
6120 38965 MT
(slot is set when the user selects the additional selection, and it may be set directly by the programmer.)112 W
6120 40161 MT
(The)SH
10 /Courier AF
8138 XM
(:additional-selection-coordinate)SH
11 /Times-Roman AF
27646 XM
(slot contains a list of two)
33 W( values -- the first is the rank of)34 W
6120 41357 MT
(the menu which the selection appears in, and the second is the rank)
143 W( of the selection within the menu.)142 W
6120 42553 MT
(Both ranks are zero-based, and are relative)
152 W( to the full lengths of the two item lists, not just the items)153 W
6120 43749 MT
(currently visible.)SH
6120 46047 MT
(The function specified in the)
13 W( slot)12 W
10 /Courier AF
20982 XM
(:additional-selection-function)SH
11 /Times-Roman AF
39269 XM
(will be executed when the user)12 W
6120 47243 MT
(chooses the additional selection.  The parameters are)SH
8 /Courier AF
8040 48408 MT
(\050lambda \050browser-instance item\051\051)SH
11 /Times-Roman AF
6120 49829 MT
(where)SH
/Times-Italic SF
9108 XM
(item)SH
/Times-Roman SF
11304 XM
(was just selected by the user.  If)
27 W( the user presses over the previous additional selection, it will)28 W
6120 51025 MT
(become deselected, and the)82 W
10 /Courier AF
18754 XM
(:additional-selection-function)SH
11 /Times-Roman AF
37110 XM
(will be called with NIL as the)81 W
/Times-Italic SF
51026 XM
(item)SH
/Times-Roman SF
6120 52221 MT
(parameter.)SH
12 /Times-Bold AF
6120 55905 MT
(3.18.6. Manipulating the browser-gadget)SH
11 /Times-Roman AF
6120 57101 MT
(Once an instance of the)88 W
10 /Courier AF
17157 XM
(browser-gadget)SH
11 /Times-Roman AF
25920 XM
(has been)
88 W( created, an item can be installed in the instance as)89 W
6120 58297 MT
(starting object by calling)SH
10 /Courier AF
17302 XM
(set-first-item)SH
11 /Times-Roman AF
25977 XM
(with the parameters)SH
8 /Courier AF
8040 59510 MT
(gg:Set-First-Item)SH
/Times-Italic SF
16680 XM
(browser-instance new-item)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 60931 MT
(The effect of calling)
136 W( this function is to install the)135 W
/Times-Italic SF
29225 XM
(new-item)SH
/Times-Roman SF
33667 XM
(in the)135 W
10 /Courier AF
36687 XM
(:items)SH
11 /Times-Roman AF
40697 XM
(slot of the instance, and to)135 W
6120 62127 MT
(initialize the bookkeeping slots of the instance.)SH
6120 64425 MT
(The function)51 W
10 /Courier AF
12148 XM
(push-first-item)SH
11 /Times-Roman AF
21474 XM
(is used to add an item to the front of a)51 W
10 /Courier AF
38990 XM
(browser-gadget)SH
11 /Times-Roman AF
47716 XM
(instance. It)378 W
6120 65621 MT
(takes the parameters)SH
8 /Courier AF
8040 66834 MT
(gg:Push-First-Item)SH
/Times-Italic SF
17160 XM
(browser-instance new-item)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 68255 MT
(and adds the)137 W
/Times-Italic SF
12304 XM
(new-item)SH
/Times-Roman SF
16748 XM
(to the front of the)137 W
/Times-Italic SF
25406 XM
(browser-instance)SH
/Times-Roman SF
('s)SH
10 /Courier AF
34249 XM
(:items)SH
11 /Times-Roman AF
38260 XM
(list and adjusts the bookkeeping)136 W
6120 69451 MT
(slots of the instance appropriately.  A selection in the first menu is)
83 W( highlighted only if a match is found)84 W
6120 70647 MT
(with the title of the second menu \050which causes the browser to appear as though the second)
109 W( menu was)108 W
6120 71843 MT
(actually generated from clicking on the selection in the first menu\051.)SH
ES
%%Page: 401 54
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.19)
SH( Polyline-Creator)1800 W
51386 XM
(Page 401)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The function)167 W
10 /Courier AF
14540 XM
(promote-item)SH
11 /Times-Roman AF
22182 XM
(is used to install a)
167 W( new first item in an instance when the desired item)168 W
8280 9151 MT
(already appears as a selection in one of the scrolling menus.  The function is given the parameters)SH
8 /Courier AF
10200 10364 MT
(gg:Promote-Item)SH
/Times-Italic SF
17880 XM
(browser-instance coordinate)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 11785 MT
(where)SH
/Times-Italic SF
11484 XM
(coordinate)SH
/Times-Roman SF
16768 XM
(is a list of two numbers corresponding to)
243 W( the location of the desired item in the)242 W
/Times-Italic SF
8280 12981 MT
(browser-instance)SH
/Times-Roman SF
(. The)
687 W( syntax of the coordinate list is)
206 W( defined in section 3.18.5.  If the item whose)207 W
8280 14177 MT
(coordinate is passed is)
238 W( highlighted, then all of the menus to the right of the selection are retained;)237 W
8280 15373 MT
(otherwise, the item becomes the only item in the instance.)SH
14 /Times-Bold AF
8280 19191 MT
(3.19. Polyline-Creator)SH
11 SS 
75 100 0 8730 59263 GB 
%%BeginDocument: gadgets/polyline-creator.PS
%!PS-Adobe-2.0
%%Title: Opal 19
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 11:31 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 131 271 481 521
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
59 -199 translate
gsave
0 648 350 250 ClipToRectangle
0 0 translate
gsave
69 619 138 579 222 606 183 547 168 618 288 626 12 0 0 0 0 false 0 0 [4 4] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [4 4] 1 288 626 288 626 DrawLine
15 571 58 438 124 476 92 512 74 480 15 571 12 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawPolyline
250 525 167 498 207 448 321 485 291 417 274 452 203 476 250 525 16 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawPolyline
grestore

grestore

0 648 350 250 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 131 271 481 521

%%EndDocument
 GE 8 /Courier AF
10200 40434 MT
(\050create-instance 'gg:Polyline-Creator opal:aggregadget)SH
12120 42164 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; called when have full poly-line)SH
/Courier SF
12120 43029 MT
(\050:start-event :leftdown\051)SH
/Times-Italic SF
24600 XM
(; the event to start the whole process on)SH
/Courier SF
12120 43894 MT
(\050:start-where NIL\051)SH
/Times-Italic SF
24600 XM
(; where the mouse should be when the start-event happens)SH
/Courier SF
12120 44759 MT
(\050:running-where T\051)SH
12120 45624 MT
(\050:close-enough-value 3\051)SH
/Times-Italic SF
24600 XM
(; how close a point should be to the first point to stop the interaction)SH
/Courier SF
12120 46489 MT
(\050:input-filter NIL\051)SH
/Times-Italic SF
12120 48219 MT
(; Editing parameters)SH
/Courier SF
12120 49084 MT
(\050:mover-start-event :leftdown\051)SH
/Times-Italic SF
29400 XM
(; event to start moving a point)SH
/Courier SF
12120 49949 MT
(\050:mover-stop-event :leftup\051)SH
/Times-Italic SF
29400 XM
(; event to stop moving a point)SH
/Courier SF
12120 50814 MT
(\050:adder-start-event :leftdown\051)SH
/Times-Italic SF
29400 XM
(; event to add a point)SH
/Courier SF
12120 51679 MT
(\050:deleter-start-event :middledown\051)SH
/Times-Italic SF
29400 XM
(; event to delete a point)SH
/Courier SF
12120 52544 MT
(\050:threshold 3\051)SH
/Times-Italic SF
29400 XM
(; how close to line to add a point)SH
/Courier SF
12120 53409 MT
(\050:polyline-being-edited NIL\051)SH
/Times-Italic SF
29400 XM
(; read-only slot)SH
12120 55139 MT
(; Return value)SH
/Courier SF
12120 56004 MT
(\050:value NIL\051 ;)SH
/Times-Italic SF
(set with final point list)SH
11 /Times-Roman AF
8280 58302 MT
(The loader file for the)131 W
10 /Courier AF
18860 XM
(polyline-creator)SH
11 /Times-Roman AF
28866 XM
(gadget is)
131 W( "polyline-creator-loader".  Examples of creating)132 W
8280 59498 MT
(and editing polylines are in)
88 W( the GarnetDraw demo and the small)87 W
10 /Courier AF
37680 XM
(\050gg:polyline-creator-demo-go\051)SH
11 /Times-Roman AF
8280 60694 MT
(which is loaded by default with the)SH
10 /Courier AF
24013 XM
(polyline-creator)SH
11 /Times-Roman AF
(.)SH
8280 62992 MT
(This gadget allows the user to enter new polylines \050lists)
145 W( of points\051, while providing feedback.  It also)146 W
8280 64188 MT
(supports polyline editing, meaning that you can add, remove, and move points of a)
166 W( polyline with the)165 W
8280 65384 MT
(mouse.)SH
ES
%%Page: 402 55
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 402)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.19.1. Creating New Polylines)SH
11 /Times-Roman AF
6120 9200 MT
(The user interface for creating polylines is as follows:  The user)
239 W( presses a button \050specified in the)240 W
10 /Courier AF
6120 10396 MT
(:start-event)SH
11 /Times-Roman AF
13674 XM
(slot\051 to start the interaction.  Each subsequent button press causes a new segment to)
79 W( be)78 W
6120 11592 MT
(added to the line.  Feedback is provided to the user.  The Polyline stops when:)SH
/Symbol SF
8089 13170 MT
(\267)SH
/Times-Roman SF
8870 XM
(the new point is close enough \050within)102 W
10 /Courier AF
26358 XM
(:close-enough-value)SH
11 /Times-Roman AF
38136 XM
(pixels\051 to the first point of)103 W
8870 14366 MT
(the polyline \050in which case the polyline is closed\051.)SH
/Symbol SF
8089 16260 MT
(\267)SH
/Times-Roman SF
8870 XM
(a button pressed is different from the start event \050in which case the polyline is open\051.)SH
/Symbol SF
8089 18154 MT
(\267)SH
/Times-Roman SF
8870 XM
(the application calls the function)SH
10 /Courier AF
23503 XM
(Stop-Polyline-Creator)SH
11 /Times-Roman AF
36378 XM
(\050see below\051.)SH
6120 20452 MT
(The gadget can also be aborted if the user types)SH
10 /Courier AF
27316 XM
(^g)SH
11 /Times-Roman AF
28791 XM
(or the application calls)SH
10 /Courier AF
39055 XM
(abort-polyline-creator)SH
11 /Times-Roman AF
(.)SH
6120 22750 MT
(The function)
84 W( in the)83 W
10 /Courier AF
15129 XM
(:selection-function)SH
11 /Times-Roman AF
26887 XM
(is called to create the new polyline.  This function should)83 W
6120 23946 MT
(not destructively modify the point-list, but should instead)87 W
/Times-Italic SF
32331 XM
(copy)SH
/Times-Roman SF
34769 XM
(the point-list if it will be changed.  This)88 W
6120 25142 MT
(functions is called with the parameters)SH
8 /Courier AF
8040 26307 MT
(\050lambda \050gadget new-point-list\051)SH
11 /Times-Roman AF
6120 27728 MT
(where)SH
/Times-Italic SF
9081 XM
(new-point-list)SH
/Times-Roman SF
15468 XM
(is of the form:)SH
10 /Courier AF
22006 XM
(\050x1 y1 x2 y2 x3 y3 ...\051)SH
11 /Times-Roman AF
(.)SH
6120 30026 MT
(The)SH
10 /Courier AF
8440 XM
(:input-filter)SH
11 /Times-Roman AF
16850 XM
(slot is used)
335 W( just as in the)334 W
10 /Courier AF
30161 XM
(move-grow-interactor)SH
11 /Times-Roman AF
42770 XM
(and the)334 W
10 /Courier AF
46920 XM
(two-point-)SH
6120 31222 MT
(interactor)SH
11 /Times-Roman AF
(, described in the Interactors manual.)SH
6120 33520 MT
(The)SH
10 /Courier AF
8115 XM
(:value)SH
11 /Times-Roman AF
12000 XM
(slot is also set by the gadget with)
10 W( the final point-list.  Applications are not allowed to set this)11 W
6120 34716 MT
(directly \050there can be no default value for this gadget\051.)SH
12 /Times-Bold AF
6120 38400 MT
(3.19.2. Editing Existing Polylines)SH
8 /Courier AF
8040 39613 MT
(gg:Toggle-Polyline-Handles)SH
/Times-Italic SF
21000 XM
(polyline-creator-gadget polyline)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 41911 MT
(This function is used to display square "selection handles" on each point in the polyline to enable editing.)26 W
6120 43107 MT
(The)SH
/Times-Italic SF
8206 XM
(polyline-creator-gadget)SH
/Times-Roman SF
19090 XM
(is passed as an argument to this function, since the selection handles to be)102 W
6120 44303 MT
(displayed are components of the gadget.)SH
6120 46601 MT
(To move a point, click the left mouse)
18 W( button over the point, move it to a new position, and release the left)17 W
6120 47797 MT
(mouse button.  Hitting)93 W
10 /Courier AF
16669 XM
(control-g)SH
11 /Times-Roman AF
22437 XM
(while moving a point will abort the move.)
93 W( Clicking)
462 W( the left mouse)94 W
6120 48993 MT
(button in the middle of a)
11 W( line will add a point, after which the point can be dragged to a different location.)10 W
6120 50189 MT
(Clicking on the background while editing a polyline will turn off the handles for the polyline.)SH
6120 52487 MT
(There are several ways to delete points:  either)
75 W( hit the middle mouse button over the point, double-click)76 W
6120 53683 MT
(on the point, or hit the DELETE key while moving the point.)SH
6120 55981 MT
(When the)26 W
10 /Courier AF
10691 XM
(toggle-polyline-handles)SH
11 /Times-Roman AF
24791 XM
(function is called, it first checks to see if the polyline is already)25 W
6120 57177 MT
(being edited.)
74 W( If)
424 W( it is, it turns off the handles for the polyline.  Otherwise, it turns on the handles for the)75 W
6120 58373 MT
(polyline. Note)
337 W( that only one polyline can be)
31 W( edited at a time.  If you call this function while a polyline is)30 W
6120 59569 MT
(already being edited, it will turn off the)
120 W( handles for that polyline before turning on the handles for the)121 W
6120 60765 MT
(polyline to be edited.)SH
6120 63063 MT
(There are five slots in the polyline gadget which specify what actions cause editing.)
70 W( The)
413 W( slots and their)69 W
6120 64259 MT
(default values are:)SH
10 /Courier AF
8320 66210 MT
(:mover-start-event)SH
11 /Times-Roman AF
19395 XM
(- Default =)SH
10 /Courier AF
24504 XM
(:leftdown)SH
11 /Times-Roman AF
(. The)
275 W( event to start moving a point.)SH
10 /Courier AF
8320 67905 MT
(:mover-stop-event)SH
11 /Times-Roman AF
18795 XM
(- Default =)SH
10 /Courier AF
23904 XM
(:leftup)SH
11 /Times-Roman AF
(. The event to stop moving a point.)SH
10 /Courier AF
8320 69600 MT
(:adder-start-event)SH
11 /Times-Roman AF
19395 XM
(- Default =)SH
10 /Courier AF
24504 XM
(:leftdown)SH
11 /Times-Roman AF
(. The)
275 W( event to add a point.)SH
10 /Courier AF
8320 71295 MT
(:deleter-start-event)SH
11 /Times-Roman AF
20595 XM
(- Default =)SH
10 /Courier AF
25704 XM
(:middledown)SH
11 /Times-Roman AF
(. The)
275 W( event to delete a point.)SH
ES
%%Page: 403 56
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.20)
SH( Error-Gadget)1800 W
51386 XM
(Page 403)SH
46800 50 8280 4486 UL
/Courier SF
10480 7955 MT
(:threshold)SH
11 /Times-Roman AF
16755 XM
(- Default = 3.  How close you have to click next to a line to add a point.)SH
8280 10253 MT
(There is a slot in the gadget called)43 W
10 /Courier AF
23958 XM
(:polyline-being-edited)SH
11 /Times-Roman AF
(. This)
362 W( slot will contain the polyline that)44 W
8280 11449 MT
(is currently being edited, or NIL if no polyline is being edited.)SH
12 /Times-Bold AF
8280 15133 MT
(3.19.3. Some Useful Functions)SH
8 /Courier AF
10200 16346 MT
(gg:Stop-Polyline-Creator)SH
/Times-Italic SF
22200 XM
(gadget)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 17767 MT
(This causes the gadget to create the)
10 W( current object.  It ignores the current mouse position.  This is useful if)9 W
8280 18963 MT
(some other gadget \050such)
38 W( as a palette changing the drawing mode\051 wants to stop the gadget.  You can call)39 W
8280 20159 MT
(this even if the gadget is not operating.)SH
8 /Courier AF
10200 21372 MT
(gg:Abort-Polyline-Creator)SH
/Times-Italic SF
22680 XM
(gadget)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 22793 MT
(This aborts the gadget without creating the polyline.)SH
14 /Times-Bold AF
8280 26611 MT
(3.20. Error-Gadget)SH
11 SS 
75 100 0 8767 61358 GB 
%%BeginDocument: gadgets/error-gadget-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 9
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 9:37 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 190 342 421 450
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
118 -270 translate
gsave
0 648 231 108 ClipToRectangle
0 0 translate
gsave
10 628 617 213 14 0 false 0 0 0 false 0 0 0 false (Error: Invalid input from user.) 12 /Courier DrawText
45 614 603 143 14 0 false 0 0 0 false 0 0 0 false (Press OK to continue.) 12 /Courier DrawText
104 576 29 30 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
99 581 29 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
102 578 23 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
107 573 562 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
grestore

grestore

0 648 231 108 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 190 342 421 450

%%EndDocument
 GE 8 /Courier AF
10200 37204 MT
(\050create-instance 'gg:Error-Gadget opal:aggregadget)SH
11640 38069 MT
(\050:parent-window NIL\051)SH
11640 38934 MT
(\050:font opal:default-font\051)SH
11640 39799 MT
(\050:justification :center\051)SH
11640 40664 MT
(\050:modal-p T\051)SH
11640 41529 MT
(\050:beep-p T\051)SH
11640 42394 MT
(\050:button-name "OK"\051)SH
11640 43259 MT
(\050:window NIL\051)SH
/Times-Italic SF
25080 XM
(; Automatically initialized)SH
/Courier SF
11640 44124 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 44989 MT
(...\051)SH
11 /Times-Roman AF
8280 46410 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(error-gadget)SH
11 /Times-Roman AF
25680 XM
(is "error-gadget-loader".)SH
8280 48708 MT
(The)SH
10 /Courier AF
10316 XM
(error-gadget)SH
11 /Times-Roman AF
17842 XM
(is a dialog box used to tell the user that an error)
51 W( has occurred.  When activated, the)50 W
8280 49904 MT
(user sees a window appear with a multi-line text message)
20 W( and an "OK" button centered in the window.  If)21 W
8280 51100 MT
(specified by the)
1 W( designer, all activities in the rest of the interface will be suspended until the user clicks on)SH
8280 52296 MT
(the "OK" button to cause the error window to disappear.)SH
8280 54594 MT
(There is also a)SH
10 /Courier AF
14938 XM
(motif-error-gadget)SH
11 /Times-Roman AF
(, which is described in section 4.12.)SH
8280 56892 MT
(Some utility functions in section 3.20.2 allow you to)
141 W( easily raise an)142 W
10 /Courier AF
39858 XM
(error-gadget)SH
11 /Times-Roman AF
47475 XM
(in the context of)142 W
8280 58088 MT
(checking user input for errors.)SH
/Times-Bold SF
8280 60386 MT
(Caveats:)SH
/Symbol SF
10249 61950 MT
(\267)SH
/Times-Bold SF
11030 XM
(Update the parent window before instantiating the error-gadget.)SH
/Symbol SF
10249 63802 MT
(\267)SH
/Times-Bold SF
11030 XM
(The instance of the error-gadget should not be added to an aggregate.)SH
1528 50 29850 64002 UL
12 SS 
8280 67486 MT
(3.20.1. Programming Interface)SH
11 /Times-Roman AF
8280 68682 MT
(In order to associate an error window with an application, an instance of the)87 W
10 /Courier AF
43186 XM
(error-gadget)SH
11 /Times-Roman AF
50747 XM
(should be)86 W
8280 69878 MT
(created with)
213 W( the)214 W
10 /Courier AF
16220 XM
(:parent-window)SH
11 /Times-Roman AF
25109 XM
(slot set to the window of the application.  The error window is)214 W
8280 71074 MT
(activated by calling one of the functions)SH
ES
%%Page: 404 57
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 404)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7747 MT
(gg:Display-Error)SH
/Times-Italic SF
16200 XM
(error-gadget)SH
/Courier SF
20811 XM
(&optional)SH
/Times-Italic SF
25611 XM
(message)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 9477 MT
(gg:Display-Error-And-Wait)SH
/Times-Italic SF
20520 XM
(error-gadget)SH
/Courier SF
25131 XM
(&optional)SH
/Times-Italic SF
29931 XM
(message)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 10898 MT
(where the parameter)233 W
/Times-Italic SF
16070 XM
(error-gadget)SH
/Times-Roman SF
22260 XM
(is the)
233 W( instance created by the user and)232 W
/Times-Italic SF
41037 XM
(message)SH
/Times-Roman SF
45270 XM
(is a string to be)232 W
6120 12094 MT
(displayed in the window.  If)46 W
/Times-Italic SF
19013 XM
(message)SH
/Times-Roman SF
23060 XM
(is not supplied, then the value)
46 W( in the)47 W
10 /Courier AF
39594 XM
(:string)SH
11 /Times-Roman AF
44116 XM
(slot of the gadget is)47 W
6120 13290 MT
(used. The)
441 W( message may have multiple lines, indicated by carriage returns within)
83 W( the text string.  While)82 W
6120 14486 MT
(the)SH
10 /Courier AF
9044 XM
(display-error)SH
11 /Times-Roman AF
18424 XM
(routine returns immediately when the dialog box appears,)1306 W
10 /Courier AF
6120 15682 MT
(display-error-and-wait)SH
11 /Times-Roman AF
19643 XM
(does not return until the user hits)
48 W( the OK button.  The return value of both)47 W
6120 16878 MT
(functions is always T.)SH
6120 19176 MT
(When the error-gadget)
65 W( is associated with a parent window, the error window will appear centered inside)66 W
6120 20372 MT
(of this window.  If)6 W
10 /Courier AF
14582 XM
(:parent-window)SH
11 /Times-Roman AF
23263 XM
(is NIL, then the error window will appear at coordinates \050200,200\051,)6 W
6120 21568 MT
(relative to the upper left corner of the screen.)SH
6120 23866 MT
(The font of the message is specified in the)118 W
10 /Courier AF
26029 XM
(:font)SH
11 /Times-Roman AF
29422 XM
(slot. The)512 W
10 /Courier AF
34178 XM
(:justification)SH
11 /Times-Roman AF
42972 XM
(slot is used to specify)119 W
6120 25062 MT
(whether to align the text against the left or right margin of the window or whether each)
108 W( line should be)107 W
6120 26258 MT
(centered in the window \050allowed values are)SH
10 /Courier AF
25513 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29063 XM
(:right)SH
11 /Times-Roman AF
(, and)SH
10 /Courier AF
35076 XM
(:center)SH
11 /Times-Roman AF
(\051.)SH
6120 28556 MT
(If the value of the)68 W
10 /Courier AF
14553 XM
(:modal-p)SH
11 /Times-Roman AF
19696 XM
(slot is T, then all interactors in the rest of the interface will be suspended,)69 W
6120 29752 MT
(and the user will not be able to continue working until the "OK" button has been pressed.)
10 W( If)294 W
10 /Courier AF
47102 XM
(:modal-p)SH
11 /Times-Roman AF
52186 XM
(is)SH
6120 30948 MT
(NIL, then the interface will continue to function with the error window visible.)SH
6120 33246 MT
(If the)16 W
10 /Courier AF
8778 XM
(:beep-p)SH
11 /Times-Roman AF
13269 XM
(slot is)
16 W( T, then Garnet will sound a beep when the gadget becomes visible.  To turn off the)17 W
6120 34442 MT
(beep, set)SH
10 /Courier AF
10243 XM
(:beep-p)SH
11 /Times-Roman AF
14718 XM
(to NIL.)SH
6120 36740 MT
(The)SH
10 /Courier AF
8164 XM
(:button-name)SH
11 /Times-Roman AF
15698 XM
(slot determines the label of the button.  Since the)59 W
10 /Courier AF
38071 XM
(display-error)SH
11 /Times-Roman AF
46204 XM
(routines do)58 W
/Times-Italic SF
51514 XM
(not)SH
/Times-Roman SF
6120 37936 MT
(take this as a parameter, it must be set in the gadget itself.)SH
6120 40234 MT
(After the instance of the)98 W
10 /Courier AF
17513 XM
(error-gadget)SH
11 /Times-Roman AF
25086 XM
(has been created, the window which)
98 W( will contain the text and)99 W
6120 41430 MT
(the button may be accessed through)
73 W( the)72 W
10 /Courier AF
24254 XM
(:window)SH
11 /Times-Roman AF
28801 XM
(slot of the instance.  Note: When the)72 W
10 /Courier AF
45720 XM
(error-gadget)SH
11 /Times-Roman AF
6120 42626 MT
(instance has a parent-window, the)138 W
10 /Courier AF
22020 XM
(:left)SH
11 /Times-Roman AF
25433 XM
(and)SH
10 /Courier AF
27434 XM
(:top)SH
11 /Times-Roman AF
30247 XM
(coordinates of this window will be relative to)
138 W( the)139 W
6120 43822 MT
(parent-window. Otherwise,)
275 W( they are relative to the full screen.)SH
12 /Times-Bold AF
6120 47506 MT
(3.20.2. Error-Checking and Careful Evaluation)SH
11 /Times-Roman AF
6120 48702 MT
(There are several functions that can)
110 W( be used to evaluate lisp expressions that may contain errors, while)109 W
6120 49898 MT
(avoiding a crash into the debugger.  These functions may be used to evaluate user input to make sure it)
26 W( is)27 W
6120 51094 MT
(free of errors before passing it on to the rest of an application.  If the user input)
101 W( contains an error \050i.e.,)100 W
6120 52290 MT
(does not)
94 W( successfully evaluate\051, the functions return a special value and can display an)95 W
10 /Courier AF
45720 XM
(error-gadget)SH
11 /Times-Roman AF
6120 53486 MT
(informing the user of the error.)SH
6120 55784 MT
(These functions are more portable and more useful than implementation-dependent functions like)353 W
10 /Courier AF
6120 56980 MT
(ignore-errors)SH
11 /Times-Roman AF
(. These)
291 W( functions are used in many Garnet applications and demos)
8 W( where information is)9 W
6120 58176 MT
(supplied by the user.  Examples can be found)
66 W( in the)65 W
10 /Courier AF
29815 XM
(Inspector)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
35830 XM
(demo-graph)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
42445 XM
(garnet-calculator)SH
11 /Times-Roman AF
(,)SH
6120 59372 MT
(and the line and filling-style dialog boxes in Gilt.)SH
6120 61670 MT
(All of)
9 W( the)10 W
10 /Courier AF
10640 XM
(careful-eval)SH
11 /Times-Roman AF
18125 XM
(functions are defined in)10 W
10 /Courier AF
28855 XM
(error-gadget-utils)SH
11 /Times-Roman AF
(, and are loaded automatically)10 W
6120 62866 MT
(along with)
236 W( the error and query gadgets when you do)235 W
10 /Courier AF
31685 XM
(\050garnet-load "gadgets:error-gadget-)235 W
6120 64062 MT
(loader"\051)SH
11 /Times-Roman AF
11195 XM
(or)SH
10 /Courier AF
12386 XM
(\050garnet-load "gadgets:motif-error-gadget-loader"\051)SH
11 /Times-Roman AF
(.)SH
6120 66360 MT
(These functions were inspired by the)276 W
10 /Courier AF
24271 XM
(protected-eval)SH
11 /Times-Roman AF
33223 XM
(module in the Garnet)277 W
10 /Courier AF
43923 XM
(contrib)SH
11 /Times-Roman AF
48675 XM
(directory,)SH
6120 67556 MT
(created by Russell G. Almond.)SH
ES
%%Page: 405 58
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.20)
SH( Error-Gadget)1800 W
51386 XM
(Page 405)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.20.2.1. Careful-Eval)SH
8 /Courier AF
10200 9217 MT
(gg:Careful-Eval)SH
/Times-Italic SF
17880 XM
(form)SH
/Courier SF
19871 XM
(&optional)SH
/Times-Italic SF
24671 XM
(error-gadget error-message)200 W
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
10 SS 
8280 11515 MT
(Careful-Eval)SH
11 /Times-Roman AF
15810 XM
(will evaluate the)55 W
/Times-Italic SF
23520 XM
(form)SH
/Times-Roman SF
(. If)
385 W( an error is encountered during the eval, then the)54 W
/Times-Italic SF
49398 XM
(error-gadget)SH
/Times-Roman SF
8280 12711 MT
(will be displayed with the actual lisp error message that was generated, followed)
273 W( by the specified)274 W
/Times-Italic SF
8280 13907 MT
(error-message)SH
/Times-Roman SF
14969 XM
(\050separated by carriage returns\051.)SH
8280 16540 MT
(When the evaluation is successful,)287 W
10 /Courier AF
25171 XM
(gg:Careful-Eval)SH
11 /Times-Roman AF
34733 XM
(returns the)
287 W( evaluated value \050which may be)286 W
8280 17736 MT
(multiple values\051.  If there was an error, then)211 W
10 /Courier AF
29756 XM
(Careful-Eval)SH
11 /Times-Roman AF
37442 XM
(returns two values: NIL and)
211 W( the error)212 W
8280 18932 MT
(condition structure.  \050For a discussion of error)
85 W( conditions, see Chapter 29 of the Second Edition of Guy)84 W
8280 20128 MT
(Steele's)SH
/Times-Italic SF
12037 XM
(Common Lisp, the Language)SH
/Times-Roman SF
(.\051)SH
8280 22426 MT
(Examples:)SH
8 /Times-Bold AF
10200 23639 MT
(lisp>)SH
/Courier SF
12336 XM
(\050gg:careful-eval '\050+ 4 5\051\051)SH
/Times-Italic SF
26736 XM
(;; evaluates successfully)SH
/Courier SF
10200 24504 MT
(9)SH
/Times-Bold SF
10200 25369 MT
(lisp>)SH
/Courier SF
12336 XM
(\050gg:careful-eval '\050+ 4 y\051\051)SH
/Times-Italic SF
26736 XM
(;; signals an error)SH
/Courier SF
10200 26234 MT
(NIL)SH
10200 27099 MT
(#<EXCL::SIMPLE-ERROR.0>)SH
/Times-Bold SF
10200 27964 MT
(lisp>)SH
/Courier SF
12336 XM
(\050multiple-value-bind \050val errorp\051)SH
14520 28829 MT
(\050gg:careful-eval '\050+ 4 y\051\051)SH
10200 29694 MT
(\050\051 \050if)
2880 W( errorp)SH
/Times-Italic SF
20760 XM
(; perhaps)SH
/Courier SF
24283 XM
(\050typep errorp 'condition\051)SH
/Times-Italic SF
36763 XM
(is safer)SH
/Courier SF
15480 30559 MT
(\050format t "An error was encountered~%"\051)SH
15480 31424 MT
(\050format t "Value is ~S~%" val\051\051\051)SH
10200 32289 MT
(An error was encountered)SH
10200 34019 MT
(NIL)SH
/Times-Bold SF
10200 34884 MT
(lisp>)SH
12 SS 
8280 37848 MT
(3.20.2.2. Careful-Read-From-String)SH
8 /Courier AF
10200 39061 MT
(gg:Careful-Read-From-String)SH
/Times-Italic SF
23640 XM
(string)SH
/Courier SF
25986 XM
(&optional)SH
/Times-Italic SF
30786 XM
(error-gadget error-message)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
8280 41359 MT
(Careful-Read-From-String)SH
11 /Times-Roman AF
23068 XM
(will try to read a symbol or expression from the)113 W
/Times-Italic SF
45460 XM
(string)SH
/Times-Roman SF
48416 XM
(and return)
113 W( it if)114 W
8280 42555 MT
(successful. If)
741 W( an)
233 W( error is encountered, then the)232 W
/Times-Italic SF
31168 XM
(error-gadget)SH
/Times-Roman SF
37357 XM
(will be raised and two values will be)232 W
8280 43751 MT
(returned: NIL and the)
32 W( error condition.  The message displayed in the error gadget will be a concatenation)33 W
8280 44947 MT
(of the actual lisp error message followed by the)SH
/Times-Italic SF
29447 XM
(error-message)SH
/Times-Roman SF
(.)SH
12 /Times-Bold AF
8280 47911 MT
(3.20.2.3. Careful-String-Eval)SH
8 /Courier AF
10200 49124 MT
(gg:Careful-String-Eval)SH
/Times-Italic SF
21240 XM
(string)SH
/Courier SF
23586 XM
(&optional)SH
/Times-Italic SF
28386 XM
(error-gadget error-message)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
8280 51422 MT
(Careful-String-Eval)SH
11 /Times-Roman AF
20020 XM
(will try to)
65 W( read a symbol or expression from the string and then eval it.  If the)64 W
8280 52618 MT
(read and eval are successful, then the evaluated value is returned.  If there was an error during)
57 W( either the)58 W
8280 53814 MT
(read or eval,)
110 W( then the)109 W
/Times-Italic SF
18355 XM
(error-gadget)SH
/Times-Roman SF
24421 XM
(is raised and two values are returned:  NIL and the error condition.)109 W
8280 55010 MT
(The message displayed in the error gadget will be a concatenation)
17 W( of the actual lisp error message and the)18 W
/Times-Italic SF
8280 56206 MT
(error-message)SH
/Times-Roman SF
(.)SH
12 /Times-Bold AF
8280 59170 MT
(3.20.2.4. Careful-Eval-Formula-Lambda)SH
8 /Courier AF
10200 60383 MT
(gg:Careful-Eval-Formula-Lambda)SH
/Times-Italic SF
25080 XM
(expr error-gadget error-message)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
/Times-Italic SF
25080 61248 MT
(the-obj the-slot the-formula warn-p)200 W
10 /Courier AF
8280 63546 MT
(Careful-Eval-Formula-Lambda)SH
11 /Times-Roman AF
24765 XM
(evaluates the expression AS)
10 W( IF it were installed in)9 W
/Times-Italic SF
47180 XM
(the-slot)SH
/Times-Roman SF
50764 XM
(of)SH
/Times-Italic SF
51964 XM
(the-obj)SH
/Times-Roman SF
8280 64742 MT
(as a formula.  This)
112 W( is useful when the)113 W
/Times-Italic SF
26033 XM
(expr)SH
/Times-Roman SF
28375 XM
(contains)SH
10 /Courier AF
32429 XM
(gvl)SH
11 /Times-Roman AF
34617 XM
(calls, which normally require that the)113 W
/Times-Italic SF
52004 XM
(expr)SH
/Times-Roman SF
54346 XM
(is)SH
8280 65938 MT
(already installed in an)1 W
10 /Courier AF
18242 XM
(o-formula)SH
11 /Times-Roman AF
23918 XM
(when it is evaluated.  If the)
1 W( evaluation is successful, then the evaluated)SH
8280 67134 MT
(value is returned.)
21 W( If)
319 W( there was an error during the eval, then the)22 W
/Times-Italic SF
36866 XM
(error-gadget)SH
/Times-Roman SF
42845 XM
(is raised and two values are)22 W
8280 68330 MT
(returned: NIL and the error condition.  The message displayed in the error gadget will)
33 W( be a concatenation)32 W
8280 69526 MT
(of the actual lisp error message followed by the)SH
/Times-Italic SF
29447 XM
(error-message)SH
/Times-Roman SF
(.)SH
8280 71824 MT
(If a formula object has already been created for the expression, then it)
87 W( should be passed as the value of)88 W
ES
%%Page: 406 59
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 406)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 /Times-Italic AF
6120 7955 MT
(the-formula)SH
/Times-Roman SF
(. This)
469 W( will cause dependencies to be established as the)97 W
10 /Courier AF
36757 XM
(gv)SH
11 /Times-Roman AF
('s and)97 W
10 /Courier AF
41083 XM
(gvl)SH
11 /Times-Roman AF
('s are evaluated in)
97 W( the)96 W
6120 9151 MT
(expression.)SH
/Times-Italic SF
12009 XM
(The-formula)SH
/Times-Roman SF
17964 XM
(may also have the value)180 W
10 /Courier AF
29707 XM
(:ignore)SH
11 /Times-Roman AF
(, which will prevent the establishment of)180 W
6120 10347 MT
(dependencies.)SH
6120 12980 MT
(Example:)SH
8 /Times-Bold AF
8040 14182 MT
(lisp>)SH
/Courier SF
10176 XM
(\050create-instance 'R opal:rectangle)SH
11880 15047 MT
(\050:my-left 67\051\051)SH
8040 15912 MT
(Object R)SH
8040 16777 MT
(#k<R>)SH
/Times-Bold SF
8040 17642 MT
(lisp>)SH
/Courier SF
10176 XM
(\050gg:careful-eval-formula-lambda '\050gvl :my-left\051 NIL NIL)SH
27240 18507 MT
(R :left :ignore NIL\051)SH
8040 19372 MT
(67)SH
/Times-Bold SF
8040 20237 MT
(lisp>)SH
14 SS 
6120 24055 MT
(3.21. Query-Gadget)SH
8 /Courier AF
8040 25220 MT
(\050create-instance 'gg:Query-Gadget gg:error-gadget)SH
9480 26085 MT
(\050:button-names '\050"OK" "CANCEL"\051\051)SH
9480 26950 MT
(\050:string "Is that OK?"\051)SH
9480 27815 MT
(\050:parent-window NIL\051)SH
9480 28680 MT
(\050:font opal:default-font\051)SH
9480 29545 MT
(\050:justification :center\051)SH
9480 30410 MT
(\050:modal-p T\051)SH
9480 31275 MT
(\050:beep-p T\051)SH
9480 32140 MT
(\050:window NIL\051)SH
/Times-Italic SF
22920 XM
(; Automatically initialized)SH
/Courier SF
9480 33005 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 33870 MT
(...\051)SH
11 /Times-Roman AF
6120 35291 MT
(The loader file for the)18 W
10 /Courier AF
16134 XM
(query-gadget)SH
11 /Times-Roman AF
23626 XM
(is "error-gadget-loader" \050the)17 W
10 /Courier AF
36392 XM
(query-gadget)SH
11 /Times-Roman AF
43884 XM
(is in the same file as)17 W
6120 36487 MT
(the)SH
10 /Courier AF
7739 XM
(error-gadget)SH
11 /Times-Roman AF
(\051.)SH
6120 38785 MT
(The)SH
10 /Courier AF
8164 XM
(query-gadget)SH
11 /Times-Roman AF
15698 XM
(is similar)
59 W( to the)60 W
10 /Courier AF
23027 XM
(error-gadget)SH
11 /Times-Roman AF
(, but it allows more buttons in the window, so it is)60 W
6120 39981 MT
(useful for a general purpose dialog box.)
81 W( The)
435 W( button names are supplied in the)80 W
10 /Courier AF
41904 XM
(:button-names)SH
11 /Times-Roman AF
50059 XM
(slot of)80 W
6120 41177 MT
(the)SH
10 /Courier AF
7880 XM
(query-gadget)SH
11 /Times-Roman AF
15496 XM
(or as a parameter to the display functions.)
141 W( The)
558 W( use of the)142 W
10 /Courier AF
42808 XM
(query-gadget)SH
11 /Times-Roman AF
50425 XM
(is the)142 W
6120 42373 MT
(same as the)195 W
10 /Courier AF
12049 XM
(error-gadget)SH
11 /Times-Roman AF
19718 XM
(\050and the same caveats apply\051.  There is also a)194 W
10 /Courier AF
41845 XM
(motif-query-gadget)SH
11 /Times-Roman AF
(,)SH
6120 43569 MT
(which is described in section 4.13.)SH
6120 45867 MT
(To display a query-gadget, you first create an instance of)SH
10 /Courier AF
31439 XM
(query-gadget)SH
11 /Times-Roman AF
(, and then call one of:)SH
8 /Courier AF
8040 47080 MT
(display-query)SH
/Times-Italic SF
14760 XM
(query-gadget)SH
/Courier SF
19504 XM
(&optional)SH
/Times-Italic SF
24304 XM
(message label-list)SH
/Courier SF
8040 48810 MT
(display-query-and-wait)SH
/Times-Italic SF
19080 XM
(query-gadget)SH
/Courier SF
23824 XM
(&optional)SH
/Times-Italic SF
28624 XM
(message label-list)SH
11 /Times-Roman AF
6120 50231 MT
(The)SH
/Times-Italic SF
8274 XM
(message)SH
/Times-Roman SF
12444 XM
(is the string to display, and the optional)169 W
/Times-Italic SF
31427 XM
(label-list)SH
/Times-Roman SF
35783 XM
(allows you)
169 W( to change the buttons.  It)170 W
6120 51427 MT
(should be a list of strings, atoms or keywords.  If)30 W
/Times-Italic SF
28233 XM
(message)SH
/Times-Roman SF
32264 XM
(is not)
30 W( supplied, then the value of the)29 W
10 /Courier AF
48720 XM
(:string)SH
11 /Times-Roman AF
6120 52623 MT
(slot of the gadget is used.  This function displays)
244 W( the query-gadget on the screen and then returns)245 W
6120 53819 MT
(immediately. The)442 W
10 /Courier AF
14680 XM
(selection-function)SH
11 /Times-Roman AF
25838 XM
(of the query gadget \050if any\051 is called with the item from the)83 W
6120 55015 MT
(label-list the user selected.  While the)34 W
10 /Courier AF
23158 XM
(display-query)SH
11 /Times-Roman AF
31267 XM
(routine returns immediately when)
34 W( the dialog box)35 W
6120 56211 MT
(appears,)SH
10 /Courier AF
10116 XM
(display-query-and-wait)SH
11 /Times-Roman AF
23679 XM
(does not return until the)
88 W( user hits one of the buttons.  The return)87 W
6120 57407 MT
(value)SH
10 /Courier AF
8777 XM
(display-query-and-wait)SH
11 /Times-Roman AF
22252 XM
(is the label of the selected button.)SH
ES
%%Page: 407 60
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.22)
SH( Save)
1800 W( Gadget)SH
51386 XM
(Page 407)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.22. Save Gadget)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Save-Gadget opal:aggregadget)SH
11160 10168 MT
(\050:maybe-constant '\050:parent-window :window-title :window-left :window-top)SH
20280 11033 MT
(:message-string :num-visible :initial-directory :button-panel-items)SH
20280 11898 MT
(:button-panel-h-spacing :min-gadget-width :modal-p)SH
20280 12763 MT
(:check-filenames-p :query-message :query-buttons)SH
20280 13628 MT
(:dir-input-field-font :dir-input-label-font :message-font)SH
20280 14493 MT
(:file-menu-font :file-input-field-font :file-input-label-font)SH
20280 15358 MT
(:button-panel-font\051\051)SH
11160 16223 MT
(\050:parent-window NIL\051)SH
11160 17088 MT
(\050:window-title "save window"\051)SH
11160 17953 MT
(\050:min-gadget-width 240\051)SH
11160 18818 MT
(\050:initial-directory "./"\051)SH
11160 19683 MT
(\050:message-string "fetching directory..."\051)SH
11160 20548 MT
(\050:query-message "save over existing file"\051)SH
11160 21413 MT
(\050:button-panel-items '\050"save" "cancel"\051\051)SH
11160 22278 MT
(\050:button-panel-h-spacing 25\051)SH
11160 23143 MT
(\050:num-visible 6\051)SH
11160 24008 MT
(\050:check-filenames-p t\051)SH
11160 24873 MT
(\050:modal-p NIL\051)SH
11160 25738 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 27468 MT
(\050:dir-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
11160 28333 MT
(\050:dir-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 29198 MT
(\050:file-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
11160 30063 MT
(\050:file-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 30928 MT
(\050:message-font \050opal:get-standard-font :fixed :italic :small\051\051)SH
11160 31793 MT
(\050:button-panel-font opal:default-font\051)SH
11160 32658 MT
(\050:file-menu-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 33523 MT
(...\051)SH
11 SS 
75 100 0 8730 74544 GB 
%%BeginDocument: gadgets/save-gadget.ps
%!PS-Adobe-2.0
%%Title: Save Window
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 3:04 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 176 261 436 531
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
104 -189 translate
gsave
0 648 260 270 ClipToRectangle
0 0 translate
gsave
10 624 613 68 14 0 false 0 0 0 false 0 0 0 false (Directory:) 12 /Courier-Bold DrawText
83 624 167 15 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
90 622 613 71 11 0 false 0 0 0 false 0 0 0 false (/usr0/rajan/) 10 /Courier DrawText
32 569 20 62 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
32 589 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
42 586 35 579 39 579 39 572 45 572 45 579 49 579 42 586 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
32 507 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
42 490 35 497 39 497 39 504 45 504 45 497 49 497 42 490 16 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
33 535 18 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
52 589 180 102 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
56 588 577 28 14 0 false 0 0 0 false 0 0 0 false (Mail) 12 /Courier-Bold DrawText
53 572 178 17 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
56 571 560 57 14 1 false 0 0 0 false 0 0 0 false (Untitled) 12 /Courier-Bold DrawText
56 554 543 21 14 0 false 0 0 0 false 0 0 0 false (bin) 12 /Courier-Bold DrawText
56 537 526 41 14 0 false 0 0 0 false 0 0 0 false (g.lisp) 12 /Courier-Bold DrawText
56 520 509 48 14 0 false 0 0 0 false 0 0 0 false (include) 12 /Courier-Bold DrawText
56 503 492 20 14 0 false 0 0 0 false 0 0 0 false (lib) 12 /Courier-Bold DrawText
10 467 456 60 14 0 false 0 0 0 false 0 0 0 false (Filename:) 12 /Courier-Bold DrawText
75 467 175 15 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
82 465 456 48 11 0 false 0 0 0 false 0 0 0 false (Untitled) 10 /Courier DrawText
56 423 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
51 428 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
54 425 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
63 423 412 26 14 0 false 0 0 0 false 0 0 0 false (Save) 12 /Courier DrawText
137 423 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
132 428 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
135 425 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
137 423 412 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
grestore

grestore

0 648 260 270 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 176 261 436 531

%%EndDocument
 GE /Times-Bold SF
8280 56721 MT
(Figure 3-8:)SH
/Times-Roman SF
14053 XM
(A save-gadget showing the contents of directory)SH
10 /Courier AF
35648 XM
(/usr0/rajan/)SH
11 /Times-Roman AF
8280 58672 MT
(The loader file for the)218 W
10 /Courier AF
19295 XM
(save-gadget)SH
11 /Times-Roman AF
26388 XM
(is "save-gadget-loader" \050which also)
218 W( loads the)219 W
10 /Courier AF
47839 XM
(load-gadget)SH
11 /Times-Roman AF
(\051.)SH
8280 59868 MT
(Figure 3-8 shows a picture of the save gadget.)SH
8280 62166 MT
(The)SH
10 /Courier AF
10384 XM
(save-gadget)SH
11 /Times-Roman AF
17378 XM
(is a dialog box used)
119 W( to save a file, while displaying the contents of the destination)118 W
8280 63362 MT
(directory in)
5 W( a scrolling menu.  The gadget has an accompanying query-gadget dialog box \050not shown\051 that)6 W
8280 64558 MT
(can ask)
12 W( the user if the file really should be saved before the)11 W
10 /Courier AF
34781 XM
(save-gadget)SH
11 /Times-Roman AF
41667 XM
(appears. This)
297 W( is an extra level)11 W
8280 65754 MT
(of convenience for the application designer.)SH
8280 68052 MT
(There is also a)SH
10 /Courier AF
14938 XM
(motif-save-gadget)SH
11 /Times-Roman AF
(, as well as a)SH
10 /Courier AF
31002 XM
(load-gadget)SH
11 /Times-Roman AF
37877 XM
(and)SH
10 /Courier AF
39740 XM
(motif-load-gadget)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 408 61
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 408)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 /Times-Bold AF
6120 7937 MT
(Caveats:)SH
/Symbol SF
8089 9501 MT
(\267)SH
/Times-Bold SF
8870 XM
(Update the parent window before instantiating the save-gadget.)SH
/Symbol SF
8089 11353 MT
(\267)SH
/Times-Bold SF
8870 XM
(The instance of the save-gadget should not be added to an aggregate.)SH
1528 50 27204 11553 UL
12 SS 
6120 15037 MT
(3.22.1. Programming Interface)SH
11 /Times-Roman AF
6120 16233 MT
(When a save gadget is created, it does not appear automatically.)
45 W( Like)
367 W( the query and error gadgets, it has)46 W
6120 17429 MT
(its own display function.  The save window is activated by calling one of these functions:)SH
8 /Courier AF
8040 18642 MT
(gg:Display-Save-Gadget)SH
/Times-Italic SF
19080 XM
(save-gadget)SH
/Courier SF
23424 XM
(&optional)SH
/Times-Italic SF
28224 XM
(initial-filename)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 20372 MT
(gg:Display-Save-Gadget-And-Wait)SH
/Times-Italic SF
23400 XM
(save-gadget)SH
/Courier SF
27744 XM
(&optional)SH
/Times-Italic SF
32544 XM
(initial-filename)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 22670 MT
(While the)519 W
10 /Courier AF
11740 XM
(display-save-gadget)SH
11 /Times-Roman AF
23934 XM
(routine returns immediately when the dialog box)
519 W( appears,)518 W
10 /Courier AF
6120 23866 MT
(display-save-gadget-and-wait)SH
11 /Times-Roman AF
23371 XM
(does not return until the user hits either)
176 W( the "Save" or "Cancel")177 W
6120 25062 MT
(button. If)
665 W( an)195 W
/Times-Italic SF
12857 XM
(initial-filename)SH
/Times-Roman SF
20110 XM
(is provided, it will appear in the "Filename:"  box when the gadget is)194 W
6120 26258 MT
(displayed.)SH
6120 28556 MT
(NOTE: To change the directory, set the)286 W
10 /Courier AF
25776 XM
(:initial-directory)SH
11 /Times-Roman AF
37137 XM
(slot of the gadget)
286 W( to be the new)287 W
6120 29752 MT
(directory. Then,)
275 W( when you call one of the display methods, the directory will be updated.)SH
6120 32050 MT
(To hide a save window, use)SH
8 /Courier AF
8040 33263 MT
(gg:Hide-Save-Gadget)SH
/Times-Italic SF
17640 XM
(save-gadget)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 35561 MT
(The following function is described in section 3.22.4.)SH
8 /Courier AF
8040 36774 MT
(gg:Save-File-If-Wanted)SH
/Times-Italic SF
19080 XM
(save-gadget)SH
/Courier SF
23424 XM
(&optional)SH
/Times-Italic SF
28224 XM
(filename)SH
/Courier SF
31458 XM
(\050)SH
/Times-Italic SF
(query-string)SH
/Courier SF
36371 XM
("Save file first?"\051)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 39072 MT
(When a save-gadget is first displayed, the "Directory" box will contain the present directory)
209 W( \050unless)208 W
6120 40268 MT
(otherwise specified, as explained in the next section\051; the scrolling-menu will have the contents)
114 W( of that)115 W
6120 41464 MT
(directory; and the "Filename" box will be blank.)SH
6120 43762 MT
(Whenever the)
188 W( directory name is changed by the user, the scrolling menu will also change to list the)187 W
6120 44958 MT
(contents of the new directory.  If an invalid directory name is specified,)
156 W( there will be a beep and the)157 W
6120 46154 MT
(invalid name)
183 W( will be replaced by the previous name.  Whenever a directory is being fetched, a brief)182 W
6120 47350 MT
(message \050by default, "Fetching)
74 W( directory..."\051 will appear, and will go away when the scrolling menu has)75 W
6120 48546 MT
(been updated.  When a file name is typed into the "Directory" box, the file name will be moved)
50 W( down to)49 W
6120 49742 MT
(the "Filename" box, and the menu will be updated.)SH
6120 52040 MT
(If a file in the scrolling menu is selected, then the)
42 W( "Filename" box will contain the name of that file.  If a)43 W
6120 53236 MT
(directory is selected, the "Directory" box will)
36 W( be set to the selected directory, and the scrolling menu will)35 W
6120 54432 MT
(once again update itself.)SH
6120 56730 MT
(If an invalid file)
33 W( name is typed into the "Filename" box, there will be a beep and the "Filename" box will)34 W
6120 57926 MT
(be reset. An invalid file name is one that has a directory name in it \050"/usr/garnet/foo", for example\051.)SH
6120 60224 MT
(The following slots may be changed to customize the)SH
10 /Courier AF
29857 XM
(save-gadget)SH
11 /Times-Roman AF
(:)SH
10 /Courier AF
8320 62175 MT
(:window-title)SH
11 /Times-Roman AF
16621 XM
(- contains the title)
226 W( of the save window, which is by default "Save Window".)225 W
11620 63371 MT
(Window managers usually do not display titles for subwindows \050i.e.,)
19 W( if a window is specified)20 W
11620 64567 MT
(in)SH
10 /Courier AF
12751 XM
(:parent-window)SH
11 /Times-Roman AF
(\051.)SH
10 /Courier AF
8320 66262 MT
(:parent-window)SH
11 /Times-Roman AF
17301 XM
(- if this slot contains)
306 W( a window, then the)305 W
10 /Courier AF
37954 XM
(save-gadget)SH
11 /Times-Roman AF
45134 XM
(will appear as a)305 W
11620 67458 MT
(subwindow of that)
47 W( window.  By default, the gadget will automatically be centered inside the)48 W
11620 68654 MT
(parent window.  If this)
119 W( is not desired, the)118 W
10 /Courier AF
30985 XM
(:window-left)SH
11 /Times-Roman AF
38578 XM
(and)SH
10 /Courier AF
40559 XM
(:window-top)SH
11 /Times-Roman AF
47552 XM
(slots can be)118 W
11620 69850 MT
(changed to position the gadget.)SH
10 /Courier AF
8320 71545 MT
(:window-left)SH
11 /Times-Roman AF
15808 XM
(and)SH
10 /Courier AF
17684 XM
(:window-top)SH
11 /Times-Roman AF
24572 XM
(- specify the coordinates of the dialog box.  Default values are)
13 W( 0)14 W
ES
%%Page: 409 62
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.22)
SH( Save)
1800 W( Gadget)SH
51386 XM
(Page 409)SH
46800 50 8280 4486 UL
11 SS 
13780 7955 MT
(for both slots unless there is a parent window.)SH
10 /Courier AF
10480 9650 MT
(:initial-directory)SH
11 /Times-Roman AF
21637 XM
(- the directory to display when the)81 W
10 /Courier AF
37569 XM
(save-gadget)SH
11 /Times-Roman AF
44525 XM
(appears. The)
437 W( default is)81 W
13780 10846 MT
("./", which is the current directory as determined by the lisp process.)SH
10 /Courier AF
10480 12541 MT
(:message-string)SH
11 /Times-Roman AF
19833 XM
(- the message to display to the user while the)
78 W( save gadget fetches the contents)79 W
13780 13737 MT
(of a new directory.  Default is "Fetching directory...".)SH
10 /Courier AF
10480 15432 MT
(:num-visible)SH
11 /Times-Roman AF
17955 XM
(- how many files to display in the scrolling menu.  Default is 6.)SH
10 /Courier AF
10480 17127 MT
(:button-panel-items)SH
11 /Times-Roman AF
22400 XM
(- a list of names for the buttons.)
245 W( The)
763 W( default is '\050"Save" "Cancel"\051.)244 W
13780 18323 MT
(NOTE: It is important that, when)
908 W( you rename the buttons and use the)909 W
10 /Courier AF
13780 19519 MT
(default-save-function)SH
11 /Times-Roman AF
(, you rename them)
158 W( in the "Save" "Cancel" order.  That is, the)157 W
13780 20715 MT
(label that should cause the gadget to save must appear first in the)61 W
10 /Courier AF
43441 XM
(:items)SH
11 /Times-Roman AF
47378 XM
(list, and the label)62 W
13780 21911 MT
(that cancels the gadget's action must appear second.  For example, if you rename the)284 W
10 /Courier AF
13780 23107 MT
(:button-panel-items)SH
11 /Times-Roman AF
25827 XM
(slot as)
372 W( '\050"Go" "Return"\051, it will produce the correct results.)373 W
13780 24303 MT
(However, if you use '\050"Return" "Go"\051 instead, the wrong functions will get called.)SH
10 /Courier AF
10480 25998 MT
(:button-panel-h-spacing)SH
11 /Times-Roman AF
24555 XM
(- the distance between the buttons \050default 25\051.)SH
10 /Courier AF
10480 27693 MT
(:min-gadget-width)SH
11 /Times-Roman AF
21043 XM
(specifies the width of the)
88 W( "Directory" and "Filename" boxes.  The scrolling)87 W
13780 28889 MT
(menu is centered between them.)SH
10 /Courier AF
10480 30584 MT
(:modal-p)SH
11 /Times-Roman AF
15674 XM
(- when)
119 W( T, then interaction in other Garnet windows will be suspended untill either the)120 W
13780 31780 MT
("Save" or the "Cancel" button is hit.)SH
10 /Courier AF
10480 33475 MT
(:check-filenames-p)SH
11 /Times-Roman AF
21643 XM
(- whether to check to see whether the file already exists before saving.  If)87 W
13780 34671 MT
(the file exists, then a query gadget will pop up and ask for confirmation.)SH
10 /Courier AF
10480 36366 MT
(:query-message)SH
11 /Times-Roman AF
19268 XM
(- the string that will be used in)
113 W( the query gadget that pops up when you try to)114 W
13780 37562 MT
(overwrite a file.  If)SH
10 /Courier AF
22330 XM
(:check-filenames-p)SH
11 /Times-Roman AF
33405 XM
(slot is NIL, this slot is ignored.)SH
10 /Courier AF
10480 39257 MT
(:selection-function)SH
11 /Times-Roman AF
22155 XM
(- as usual, the function called when the "Save" button is hit.)SH
10 /Courier AF
10480 40952 MT
(:dir-input-field-font)SH
11 /Times-Roman AF
23500 XM
(and)SH
10 /Courier AF
25508 XM
(:dir-input-label-font)SH
11 /Times-Roman AF
38528 XM
(- the fonts for the field and)
145 W( label of)144 W
13780 42148 MT
(the "Directory" box.)SH
10 /Courier AF
10480 43843 MT
(:file-input-field-font)SH
11 /Times-Roman AF
23990 XM
(and)SH
10 /Courier AF
25888 XM
(:file-input-label-font)SH
11 /Times-Roman AF
39398 XM
(- the fonts for the field and label of)36 W
13780 45039 MT
(the "Filename" box.)SH
10 /Courier AF
10480 46734 MT
(:message-font)SH
11 /Times-Roman AF
18555 XM
(- the font to use for the message that appears when the directory is being fetched.)SH
10 /Courier AF
10480 48429 MT
(:file-menu-font)SH
11 /Times-Roman AF
19755 XM
(- the font of the items inside the scrolling menu)SH
10 /Courier AF
10480 50124 MT
(:button-panel-font)SH
11 /Times-Roman AF
21555 XM
(- the font for the buttons)SH
12 /Times-Bold AF
8280 53808 MT
(3.22.2. Adding more gadgets to the save gadget)SH
11 /Times-Roman AF
8280 55004 MT
(It is possible to add more gadgets, such as extra buttons, etc. to the save gadget.  To do)
61 W( this, you simply)60 W
8280 56200 MT
(add more components to the)110 W
10 /Courier AF
21569 XM
(:parts)SH
11 /Times-Roman AF
25554 XM
(list of the save gadget \050which is an aggregadget\051.)
110 W( However,)
497 W( you)111 W
8280 57396 MT
(MUST include the following)
26 W( 5 components in the parts list:)25 W
10 /Courier AF
35055 XM
(:dir-input)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
41630 XM
(:file-menu)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
48205 XM
(:file-input)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 58592 MT
(:message)SH
11 /Times-Roman AF
(, and)SH
10 /Courier AF
15493 XM
(:OK-cancel-buttons)SH
11 /Times-Roman AF
(.)SH
8280 60890 MT
(An example of adding more gadgets to a save gadget follows:)SH
8 /Courier AF
10200 62055 MT
(\050create-instance 'SG gg:save-gadget)SH
11160 62920 MT
(\050:parts)SH
11640 63785 MT
(`\050:dir-input :file-menu :file-input :message :OK-cancel-buttons)SH
12600 64650 MT
(\050:extra-button ,gg:text-button)SH
13080 65515 MT
(\050:left 10\051 \050:top 220\051)SH
13080 66380 MT
(\050:text-offset 2\051 \050:shadow-offset 5\051 \050:gray-width 3\051)SH
13080 67245 MT
(\050:string "Test"\051\051\051\051\051)SH
11 /Times-Roman AF
8280 69543 MT
(This will,)
60 W( in addition to creating the standard save gadget parts, create an additional button.  This button)61 W
8280 70739 MT
(can be accessed by using)63 W
10 /Courier AF
19864 XM
(\050gv SG :extra-button\051)63 W
11 /Times-Roman AF
(. Naturally,)
401 W( you can have selection functions, etc.)62 W
8280 71935 MT
(to whatever)
367 W( gadgets you add.  However, it is extremely important to include the)368 W
10 /Courier AF
48805 XM
(:dir-input)SH
11 /Times-Roman AF
(,)SH
ES
%%Page: 410 63
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 410)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(:file-menu)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
12670 XM
(:file-input)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
19820 XM
(:message)SH
11 /Times-Roman AF
24895 XM
(and)SH
10 /Courier AF
26758 XM
(:OK-cancel-buttons)SH
11 /Times-Roman AF
37833 XM
(in the)SH
10 /Courier AF
40583 XM
(:parts)SH
11 /Times-Roman AF
44458 XM
(list.)SH
6120 10253 MT
(NOTE: The save/cancel buttons automatically position themselves 25 pixels below the last gadget)
61 W( in the)60 W
10 /Courier AF
6120 11449 MT
(:parts)SH
11 /Times-Roman AF
10057 XM
(list, since most people desire the buttons at the)
62 W( bottom of the gadget.  If this is not desired, you)63 W
6120 12645 MT
(can modify the)SH
10 /Courier AF
12993 XM
(:top)SH
11 /Times-Roman AF
15668 XM
(slot of the)SH
10 /Courier AF
20343 XM
(:OK-cancel-buttons)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 16329 MT
(3.22.3. Hacking the Save Gadget)SH
11 /Times-Roman AF
6120 17525 MT
(The slots described above should be enough to customize most applications.)
69 W( However,)
411 W( when that is not)68 W
6120 18721 MT
(the case, it is possible to hack the save gadget.)SH
6120 21019 MT
(For example,)
189 W( the save/cancel buttons are centered with respect to the "Filename" box.  If this is not)190 W
6120 22215 MT
(desirable, the)SH
10 /Courier AF
12259 XM
(:OK-cancel-buttons)SH
11 /Times-Roman AF
23334 XM
(slot can be modified to the desired left and top coordinates.)SH
6120 24513 MT
(Suppose the left of the save/cancel buttons should be at 10.  The save gadget then would look like:)SH
8 /Courier AF
8040 25678 MT
(\050create-instance 'sg gg:save-gadget)SH
9000 26543 MT
(\050:parts)SH
9960 27408 MT
(`\050:dir-input)SH
10920 28273 MT
(:message)SH
10920 29138 MT
(:file-menu)SH
10920 30003 MT
(:file-input)SH
10920 30868 MT
(\050:OK-cancel-buttons :modify \050:left 10\051\051\051\051\051)SH
12 /Times-Bold AF
6120 34552 MT
(3.22.4. The Save-File-If-Wanted function)SH
11 /Times-Roman AF
6120 35748 MT
(If you are using a menubar with a "File" menu,)
173 W( you might want to use the)172 W
10 /Courier AF
41520 XM
(save-file-if-wanted)SH
11 /Times-Roman AF
6120 36944 MT
(function. You)
441 W( would call this function before such operations as quit, close, and)
83 W( read if the contents of)84 W
6120 38140 MT
(the window had not yet been saved.  The format for this function is:)SH
8 /Courier AF
8040 39353 MT
(gg:Save-File-If-Wanted)SH
/Times-Italic SF
19080 XM
(save-gadget)SH
/Courier SF
23424 XM
(&optional)SH
/Times-Italic SF
28224 XM
(filename)SH
/Courier SF
31458 XM
(\050)SH
/Times-Italic SF
(query-string)SH
/Courier SF
36371 XM
("Save file first?"\051)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 41651 MT
(This function will pop up a query gadget)
180 W( that asks "Save file first?", or whatever you specify as the)179 W
/Times-Italic SF
6120 42847 MT
(query-string)SH
/Times-Roman SF
(. If)
645 W( "Yes" is selected, then it will call the standard)185 W
10 /Courier AF
36120 XM
(display-save-gadget-and-wait)SH
11 /Times-Roman AF
6120 44043 MT
(function on the given filename, and)
62 W( the return value of this function will be the same as the return value)61 W
6120 45239 MT
(for the)42 W
/Times-Italic SF
9380 XM
(save-gadget)SH
/Times-Roman SF
('s)SH
10 /Courier AF
15805 XM
(:selection-function)SH
11 /Times-Roman AF
(. If)
359 W( "Cancel" is selected, it will return)42 W
10 /Courier AF
44518 XM
(:CANCEL)SH
11 /Times-Roman AF
(. If)
360 W( "No")43 W
6120 46435 MT
(is selected, it will return)SH
10 /Courier AF
16996 XM
(:NO)SH
11 /Times-Roman AF
(.)SH
6120 48733 MT
(For an example of when and where this function can be used, look at the source code for Garnetdraw,)116 W
6120 49929 MT
(under the section)
18 W( labeled "MENU FUNCTIONS AND MENUBAR".  The Open, New and Quit functions)19 W
6120 51125 MT
(all call this function.)SH
6120 53423 MT
(Often, it is necessary to know if the "Cancel")
175 W( button was hit or not.  For this purpose, the functions)174 W
10 /Courier AF
6120 54619 MT
(save-file-if-wanted)SH
11 /Times-Roman AF
17879 XM
(and the)84 W
10 /Courier AF
21529 XM
(display-save-gadget-and-wait)SH
11 /Times-Roman AF
38688 XM
(return)SH
10 /Courier AF
41673 XM
(:cancel)SH
11 /Times-Roman AF
46232 XM
(if the "Cancel")85 W
6120 55815 MT
(button was hit.  For example, the quit function in Garnetdraw looks like this:)SH
8 /Courier AF
8040 56980 MT
(\050defun quit-fun \050gadget menu-item submenu-item\051)SH
9000 57845 MT
(\050unless \050eq :cancel \050gg:Save-File-If-Wanted *save-db* *document-name*\051\051)SH
9960 58710 MT
(\050do-stop\051\051\051)SH
11 /Times-Roman AF
6120 61008 MT
(If the user clicks on)
200 W( "Cancel" either in the "Save file first?" query box, or in the save-gadget itself,)199 W
10 /Courier AF
6120 62204 MT
(save-file-if-wanted)SH
11 /Times-Roman AF
17795 XM
(will return)SH
10 /Courier AF
22683 XM
(:cancel)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 411 64
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.24)
SH( Property)
1800 W( Sheets)SH
51386 XM
(Page 411)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.23. Load Gadget)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Load-Gadget opal:aggregadget)SH
11160 10168 MT
(\050:maybe-constant '\050:parent-window :window-title :window-left :window-top)SH
20280 11033 MT
(:message-string :num-visible :initial-directory :button-panel-items)SH
20280 11898 MT
(:button-panel-h-spacing :min-gadget-width :modal-p)SH
20280 12763 MT
(:check-filenames-p :dir-input-field-font :dir-input-label-font)SH
20280 13628 MT
(:message-font :file-menu-font :file-input-field-font)SH
20280 14493 MT
(:file-input-label-font :button-panel-font\051\051)SH
11160 15358 MT
(\050:parent-window NIL\051)SH
11160 16223 MT
(\050:window-title "load window"\051)SH
11160 17088 MT
(\050:min-gadget-width 240\051)SH
11160 17953 MT
(\050:initial-directory "./"\051)SH
11160 18818 MT
(\050:message-string "fetching directory..."\051)SH
11160 19683 MT
(\050:button-panel-items '\050"load" "cancel"\051\051)SH
11160 20548 MT
(\050:button-panel-h-spacing 25\051)SH
11160 21413 MT
(\050:num-visible 6\051)SH
11160 22278 MT
(\050:check-filenames-p t\051)SH
11160 23143 MT
(\050:modal-p nil\051)SH
11160 24008 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 25738 MT
(\050:dir-input-field-font \050opal:get-standard-font nil nil :small\051\051)SH
11160 26603 MT
(\050:dir-input-label-font \050opal:get-standard-font nil :bold nil\051\051)SH
11160 27468 MT
(\050:file-input-field-font \050opal:get-standard-font nil nil :small\051\051)SH
11160 28333 MT
(\050:file-input-label-font \050opal:get-standard-font nil :bold nil\051\051)SH
11160 29198 MT
(\050:message-font \050opal:get-standard-font :fixed :italic :small\051\051)SH
11160 30063 MT
(\050:button-panel-font opal:default-font\051)SH
11160 30928 MT
(\050:file-menu-font \050opal:get-standard-font nil :bold nil\051\051)SH
11160 31793 MT
(...\051)SH
11 /Times-Roman AF
8280 33214 MT
(The)SH
10 /Courier AF
10265 XM
(load-gadget)SH
11 /Times-Roman AF
17140 XM
(is loaded along with the)SH
10 /Courier AF
27925 XM
(save-gadget)SH
11 /Times-Roman AF
34800 XM
(by the file "save-gadget-loader".)SH
8280 35512 MT
(The)SH
10 /Courier AF
10304 XM
(load-gadget)SH
11 /Times-Roman AF
17218 XM
(is very similar to)
39 W( the)40 W
10 /Courier AF
26734 XM
(save-gadget)SH
11 /Times-Roman AF
(. Both)
355 W( look alike, except for their window titles.)40 W
8280 36708 MT
(The same caveats apply to both the save and load gadgets \050see section 3.22\051.)SH
8280 39006 MT
(The)SH
10 /Courier AF
10379 XM
(load-gadget)SH
11 /Times-Roman AF
17368 XM
(has its own functions for displaying and hiding the gadget, which are)
114 W( analogous to)113 W
8280 40202 MT
(those used by the)SH
10 /Courier AF
16162 XM
(save-gadget)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
10200 41415 MT
(gg:Display-Load-Gadget)SH
/Times-Italic SF
21240 XM
(load-gadget)SH
/Courier SF
25585 XM
(&optional)SH
/Times-Italic SF
30385 XM
(initial-filename)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 43145 MT
(gg:Display-Load-Gadget-And-Wait)SH
/Times-Italic SF
25560 XM
(load-gadget)SH
/Courier SF
29905 XM
(&optional)SH
/Times-Italic SF
34705 XM
(initial-filename)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 44875 MT
(gg:Hide-Load-Gadget)SH
/Times-Italic SF
19800 XM
(load-gadget)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 47173 MT
(When a load gadget)
54 W( is created and)55 W
10 /Courier AF
24023 XM
(display-load-gadget)SH
11 /Times-Roman AF
35753 XM
(is called, the window that pops up contains)55 W
8280 48369 MT
(the same initial contents as in the save gadget.  The "Directory" box, the scrolling-menu, and the message,)3 W
8280 49565 MT
(all work identically in both the gadgets.)SH
8280 51863 MT
(The "Filename" box resembles the save gadget in that)
160 W( it beeps when an invalid file name is typed in)161 W
8280 53059 MT
(\050unless the)22 W
10 /Courier AF
13334 XM
(:check-filenames-p)SH
11 /Times-Roman AF
24431 XM
(slot is NIL\051, and is reset to the)
22 W( empty string, "".  However, an invalid)21 W
8280 54255 MT
(file name is defined as a file name that does not exist, or a directory.)SH
8280 56553 MT
(As in the save gadget, when you rename the buttons and use the default load)
72 W( function, it is important to)73 W
8280 57749 MT
(put the name corresponding to the "Load" button as the first element of the)SH
10 /Courier AF
41498 XM
(:button-panel-items)SH
11 /Times-Roman AF
53173 XM
(list.)SH
14 /Times-Bold AF
8280 61567 MT
(3.24. Property Sheets)SH
11 /Times-Roman AF
8280 62763 MT
(The)SH
10 /Courier AF
10302 XM
(prop-sheet)SH
11 /Times-Roman AF
16614 XM
(gadget takes a list of values to display, and)37 W
10 /Courier AF
36071 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
47183 XM
(takes a KR object)36 W
8280 63959 MT
(to display.  The)298 W
10 /Courier AF
16591 XM
(prop-sheet-with-OK)SH
11 /Times-Roman AF
27964 XM
(and)SH
10 /Courier AF
30125 XM
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
46298 XM
(gadgets combine a)298 W
8280 65155 MT
(property sheet with OK, Apply and Cancel buttons and functions)
67 W( to display these in windows \050using the)66 W
8280 66351 MT
(Garnet look and feel\051.  Similarly, the)133 W
10 /Courier AF
25676 XM
(motif-prop-sheet-with-OK)SH
11 /Times-Roman AF
40484 XM
(and)SH
10 /Courier AF
42480 XM
(motif-prop-sheet-for-)SH
8280 67547 MT
(obj-with-OK)SH
11 /Times-Roman AF
15155 XM
(combine a property sheet with buttons, but use the Motif look and feel \050see section 4.16\051.)SH
ES
%%Page: 412 65
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 412)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.24.1. User Interface)SH
11 /Times-Roman AF
6120 9200 MT
(Press on the value of a slot with the left button to)
246 W( begin typing.  Press with the left button again)245 W
6120 10396 MT
(\050anywhere\051 or hit)10 W
10 /Courier AF
14059 XM
(return)SH
11 /Times-Roman AF
17944 XM
(or)SH
10 /Courier AF
19145 XM
(^j)SH
11 /Times-Roman AF
20630 XM
(to stop editing \050if multi-line strings are allowed, then)10 W
10 /Courier AF
44246 XM
(return)SH
11 /Times-Roman AF
48132 XM
(goes to the)11 W
6120 11592 MT
(next line, so you need to use)52 W
10 /Courier AF
19254 XM
(^j)SH
11 /Times-Roman AF
20781 XM
(or left button to stop)
52 W( editing\051.  Pressing with any other button inside the)51 W
6120 12788 MT
(string moves the cursor.  Regular editing operations are supported \050see the)
347 W( text-interactor in the)348 W
6120 13984 MT
(Interactors manual\051.  If you hit)63 W
10 /Courier AF
20273 XM
(tab)SH
11 /Times-Roman AF
(, the cursor will move to the next field.  If label selection)
63 W( is enabled,)62 W
6120 15180 MT
(then labels can be selected by pressing)
47 W( with any mouse button.  If value selection is enabled, then values)48 W
6120 16376 MT
(must be)
169 W( selected with the)168 W
/Times-Italic SF
18356 XM
(right)SH
/Times-Roman SF
20939 XM
(button while they are not being edited.  Selected labels or values are)168 W
6120 17572 MT
(displayed in bold.)SH
12 /Times-Bold AF
6120 21256 MT
(3.24.2. Prop-Sheet)SH
8 /Courier AF
8040 22421 MT
(\050create-instance 'gg:Prop-Sheet opal:aggregadget)SH
9960 23286 MT
(\050:maybe-constant '\050:left :top :items :default-filter :v-spacing)SH
19080 24151 MT
(:multi-line-p :select-label-p :visible)SH
19080 25016 MT
(:label-selected-func :label-select-event)SH
19080 25881 MT
(:select-value-p :value-selected-func :single-select-p\051\051)SH
/Times-Italic SF
9480 26746 MT
(; Customizable slots)SH
/Courier SF
9960 27611 MT
(\050:left 0\051 \050:top 0\051)SH
9960 28476 MT
(\050:items NIL\051)SH
/Times-Italic SF
16200 XM
(; put the values to be displayed here)SH
/Courier SF
9960 29341 MT
(\050:default-filter 'default-filter\051)SH
9960 30206 MT
(\050:v-spacing 1\051)SH
9960 31071 MT
(\050:pixel-margin NIL\051)SH
9960 31936 MT
(\050:rank-margin NIL\051)SH
9960 32801 MT
(\050:multi-line-p NIL\051)SH
/Times-Italic SF
19560 XM
(; T if multi-line strings are allowed)SH
/Courier SF
9960 33666 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
20520 XM
(; T if want to be able to select the labels)SH
/Courier SF
9960 34531 MT
(\050:label-selected-func NIL\051)SH
9960 35396 MT
(\050:label-select-event :any-mousedown\051)SH
9960 36261 MT
(\050:select-value-p NIL\051)SH
/Times-Italic SF
20520 XM
(; if want to be able to select the values)SH
/Courier SF
9960 37126 MT
(\050:value-selected-func NIL\051)SH
9960 37991 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
21000 XM
(; to select more than one value or label)SH
9480 39721 MT
(; Read-only slots)SH
/Courier SF
9960 40586 MT
(\050:label-selected NIL\051)SH
/Times-Italic SF
20520 XM
(; set with the selected label objects \050or a list)SH
/Courier SF
(\051)SH
9960 41451 MT
(\050:value-selected NIL\051)SH
/Times-Italic SF
20520 XM
(; set with the selected value objects \050or a list)SH
/Courier SF
(\051)SH
9960 42316 MT
(\050:value ...\051)SH
/Times-Italic SF
16680 XM
(; list of pairs of all the slots and their \050filtered\051 values)SH
/Courier SF
9960 43181 MT
(\050:changed-values NIL\051\051)SH
/Times-Italic SF
21000 XM
(; only the values that have changed)SH
46800 50 6120 45332 UL
11 SS 
75 100 0 6570 79579 GB 
%%BeginDocument: gadgets/propplain.PS
%!PS-Adobe-2.0
%%Title: Opal 8
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 2:33 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 346 406 446
%%%Pages: 1
%%EndComments


/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -274 translate
gsave
0 648 200 100 ClipToRectangle
0 0 translate
gsave
5 583 572 95 14 0 false 0 0 0 false 0 0 0 false (RANGE \0501..20\051:) 12 /Courier DrawText
109 583 572 5 14 0 false 0 0 0 false 0 0 0 false (1) 12 /Courier DrawText
5 601 590 67 14 0 false 0 0 0 false 0 0 0 false (DIRECTION:) 12 /Courier DrawText
83 599 118 15 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
81 601 118 15 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
83 601 590 13 14 0 false 0 0 0 false 0 0 0 false (up) 12 /Courier DrawText
106 601 590 27 14 0 false 0 0 0 false 0 0 0 false (down) 12 /Courier-Bold DrawText
143 601 590 55 14 0 false 0 0 0 false 0 0 0 false (diagonal) 12 /Courier DrawText
5 615 604 45 14 0 false 0 0 0 false 0 0 0 false (STATUS:) 12 /Courier DrawText
59 615 604 48 14 0 false 0 0 0 false 0 0 0 false (Nervous) 12 /Courier DrawText
5 629 618 46 14 0 false 0 0 0 false 0 0 0 false (HEIGHT:) 12 /Courier DrawText
60 629 618 12 14 0 false 0 0 0 false 0 0 0 false (34) 12 /Courier DrawText
5 643 632 38 14 0 false 0 0 0 false 0 0 0 false (COLOR:) 12 /Courier DrawText
52 643 632 21 14 0 false 0 0 0 false 0 0 0 false (Red) 12 /Courier DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier 
%%BoundingBox: 206 346 406 446

%%EndDocument
 GE /Times-Bold SF
6120 55381 MT
(Figure 3-9:)SH
/Times-Roman SF
11893 XM
(Example of a property sheet with an embedded gadget.)SH
46800 50 6120 57333 UL
6120 59084 MT
(The loader for the)SH
10 /Courier AF
14304 XM
(gg:prop-sheet)SH
11 /Times-Roman AF
22379 XM
(gadget is "prop-sheet-loader".)SH
/Times-Bold SF
6120 62819 MT
(Customizable slots:)SH
10 /Courier AF
6120 64770 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
9670 XM
(:top)SH
11 /Times-Roman AF
12345 XM
(- Position of the gadget.  Default: 0,0)SH
10 /Courier AF
6120 66465 MT
(:items)SH
11 /Times-Roman AF
10085 XM
(- The control list of the items to be displayed in the gadget.  The)
90 W( format for the list is a list of)91 W
9720 67661 MT
(lists, as follows:)SH
8 /Courier AF
11640 68826 MT
(\050 \050label1 stringval1 [filter1 [realval1 [comment]]]\051 \050label2 ...\051 \051)SH
11 /Symbol AF
11689 70404 MT
(\267)SH
/Times-Roman SF
12470 XM
(The)SH
10 /Courier AF
14455 XM
(labels)SH
11 /Times-Roman AF
18330 XM
(can be atoms or strings, and are shown at the left.)SH
ES
%%Page: 413 66
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.24)
SH( Property)
1800 W( Sheets)SH
51386 XM
(Page 413)SH
46800 50 8280 4486 UL
11 /Symbol AF
13849 8080 MT
(\267)SH
/Times-Roman SF
14630 XM
(The)SH
10 /Courier AF
16631 XM
(stringval)SH
11 /Times-Roman AF
22321 XM
(is the initial \050default\051 value displayed.  For an example of the use of)15 W
14630 9276 MT
(the various forms of)SH
10 /Courier AF
23794 XM
(stringval)SH
11 /Times-Roman AF
(, see section 3.24.9.  It can be:)SH
8 /Symbol AF
16737 10614 MT
(\267)SH
11 /Times-Roman AF
17380 10764 MT
(a string,)SH
8 /Symbol AF
16737 12508 MT
(\267)SH
11 /Times-Roman AF
17380 12658 MT
(a formula object which computes a string.  Note that all references)
226 W( in the)227 W
17380 13854 MT
(formula must be absolute \050since otherwise they would be)
320 W( relative to the)319 W
17380 15050 MT
(property sheet\051.)SH
8 /Symbol AF
16737 16794 MT
(\267)SH
11 /Times-Roman AF
17380 16944 MT
(an instance of)
154 W( a gadget \050e.g., a)155 W
10 /Courier AF
32083 XM
(radio-button-panel)SH
11 /Times-Roman AF
(\051, in which case that)155 W
17380 18140 MT
(instance is used instead of an editable text field.)
21 W( Note)
315 W( that the instance itself is)20 W
17380 19336 MT
(used, so it will be destroyed if the)194 W
10 /Courier AF
34055 XM
(prop-sheet)SH
11 /Times-Roman AF
40524 XM
(is destroyed.)
194 W( The)
665 W( gadget)195 W
17380 20532 MT
(instance should supply its value in a slot called)17 W
10 /Courier AF
38462 XM
(:value)SH
11 /Times-Roman AF
42354 XM
(\050as the standard garnet)17 W
17380 21728 MT
(gadgets do\051.)
317 W( NOTE:)
911 W( If a gadget, no filter functions are called \050use the)318 W
10 /Courier AF
17380 22924 MT
(:selection-function)SH
11 /Times-Roman AF
29322 XM
(of the gadget\051,)
267 W( the)266 W
10 /Courier AF
38665 XM
(realval)SH
11 /Times-Roman AF
43406 XM
(is ignored, and the)266 W
10 /Courier AF
17380 24120 MT
(:changed-values)SH
11 /Times-Roman AF
26736 XM
(slot is)
81 W( not valid.  Useful gadgets are described in section)82 W
17380 25316 MT
(3.24.8.)SH
/Symbol SF
13849 27210 MT
(\267)SH
/Times-Roman SF
14630 XM
(If the)103 W
10 /Courier AF
17461 XM
(filter)SH
11 /Times-Roman AF
21438 XM
(is non-NIL, it is a function called after the user types the value \050see)102 W
14630 28406 MT
(below\051.)SH
/Symbol SF
13849 30300 MT
(\267)SH
/Times-Roman SF
14630 XM
(The)SH
10 /Courier AF
16692 XM
(realval)SH
11 /Times-Roman AF
(, if supplied, is the actual value)
77 W( the)78 W
10 /Courier AF
37090 XM
(stringval)SH
11 /Times-Roman AF
42843 XM
(represents \050e.g. if the)78 W
14630 31496 MT
(real values are not strings\051.  If)63 W
10 /Courier AF
28509 XM
(stringval)SH
11 /Times-Roman AF
34247 XM
(is a list of)
63 W( strings, then)62 W
10 /Courier AF
44859 XM
(realval)SH
11 /Times-Roman AF
49396 XM
(should)SH
14630 32692 MT
(be a list of the same length.)SH
/Symbol SF
13849 34586 MT
(\267)SH
/Times-Roman SF
14630 XM
(If supplied, the)4 W
10 /Courier AF
21546 XM
(comment)SH
11 /Times-Roman AF
26026 XM
(is displayed after the label.  It can be any string, and will be)5 W
14630 35782 MT
(displayed after the slot label.  Typical uses would be to give)
234 W( legal values \050e.g.:)233 W
14630 36978 MT
("\0501..20\051"\051.)SH
10 /Courier AF
8280 38673 MT
(:default-filter)SH
11 /Times-Roman AF
17639 XM
(- If there is no)
84 W( filter on an individual item, then the global default-filter function is)85 W
11880 39869 MT
(called when the user finishes editing.  See below.  The default filter does nothing.)SH
10 /Courier AF
8280 41564 MT
(:v-spacing)SH
11 /Times-Roman AF
14555 XM
(- Vertical space between the items.  Default = 1)SH
10 /Courier AF
8280 43259 MT
(:pixel-margin)SH
11 /Times-Roman AF
16747 XM
(- Multiple-valued items are represented)
392 W( as an aggrelist, so this determines the)391 W
11880 44455 MT
(maximum pixel value of an item, before wrapping to the next line.  Note that this does)41 W
/Times-Italic SF
50856 XM
(not)SH
/Times-Roman SF
52578 XM
(affect)SH
11880 45651 MT
(single valued items.  Default: NIL)SH
10 /Courier AF
8280 47346 MT
(:rank-margin)SH
11 /Times-Roman AF
15755 XM
(- Same as)SH
10 /Courier AF
20306 XM
(:pixel-margin)SH
11 /Times-Roman AF
(, but is a count of the number of values.  Default: NIL)SH
10 /Courier AF
8280 49041 MT
(:multi-line-p)SH
11 /Times-Roman AF
16386 XM
(- Whether the user)
31 W( can enter multi-line strings, which means that)30 W
10 /Courier AF
45493 XM
(return)SH
11 /Times-Roman AF
49398 XM
(does not exit)30 W
11880 50237 MT
(a field, but makes a new line.  Default: NIL.)SH
10 /Courier AF
8280 51932 MT
(:select-label-p)SH
11 /Times-Roman AF
17771 XM
(- Whether pressing on)
216 W( the label \050with any mouse button\051 causes the item to be)217 W
11880 53128 MT
(selected. Default:)
275 W( NIL.)SH
10 /Courier AF
8280 54823 MT
(:label-select-event)SH
11 /Times-Roman AF
19978 XM
(- If you want to make)
23 W( the labels selectable, you can specify which mouse event)22 W
11880 56019 MT
(to use in the slot)SH
10 /Courier AF
19367 XM
(:label-select-event)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8280 57714 MT
(:label-selected-func)SH
11 /Times-Roman AF
20555 XM
(- Called with)SH
/Times-Italic SF
26574 XM
(\050gadget label-obj label\051)SH
/Times-Roman SF
37297 XM
(when a label is selected.)SH
10 /Courier AF
8280 59409 MT
(:select-value-p)SH
11 /Times-Roman AF
17796 XM
(- Whether pressing on the value \050with the right button\051 causes)
241 W( the value to be)242 W
11880 60605 MT
(selected. NOTE:)
275 W( Values which are specified as gadgets cannot be selected.  Default: NIL.)SH
10 /Courier AF
8280 62300 MT
(:value-selected-func)SH
11 /Times-Roman AF
20660 XM
(- Called when)
105 W( a value is selected with)104 W
/Times-Italic SF
38416 XM
(\050gadget value-obj value label\051)104 W
/Times-Roman SF
52394 XM
(where)SH
11880 63496 MT
(label is the label of that field.)SH
10 /Courier AF
8280 65191 MT
(:single-select-p)SH
11 /Times-Roman AF
18342 XM
(- Whether a single label or value can be selected \050T\051 or multiple fields)
187 W( can be)188 W
11880 66387 MT
(selected \050NIL\051.  This is only)
700 W( relevant if one or both of)699 W
10 /Courier AF
44190 XM
(:select-label-p)SH
11 /Times-Roman AF
54164 XM
(or)SH
10 /Courier AF
11880 67583 MT
(:select-value-p)SH
11 /Times-Roman AF
21155 XM
(is non-NIL.  Default: NIL.)SH
/Times-Bold SF
8280 69881 MT
(Read-only \050output\051 slots:)SH
10 /Courier AF
8280 71832 MT
(:label-selected)SH
11 /Times-Roman AF
18441 XM
(- Will be set with)
886 W( a list of the selected label objects.  Call)887 W
ES
%%Page: 414 67
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 414)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
9720 7955 MT
(Get-Val-For-PropSheet-Value)SH
11 /Times-Roman AF
26195 XM
(to get label name from the label object.)SH
10 /Courier AF
6120 9650 MT
(:value-selected)SH
11 /Times-Roman AF
16265 XM
(- Will be)
870 W( set with a list of the selected value objects.  Call)869 W
10 /Courier AF
9720 10846 MT
(Get-Val-For-PropSheet-value)SH
11 /Times-Roman AF
26195 XM
(on an obj to get the value and label from the value object.)SH
10 /Courier AF
6120 12541 MT
(:value)SH
11 /Times-Roman AF
9995 XM
(- List of all the slots and their \050filtered\051 values.  For example:)SH
8 /Courier AF
11640 13706 MT
(\050 \050label1 value1\051 \050label2 value2\051 ...\051)SH
11 /Times-Roman AF
9720 15127 MT
(.)SH
10 /Courier AF
6120 16822 MT
(:changed-values)SH
11 /Times-Roman AF
15395 XM
(- List of the slots that have changed, as:)SH
8 /Courier AF
11640 17987 MT
(\050 \050label1 value1\051 \050label2 value2\051 \051)SH
11 /Times-Roman AF
9720 19408 MT
(This slot is not kept valid if a gadget is used as an item.)SH
/Times-Bold SF
6120 21706 MT
(Filter functions:)SH
/Times-Roman SF
6120 24004 MT
(The filter functions allow the program to convert the string values to the appropriate form.)
18 W( The)
312 W( displayed)19 W
6120 25200 MT
(string and the "real" value are stored separately, so they can be different.  Filter functions are defined as:)SH
8 /Courier AF
8040 26365 MT
(\050lambda \050prop-sheet-gadget label value-obj new-str old-str\051\051)SH
11 /Times-Roman AF
6120 28663 MT
(The)SH
/Times-Italic SF
8139 XM
(index)SH
/Times-Roman SF
10830 XM
(is used for multi-valued slots, and otherwise is zero.  The)34 W
/Times-Italic SF
36651 XM
(value-obj)SH
/Times-Roman SF
41114 XM
(is the actual)
34 W( object used to)33 W
6120 29859 MT
(display the string, and will be needed only by hackers.  The filter function can return)
127 W( the value to use)128 W
6120 31055 MT
(\050modified)SH
/Times-Italic SF
10733 XM
(new-str)SH
/Times-Roman SF
(, not necessarily a string\051 or it can return three values:)SH
8 /Courier AF
8040 32220 MT
(\050new-val in-valid-p new-str\051)SH
11 /Times-Roman AF
6120 33641 MT
(where)SH
/Times-Italic SF
9185 XM
(new-val)SH
/Times-Roman SF
13045 XM
(is a value \050not necessarily a string\051 to use,)103 W
/Times-Italic SF
32666 XM
(in-valid-p)SH
/Times-Roman SF
37382 XM
(is T if the new-str value is invalid)103 W
6120 34837 MT
(\050bad\051, in which case the)113 W
/Times-Italic SF
17435 XM
(new-str)SH
/Times-Roman SF
21123 XM
(is still used, but it)
113 W( is shown in italic.  If)114 W
/Times-Italic SF
39762 XM
(new-str)SH
/Times-Roman SF
43451 XM
(is returned, then it is)114 W
6120 36033 MT
(displayed instead of what the user typed \050for example if the filter function expands or corrects)
67 W( the typed)66 W
6120 37229 MT
(value\051.)SH
6120 39527 MT
(An example of a custom filter function is shown in section 3.24.9.)SH
ES
%%Page: 415 68
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.24)
SH( Property)
1800 W( Sheets)SH
51386 XM
(Page 415)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.24.3. Prop-Sheet-For-Obj)SH
11 /Times-Roman AF
8280 9200 MT
(When you want to display a property sheet for a Garnet object, you can use)3 W
10 /Courier AF
41739 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
(. The)281 W
8280 10396 MT
(prop-sheet can directly)
213 W( access the)212 W
10 /Courier AF
24397 XM
(:parameters)SH
11 /Times-Roman AF
31484 XM
(list of a Garnet object, which is a list of the slots)212 W
8280 11592 MT
(normally customizable for the object.  You can also display and modify slots)
301 W( of)302 W
/Times-Italic SF
47781 XM
(multiple)SH
/Times-Roman SF
51964 XM
(objects)SH
8280 12788 MT
(simultaneously. Gilt)
275 W( makes heavy use of many features in this prop-sheet.)SH
8 /Courier AF
10200 13953 MT
(\050create-instance 'gg:Prop-Sheet-For-Obj gg:prop-sheet)SH
12120 14818 MT
(\050:maybe-constant '\050:left :top :obj :slots :eval-p :set-immediately-p)SH
21240 15683 MT
(:v-spacing :multi-line-p :select-label-p)SH
21240 16548 MT
(:label-selected-func :label-select-event :visible)SH
21240 17413 MT
(:select-value-p :value-selected-func :single-select-p)SH
21240 18278 MT
(:type-gadgets :union? :error-gadget\051\051)SH
12120 19143 MT
(\050:left 5\051)SH
12120 20008 MT
(\050:top 5\051)SH
12120 20873 MT
(\050:obj NIL\051)
SH( ;)960 W
/Times-Italic SF
19040 XM
(a single obj or a list of objects)SH
/Courier SF
12120 21738 MT
(\050:slots NIL\051 ;)SH
/Times-Italic SF
19040 XM
(list of slots to show. If NIL, get from :parameters)SH
/Courier SF
12120 22603 MT
(\050:union? T\051  ;)SH
/Times-Italic SF
(if slots is NIL and multiple objects, use union or intersection of :parameters?)SH
/Courier SF
12120 24333 MT
(\050:eval-p T\051)SH
/Times-Italic SF
18360 XM
(; if T, then evaluates what the user types.  Use T for)SH
18360 25198 MT
(; graphical objects.  If NIL, then all the values will be strings.)SH
/Courier SF
12120 26063 MT
(\050:set-immediately-p T\051)SH
/Times-Italic SF
23160 XM
(; if T then sets slots when user hits)SH
10 /Courier AF
34378 XM
(return)SH
8 /Times-Italic AF
(, else doesn't)SH
23160 26928 MT
(; ever set the slot.)SH
/Courier SF
12120 27793 MT
(\050:type-gadgets NIL\051 ;)SH
/Times-Italic SF
22400 XM
(descriptor of special handling for types)SH
/Courier SF
12120 28658 MT
(\050:error-gadget NIL\051 ;)SH
/Times-Italic SF
22400 XM
(an error gadget to use to report errors.)SH
/Courier SF
12120 30388 MT
(;;)SH
/Times-Italic SF
13560 XM
(plus the rest of the slots also provided by prop-sheet)SH
/Courier SF
12120 32118 MT
(\050:v-spacing 1\051)SH
12120 32983 MT
(\050:pixel-margin NIL\051)SH
12120 33848 MT
(\050:rank-margin NIL\051)SH
12120 34713 MT
(\050:multi-line-p NIL\051)SH
/Times-Italic SF
23160 XM
(; T if multi-line strings are allowed)SH
/Courier SF
12120 35578 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
23160 XM
(; T if want to be able to select the labels)SH
/Courier SF
12120 36443 MT
(\050:label-select-event :any-mousedown\051)SH
12120 37308 MT
(\050:label-selected-func NIL\051)SH
12120 38173 MT
(\050:select-value-p NIL\051)SH
/Times-Italic SF
23160 XM
(; if want to be able to select the values)SH
/Courier SF
12120 39038 MT
(\050:value-selected-func NIL\051)SH
12120 39903 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
23160 XM
(; to select more than one value or label)SH
11640 41633 MT
(; Read-only slots)SH
/Courier SF
12120 42498 MT
(\050:label-selected NIL\051)SH
/Times-Italic SF
23160 XM
(; set with the selected label objects \050or a list)SH
/Courier SF
(\051)SH
12120 43363 MT
(\050:value-selected NIL\051)SH
/Times-Italic SF
23160 XM
(; set with the selected value objects \050or a list)SH
/Courier SF
(\051)SH
12120 44228 MT
(\050:value ...\051)SH
/Times-Italic SF
18840 XM
(; list of pairs of all the slots and their \050filtered\051 values)SH
/Courier SF
12120 45093 MT
(\050:changed-values NIL\051\051)SH
/Times-Italic SF
23160 XM
(; only the values that have changed)SH
46800 50 8280 47244 UL
11 SS 
75 100 0 8730 81641 GB 
%%BeginDocument: gadgets/propforobj.PS
%!PS-Adobe-2.0
%%Title: Opal 16
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 2:59 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 185 343 427 448
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
113 -272 translate
gsave
0 648 242 105 ClipToRectangle
0 0 translate
gsave
151 637 48 38 0 0 0 0 false 0 0 [] 2 0.50 0 0 0 false DrawRectangle
5 573 562 95 14 0 false 0 0 0 false 0 0 0 false (FILLING-STYLE:) 12 /Courier DrawText
109 573 562 96 14 0 false 0 0 0 false 0 0 0 false (OPAL:GRAY-FILL) 12 /Courier DrawText
5 587 576 74 14 0 false 0 0 0 false 0 0 0 false (LINE-STYLE:) 12 /Courier DrawText
88 587 576 75 14 0 false 0 0 0 false 0 0 0 false (OPAL:LINE-2) 12 /Courier DrawText
5 601 590 46 14 0 false 0 0 0 false 0 0 0 false (HEIGHT:) 12 /Courier DrawText
60 601 590 13 14 0 false 0 0 0 false 0 0 0 false (40) 12 /Courier DrawText
5 615 604 39 14 0 false 0 0 0 false 0 0 0 false (WIDTH:) 12 /Courier DrawText
53 615 604 13 14 0 false 0 0 0 false 0 0 0 false (50) 12 /Courier DrawText
5 629 618 25 14 0 false 0 0 0 false 0 0 0 false (TOP:) 12 /Courier DrawText
39 629 618 12 14 0 false 0 0 0 false 0 0 0 false (10) 12 /Courier DrawText
5 643 632 32 14 0 false 0 0 0 false 0 0 0 false (LEFT:) 12 /Courier DrawText
46 643 632 19 14 0 false 0 0 0 false 0 0 0 false (150) 12 /Courier DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 185 343 427 448

%%EndDocument
 GE /Times-Bold SF
8280 57668 MT
(Figure 3-10:)SH
/Times-Roman SF
14603 XM
(Example of a property sheet for an object \050the object is shown at the upper left\051.)SH
46800 50 8280 59620 UL
8280 61371 MT
(The loader for)SH
10 /Courier AF
14845 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
25920 XM
(is "prop-sheet-loader".)SH
/Times-Bold SF
8280 63669 MT
(Customizable slots:)SH
10 /Courier AF
8280 65620 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11830 XM
(:top)SH
11 /Times-Roman AF
14505 XM
(- Position of the gadget.  Default: 0,0)SH
10 /Courier AF
8280 67315 MT
(:obj)SH
11 /Times-Roman AF
11096 XM
(- The KR object or list of objects to be displayed.  If this)
141 W( slot contains a list of objects, then if)140 W
11880 68511 MT
(multiple objects share a slot which is displayed, then the value)
54 W( from the first object is shown.  If)55 W
11880 69707 MT
(the values from multiple objects differ, then the slot value is shown)
15 W( in italics.  If the user edits the)14 W
11880 70903 MT
(value, then it is set into each object which has that slot in its)SH
10 /Courier AF
38553 XM
(:parameters)SH
11 /Times-Roman AF
45428 XM
(list.)SH
ES
%%Page: 416 69
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 416)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(:error-gadget)SH
11 /Times-Roman AF
14198 XM
(- An error-gadget may be placed in)
3 W( this slot.  Type checking is performed before setting)4 W
9720 9151 MT
(a slot, and any errors are reported in this error gadget.)
67 W( If)
408 W( there is no error gadget, then the error)66 W
9720 10347 MT
(message is simply not displayed, but a beep is sounded and the slot value is shown in italics.)SH
10 /Courier AF
6120 12042 MT
(:slots)SH
11 /Times-Roman AF
10004 XM
(- The list of slots of the object to view.  Default)
9 W( value is NIL, which means the prop-sheet should)10 W
9720 13238 MT
(get the list of slots from the)34 W
10 /Courier AF
22333 XM
(:parameters)SH
11 /Times-Roman AF
29241 XM
(slot of the object being edited \050see)33 W
10 /Courier AF
44837 XM
(:union?)SH
11 /Times-Roman AF
(\051. When)341 W
9720 14434 MT
(relying on)43 W
10 /Courier AF
14572 XM
(:parameters)SH
11 /Times-Roman AF
(, the)
43 W( property sheet will use the)44 W
10 /Courier AF
35531 XM
(Horiz-Choice-List)SH
11 /Times-Roman AF
46050 XM
(gadget for slots)44 W
9720 15630 MT
(of type)159 W
10 /Courier AF
13398 XM
(KR-boolean)SH
11 /Times-Roman AF
19832 XM
(and)SH
10 /Courier AF
21854 XM
(\050Member ...\051)159 W
11 /Times-Roman AF
29647 XM
(where the number of options is)
159 W( 5 or less \050see also)158 W
10 /Courier AF
9720 16826 MT
(:type-gadgets)SH
11 /Times-Roman AF
(\051. If)
1477 W( the type of a slot has a documentation string, gotten using)601 W
10 /Courier AF
9720 18022 MT
(kr:get-type-documentation)SH
11 /Times-Roman AF
(, then this is displayed as the slot comment field.)SH
9720 19717 MT
(Alternatively, any element in the list can be a slot name or a sublist:  \050)SH
/Times-Italic SF
(slot)SH
/Times-Roman SF
42379 XM
(")SH
/Times-Italic SF
(comment)SH
/Times-Roman SF
(")SH
/Times-Italic SF
47522 XM
(display)SH
/Times-Roman SF
(\051:)SH
/Symbol SF
11689 21295 MT
(\267)SH
/Times-Roman SF
12470 XM
(If the)SH
/Times-Italic SF
15096 XM
(comment)SH
/Times-Roman SF
19341 XM
(is non-NIL, it is displayed after the label.)SH
/Symbol SF
11689 23189 MT
(\267)SH
/Times-Roman SF
12470 XM
(If the)SH
10 /Courier AF
15096 XM
(display)SH
11 /Times-Roman AF
19571 XM
(parameter is supplied, it can either be:)SH
8 /Symbol AF
14577 24527 MT
(\267)SH
11 /Times-Roman AF
15220 24677 MT
(A list of legal values)
284 W( for the slot, e.g.)283 W
10 /Courier AF
34887 XM
('\050:direction \050:horizontal)283 W
15220 25873 MT
(:vertical\051\051)SH
8 /Symbol AF
14577 27617 MT
(\267)SH
11 /Times-Roman AF
15220 27767 MT
(A function of the form)34 W
10 /Courier AF
25623 XM
(\050lambda \050new-val\051\051)34 W
11 /Times-Roman AF
36766 XM
(which returns T)
34 W( if the value is)35 W
15220 28963 MT
(bad. This)
499 W( function might pop up an)
112 W( error dialog box after testing but before)111 W
15220 30159 MT
(returning. The)
275 W( slot keeps its illegal value, but it is shown in italics.)SH
8 /Symbol AF
14577 31903 MT
(\267)SH
11 /Times-Roman AF
15220 32053 MT
(A gadget, in which case the)4 W
10 /Courier AF
27675 XM
(:value)SH
11 /Times-Roman AF
31554 XM
(slot of the gadget is set)
4 W( with the old value,)5 W
15220 33249 MT
(and the)35 W
10 /Courier AF
18772 XM
(:value)SH
11 /Times-Roman AF
22682 XM
(slot is queried to get the final value.  If gadgets are used, then)35 W
10 /Courier AF
15220 34445 MT
(:set-immediately-p)SH
11 /Times-Roman AF
26296 XM
(for the)
1 W( property sheet should be NIL.  A useful gadget)2 W
15220 35641 MT
(is)SH
10 /Courier AF
16229 XM
(Pop-Up-From-Icon)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 37336 MT
(:union?)SH
11 /Times-Roman AF
10644 XM
(- This affects which slots are shown for objects when their)49 W
10 /Courier AF
37176 XM
(:parameters)SH
11 /Times-Roman AF
44100 XM
(lists are being used.)48 W
9720 38532 MT
(If there are multiple objects, then a value of T for this slot will display the slots that)
32 W( are in)33 W
/Times-Italic SF
50108 XM
(any)SH
/Times-Roman SF
52004 XM
(of)SH
9720 39728 MT
(the objects.)
227 W( If)
728 W( the value of this slot is NIL, then only those slots that appear in)226 W
/Times-Italic SF
48496 XM
(all)SH
/Times-Roman SF
50159 XM
(of the)226 W
10 /Courier AF
9720 40924 MT
(:parameters)SH
11 /Times-Roman AF
16636 XM
(lists \050the intersection of the lists\051 will be displayed.  The default is)
41 W( T, to show the)42 W
9720 42120 MT
(union of all)SH
10 /Courier AF
15067 XM
(:parameters)SH
11 /Times-Roman AF
21942 XM
(lists.)SH
10 /Courier AF
6120 43815 MT
(:eval-p)SH
11 /Times-Roman AF
10639 XM
(- If NIL, then the values set into the slots will be all strings.  If T,)
44 W( then evaluates what the user)43 W
9720 45011 MT
(types \050using)148 W
10 /Courier AF
15638 XM
(Read-From-String)SH
11 /Times-Roman AF
(\051 and sets the result into the slot.  Usually, you)
148 W( use T when)149 W
9720 46207 MT
(displaying the graphical fields of graphical objects.  Default=T.)
118 W( NOTE:)
509 W( Evaluating a slot may)117 W
9720 47403 MT
(cause the interface to crash if the values are not valid.)SH
10 /Courier AF
6120 49098 MT
(:set-immediately-p)SH
11 /Times-Roman AF
17275 XM
(- If T, then as soon as the user types CR, the object's slot is set.  If)
80 W( NIL, some)81 W
9720 50294 MT
(external action must set the)
115 W( object's slots \050e.g., when using)114 W
10 /Courier AF
37045 XM
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
(,)SH
9720 51490 MT
(the object's slots are not set until the OK button is hit\051.  Default=T.)SH
10 /Courier AF
6120 53185 MT
(:type-gadgets)SH
11 /Times-Roman AF
14251 XM
(- This slot is used to modify the default displays for slots from the)56 W
10 /Courier AF
44367 XM
(:parameters)SH
11 /Times-Roman AF
51299 XM
(list.)SH
10 /Courier AF
9720 54381 MT
(:Type-gadgets)SH
11 /Times-Roman AF
17795 XM
(contains a list which can contain the following entries:)SH
/Symbol SF
11689 55959 MT
(\267)SH
/Times-Roman SF
12470 XM
(a slot name - this means never display this)
41 W( slot \050omit the slot even though it is in the)40 W
10 /Courier AF
12470 57155 MT
(:parameters)SH
11 /Times-Roman AF
19345 XM
(list\051.)SH
/Symbol SF
11689 59049 MT
(\267)SH
/Times-Roman SF
12470 XM
(a list of)27 W
10 /Courier AF
16126 XM
(\050typ gadget\051)27 W
11 /Times-Roman AF
23656 XM
(- this means whenever a slot of type)28 W
10 /Courier AF
40008 XM
(typ)SH
11 /Times-Roman AF
42111 XM
(is displayed in the)28 W
12470 60245 MT
(prop-sheet, use)
243 W( the specified gadget.  For example, Gilt uses this mechanism to)242 W
12470 61441 MT
(display a)SH
10 /Courier AF
16686 XM
(Pop-Up-From-Icon)SH
11 /Times-Roman AF
26561 XM
(for all slots which contain a font:)SH
8 /Courier AF
14390 62606 MT
(\050list \050g-type opal:text :font\051)SH
17270 63471 MT
(\050create-instance NIL gg:Pop-Up-From-Icon)SH
18230 64336 MT
(\050:constant :icon-image :pop-up-function\051)SH
18230 65201 MT
(\050:creator-function 'Show-Font-Dialog\051)SH
18230 66066 MT
(\050:pop-up-function 'Pop-Up-Prop-Dialog\051\051\051)SH
11 /Symbol AF
11689 67960 MT
(\267)SH
/Times-Roman SF
12470 XM
(a list of)226 W
10 /Courier AF
16723 XM
(\050typ othertyp\051)226 W
11 /Times-Roman AF
25850 XM
(- this means whenever)
226 W( a slot of type)227 W
10 /Courier AF
43791 XM
(typ)SH
11 /Times-Roman AF
46093 XM
(is found,)227 W
12470 69156 MT
(pretend instead that it has type)31 W
10 /Courier AF
26342 XM
(othertyp)SH
11 /Times-Roman AF
(. This)
335 W( is useful, for example, to map types)30 W
12470 70352 MT
(that are complicated to ones that will generate a)SH
10 /Courier AF
33759 XM
(member)SH
11 /Times-Roman AF
37634 XM
(gadget.)SH
ES
%%Page: 417 70
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.24)
SH( Property)
1800 W( Sheets)SH
51386 XM
(Page 417)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The slots)374 W
10 /Courier AF
13306 XM
(:v-spacing)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20230 XM
(:pixel-margin)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
28955 XM
(:rank-margin)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37080 XM
(:multi-line-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
45805 XM
(:select-label-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 9151 MT
(:label-select-event)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20389 XM
(:label-selected-func)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33097 XM
(:select-value-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
42805 XM
(:value-selected-func)SH
11 /Times-Roman AF
(,)SH
8280 10347 MT
(and)SH
10 /Courier AF
10143 XM
(:single-select-p)SH
11 /Times-Roman AF
20018 XM
(are the same as for the)SH
10 /Courier AF
30156 XM
(prop-sheet)SH
11 /Times-Roman AF
36431 XM
(gadget.)SH
/Times-Bold SF
8280 12645 MT
(Read-only \050output\051 slots \050same as)SH
10 /Courier AF
24137 XM
(Prop-Sheet)SH
11 /Times-Bold AF
(\051)SH
10 /Courier AF
8280 14465 MT
(:label-selected)SH
8280 16160 MT
(:value-selected)SH
8280 17855 MT
(:value)SH
8280 19550 MT
(:changed-values)SH
12 /Times-Bold AF
8280 23234 MT
(3.24.4. Useful Functions)SH
8 /Courier AF
10200 24447 MT
(gg:ReUsePropSheet)SH
/Times-Italic SF
18840 XM
(prop-sheet-gadget new-items)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
8280 25868 MT
(ReUsePropSheet)SH
11 /Times-Roman AF
17011 XM
(allows you to re-use)
56 W( an old)57 W
10 /Courier AF
29508 XM
(prop-sheet)SH
11 /Times-Roman AF
35840 XM
(or a)57 W
10 /Courier AF
37908 XM
(prop-sheet-with-OK)SH
11 /Times-Roman AF
49040 XM
(gadget with a)57 W
8280 27064 MT
(new set of values, which is much more efficient than destroying and creating)
238 W( a new)237 W
10 /Courier AF
48805 XM
(prop-sheet)SH
11 /Times-Roman AF
(.)SH
8280 28260 MT
(NOTE: it is NOT sufficient to simply)25 W
10 /Courier AF
25230 XM
(s-value)SH
11 /Times-Roman AF
29730 XM
(the)SH
10 /Courier AF
31374 XM
(:items)SH
11 /Times-Roman AF
35274 XM
(slot. If)
325 W( you plan to reuse property sheets, do)25 W
8280 29456 MT
(not declare the)SH
10 /Courier AF
15029 XM
(:items)SH
11 /Times-Roman AF
18904 XM
(slot constant.)SH
8 /Courier AF
10200 30669 MT
(gg:ReUsePropSheetObj)SH
/Times-Italic SF
20280 XM
(prop-sheet-for-obj)SH
/Courier SF
26667 XM
(&optional)SH
/Times-Italic SF
31467 XM
(obj slots)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
8280 32090 MT
(ReUsePropSheetObj)SH
11 /Times-Roman AF
18786 XM
(allows a)30 W
10 /Courier AF
22756 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
33861 XM
(or)SH
10 /Courier AF
35082 XM
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
50987 XM
(gadget to)30 W
8280 33286 MT
(be re-used.  If the new)80 W
/Times-Italic SF
18867 XM
(obj)SH
/Times-Roman SF
20628 XM
(and)SH
/Times-Italic SF
22571 XM
(slots)SH
/Times-Roman SF
24944 XM
(are)SH
/Times-Italic SF
26641 XM
(not)SH
/Times-Roman SF
28402 XM
(supplied, then they should be set into the object before)
80 W( this)81 W
8280 34482 MT
(function is called.  NOTE: it is NOT sufficient to simply)SH
10 /Courier AF
33456 XM
(s-value)SH
11 /Times-Roman AF
37931 XM
(the)SH
10 /Courier AF
39550 XM
(:obj)SH
11 /Times-Roman AF
42225 XM
(and)SH
10 /Courier AF
44088 XM
(:slots)SH
11 /Times-Roman AF
47963 XM
(slot.)SH
8 /Courier AF
10200 35695 MT
(gg:Get-Val-For-Propsheet-Value \050label-or-value-obj\051)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 37116 MT
(The)SH
10 /Courier AF
10433 XM
(Get-Val-For-PropSheet-Value)SH
11 /Times-Roman AF
27076 XM
(function returns the label when a label is)
168 W( passed in, or for a)167 W
8280 38312 MT
(value-obj, returns multiple)
148 W( values:)149 W
10 /Courier AF
24665 XM
(value label)149 W
11 /Times-Roman AF
(, where)149 W
/Times-Italic SF
35223 XM
(label)SH
/Times-Roman SF
37847 XM
(is the label \050name, not object\051 of that)149 W
8280 39508 MT
(field.)SH
8280 41806 MT
(If you want to change the value of a property sheet item)
67 W( without regenerating a new property sheet, you)66 W
8280 43002 MT
(can use the new function)SH
10 /Courier AF
19489 XM
(Set-Val-For-PropSheet-Value)SH
11 /Times-Roman AF
(. This)
275 W( takes the form:)SH
8 /Courier AF
10200 44215 MT
(gg:Set-Val-For-PropSheet-Value)SH
/Times-Italic SF
25080 XM
(label-or-value-obj new-value)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 45636 MT
(The)SH
/Times-Italic SF
10265 XM
(label-or-value-obj)SH
/Times-Roman SF
18604 XM
(parameter is the object used by the property-sheet to represent the field.)SH
ES
%%Page: 418 71
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 418)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.24.5. Prop-Sheet-With-OK)SH
11 /Times-Roman AF
6120 9200 MT
(The next set of gadgets combine property sheets with OK, Apply and)
149 W( Cancel buttons.  There are two)150 W
6120 10396 MT
(pairs: one for Garnet look-and-feel)
32 W( gadgets, and one for Motif look-and-feel gadgets \050see section 4.16 for)31 W
6120 11592 MT
(the Motif version\051.)SH
8 /Courier AF
8040 12757 MT
(\050create-instance 'gg:Prop-Sheet-With-OK opal:aggregadget)SH
9960 13622 MT
(\050:maybe-constant '\050:left :top :items :default-filter :ok-function)SH
19080 14487 MT
(:apply-function :Cancel-Function :v-spacing)SH
19080 15352 MT
(:multi-line-p :select-label-p  :visible)SH
19080 16217 MT
(:label-selected-func :label-select-event)SH
19080 17082 MT
(:select-value-p :value-selected-func :single-select-p\051\051)SH
/Times-Italic SF
9480 17947 MT
(; Customizable slots)SH
/Courier SF
9960 18812 MT
(\050:left 0\051 \050:top 0\051)SH
9960 19677 MT
(\050:items NIL\051)SH
9960 20542 MT
(\050:default-filter 'default-filter\051)SH
9960 21407 MT
(\050:OK-Function NIL\051)SH
9960 22272 MT
(\050:Apply-Function NIL\051)SH
9960 23137 MT
(\050:Cancel-Function NIL\051)SH
9960 24002 MT
(\050:v-spacing 1\051)SH
9960 24867 MT
(\050:pixel-margin NIL\051)SH
9960 25732 MT
(\050:rank-margin NIL\051)SH
9960 26597 MT
(\050:multi-line-p NIL\051)SH
/Times-Italic SF
19560 XM
(; T if multi-line strings are allowed)SH
/Courier SF
9960 27462 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
20520 XM
(; T if want to be able to select the entries)SH
/Courier SF
9960 28327 MT
(\050:label-select-event :any-mousedown\051)SH
9960 29192 MT
(\050:label-selected-func NIL\051)SH
9960 30057 MT
(\050:select-value-p NIL\051)SH
9960 30922 MT
(\050:value-selected-func NIL\051)SH
9960 31787 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
9480 33517 MT
(; Read-only slots)SH
/Courier SF
9960 34382 MT
(\050:label-selected ...\051)SH
9960 35247 MT
(\050:value-selected ...\051)SH
9960 36112 MT
(\050:value ...\051)SH
9960 36977 MT
(\050:changed-values ...\051\051)SH
11 /Times-Roman AF
6120 38398 MT
(The)SH
10 /Courier AF
8274 XM
(prop-sheet-with-OK)SH
11 /Times-Roman AF
19518 XM
(gadget is just the)169 W
10 /Courier AF
27894 XM
(prop-sheet)SH
11 /Times-Roman AF
34338 XM
(gadget with Garnet text)
169 W( buttons for OK,)170 W
6120 39594 MT
(Apply, and Cancel.)SH
6120 41892 MT
(The loader for)SH
10 /Courier AF
12685 XM
(prop-sheet-with-OK)SH
11 /Times-Roman AF
23760 XM
(is "prop-sheet-win-loader".)SH
/Times-Bold SF
6120 44190 MT
(Customizable slots)SH
10 /Courier AF
6120 46141 MT
(:OK-Function)SH
11 /Times-Roman AF
13595 XM
(- Function called when the OK button is hit.  Defined as:)SH
8 /Courier AF
11640 47306 MT
(\050lambda \050Prop-Sheet-With-OK-gadget\051)SH
11 /Times-Roman AF
9720 48727 MT
(Typically, this would do something with the values gotten from)SH
8 /Courier AF
11640 49892 MT
(\050gv Prop-Sheet-With-OK-gadget :values\051  or)SH
11640 51057 MT
(\050gv Prop-Sheet-With-OK-gadget :changed-values\051.)SH
11 /Times-Roman AF
9720 52478 MT
(If you)
88 W( use the)87 W
10 /Courier AF
16361 XM
(Pop-Up-Win-For-Prop)SH
11 /Times-Roman AF
28123 XM
(functions, then the window will be removed before the)87 W
10 /Courier AF
9720 53674 MT
(OK-function)SH
11 /Times-Roman AF
16595 XM
(is called, so you do not have to worry about the window.)SH
10 /Courier AF
6120 55369 MT
(:Apply-Function)SH
11 /Times-Roman AF
15395 XM
(- Function called when the Apply button is hit.  Defined as:)SH
8 /Courier AF
11640 56534 MT
(\050lambda \050Prop-Sheet-With-OK-gadget\051)SH
11 /Times-Roman AF
9720 57955 MT
(Typically, this would do something with the values gotten from)SH
8 /Courier AF
11640 59120 MT
(\050gv Prop-Sheet-With-OK-gadget :values\051  or)SH
11640 60285 MT
(\050gv Prop-Sheet-With-OK-gadget :changed-values\051.)SH
10 SS 
6120 61980 MT
(:Cancel-Function)SH
11 /Times-Roman AF
15995 XM
(- Function called when Cancel button is hit.  Defined as:)SH
8 /Courier AF
11640 63145 MT
(\050lambda \050Prop-Sheet-With-OK-gadget\051\051)SH
11 /Times-Roman AF
9720 64566 MT
(Programmers typically would not use)
139 W( this.  If you use the)140 W
10 /Courier AF
36736 XM
(Pop-Up-Win-For-Prop)SH
11 /Times-Roman AF
48551 XM
(functions,)SH
9720 65762 MT
(then the window will be removed before the)36 W
10 /Courier AF
29739 XM
(Cancel-function)SH
11 /Times-Roman AF
39049 XM
(is called, so you do not have to)35 W
9720 66958 MT
(worry about the window.)SH
6120 69256 MT
(The rest of the slots are the same as for)SH
10 /Courier AF
23590 XM
(prop-sheet)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 419 72
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.24)
SH( Property)
1800 W( Sheets)SH
51386 XM
(Page 419)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.24.6. Prop-Sheet-For-Obj-With-OK)SH
8 /Courier AF
10200 9169 MT
(\050create-instance 'gg:Prop-Sheet-For-Obj-With-OK prop-sheet-with-OK)SH
12120 10034 MT
(\050:maybe-constant '\050:left :top :obj :slots :eval-p :ok-function)SH
21240 10899 MT
(:apply-function :Cancel-Function :v-spacing)SH
21240 11764 MT
(:multi-line-p :select-label-p :visible)SH
21240 12629 MT
(:label-selected-func :label-select-event)SH
21240 13494 MT
(:select-value-p :value-selected-func :single-select-p\051\051)SH
/Times-Italic SF
11640 14359 MT
(; Customizable slots)SH
/Courier SF
12120 15224 MT
(\050:OK-Function NIL\051)SH
12120 16089 MT
(\050:Apply-Function NIL\051)SH
12120 16954 MT
(\050:Cancel-Function NIL\051)SH
12120 17819 MT
(\050:left 0\051 \050:top 0\051)SH
12120 18684 MT
(\050:obj NIL\051)SH
/Times-Italic SF
18360 XM
(; a single obj or a list of objects)SH
/Courier SF
12120 19549 MT
(\050:slots NIL\051)SH
/Times-Italic SF
18360 XM
(; list of slots to show. If NIL, get from :parameters)SH
/Courier SF
12120 20414 MT
(\050:eval-p T\051)SH
/Times-Italic SF
18360 XM
(; if T, then evaluates what the user types.  Use T for)SH
18360 21279 MT
(; graphical objects.  If NIL, then all the values will be strings.)SH
/Courier SF
12120 22144 MT
(\050:set-immediately-p T\051)SH
/Times-Italic SF
23160 XM
(; if T then sets slots when user hits)SH
10 /Courier AF
34378 XM
(return)SH
8 /Times-Italic AF
(, else doesn't)SH
23160 23009 MT
(; ever set the slot.)SH
/Courier SF
12120 23874 MT
(\050:type-gadgets NIL\051)SH
/Times-Italic SF
21720 XM
(; descriptor of special handling for types)SH
/Courier SF
12120 24739 MT
(\050:error-gadget NIL\051)SH
/Times-Italic SF
21720 XM
(; an error gadget to use to report errors.)SH
/Courier SF
12120 26469 MT
(;;)SH
/Times-Italic SF
13560 XM
(plus the rest of the slots also provided by prop-sheet)SH
/Courier SF
12120 28199 MT
(\050:v-spacing 1\051)SH
12120 29064 MT
(\050:pixel-margin NIL\051)SH
12120 29929 MT
(\050:rank-margin NIL\051)SH
12120 30794 MT
(\050:multi-line-p NIL\051)SH
/Times-Italic SF
22680 XM
(; T if multi-line strings are allowed)SH
/Courier SF
12120 31659 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
22680 XM
(; T if want to be able to select the labels)SH
/Courier SF
12120 32524 MT
(\050:label-select-event :any-mousedown\051)SH
12120 33389 MT
(\050:label-selected-func NIL\051)SH
12120 34254 MT
(\050:select-value-p NIL\051)SH
/Times-Italic SF
22680 XM
(; if want to be able to select the values)SH
/Courier SF
12120 35119 MT
(\050:value-selected-func NIL\051)SH
12120 35984 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
23160 XM
(; to select more than one value or label)SH
11640 37714 MT
(; Read-only slots)SH
/Courier SF
12120 38579 MT
(\050:label-selected NIL\051)SH
/Times-Italic SF
22680 XM
(; set with the selected label objects \050or a list)SH
/Courier SF
(\051)SH
12120 39444 MT
(\050:value-selected NIL\051)SH
/Times-Italic SF
22680 XM
(; set with the selected value objects \050or a list)SH
/Courier SF
(\051)SH
12120 40309 MT
(\050:value ...\051)SH
/Times-Italic SF
18840 XM
(; list of pairs of all the slots and their \050filtered\051 values)SH
/Courier SF
12120 41174 MT
(\050:changed-values NIL\051\051)SH
/Times-Italic SF
23160 XM
(; only the values that have changed)SH
11 /Times-Roman AF
8280 43460 MT
(The)SH
10 /Courier AF
10457 XM
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
26524 XM
(gadget is just the)193 W
10 /Courier AF
34996 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
46264 XM
(gadget with Garnet)193 W
8280 44656 MT
(text buttons for OK, Apply, and Cancel.)SH
8280 46954 MT
(The loader for)SH
10 /Courier AF
14845 XM
(prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
30720 XM
(is "prop-sheet-win-loader".)SH
8280 49252 MT
(Given a list of slots)
104 W( for a KR object, displays the values and allows them to be edited.  The labels and)103 W
8280 50448 MT
(values can optionally be selectable.  Sets)
325 W( the object's slot only when OK or Apply is hit.  \050So)326 W
10 /Courier AF
8280 51644 MT
(:set-immediately-p)SH
11 /Times-Roman AF
19355 XM
(is always NIL\051.)SH
/Times-Bold SF
8280 53942 MT
(Customizable slots)SH
10 /Courier AF
8280 55893 MT
(:OK-Function)SH
11 /Times-Roman AF
15755 XM
(- Function called when the OK button is hit.  Defined as:)SH
8 /Courier AF
13800 57058 MT
(\050lambda \050Prop-Sheet-For-Obj-With-OK-gadget\051\051)SH
11 /Times-Roman AF
11880 58479 MT
(Since this gadget will set the slots of the object automatically when OK is hit)
2 W( \050before this function)1 W
11880 59675 MT
(is called\051 and the window visibility)
56 W( is handled automatically, programmers rarely need to supply)57 W
11880 60871 MT
(a function here.)SH
10 /Courier AF
8280 62566 MT
(:Apply-Function)SH
11 /Times-Roman AF
17555 XM
(- Function called when the Apply button is hit.  Defined as:)SH
8 /Courier AF
13800 63731 MT
(\050lambda \050Prop-Sheet-For-Obj-With-OK-gadget\051\051)SH
11 /Times-Roman AF
11880 65152 MT
(Since this gadget will set the slots of the object automatically)
176 W( when Apply is hit \050before this)175 W
11880 66348 MT
(function is called\051, programmers rarely need to supply a function here.)SH
10 /Courier AF
8280 68043 MT
(:Cancel-Function)SH
11 /Times-Roman AF
18155 XM
(- Function called when Cancel button is hit.  Defined as:)SH
8 /Courier AF
13800 69208 MT
(\050lambda \050Prop-Sheet-For-Obj-With-OK-gadget\051)SH
11 /Times-Roman AF
11880 70629 MT
(Since the window visibility)
282 W( is handled automatically, programmers rarely need to supply a)283 W
11880 71825 MT
(function here.)SH
ES
%%Page: 420 73
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 420)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(3.24.7. Useful Functions)SH
8 /Courier AF
8040 9217 MT
(gg:Pop-Up-Win-For-Prop)SH
/Times-Italic SF
19080 XM
(prop-gadget-with-ok left top title)SH
/Courier SF
30065 XM
(&optional)SH
/Times-Italic SF
34865 XM
(modal-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 10638 MT
(Given an existing gadget of any of the "OK" types,)
56 W( this function pops up a window which will show the)55 W
6120 11834 MT
(property sheet, and will go away when the user hits either "OK")
13 W( or "Cancel".  The window is allocated by)14 W
6120 13030 MT
(this function to be the correct size.  When the)28 W
/Times-Italic SF
26651 XM
(modal-p)SH
/Times-Roman SF
30620 XM
(parameter is)
28 W( T, then interaction in all other Garnet)27 W
6120 14226 MT
(windows will be suspended until the user clicks)
30 W( either the "OK" or "Cancel" button in this window.  This)31 W
6120 15422 MT
(function can be called many times on the same gadget, which is much more efficient)
119 W( than allocating a)118 W
2260 50 25400 15622 UL
6120 16618 MT
(new gadget and window each time.  To change)
122 W( the items or object before redisplaying, use one of the)123 W
6120 17814 MT
(functions below.)SH
8 /Courier AF
8040 19027 MT
(gg:Pop-Up-Win-Change-Items)SH
/Times-Italic SF
21000 XM
(prop-gadget-with-ok new-items left top title)SH
/Courier SF
35428 XM
(&optional)SH
/Times-Italic SF
40228 XM
(modal-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 20448 MT
(Given an existing gadget,)325 W
10 /Courier AF
18937 XM
(Pop-Up-Win-Change-Items)SH
11 /Times-Roman AF
33337 XM
(sets the items field of the)
325 W( gadget to the)324 W
6120 21644 MT
(specified value, and then)
323 W( pops up a window displaying that property sheet.  \050This function calls)324 W
10 /Courier AF
6120 22840 MT
(ReUsePropSheetObj)SH
11 /Times-Roman AF
16895 XM
(automatically\051. \050Note:)
875 W( if you want to pop up a)299 W
10 /Courier AF
40630 XM
(Prop-Sheet-With-OK)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
6120 24036 MT
(Motif-Prop-Sheet-With-OK)SH
11 /Times-Roman AF
21068 XM
(gadget without changing the)273 W
/Times-Italic SF
34930 XM
(items)SH
/Times-Roman SF
37801 XM
(field, you can simply pass it to)274 W
10 /Courier AF
6120 25232 MT
(Pop-Up-Win-For-Prop)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 26445 MT
(gg:Pop-Up-Win-Change-Obj)SH
/Times-Italic SF
20040 XM
(prop-obj-gadget-with-ok obj slots left top title)SH
/Courier SF
35201 XM
(&optional)SH
/Times-Italic SF
40001 XM
(modal-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 27866 MT
(Given an existing gadget,)150 W
10 /Courier AF
18237 XM
(Pop-Up-Win-Change-Obj)SH
11 /Times-Roman AF
31262 XM
(sets the)150 W
/Times-Italic SF
35106 XM
(obj)SH
/Times-Roman SF
36937 XM
(and)SH
/Times-Italic SF
38950 XM
(slot)SH
/Times-Roman SF
40964 XM
(fields of the gadget to the)149 W
6120 29062 MT
(specified values, and then pops up a window displaying that property sheet.)
295 W( \050This)
867 W( function calls)296 W
10 /Courier AF
6120 30258 MT
(ReUsePropSheetObj)SH
11 /Times-Roman AF
18181 XM
(automatically\051. \050Note:)
3447 W( if you want to)
1586 W( pop up a)1585 W
10 /Courier AF
6120 31454 MT
(Prop-Sheet-For-Obj-With-OK)SH
11 /Times-Roman AF
22917 XM
(or)SH
10 /Courier AF
25030 XM
(Motif-Prop-Sheet-For-Obj-With-OK)SH
11 /Times-Roman AF
45428 XM
(gadget without)923 W
6120 32650 MT
(changing the)SH
/Times-Italic SF
12046 XM
(obj)SH
/Times-Roman SF
13727 XM
(and)SH
/Times-Italic SF
15590 XM
(slot)SH
/Times-Roman SF
17455 XM
(fields, you can simply pass it to)SH
10 /Courier AF
31633 XM
(Pop-Up-Win-For-Prop)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 36334 MT
(3.24.8. Useful Gadgets)SH
11 /Times-Roman AF
6120 37530 MT
(This section describes two gadgets that are useful in property sheet fields as the values.)
114 W( Both)
502 W( of these)113 W
6120 38726 MT
(gadgets are shown in Figure 4-6.)SH
12 /Times-Bold AF
6120 41690 MT
(3.24.8.1. Horiz-Choice-List)SH
11 /Times-Roman AF
6120 42886 MT
(The)SH
10 /Courier AF
8298 XM
(horiz-choice-list)SH
11 /Times-Roman AF
18966 XM
(displays the choices and)
193 W( allows the user to pick one with the left mouse)194 W
6120 44082 MT
(button. The)
275 W( choices can be strings or atoms.)SH
8 /Courier AF
8040 45247 MT
(\050create-instance 'gg:Horiz-Choice-List opal:aggregadget)SH
9480 46112 MT
(\050:maybe-constant '\050:left :top :items\051\051)SH
/Times-Italic SF
9480 46977 MT
(; Customizable slots)SH
/Courier SF
9480 47842 MT
(\050:left 0\051)SH
/Times-Italic SF
14280 XM
(; left and top are set automatically when used in a prop-sheet)SH
/Courier SF
9480 48707 MT
(\050:top 0\051)SH
9480 49572 MT
(\050:items '\050"one" "two" "three"\051\051)SH
/Times-Italic SF
24840 XM
(; the items to choose from)SH
9480 50437 MT
(; Input and output slot)SH
/Courier SF
9480 51302 MT
(\050:value NIL\051)SH
/Times-Italic SF
15720 XM
(; what the user selected)SH
/Courier SF
9480 52167 MT
(\051)SH
11 /Times-Roman AF
6120 54465 MT
(The loader for)103 W
10 /Courier AF
12993 XM
(Horiz-Choice-List)SH
11 /Times-Roman AF
23570 XM
(is "prop-values-loader", although it is automatically loaded when)102 W
6120 55661 MT
(you load a property sheet.)SH
6120 57959 MT
(The)SH
10 /Courier AF
8323 XM
(Horiz-Choice-List)SH
11 /Times-Roman AF
19016 XM
(is automatically used when you list a set of legal values for the)
218 W( display)219 W
6120 59155 MT
(parameter for a)SH
10 /Courier AF
13111 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 62119 MT
(3.24.8.2. Pop-Up-From-Icon)SH
11 /Times-Roman AF
6120 63315 MT
(The)SH
10 /Courier AF
8149 XM
(Pop-Up-From-Icon)SH
11 /Times-Roman AF
18068 XM
(displays a small icon, and if the user hits)
44 W( on it, then a function is called which)43 W
6120 64511 MT
(can pop-up a dialog box or menu to make the choice.)SH
8 /Courier AF
8040 65676 MT
(\050create-instance 'gg:Pop-Up-From-Icon opal:aggregadget)SH
9000 66541 MT
(\050:maybe-constant '\050:left :top :icon-image :pop-up-function\051\051)SH
/Times-Italic SF
9000 67406 MT
(; Customizable slots)SH
/Courier SF
9000 68271 MT
(\050:left 0\051)SH
/Times-Italic SF
13800 XM
(; left and top are set automatically when used in a prop-sheet)SH
/Courier SF
9000 69136 MT
(\050:top 0\051)SH
9000 70001 MT
(\050:icon-image pop-up-icon\051)SH
/Times-Italic SF
21480 XM
(; you can replace with your own picture)SH
/Courier SF
9000 70866 MT
(\050:pop-up-function NIL\051\051)SH
/Times-Italic SF
21480 XM
(;put a function here to pop-up the menu or whatever)SH
ES
%%Page: 421 74
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.25)
SH( Mouseline)1800 W
51386 XM
(Page 421)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The loader for)156 W
10 /Courier AF
15313 XM
(Pop-Up-From-Icon)SH
11 /Times-Roman AF
25345 XM
(is "prop-values-loader", although it is automatically loaded when)157 W
8280 9151 MT
(you load a property sheet.)SH
8280 11449 MT
(The)SH
10 /Courier AF
10375 XM
(pop-up-function)SH
11 /Times-Roman AF
19760 XM
(is called when the user presses with the left button and then releases)
110 W( over the)109 W
8280 12645 MT
(icon. It)
275 W( is called as follows:)SH
8 /Courier AF
10200 13810 MT
(\050lambda\050pop-up-from-icon-gadget\051\051)SH
11 /Times-Roman AF
8280 15231 MT
(It should stuff its results into the)32 W
10 /Courier AF
23019 XM
(:value)SH
11 /Times-Roman AF
26926 XM
(field of that gadget.  See the manual on Gilt for some)
32 W( functions)33 W
8280 16427 MT
(that are useful for popping up dialog boxes and menus.)SH
12 /Times-Bold AF
8280 20111 MT
(3.24.9. Property Sheet Examples)SH
11 /Times-Roman AF
8280 21307 MT
(First, an example filter function, which checks if value is a number, and if it is between 1 and 20.)SH
8 /Courier AF
10200 22472 MT
(\050defun string-to-num-filter \050prop-gadget label index value-obj new-str old-str\051)SH
11160 23337 MT
(\050declare \050ignore prop-gadget label index value-obj\051\051)SH
11160 24202 MT
(\050let* \050\050sym \050read-from-string new-str\051\051)SH
14520 25067 MT
(\050number \050when \050integerp sym\051 sym\051\051\051)SH
12120 25932 MT
(\050if \050and number \050>= number 1\051 \050<= number 20\051\051)SH
/Times-Italic SF
14040 26797 MT
(; then OK, return the converted number)SH
/Courier SF
14040 27662 MT
(\050values number NIL new-str\051)SH
/Times-Italic SF
14040 28527 MT
(; else bad, return original string and T to say invalid)SH
/Courier SF
14040 29392 MT
(\050progn)SH
15000 30257 MT
(\050inter:beep\051)SH
/Times-Italic SF
21240 XM
(; first, beep)SH
/Courier SF
15000 31122 MT
(\050values new-str T new-str\051\051\051\051\051)SH
11 /Times-Roman AF
8280 33420 MT
(Now, we will use that filter function in a property sheet.  This code creates the property sheet shown in)79 W
8280 34616 MT
(Figure 3-9 in section 3.24.2.  It contains)
72 W( three regular lines, a slot using a gadget, and then a slot with a)73 W
8280 35812 MT
(filter function and a comment.)SH
8 /Courier AF
10200 36977 MT
(\050create-instance 'PROP1 garnet-gadgets:prop-sheet)SH
11640 37842 MT
(\050:items `\050\050:color "Red"\051)SH
16440 38707 MT
(\050:height "34"\051)SH
16440 39572 MT
(\050:status "Nervous"\051)SH
16440 40437 MT
(\050:direction ,\050create-instance NIL garnet-gadgets:horiz-choice-list)SH
23640 41302 MT
(\050:items '\050"up" "down" "diagonal"\051\051\051\051)SH
16440 42167 MT
(\050:range "1" ,#'string-to-num-filter 1 "\0501..20\051"\051\051\051\051)SH
11 /Times-Roman AF
8280 43588 MT
(Finally, a Motif look)
42 W( and feel property sheet for an object with OK, Apply and Cancel buttons in it.  The)41 W
10 /Courier AF
8280 44784 MT
(my-rectangle1)SH
11 /Times-Roman AF
16491 XM
(object is only changed when OK or)
136 W( Apply is hit. The resulting window is shown in)137 W
8280 45980 MT
(Figure 4-6.)SH
8 /Courier AF
10200 47145 MT
(\050create-instance 'MY-OBJ-PROP gg:motif-prop-sheet-for-obj-with-OK)SH
11160 48010 MT
(\050:left 0\051)SH
11160 48875 MT
(\050:top 0\051)SH
11160 49740 MT
(\050:obj MY-RECTANGLE1\051)SH
11160 50605 MT
(\050:slots `\050:left)SH
/Times-Italic SF
18840 XM
(; first four slots are normal)SH
/Courier SF
15960 51470 MT
(:top)SH
15960 52335 MT
(:width)SH
15960 53200 MT
(:height)SH
15960 54065 MT
(\050:quality \050:good :medium :bad\051\051)SH
/Times-Italic SF
31320 XM
(;list of options)SH
15960 54930 MT
(; next two slots use pop-up icon gadgets)SH
/Courier SF
15960 55795 MT
(\050:line-style ,\050create-instance NIL gg:pop-up-from-icon)SH
23640 56660 MT
(\050:pop-up-function #'Line-Style-Pop-Up\051\051\051)SH
15960 57525 MT
(\050:filling-style ,\050create-instance NIL gg:pop-up-from-icon)SH
25080 58390 MT
(\050:pop-up-function #'Fill-style-pop-up\051\051\051\051\051\051)SH
14 /Times-Bold AF
8280 62208 MT
(3.25. Mouseline)SH
11 /Times-Roman AF
8280 63404 MT
(There are two new gadgets that will show a help string attached to any object.  The string can be shown in)6 W
8280 64600 MT
(a fixed location in)
458 W( a window using the)459 W
10 /Courier AF
29057 XM
(MouseLine)SH
11 /Times-Roman AF
35191 XM
(gadget, and therefore is like the)459 W
/Times-Bold SF
52086 XM
(mouse)SH
8280 65796 MT
(documentation line)146 W
/Times-Roman SF
17862 XM
(on Symbolics Lisp machines \050sometime called)
146 W( the ``mode line'' or ``who line''\051.)145 W
8280 66992 MT
(Alternatively, the help string can pop up in a window using the)53 W
10 /Courier AF
36931 XM
(MouseLinePopup)SH
11 /Times-Roman AF
45659 XM
(gadget, and therefore)54 W
8280 68188 MT
(be like)212 W
/Times-Bold SF
11942 XM
(Balloon Help)212 W
/Times-Roman SF
18786 XM
(in the Macintosh System 7.  You can also control)
212 W( whether the string appears)211 W
8280 69384 MT
(immediately or only after the mouse is over an object for a particular period of time.)SH
8280 71682 MT
(An example of the use)
117 W( of the two mouseline gadgets is)118 W
10 /Courier AF
33921 XM
(gg:mouseline-go)SH
11 /Times-Roman AF
43314 XM
(which is at the end of the)118 W
ES
%%Page: 422 75
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 422)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(mouseline.lisp)SH
11 /Times-Roman AF
15431 XM
(file. The)
1547 W( standard)636 W
10 /Courier AF
26252 XM
(demos-controller)SH
11 /Times-Roman AF
36762 XM
(which you get when you load)635 W
10 /Courier AF
6120 9151 MT
(garnet-demos-loader)SH
11 /Times-Roman AF
17795 XM
(also uses the)SH
10 /Courier AF
23630 XM
(MouseLinePopup)SH
11 /Times-Roman AF
32305 XM
(gadget to show what the different demos do.)SH
6120 11449 MT
(Note: the mouseline gadget is implemented)
280 W( in a rather inefficient manner.  It has the potential to)281 W
6120 12645 MT
(significantly slow down applications, especially when)
167 W( the delay feature is used \050)166 W
10 /Courier AF
(:wait-amount)SH
11 /Times-Roman AF
50904 XM
(non-)SH
6120 13841 MT
(zero\051. If)
275 W( this proves to be a big problem in practice, please let us know.)SH
6120 16139 MT
(Note 2: the delay feature is implemented with multiple processes, which are only supported)
118 W( in Allegro)119 W
6120 17335 MT
(and Lucid lisp.)SH
12 /Times-Bold AF
6120 21019 MT
(3.25.1. MouseLine gadget)SH
8 /Courier AF
8040 22184 MT
(\050create-instance 'gg:MouseLine opal:aggregadget)SH
9000 23049 MT
(\050:left 5\051)SH
9000 23914 MT
(\050:top \050o-formula \050- \050gvl :window :height\051  ;)SH
/Times-Italic SF
30600 XM
(default is bottom of window)SH
/Courier SF
18600 24779 MT
(\050gvl :label :height\051)SH
18600 25644 MT
(5\051\051\051)SH
9000 26509 MT
(\050:windows \050o-formula \050gvl :window\051\051\051  ;)SH
/Times-Italic SF
28200 XM
(default is the window containing the mouseline gadget)SH
/Courier SF
9000 27374 MT
(\050:wait-amount 0\051)
SH( ;)960 W
/Times-Italic SF
19080 XM
(how long to wait before displaying the string)SH
11 /Times-Roman AF
6120 29672 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(MouseLine)SH
11 /Times-Roman AF
21720 XM
(is)SH
10 /Courier AF
22729 XM
(mouseline-loader)SH
11 /Times-Roman AF
(.)SH
6120 31970 MT
(You create an instance of the)77 W
10 /Courier AF
19652 XM
(mouseline)SH
11 /Times-Roman AF
25404 XM
(gadget and add it to a window.  By)
77 W( default it is positioned at)76 W
6120 33166 MT
(the bottom left, but you can override the)151 W
10 /Courier AF
25321 XM
(:top)SH
11 /Times-Roman AF
28148 XM
(and)SH
10 /Courier AF
30163 XM
(:left)SH
11 /Times-Roman AF
33590 XM
(to position it where-ever you want.  Once)152 W
6120 34362 MT
(created, the string will display the value of)
64 W( the)63 W
10 /Courier AF
27344 XM
(:help-string)SH
11 /Times-Roman AF
34882 XM
(field for any object the mouse is over in)63 W
6120 35558 MT
(the window or windows specified in the)67 W
10 /Courier AF
24460 XM
(:windows)SH
11 /Times-Roman AF
29602 XM
(slot. By)
411 W( default)68 W
10 /Courier AF
37177 XM
(:windows)SH
11 /Times-Roman AF
42320 XM
(is only the window that)68 W
6120 36754 MT
(the)SH
10 /Courier AF
7739 XM
(mouseline)SH
11 /Times-Roman AF
13414 XM
(gadget is in, but it can be any list of windows, or T for all interactor windows.)SH
6120 39052 MT
(The gadget first)
59 W( looks at the leaf object under the mouse, and if that does not have a help-string, then its)58 W
6120 40248 MT
(parent \050aggregate\051 is looked at, and so on.  The lowest-level help)
76 W( string found is displayed in the string.)77 W
6120 41444 MT
(The string can contain)
201 W( newlines but not font information \050the display is a)200 W
10 /Courier AF
41076 XM
(opal:multi-text)SH
11 /Times-Roman AF
50551 XM
(not a)200 W
10 /Courier AF
6120 42640 MT
(opal:multifont-text)SH
11 /Times-Roman AF
(\051. Of)
417 W( course, the)71 W
10 /Courier AF
25540 XM
(:help-string)SH
11 /Times-Roman AF
33086 XM
(slot can contain a formula, which might, for)71 W
6120 43836 MT
(example, generate a different string when a gadget is disabled explaining why.)SH
6120 46134 MT
(If the mouseline gadgets catch on, we might)
179 W( provide a way to specify the help-strings as part of the)178 W
6120 47330 MT
(standard)SH
10 /Courier AF
10343 XM
(:items)SH
11 /Times-Roman AF
14440 XM
(protocol for gadgets, but for now)
222 W( you need to)223 W
10 /Courier AF
36664 XM
(s-value)SH
11 /Times-Roman AF
41362 XM
(the)SH
10 /Courier AF
43204 XM
(:help-string)SH
11 /Times-Roman AF
50902 XM
(slots)SH
6120 48526 MT
(directly. See)
275 W( the)SH
10 /Courier AF
13787 XM
(demos-controller)SH
11 /Times-Roman AF
23662 XM
(for how this might be done.)SH
6120 50824 MT
(If the)74 W
10 /Courier AF
8894 XM
(:wait-amount)SH
11 /Times-Roman AF
16443 XM
(slot is non-zero, then it is the)
74 W( number of seconds the mouse must remain over an)73 W
6120 52020 MT
(object before the mouseline)
176 W( string is displayed.  This feature relies on the)177 W
10 /Courier AF
40920 XM
(animation-interactor)SH
11 /Times-Roman AF
6120 53216 MT
(which uses)
73 W( the multi-process mechanism in Lisp,)72 W
/Times-Bold SF
28561 XM
(so the)72 W
10 /Courier AF
31699 XM
(:wait-amount)SH
11 /Times-Bold AF
39246 XM
(is only currently available in)72 W
6120 54412 MT
(Lucid, Allegro, and LispWorks.)SH
12 SS 
6120 58096 MT
(3.25.2. MouseLinePopup gadget)SH
8 /Courier AF
8040 59261 MT
(\050create-instance 'gg:MouseLinePopup opal:aggregadget)SH
9000 60126 MT
(\050:start-event :SHIFT-CONTROL-META-LEFTDOWN\051)SH
9000 60991 MT
(\050:windows \050o-formula \050gvl :window\051\051\051 ;)SH
/Times-Italic SF
27720 XM
(default is the window containing the mouseline gadget)SH
/Courier SF
9000 61856 MT
(\050:wait-amount 3\051 ;)SH
/Times-Italic SF
18120 XM
(how long to wait before displaying string)SH
11 /Times-Roman AF
6120 64154 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(MouseLinePopup)SH
11 /Times-Roman AF
24720 XM
(is)SH
10 /Courier AF
25729 XM
(mouseline-loader)SH
11 /Times-Roman AF
(.)SH
6120 66452 MT
(This displays the same help-string as the)214 W
10 /Courier AF
25735 XM
(mouseline)SH
11 /Times-Roman AF
31624 XM
(gadget above, but the string is displayed in)
214 W( a)215 W
6120 67648 MT
(window which pops up at the mouse.  Therefore it is like ``Balloon)
102 W( Help'' in the Macintosh System 7.)101 W
6120 68844 MT
(The window is just big enough for the string, and it goes away when you move)
103 W( off of the object.  The)104 W
10 /Courier AF
6120 70040 MT
(:wait-amount)SH
11 /Times-Roman AF
13745 XM
(determines how long in seconds you)
150 W( must keep the mouse over the object before the)149 W
6120 71236 MT
(window appears.)SH
ES
%%Page: 423 76
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.26)
SH( Standard)
1800 W( Edit)SH
51386 XM
(Page 423)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.26. Standard Edit)SH
11 /Times-Roman AF
8280 9334 MT
(There are a number)
433 W( of editing functions that are shared by most graphical editors.  The file)434 W
10 /Courier AF
8280 10530 MT
(standard-edit.lisp)SH
11 /Times-Roman AF
19399 XM
(supplies many of these functions in a manner that can probably be)
44 W( used by your)43 W
8280 11726 MT
(graphical editors without change.  They support such operations such)
325 W( as cut, copy, paste, delete,)326 W
8280 12922 MT
(duplicate, group,)
54 W( ungroup, refresh, to-top, to-bottom, etc.  These functions are designed to work with the)53 W
10 /Courier AF
8280 14118 MT
(Multi-Graphics-Selection)SH
11 /Times-Roman AF
23100 XM
(gadget, and can be invoked from buttons, menus, or a menubar.  The)145 W
10 /Courier AF
8280 15314 MT
(standard-edit)SH
11 /Times-Roman AF
16376 XM
(functions are currently used by GarnetDraw, Gilt and Marquise.  You don't have to use)20 W
8280 16510 MT
(all the functions in an application.  For example, Gilt does not)
35 W( support grouping and ungrouping.  \050If you)36 W
8280 17706 MT
(find that changing a)SH
10 /Courier AF
17322 XM
(standard-edit)SH
11 /Times-Roman AF
25397 XM
(routine will allow it to be useful to your application, let us know.\051)SH
8280 20004 MT
(The)SH
10 /Courier AF
10265 XM
(standard-edit)SH
11 /Times-Roman AF
18340 XM
(routines can be loaded using)SH
10 /Courier AF
31139 XM
(\050garnet-load "gg:standard-edit-loader"\051)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 23688 MT
(3.26.1. General Operation)SH
11 /Times-Roman AF
8280 24884 MT
(The)SH
10 /Courier AF
10362 XM
(standard-edit)SH
11 /Times-Roman AF
18534 XM
(routines assume that the graphical objects that are to be)
97 W( edited are all in a single)96 W
8280 26080 MT
(aggregate in a single window)
68 W( \050extensions to handle multiple windows are planned, but not in place yet\051.)69 W
8280 27276 MT
(The routines are tightly tied)
98 W( to the design of the)97 W
10 /Courier AF
30456 XM
(Multi-Graphics-Selection)SH
11 /Times-Roman AF
45228 XM
(gadget. For)
469 W( example,)97 W
8280 28472 MT
(most routines determine which objects to operate on by looking at the)
17 W( current selection, and many change)18 W
8280 29668 MT
(the selection.)SH
10 /Courier AF
8280 31966 MT
(Standard-edit)SH
11 /Times-Roman AF
16439 XM
(determines how to edit objects by looking at various slots.  The slots listed below are)83 W
8280 33162 MT
(set in the selected objects, not in the selection)
66 W( gadget itself.  Most Garnet prototypes already contain the)67 W
3542 50 12725 33362 UL
8280 34358 MT
(correct default values:)SH
10 /Courier AF
10480 36309 MT
(:line-p)SH
11 /Times-Roman AF
15007 XM
(- if non-NIL, then the object is controlled by a)52 W
10 /Courier AF
36145 XM
(:points)SH
11 /Times-Roman AF
40671 XM
(list of 4 values.  True by default)51 W
13780 37505 MT
(for)SH
10 /Courier AF
15337 XM
(opal:line)SH
11 /Times-Roman AF
21012 XM
(and)SH
10 /Courier AF
22875 XM
(gg:arrow-line)SH
11 /Times-Roman AF
(s.)SH
10 /Courier AF
10480 39200 MT
(:polygon-p)SH
11 /Times-Roman AF
16821 XM
(- if non-NIL, then the object is controlled by a)66 W
10 /Courier AF
38100 XM
(:point-list)SH
11 /Times-Roman AF
45041 XM
(list of multiple)
66 W( values.)67 W
13780 40396 MT
(True by default for)SH
10 /Courier AF
22392 XM
(opal:polyline)SH
11 /Times-Roman AF
(s.)SH
10 /Courier AF
10480 42091 MT
(:group-p)SH
11 /Times-Roman AF
15635 XM
(- if non-NIL, then the)
80 W( object is a group of objects that the user might be able to get the)79 W
13780 43287 MT
(parts of.  True by default)
115 W( for)116 W
10 /Courier AF
27353 XM
(opal:aggregadget)SH
11 /Times-Roman AF
(s. If)
507 W( you allow high-level objects to be)116 W
13780 44483 MT
(added in your editor \050e.g., gadgets like buttons\051, and)
142 W( you supply the)141 W
10 /Courier AF
45480 XM
(Standard-Ungroup)SH
11 /Times-Roman AF
13780 45679 MT
(command, you should set the)217 W
10 /Courier AF
28003 XM
(:group-p)SH
11 /Times-Roman AF
33295 XM
(slot of any objects you)
217 W( don't want the user to)218 W
13780 46875 MT
(ungroup to be NIL.)SH
10 /Courier AF
10480 48570 MT
(:grow-p)SH
11 /Times-Roman AF
14955 XM
(- whether the object can change size or not.)SH
8280 50868 MT
(If the object has)SH
10 /Courier AF
15610 XM
(:line-p)SH
11 /Times-Roman AF
20085 XM
(and)SH
10 /Courier AF
21948 XM
(:polygon-p)SH
11 /Times-Roman AF
28223 XM
(both NIL, then it is assumed to be controlled by a)SH
10 /Courier AF
50281 XM
(:box)SH
11 /Times-Roman AF
52956 XM
(slot.)SH
8280 53166 MT
(The various routines find information they need by looking)
92 W( in a special slots of the gadget that invokes)91 W
8280 54362 MT
(them. This)
555 W( means)
140 W( that all routines must be invoked from the same gadget set, for example, the same)141 W
10 /Courier AF
8280 55558 MT
(menubar)SH
11 /Times-Roman AF
12755 XM
(or)SH
10 /Courier AF
13946 XM
(motif-button-panel)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 59242 MT
(3.26.2. The Standard-Edit Objects)SH
11 /Times-Roman AF
8280 60438 MT
(The)SH
10 /Courier AF
10556 XM
(gg:Clipboard-Object)SH
11 /Times-Roman AF
22522 XM
(holds the last object that was cut or copied.  It)
291 W( also contains some)290 W
8280 61634 MT
(parameters used for pasting and duplicating)
5 W( the objects.  Each application can have its own clipboard, or a)6 W
8280 62830 MT
(set of applications can share a clipboard to allow cut and paste among)
241 W( applications.  For example,)240 W
8280 64026 MT
(GarnetDraw and Gilt both share the same clipboard, so you can)
115 W( cut and paste objects between the two)116 W
8280 65222 MT
(applications. By)
275 W( default, all applications share the one)SH
10 /Courier AF
32627 XM
(gg:Default-Global-Clipboard)SH
11 /Times-Roman AF
(.)SH
8280 67520 MT
(Note that this does)SH
/Times-Italic SF
16774 XM
(not)SH
/Times-Roman SF
18455 XM
(use the X cut buffer, since there is no standard way to copy graphics under X.)SH
ES
%%Page: 424 77
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 424)
SH( Gadgets)830 W
35401 XM
(The Standard Gadget Objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'gg:Clipboard-Object NIL)SH
9000 8564 MT
(\050:value NIL\051)SH
9000 9429 MT
(\050:x-inc-amt NIL\051  ;)SH
/Times-Italic SF
18600 XM
(Offset for duplicate.  If NIL, then uses 10)SH
/Courier SF
9000 10294 MT
(\050:y-inc-amt NIL\051\051)SH
8040 12024 MT
(\050create-instance 'gg:Default-Global-Clipboard gg:Clipboard-Object\051)SH
11 /Times-Roman AF
6120 14322 MT
(The)SH
10 /Courier AF
8144 XM
(Default-Global-Clipboard)SH
11 /Times-Roman AF
22858 XM
(is used by default, and allows objects to)
39 W( be copied from one Garnet)38 W
6120 15518 MT
(application to another.)SH
12 /Times-Bold AF
6120 19202 MT
(3.26.3. Standard Editing Routines)SH
8 /Courier AF
8040 20415 MT
(gg:Standard-Initialize-Gadget)SH
/Times-Italic SF
22440 XM
(gadget selection-gadget agg-of-items)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
22440 21280 MT
(&key)SH
/Times-Italic SF
24840 XM
(clipboard undo-delete?)200 W
11 /Times-Roman AF
6120 23578 MT
(This routine must be)
1 W( called once before any of the others are invoked.  Typically, you would call this after)2 W
6120 24774 MT
(the editor's windows and objects are created.)
91 W( It)
456 W( takes the)90 W
10 /Courier AF
32589 XM
(gadget)SH
11 /Times-Roman AF
36554 XM
(that is going to invoke the standard-)90 W
6120 25970 MT
(edit routines \050e.g., a)
1 W( menubar\051, the selection gadget that is used to select objects in the graphics editor, and)2 W
6120 27166 MT
(the aggregate that holds the items created in the graphics editor.)
157 W( If)
588 W( you do not supply a)156 W
10 /Courier AF
47520 XM
(clipboard)SH
11 /Times-Roman AF
6120 28362 MT
(object, then)SH
10 /Courier AF
11527 XM
(Default-Global-Clipboard)SH
11 /Times-Roman AF
26202 XM
(will be used.)SH
6120 30660 MT
(Unfortunately, there is not yet)
274 W( a global undo facility, but you can support undoing just the delete)275 W
6120 31856 MT
(operations. The)371 W
10 /Courier AF
13656 XM
(undo-delete?)SH
11 /Times-Roman AF
21502 XM
(flag tells standard-edit)
48 W( whether you want this or not.  If non-NIL, then)47 W
6120 33052 MT
(deleted objects are never destroyed, they are just saved in a list.)SH
8 /Courier AF
8040 34265 MT
(gg:Standard-NIY)SH
/Times-Italic SF
15720 XM
(gadget)SH
/Courier SF
18377 XM
(&rest)SH
/Times-Italic SF
21257 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 36563 MT
(Useful for)
81 W( all those functions that are Not Implemented Yet.  It prints "Sorry, Not Implemented Yet" in)82 W
794 50 23340 36763 UL
366 50 25347 36763 UL
794 50 31508 36763 UL
6120 37759 MT
(the Lisp listener window and beeps.)SH
8 /Courier AF
8040 38972 MT
(gg:Standard-Delete)SH
/Times-Italic SF
17160 XM
(gadget)SH
/Courier SF
19817 XM
(&rest)SH
/Times-Italic SF
22697 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 40393 MT
(Deletes all the selected objects.  Makes there be no objects selected.)SH
8 /Courier AF
8040 41606 MT
(gg:Standard-Delete-All)SH
/Times-Italic SF
19080 XM
(gadget)SH
/Courier SF
21737 XM
(&rest)SH
/Times-Italic SF
24617 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 43027 MT
(Deletes all the objects.  Makes there be no objects selected.)SH
8 /Courier AF
8040 44240 MT
(gg:Standard-Undo-Last-Delete)SH
/Times-Italic SF
21960 XM
(gadget)SH
/Courier SF
24617 XM
(&rest)SH
/Times-Italic SF
27497 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 45661 MT
(If you have initialized standard-edit with)125 W
10 /Courier AF
25076 XM
(Undo-delete?)SH
11 /Times-Roman AF
32676 XM
(as non-NIL, then this function will undo)
125 W( the)124 W
6120 46857 MT
(last delete operation.  The objects brought back are selected.)SH
8 /Courier AF
8040 48070 MT
(gg:Standard-To-Top)SH
/Times-Italic SF
17160 XM
(gadget)SH
/Courier SF
19817 XM
(&rest)SH
/Times-Italic SF
22697 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 49491 MT
(Moves the selected objects to the top \050so not covered\051.  They stay selected.)SH
8 /Courier AF
8040 50704 MT
(gg:Standard-To-Bottom)SH
/Times-Italic SF
18600 XM
(gadget)SH
/Courier SF
21257 XM
(&rest)SH
/Times-Italic SF
24137 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 52125 MT
(Moves the selected objects to the bottom \050so covered by all other objects\051.  They stay selected.)SH
8 /Courier AF
8040 53338 MT
(gg:Standard-Refresh)SH
/Times-Italic SF
17640 XM
(gadget)SH
/Courier SF
20297 XM
(&rest)SH
/Times-Italic SF
23177 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 54759 MT
(Simply redraws the window containing the objects using)SH
10 /Courier AF
31356 XM
(\050opal:update win T\051)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 55972 MT
(gg:Standard-Select-All)SH
/Times-Italic SF
19080 XM
(gadget)SH
/Courier SF
21737 XM
(&rest)SH
/Times-Italic SF
24617 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 57393 MT
(Causes all of the objects to be selected.)SH
8 /Courier AF
8040 58606 MT
(gg:Standard-Cut)SH
/Times-Italic SF
15720 XM
(gadget)SH
/Courier SF
18377 XM
(&rest)SH
/Times-Italic SF
21257 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 60027 MT
(Copies the selected objects into the clipboard's cut buffer, and then removes)
173 W( them from the window.)174 W
6120 61223 MT
(Afterwards, there will be no selection.)SH
8 /Courier AF
8040 62436 MT
(gg:Standard-Copy)SH
/Times-Italic SF
16200 XM
(gadget)SH
/Courier SF
18857 XM
(&rest)SH
/Times-Italic SF
21737 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 63857 MT
(Copies the selected objects into the clipboard's cut buffer, but leaves them in the window.  The selection)45 W
6120 65053 MT
(remains the same.)SH
8 /Courier AF
8040 66266 MT
(gg:Standard-Paste-Same-Place)SH
/Times-Italic SF
21960 XM
(gadget)SH
/Courier SF
24617 XM
(&rest)SH
/Times-Italic SF
27497 XM
(args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 67687 MT
(Pastes the objects in the clipboard into the window at the)
51 W( same place from which they were cut.  Pasting)52 W
6120 68883 MT
(the same objects multiple times will)
171 W( give multiple copies, all in the same place.  An application will)170 W
6120 70079 MT
(typically provide either)369 W
10 /Courier AF
17766 XM
(Standard-Paste-Same-Place)SH
11 /Times-Roman AF
33410 XM
(or)SH
10 /Courier AF
34970 XM
(Standard-Paste-Inc-Place)SH
11 /Times-Roman AF
50015 XM
(as the)370 W
6120 71275 MT
(``paste'' operation.  The new objects will be selected.)SH
ES
%%Page: 425 78
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.26)
SH( Standard)
1800 W( Edit)SH
51386 XM
(Page 425)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7747 MT
(gg:Standard-Paste-Inc-Place)SH
/Times-Italic SF
23640 XM
(gadget)SH
/Courier SF
26297 XM
(&rest)SH
/Times-Italic SF
29177 XM
(args)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 9168 MT
(Pastes the objects in the clipboard into the window offset from where)
104 W( they were cut.  Pasting the same)103 W
8280 10364 MT
(objects multiple times will give multiple copies, each offset from the previous.  The offset)
160 W( amount is)161 W
8280 11560 MT
(determined by the)146 W
10 /Courier AF
16935 XM
(:x-inc-amt)SH
11 /Times-Roman AF
23356 XM
(and)SH
10 /Courier AF
25365 XM
(:y-inc-amt)SH
11 /Times-Roman AF
31786 XM
(slots of)
146 W( the clipboard object, or, if NIL, then 10 is)145 W
8280 12756 MT
(used. The)
275 W( new objects will be selected.)SH
8 /Courier AF
10200 13969 MT
(gg:Standard-Duplicate)SH
/Times-Italic SF
20760 XM
(gadget)SH
/Courier SF
23417 XM
(&rest)SH
/Times-Italic SF
26297 XM
(args)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 15390 MT
(Makes a copy of the selected objects, and places them back into the)
124 W( window, offset from the previous)125 W
8280 16586 MT
(objects by)SH
10 /Courier AF
13046 XM
(:x-inc-amt)SH
11 /Times-Roman AF
19321 XM
(and)SH
10 /Courier AF
21184 XM
(:y-inc-amt)SH
11 /Times-Roman AF
27459 XM
(\050or 10 if these are NIL\051.  The new objects will be selected.)SH
8 /Courier AF
10200 17799 MT
(gg:Standard-Group)SH
/Times-Italic SF
18840 XM
(gadget)SH
/Courier SF
21497 XM
(&rest)SH
/Times-Italic SF
24377 XM
(args)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 19220 MT
(Creates an)203 W
10 /Courier AF
13572 XM
(aggregadget)SH
11 /Times-Roman AF
20650 XM
(and puts the selected objects)
203 W( into it.  The)202 W
10 /Courier AF
40680 XM
(Multi-Graphics-Selection)SH
11 /Times-Roman AF
8280 20416 MT
(gadget will then operate on the)
234 W( group as a whole, and will not let parts of it be manipulated \050like)235 W
8280 21612 MT
(MacDraw, but unlike Lapidary\051.  The group \050aggregadget\051 object will be selected.)SH
8 /Courier AF
10200 22825 MT
(gg:Standard-UnGroup)SH
/Times-Italic SF
19800 XM
(gadget)SH
/Courier SF
22457 XM
(&rest)SH
/Times-Italic SF
25337 XM
(args)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 24246 MT
(Goes through all the selected objects,)
51 W( and for any that have the)50 W
10 /Courier AF
36772 XM
(:group-p)SH
11 /Times-Roman AF
41897 XM
(slot non-NIL, removes all the)50 W
8280 25442 MT
(components from that aggregate and adds the objects directly to the parent)
102 W( of the group.)103 W
10 /Courier AF
49168 XM
(:Group-p)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 26638 MT
(true by default)
6 W( for)5 W
10 /Courier AF
16548 XM
(opal:aggregadget)SH
11 /Times-Roman AF
(s. If)
285 W( you allow high-level objects to be added in your editor \050e.g.,)5 W
8280 27834 MT
(gadgets like buttons\051, and you supply the)50 W
10 /Courier AF
26962 XM
(Standard-Ungroup)SH
11 /Times-Roman AF
36887 XM
(command, you should set the)51 W
10 /Courier AF
50280 XM
(:group-p)SH
11 /Times-Roman AF
8280 29030 MT
(slot to be NIL for any objects you don't want the user to ungroup.)SH
12 /Times-Bold AF
8280 32714 MT
(3.26.4. Utility Procedures)SH
8 /Courier AF
10200 33927 MT
(gg:Sort-Objs-Display-Order)SH
/Times-Italic SF
23160 XM
(objs draw-agg)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 35348 MT
(For many operations, it is important to operate on the objects in display order, rather than in the order in)53 W
8280 36544 MT
(which the objects were selected.)195 W
10 /Courier AF
24201 XM
(Sort-Objs-Display-Order)SH
11 /Times-Roman AF
38471 XM
(takes a list of objects \050)195 W
/Times-Italic SF
(objs)SH
/Times-Roman SF
(\051 and)
195 W( an)196 W
8280 37740 MT
(aggregate that contains them \050)261 W
/Times-Italic SF
(draw-agg)SH
/Times-Roman SF
(\051 and sorts the objects so they are in the)
261 W( same order as in)260 W
/Times-Italic SF
8280 38936 MT
(draw-agg)SH
/Times-Roman SF
(. The)
457 W( procedure)
91 W( returns a copy of the list passed in, so it is safe to supply the)92 W
10 /Courier AF
48486 XM
(:value)SH
11 /Times-Roman AF
52453 XM
(of the)92 W
2138 50 24680 39136 UL
10 /Courier AF
8280 40132 MT
(Multi-Graphics-Selection)SH
11 /Times-Roman AF
22955 XM
(gadget, for example.)SH
8 /Courier AF
10200 41345 MT
(gg:Is-A-Motif-Background)SH
/Times-Italic SF
22200 XM
(obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 42766 MT
(Tests whether the specified object is a)113 W
10 /Courier AF
26084 XM
(Motif-Background)SH
11 /Times-Roman AF
36072 XM
(object. This)
500 W( procedure is safe even if the)112 W
8280 43962 MT
(Motif gadgets have not been loaded.)SH
8 /Courier AF
10200 45175 MT
(gg:Is-A-Motif-Rect)SH
/Times-Italic SF
19320 XM
(obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 46596 MT
(Tests whether the specified object is a)154 W
10 /Courier AF
26371 XM
(Motif-Rect)SH
11 /Times-Roman AF
32800 XM
(object. This)
583 W( procedure is safe even if)
154 W( the Motif)155 W
8280 47792 MT
(gadgets have not been loaded.)SH
ES
%%Page: 426 79
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 426)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(4. The Motif Gadget Objects)SH
11 /Times-Roman AF
6120 10524 MT
(The Motif gadgets in the)
215 W( Gadget Set were designed to simulate the appearance and behavior of the)214 W
6120 11720 MT
(OSF/Motif widgets.  They are analogous to the standard gadgets of Chapter 3, and many)
313 W( of the)314 W
6120 12916 MT
(customizable slots are the same for both sets of gadgets.)SH
6120 15214 MT
(As in the previous chapter, the descriptions of the Motif gadgets begin with a list)
97 W( of customizable slots)96 W
6120 16410 MT
(and their default values \050any of which may be ignored\051.)
50 W( The)377 W
10 /Courier AF
33692 XM
(motif-gadget-prototype)SH
11 /Times-Roman AF
47218 XM
(object which)51 W
6120 17606 MT
(occurs in the definition of each Motif)
69 W( gadget is just an instance of an)68 W
10 /Courier AF
37564 XM
(opal:aggregadget)SH
11 /Times-Roman AF
47507 XM
(with several)68 W
6120 18802 MT
(color, filling-style, and line-style slot definitions used by all Motif gadgets.)SH
6120 21100 MT
(The Motif gadgets have been implemented to appear on)
83 W( either color or black-and-white screens without)84 W
6120 22296 MT
(changes to the instances.  The)25 W
10 /Courier AF
19679 XM
(:foreground-color)SH
11 /Times-Roman AF
30178 XM
(slot is used to compute filling-styles internally on a)24 W
6120 23492 MT
(color screen, and it is ignored)
117 W( on a black-and-white screen.  Figure 4-1 shows how a few of the Motif)118 W
6120 24688 MT
(gadgets look on each type of screen.)SH
75 100 0 -2805 63084 GB 
%%BeginDocument: gadgets/color-motif-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 42
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:15 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 296 431 496
%%%Pages: 1
%%EndComments


/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -224 translate
gsave
0 648 250 200 ClipToRectangle
0 0 translate
gsave
0 648 250 200 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
17 631 16 171 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
19 629 14 169 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
19 629 12 167 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
19 616 12 69 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
21 614 10 67 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
21 614 8 65 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
25 628 29 618 20 618 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 20 618 25 628 DrawLine
25 465 20 475 30 475 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 25 465 30 475 DrawLine
73 514 79 520 85 514 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
73 514 79 508 85 514 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
90 521 510 48 14 0 false 0 0 0 false 0 0 0 false (Radio 1) 12 /Courier DrawText
73 491 79 497 85 491 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
73 491 79 485 85 491 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
90 498 487 48 14 0 false 0 0 0 false 0 0 0 false (Radio 2) 12 /Courier DrawText
73 468 79 474 85 468 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
73 468 79 462 85 468 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
90 475 464 48 14 0 false 0 0 0 false 0 0 0 false (Radio 3) 12 /Courier DrawText
177 521 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
179 519 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
179 519 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
182 518 507 41 14 0 false 0 0 0 false 0 0 0 false (Text 1) 12 /Courier DrawText
177 492 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
179 490 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
179 490 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
182 489 478 41 14 0 false 0 0 0 false 0 0 0 false (Text 2) 12 /Courier DrawText
0 1 1 1 true 0 0 [] 2 222 549 85 549 DrawLine
153.5 548.5 68.5 68.5 0 180 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.70 0.70 0.70 true DrawArc
0 0 0 0 false 0 0 [] 1 218 549 221 549 DrawLine
226 560 551 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 209 581 212 583 DrawLine
217 594 585 10 11 0 false 0 0 0 false 0 0 0 false (30) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 185 605 187 608 DrawLine
192 619 610 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 153 614 153 617 DrawLine
148 631 622 10 11 0 false 0 0 0 false 0 0 0 false (90) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 121 605 119 608 DrawLine
98 619 610 16 11 0 false 0 0 0 false 0 0 0 false (120) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 97 581 94 583 DrawLine
73 594 585 16 11 0 false 0 0 0 false 0 0 0 false (150) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 88 549 85 549 DrawLine
64 560 551 16 11 0 false 0 0 0 false 0 0 0 false (180) 10 /Courier DrawText
153 549 156 547 176 583 180 580 180 596 10 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
180 596 166 588 171 586 150 551 153 549 10 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
115 544 533 76 14 0 false 0 0 0 false 0 0 0 false (Motif Gauge) 12 /Courier DrawText
grestore

grestore

0 648 250 200 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 181 296 431 496

%%EndDocument
 GE 75 100 0 15945 63084 GB 
%%BeginDocument: gadgets/bw-motif-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 1
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:40 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 296 431 496
%%%Pages: 1
%%EndComments


/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -224 translate
gsave
0 648 250 200 ClipToRectangle
0 0 translate
gsave
17 631 16 171 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
19 629 14 169 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
19 629 12 167 0 0 0 0 false 0 0 [] -1 1 0 0 0 false DrawRectangle
19 616 12 69 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
21 614 10 67 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
21 614 8 65 0 0 0 0 false 0 0 [] -1 1 0 0 0 false DrawRectangle
25 628 29 618 20 618 6 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
0.50 0 0 0 false 0 0 [] 2 20 618 25 628 DrawLine
25 465 20 475 30 475 6 0.50 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 2 25 465 30 475 DrawLine
73 514 79 520 85 514 6 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
73 514 79 508 85 514 6 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
90 521 510 48 14 0 false 0 0 0 false 0 0 0 false (Radio 1) 12 /Courier DrawText
73 491 79 497 85 491 6 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
73 491 79 485 85 491 6 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
90 498 487 48 14 0 false 0 0 0 false 0 0 0 false (Radio 2) 12 /Courier DrawText
73 468 79 474 85 468 6 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawPolyline
73 468 79 462 85 468 6 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
90 475 464 48 14 0 false 0 0 0 false 0 0 0 false (Radio 3) 12 /Courier DrawText
177 521 51 20 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
179 519 49 18 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
179 519 47 16 0 0 0 0 false 0 0 [] -1 1 0 0 0 false DrawRectangle
182 518 507 41 14 0 false 0 0 0 false 0 0 0 false (Text 1) 12 /Courier DrawText
177 492 51 20 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
179 490 49 18 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
179 490 47 16 0 0 0 0 false 0 0 [] -1 1 0 0 0 false DrawRectangle
182 489 478 41 14 0 false 0 0 0 false 0 0 0 false (Text 2) 12 /Courier DrawText
153.5 548.5 68.5 68.5 0 180 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawArc
0 0 0 0 false 0 0 [] 1 218 549 221 549 DrawLine
226 560 551 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 209 581 212 583 DrawLine
217 594 585 10 11 0 false 0 0 0 false 0 0 0 false (30) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 185 605 187 608 DrawLine
192 619 610 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 153 614 153 617 DrawLine
148 631 622 10 11 0 false 0 0 0 false 0 0 0 false (90) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 121 605 119 608 DrawLine
98 619 610 16 11 0 false 0 0 0 false 0 0 0 false (120) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 97 581 94 583 DrawLine
73 594 585 16 11 0 false 0 0 0 false 0 0 0 false (150) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 88 549 85 549 DrawLine
64 560 551 16 11 0 false 0 0 0 false 0 0 0 false (180) 10 /Courier DrawText
153 549 156 547 176 583 180 580 180 596 10 0 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
180 596 166 588 171 586 150 551 153 549 10 0.50 0 0 0 false 0 0 [] 2 1 0 0 0 false DrawPolyline
115 544 533 76 14 0 false 0 0 0 false 0 0 0 false (Motif Gauge) 12 /Courier DrawText
0.50 0 0 0 false 0 0 [] 2 222 549 85 549 DrawLine
grestore

grestore

0 648 250 200 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 181 296 431 496

%%EndDocument
 GE /Times-Bold SF
6120 42636 MT
(Figure 4-1:)SH
/Times-Roman SF
11893 XM
(Motif style gadgets on color and black-and-white screens)SH
14 /Times-Bold AF
6120 46454 MT
(4.1. Useful Motif Objects)SH
11 /Times-Roman AF
6120 47650 MT
(In order to facilitate the construction of interfaces containing Motif gadgets, Garnet)
306 W( exports some)305 W
6120 48846 MT
(miscellaneous objects that are commonly found in Motif.  The objects described in this)
232 W( section are)233 W
6120 50042 MT
(defined in the "motif-parts" file \050automatically loaded with all Garnet Motif-style "-loader" files\051.)SH
12 /Times-Bold AF
6120 53726 MT
(4.1.1. Motif Colors and Filling Styles)SH
11 /Times-Roman AF
6120 54922 MT
(In each Motif gadget, there is a slot for the color)
70 W( of the gadget.  The)69 W
10 /Courier AF
37350 XM
(:foreground-color)SH
11 /Times-Roman AF
47894 XM
(is the color)69 W
6120 56118 MT
(that should be shown in the foreground of the gadget \050i.e., the part of the)
135 W( gadget that does not appear)136 W
6120 57314 MT
(recessed\051. The)
301 W( background, shadow, and highlight colors for the gadget)
13 W( are computed internally based on)12 W
6120 58510 MT
(the)SH
10 /Courier AF
7739 XM
(:foreground-color)SH
11 /Times-Roman AF
18214 XM
(given.)SH
ES
%%Page: 427 80
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.1)
SH( Useful)
1800 W( Motif Objects)SH
51386 XM
(Page 427)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The default)64 W
10 /Courier AF
13722 XM
(:foreground-color)SH
11 /Times-Roman AF
24261 XM
(for the gadgets is)65 W
10 /Courier AF
32341 XM
(opal:motif-gray)SH
11 /Times-Roman AF
(, but the user may provide any)65 W
8280 9151 MT
(instance of)106 W
10 /Courier AF
13562 XM
(opal:color)SH
11 /Times-Roman AF
19943 XM
(in the slot.  Additionally, Opal provides the following colors for use)
106 W( with the)105 W
8280 10347 MT
(Motif gadgets.  The associated filling styles may be of use in other objects designed by the programmer.)SH
8 /Courier AF
10200 12283 MT
(opal:motif-gray)SH
34788 XM
(opal:motif-gray-fill)SH
10200 13385 MT
(opal:motif-blue)SH
34788 XM
(opal:motif-blue-fill)SH
10200 14487 MT
(opal:motif-green)SH
34788 XM
(opal:motif-green-fill)SH
10200 15589 MT
(opal:motif-orange)SH
34788 XM
(opal:motif-orange-fill)SH
10200 16691 MT
(opal:motif-light-gray)SH
34788 XM
(opal:motif-light-gray-fill)SH
10200 17793 MT
(opal:motif-light-blue)SH
34788 XM
(opal:motif-light-blue-fill)SH
10200 18895 MT
(opal:motif-light-green)SH
34788 XM
(opal:motif-light-green-fill)SH
10200 19997 MT
(opal:motif-light-orange)SH
34788 XM
(opal:motif-light-orange-fill)SH
11 /Times-Roman AF
8280 22555 MT
(When the Motif gadgets are)
667 W( used on a black-and-white monitor, the gadgets ignore the)668 W
10 /Courier AF
8280 23751 MT
(:foreground-color)SH
11 /Times-Roman AF
18791 XM
(slot and internally compute reasonable filling-styles that are black, white, or Opal)36 W
8280 24947 MT
(halftones.)SH
12 /Times-Bold AF
8280 28631 MT
(4.1.2. Motif-Background)SH
8 /Courier AF
10200 29796 MT
(\050create-instance 'gg:Motif-Background opal:rectangle)SH
11640 30661 MT
(\050:foreground-color opal:motif-gray\051\051)SH
11 /Times-Roman AF
8280 32959 MT
(In order to simulate the Motif three-dimensional effect in an interface, there should be)
29 W( a gray background)30 W
8280 34155 MT
(in a window containing Motif-style gadgets.  Garnet provides)
24 W( two ways to achieve this effect.  You could)23 W
8280 35351 MT
(add an instance of the)7 W
10 /Courier AF
18181 XM
(motif-background)SH
11 /Times-Roman AF
28064 XM
(object to the window, which is a rectangle whose dimensions)8 W
8280 36547 MT
(conform to the size of the window in which it appears.)SH
8280 38845 MT
(Alternately, you could supply the)258 W
10 /Courier AF
24540 XM
(:background-color)SH
11 /Times-Roman AF
35272 XM
(of your window with an appropriate Opal)257 W
10 /Courier AF
8280 40041 MT
(color)SH
11 /Times-Roman AF
11656 XM
(object \050like)101 W
10 /Courier AF
17113 XM
(opal:motif-gray)SH
11 /Times-Roman AF
(\051. This)
479 W( is generally more efficient, since it is faster to redraw a)102 W
8280 41237 MT
(window with its background color than to redraw a rectangle that occupies the entire window.)SH
/Times-Bold SF
8280 43535 MT
(NOTE:)SH
/Times-Roman SF
12082 XM
(If you choose to use the)43 W
10 /Courier AF
23092 XM
(motif-background)SH
11 /Times-Roman AF
33010 XM
(object, it is)
43 W( essential that the instance be added to)42 W
8280 44731 MT
(the top-level aggregate before any other Garnet object.  This)
128 W( will ensure that the background is drawn)129 W
8280 45927 MT
(behind all other objects in the window.)SH
2994 50 8280 46127 UL
8280 48225 MT
(Of course, the)28 W
10 /Courier AF
14838 XM
(:foreground-color)SH
11 /Times-Roman AF
25341 XM
(of the)28 W
10 /Courier AF
28207 XM
(motif-background)SH
11 /Times-Roman AF
38110 XM
(instance or the)27 W
10 /Courier AF
44880 XM
(:background-color)SH
11 /Times-Roman AF
8280 49421 MT
(of the window should be the same as the colors of all the Motif gadgets in the window.)SH
12 /Times-Bold AF
8280 53105 MT
(4.1.3. Motif-Tab-Inter)SH
8 /Courier AF
10200 54270 MT
(\050create-instance 'gg:Motif-Tab-Inter inter:button-interactor)SH
11640 55135 MT
(\050:window NIL\051)SH
11640 56000 MT
(\050:objects NIL\051)SH
11640 56865 MT
(\050:rank 0\051)SH
11640 57730 MT
(\050:continuous NIL\051)SH
11640 58595 MT
(\050:start-where T\051)SH
11640 59460 MT
(\050:start-event '\050#\134tab :control-tab\051\051)SH
11640 60325 MT
(\050:waiting-priority gg:motif-tab-priority-level\051)SH
11640 61190 MT
(\050:running-priority gg:motif-tab-priority-level\051)SH
11640 62055 MT
(\050:stop-action #'\050lambda \050interactor obj-over\051 ...\051\051)SH
11640 62920 MT
(\050:final-function NIL\051\051)SH
11 /Times-Roman AF
8280 64341 MT
(Each Motif gadget has the ability)
128 W( to be operated by the keyboard as well as the mouse.  In traditional)129 W
8280 65537 MT
(Motif interfaces, the keyboard)
89 W( selection box is moved within each gadget with the arrow keys, and it is)88 W
8280 66733 MT
(moved among gadgets with the tab key \050i.e., one gadget's keyboard selection is activated)
220 W( while the)221 W
8280 67929 MT
(previous gadget's keyboard selection is deactivated\051.  The keyboard interface can)
81 W( be manually activated)80 W
8280 69125 MT
(by setting a Motif gadget's)103 W
10 /Courier AF
20924 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
33902 XM
(to T, but the bookkeeping becomes)
103 W( formidable)104 W
8280 70321 MT
(when there are a large number of Motif)
170 W( gadgets on the screen and their keyboard status is changing.)169 W
8280 71517 MT
(Thus, Garnet provides)
175 W( the)176 W
10 /Courier AF
20681 XM
(motif-tab-inter)SH
11 /Times-Roman AF
30132 XM
(which handles the bookkeeping among multiple Motif)176 W
ES
%%Page: 428 81
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 428)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(gadgets.)SH
6120 10253 MT
(To use the)35 W
10 /Courier AF
11082 XM
(motif-tab-inter)SH
11 /Times-Roman AF
(, create an instance with a list of the Motif gadgets)
35 W( on which to operate in)34 W
6120 11449 MT
(the)SH
10 /Courier AF
7848 XM
(:object)SH
11 /Times-Roman AF
12432 XM
(slot and the window of the objects in the)109 W
10 /Courier AF
31530 XM
(:window)SH
11 /Times-Roman AF
36114 XM
(slot. Usually,)
493 W( these)
109 W( are the only two)110 W
6120 12645 MT
(slots that will need to be set.)SH
6120 14943 MT
(Repeatedly hitting the tab key \050or simultaneously hitting)204 W
10 /Courier AF
32868 XM
(control)SH
11 /Times-Roman AF
37547 XM
(and)SH
10 /Courier AF
39614 XM
(tab)SH
11 /Times-Roman AF
41893 XM
(will cause the keyboard)204 W
6120 16139 MT
(selection to cycle through the)
121 W( list of objects.  Specifically, hitting the tab key causes the)122 W
10 /Courier AF
46866 XM
(:rank)SH
11 /Times-Roman AF
50263 XM
(of the)122 W
10 /Courier AF
6120 17335 MT
(motif-tab-inter)SH
11 /Times-Roman AF
15469 XM
(to be incremented, and the interactor checks the)74 W
10 /Courier AF
37348 XM
(:active-p)SH
11 /Times-Roman AF
43096 XM
(slot of the next object)73 W
6120 18531 MT
(in the)227 W
10 /Courier AF
9325 XM
(:object)SH
11 /Times-Roman AF
14028 XM
(list. If)
731 W( the result is T, then that object's)228 W
10 /Courier AF
33906 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
47009 XM
(slot is set to)228 W
6120 19727 MT
(T. Otherwise, the)SH
10 /Courier AF
14031 XM
(:rank)SH
11 /Times-Roman AF
17306 XM
(is incremented again and the next object is checked.)SH
6120 22025 MT
(The)SH
10 /Courier AF
8147 XM
(:active-p)SH
11 /Times-Roman AF
13864 XM
(slots of the "continuous" Motif gadgets -- the scroll bars, slider, and gauge -- all default)41 W
6120 23221 MT
(to T, while the)404 W
10 /Courier AF
14427 XM
(:active-p)SH
11 /Times-Roman AF
20506 XM
(slots of the Motif buttons and menu)
404 W( depend on the items in the)405 W
10 /Courier AF
6120 24417 MT
(:inactive-items)SH
11 /Times-Roman AF
15395 XM
(list.)SH
6120 26715 MT
(The)SH
10 /Courier AF
8324 XM
(:running-priority)SH
11 /Times-Roman AF
19018 XM
(and)SH
10 /Courier AF
21100 XM
(:waiting-priority)SH
11 /Times-Roman AF
31794 XM
(of the)219 W
10 /Courier AF
35041 XM
(motif-tab-inter)SH
11 /Times-Roman AF
44534 XM
(are both set to be)218 W
10 /Courier AF
6120 27911 MT
(motif-tab-priority-level)SH
11 /Times-Roman AF
(, which is a higher priority than the default interactor priority levels)
55 W( \050but)56 W
6120 29107 MT
(lower than the)31 W
10 /Courier AF
12779 XM
(error-gadget)SH
11 /Times-Roman AF
('s)SH
10 /Courier AF
21078 XM
(error-priority-level)SH
11 /Times-Roman AF
(\051. This)
335 W( allows the)30 W
10 /Courier AF
41416 XM
(motif-tab-inter)SH
11 /Times-Roman AF
50721 XM
(to be)30 W
6120 30303 MT
(used at the same time as the)SH
10 /Courier AF
18675 XM
(inter:text-interactor)SH
11 /Times-Roman AF
31550 XM
(\050as in the)SH
10 /Courier AF
35857 XM
(motif-scrolling-labeled-box)SH
11 /Times-Roman AF
(\051.)SH
6120 32601 MT
(The function in the)31 W
10 /Courier AF
14920 XM
(:final-function)SH
11 /Times-Roman AF
24227 XM
(slot is executed whenever the current selection changes.  It takes)32 W
6120 33797 MT
(the parameters)SH
8 /Courier AF
8040 34962 MT
(\050lambda \050inter new-object\051\051)SH
11 /Times-Roman AF
6120 37260 MT
(Examples of the)117 W
10 /Courier AF
13894 XM
(motif-tab-inter)SH
11 /Times-Roman AF
23286 XM
(in use may be found in demo-motif and in all three Motif button)117 W
6120 38456 MT
(demos.)SH
14 /Times-Bold AF
6120 42274 MT
(4.2. Motif Scroll Bars)SH
8 /Courier AF
8040 43439 MT
(\050create-instance 'gg:Motif-V-Scroll-Bar gg:motif-gadget-prototype)SH
9480 44304 MT
(\050:maybe-constant '\050:left :top :width :height :val-1 :val-2 :scr-incr)SH
18600 45169 MT
(:page-incr :scr-trill-p :percent-visible :scroll-p)SH
18600 46034 MT
(:foreground-color :visible\051\051)SH
9480 46899 MT
(\050:left 0\051)SH
9480 47764 MT
(\050:top 0\051)SH
9480 48629 MT
(\050:width 20\051)SH
9480 49494 MT
(\050:height 200\051)SH
9480 50359 MT
(\050:val-1 0\051)SH
9480 51224 MT
(\050:val-2 100\051)SH
9480 52089 MT
(\050:scr-incr 1\051)SH
9480 52954 MT
(\050:page-incr 5\051)SH
9480 53819 MT
(\050:scr-trill-p T\051)SH
9480 54684 MT
(\050:percent-visible .5\051)SH
9480 55549 MT
(\050:scroll-p T\051)SH
9480 56414 MT
(\050:keyboard-selection-p NIL\051)SH
9480 57279 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 58144 MT
(\050:value \050o-formula ...\051\051)SH
9480 59009 MT
(\050:active-p T\051)SH
9480 59874 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 60739 MT
(\051)SH
ES
%%Page: 429 82
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.2)
SH( Motif)
1800 W( Scroll Bars)SH
51386 XM
(Page 429)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'gg:Motif-H-Scroll-Bar gg:motif-gadget-prototype)SH
11640 8564 MT
(\050:maybe-constant '\050:left :top :width :height :val-1 :val-2 :scr-incr)SH
20760 9429 MT
(:page-incr :scr-trill-p :percent-visible :scroll-p)SH
20760 10294 MT
(:foreground-color :visible\051\051)SH
11640 11159 MT
(\050:left 0\051)SH
11640 12024 MT
(\050:top 0\051)SH
11640 12889 MT
(\050:width 200\051)SH
11640 13754 MT
(\050:height 20\051)SH
11640 14619 MT
(\050:val-1 0\051)SH
11640 15484 MT
(\050:val-2 100\051)SH
11640 16349 MT
(\050:scr-incr 1\051)SH
11640 17214 MT
(\050:page-incr 5\051)SH
11640 18079 MT
(\050:scr-trill-p T\051)SH
11640 18944 MT
(\050:percent-visible .5\051)SH
11640 19809 MT
(\050:scroll-p T\051)SH
11640 20674 MT
(\050:keyboard-selection-p NIL\051)SH
11640 21539 MT
(\050:foreground-color opal:motif-gray\051)SH
11640 22404 MT
(\050:value \050o-formula ...\051\051)SH
11640 23269 MT
(\050:active-p T\051)SH
11640 24134 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 24999 MT
(\051)SH
11 SS 
75 100 0 8692 65071 GB 
%%BeginDocument: gadgets/motif-scroll-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 43
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:16 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 144 271 469 521
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
72 -199 translate
gsave
0 648 325 250 ClipToRectangle
0 0 translate
gsave
0 648 325 250 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
42 616 16 186 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
44 614 14 184 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
44 614 12 182 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
44 601 12 76 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
46 599 10 74 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
46 599 8 72 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
50 613 54 603 45 603 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 45 603 50 613 DrawLine
50 435 45 445 55 445 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 50 435 55 445 DrawLine
82 586 216 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
84 584 214 14 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
84 584 212 12 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
97 584 183 12 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
99 582 181 10 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
99 582 179 8 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
85 579 95 574 95 584 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 95 584 85 579 DrawLine
283 573 283 583 293 578 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 293 578 283 573 DrawLine
82 486 216 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
84 484 214 14 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
84 484 212 12 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
85 484 105 12 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
87 482 103 10 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
87 482 101 8 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
grestore

grestore

0 648 325 250 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 144 271 469 521

%%EndDocument
 GE /Times-Roman SF
8280 47044 MT
(The loader file for the)322 W
10 /Courier AF
19815 XM
(motif-v-scroll-bar)SH
11 /Times-Roman AF
31213 XM
(is "motif-v-scroll-loader".  The loader file for the)323 W
10 /Courier AF
8280 48240 MT
(motif-h-scroll-bar)SH
11 /Times-Roman AF
19355 XM
(is "motif-h-scroll-loader".)SH
8280 50538 MT
(The Motif scroll bars allow the specification of the minimum and maximum values of a range,)
54 W( while the)53 W
10 /Courier AF
8280 51734 MT
(:value)SH
11 /Times-Roman AF
12300 XM
(slot is a report of the currently chosen value in the range.  The interval is)
145 W( determined by the)146 W
8280 52930 MT
(values in)9 W
10 /Courier AF
12514 XM
(:val-1)SH
11 /Times-Roman AF
16398 XM
(and)SH
10 /Courier AF
18270 XM
(:val-2)SH
11 /Times-Roman AF
(, and either slot may be)
9 W( the minimum or maximum of the range.  The value)8 W
8280 54126 MT
(in)SH
10 /Courier AF
9467 XM
(:val-1)SH
11 /Times-Roman AF
13398 XM
(will correspond)
56 W( to the top of the vertical scroll bar and to the left of the horizontal scroll bar.)57 W
8280 55322 MT
(The)SH
10 /Courier AF
10295 XM
(:value)SH
11 /Times-Roman AF
14200 XM
(slot may be accessed directly by)
30 W( some function in the larger interface, and other formulas in)29 W
8280 56518 MT
(the interface may depend on it.  If the)95 W
10 /Courier AF
25933 XM
(:value)SH
11 /Times-Roman AF
29903 XM
(slot is set directly, then)
95 W( the appearance of the scroll bar)96 W
8280 57714 MT
(will be updated accordingly.)SH
8280 60012 MT
(The trill boxes at each end of the scroll bar allow)
112 W( the user to increment and decrement)111 W
10 /Courier AF
48264 XM
(:value)SH
11 /Times-Roman AF
52250 XM
(by the)111 W
8280 61208 MT
(amount specified in)256 W
10 /Courier AF
17999 XM
(:scr-incr)SH
11 /Times-Roman AF
(. The)
787 W( designer may choose to leave the trill boxes)
256 W( out by setting)257 W
10 /Courier AF
8280 62404 MT
(:scr-trill-p)SH
11 /Times-Roman AF
15755 XM
(to NIL.)SH
8280 64702 MT
(The indicator may also be moved directly by mouse movements.  Dragging the indicator)
109 W( while the left)108 W
8280 65898 MT
(mouse button is pressed)
130 W( will change the)131 W
10 /Courier AF
27005 XM
(:value)SH
11 /Times-Roman AF
31011 XM
(accordingly. A)
537 W( click of the left mouse button in the)131 W
8280 67094 MT
(background trough of the scroll bar will cause)
192 W( the)191 W
10 /Courier AF
32151 XM
(:value)SH
11 /Times-Roman AF
36217 XM
(to increase or decrease by)191 W
10 /Courier AF
48805 XM
(:page-incr)SH
11 /Times-Roman AF
(,)SH
8280 68290 MT
(depending on the location of the indicator relative to the mouse click.)SH
8280 70588 MT
(When)SH
10 /Courier AF
11208 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
24110 XM
(is T, then a black-selection box is drawn around the scroll bar and the)28 W
8280 71784 MT
(indicator can be moved)
120 W( with the arrow keys \050uparrow and downarrow for the)119 W
10 /Courier AF
44005 XM
(motif-v-scroll-bar)SH
11 /Times-Roman AF
(,)SH
ES
%%Page: 430 83
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 430)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(leftarrow and rightarrow for the)SH
10 /Courier AF
20381 XM
(motif-h-scroll-bar)SH
11 /Times-Roman AF
(\051.)SH
6120 10253 MT
(The)SH
10 /Courier AF
8164 XM
(:percent-visible)SH
11 /Times-Roman AF
18098 XM
(slot contains a value between 0 and 1, and is used to specify the length of)
59 W( the)60 W
6120 11449 MT
(indicator relative to the length of the trough.  If)244 W
10 /Courier AF
29607 XM
(:percent-visible)SH
11 /Times-Roman AF
39726 XM
(is .5, then the length)
244 W( of the)243 W
6120 12645 MT
(indicator will be half the distance between the two trill boxes.  This)
35 W( feature might be useful in a scrolling)36 W
6120 13841 MT
(menu where the length of the indicator should correspond to one "page" of items in the menu \050e.g.,)
98 W( for)97 W
6120 15037 MT
(three pages of items, set)SH
10 /Courier AF
16994 XM
(:percent-visible)SH
11 /Times-Roman AF
26869 XM
(to .33\051.)SH
6120 17335 MT
(The slots)96 W
10 /Courier AF
10590 XM
(:scroll-p)SH
11 /Times-Roman AF
16361 XM
(and)SH
10 /Courier AF
18320 XM
(:active-p)SH
11 /Times-Roman AF
24091 XM
(are used)
96 W( to enable and disable the scrolling feature of the scroll)97 W
6120 18531 MT
(bar. When)
405 W( either is set to NIL, the)
65 W( trill boxes of the scroll bar become inactive and the indicator cannot)64 W
6120 19727 MT
(be moved.  The difference is that when)60 W
10 /Courier AF
24039 XM
(:active-p)SH
11 /Times-Roman AF
29774 XM
(is set to NIL, then the keyboard selection)
60 W( cannot be)61 W
6120 20923 MT
(enabled.)SH
14 /Times-Bold AF
6120 24741 MT
(4.3. Motif Slider)SH
8 /Courier AF
8040 25906 MT
(\050create-instance 'gg:Motif-Slider gg:motif-v-scroll-bar)SH
9480 26771 MT
(\050:maybe-constant '\050:left :top :height :trough-width :val-1 :val-2)SH
18600 27636 MT
(:scr-incr :page-incr :scr-trill-p :text-offset)SH
18600 28501 MT
(:scroll-p :indicator-text-p :indicator-font)SH
18600 29366 MT
(:foreground-color :visible\051\051)SH
9480 30231 MT
(\050:left 0\051)SH
9480 31096 MT
(\050:top 0\051)SH
9480 31961 MT
(\050:height 200\051)SH
9480 32826 MT
(\050:trough-width 16\051)SH
9480 33691 MT
(\050:val-1 0\051)SH
9480 34556 MT
(\050:val-2 100\051)SH
9480 35421 MT
(\050:scr-incr 1\051)SH
9480 36286 MT
(\050:page-incr 5\051)SH
9480 37151 MT
(\050:scr-trill-p NIL\051)SH
9480 38016 MT
(\050:text-offset 5\051)SH
9480 38881 MT
(\050:scroll-p T\051)SH
9480 39746 MT
(\050:indicator-text-p T\051)SH
9480 40611 MT
(\050:keyboard-selection-p NIL\051)SH
9480 41476 MT
(\050:indicator-font opal:default-font\051)SH
9480 42341 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 43206 MT
(\050:value \050o-formula ...\051\051)SH
9480 44071 MT
(\050:active-p T\051)SH
9480 44936 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 45801 MT
(\050:parts \050...\051\051\051)SH
11 SS 
75 100 0 6570 83998 GB 
%%BeginDocument: gadgets/motif-slider-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 44
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:17 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 246 296 366 496
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
174 -224 translate
gsave
0 648 120 200 ClipToRectangle
0 0 translate
gsave
0 648 120 200 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
26 631 16 166 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
28 629 14 164 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
28 629 12 162 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
28 604 12 40 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
30 602 10 38 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
30 602 8 36 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 1 1 1 true 0 0 [] 2 38 584 30 584 DrawLine
0 0.20 0.20 0.20 true 0 0 [] 2 38 582 30 582 DrawLine
16 591 580 5 14 0 false 0 0 0 false 0 0 0 false (2) 12 /Courier DrawText
82 631 16 166 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
84 629 14 164 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
84 629 12 162 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
84 558 12 34 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
86 556 10 32 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
86 556 8 30 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 1 1 1 true 0 0 [] 2 94 541 86 541 DrawLine
0 0.20 0.20 0.20 true 0 0 [] 2 94 539 86 539 DrawLine
90 628 94 618 85 618 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 85 618 90 628 DrawLine
90 470 85 480 95 480 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 90 470 95 480 DrawLine
grestore

grestore

0 648 120 200 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 246 296 366 496

%%EndDocument
 GE /Times-Roman SF
6120 64096 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(motif-slider)SH
11 /Times-Roman AF
23520 XM
(is "motif-slider-loader".)SH
6120 66394 MT
(The)SH
10 /Courier AF
8253 XM
(motif-slider)SH
11 /Times-Roman AF
15876 XM
(is similar to the)148 W
10 /Courier AF
23558 XM
(motif-v-scroll-bar)SH
11 /Times-Roman AF
(, except)
148 W( that it has a fixed-size indicator)147 W
6120 67590 MT
(with accompanying text feedback.  The mouse can be used to drag the indicator, and)
58 W( the arrow keys can)59 W
6120 68786 MT
(be used when keyboard-selection is activated.)SH
6120 71084 MT
(The slots)519 W
10 /Courier AF
11436 XM
(:value)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16105 XM
(:val-1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20773 XM
(:val-2)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
25441 XM
(:scr-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
31909 XM
(:page-incr)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
38977 XM
(:scr-trill-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
47245 XM
(:scroll-p)SH
11 /Times-Roman AF
(,)SH
ES
%%Page: 431 84
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.5)
SH( Motif)
1800 W( Gauge)SH
51386 XM
(Page 431)SH
46800 50 8280 4486 UL
/Courier SF
8280 7955 MT
(:active-p)SH
11 /Times-Roman AF
14849 XM
(and)SH
10 /Courier AF
17606 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
31375 XM
(all have the same)
894 W( functionality as in the)895 W
10 /Courier AF
8280 9151 MT
(motif-v-scroll-bar)SH
11 /Times-Roman AF
(.)SH
8280 11449 MT
(The)SH
10 /Courier AF
10285 XM
(:trough-width)SH
11 /Times-Roman AF
18380 XM
(slot determines the width of the scroll-bar part of the)
20 W( slider.  The actual)19 W
10 /Courier AF
50270 XM
(:width)SH
11 /Times-Roman AF
54164 XM
(of)SH
8280 12645 MT
(the gadget is not user-settable because of the changing value feedback width.)SH
8280 14943 MT
(The current)4 W
10 /Courier AF
13662 XM
(:value)SH
11 /Times-Roman AF
17541 XM
(of the slider is displayed beside the trough if)4 W
10 /Courier AF
37404 XM
(:indicator-text-p)SH
11 /Times-Roman AF
47883 XM
(is T. The)
4 W( font of)5 W
8280 16139 MT
(the indicator text is in)197 W
10 /Courier AF
19134 XM
(:indicator-font)SH
11 /Times-Roman AF
(. The)
668 W( distance from the indicator text to the trough is in)196 W
10 /Courier AF
8280 17335 MT
(:text-offset)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 21153 MT
(4.4. Motif-Trill-Device)SH
11 SS 
50 100 0 16380 45150 GB 
%%BeginDocument: gadgets/motif-trill-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Opal 7
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jul 27, 1993, 3:39 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 204 331 408 460
%%%Pages: 1
%%EndComments


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
132 388 translate

%
% Begin new window
%
gsave
0 0 204 129 ClipToRectangle
gsave
0 0 204 129 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 200 125 2 2 2 2 DrawGenericWindowFrame
0 0 200 125 ClipToRectangle
gsave
0 0 200 125 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
52 -52 100 27 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
54 -54 98 25 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
54 -54 96 23 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
78 -54 45 23 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
80 -56 43 21 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
80 -56 41 19 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
55 -64 {
  { 76 -54 76 -75 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.83 0.83 0.83] DrawPolyline
[1 1 1] 0 0 [] 2 76 -54 55 -64 DrawLine
126 -76 {
  { 147 -65 126 -55 }
} [1 1 1] 0 0 [] 2 [0.83 0.83 0.83] DrawPolyline
[0.20 0.20 0.20] 0 0 [] 2 147 -65 126 -76 DrawLine
91 -56 -71 19 19 false [0 0 0] [1 1 1] (20) 18 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier Helvetica-Bold 
%%BoundingBox: 204 331 408 460

%%EndDocument
 GE 8 /Courier AF
10200 30096 MT
(\050create-instance 'gg:Motif-Trill-Device gg::motif-gadget-prototype)SH
11160 30961 MT
(\050:left 0\051 \050:top 0\051)SH
11160 31826 MT
(\050:width 150\051 \050:height 40\051)SH
11160 32691 MT
(\050:val-1 0\051 \050:val-2 100\051)SH
11160 33556 MT
(\050:value 20\051)SH
11160 34421 MT
(\050:foreground-color opal:motif-gray\051)SH
11160 35286 MT
(\050:format-string "~a"\051)SH
11160 36151 MT
(\050:value-feedback-font opal:default-font\051)SH
11160 37016 MT
(\050:value-feedback-p T\051)SH
11160 37881 MT
(\050:scroll-incr 1\051)SH
11160 38746 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 39611 MT
(\051)SH
11 /Times-Roman AF
8280 41032 MT
(The loader)
794 W( file for the)795 W
10 /Courier AF
22179 XM
(motif-trill-device)SH
11 /Times-Roman AF
34049 XM
(is "motif-trill-device-loader".  The demo)795 W
10 /Courier AF
8280 42228 MT
(\050gg:motif-trill-go\051)SH
11 /Times-Roman AF
19955 XM
(is loaded by default, and shows an example of the)SH
10 /Courier AF
42162 XM
(motif-trill-device)SH
11 /Times-Roman AF
(.)SH
8280 44526 MT
(The)SH
10 /Courier AF
10619 XM
(motif-trill-device)SH
11 /Times-Roman AF
22048 XM
(is a simple incrementing/decrementing gadget with trill boxes and)
354 W( a)353 W
8280 45722 MT
(numerical display.  The behavior is identical to the standard)76 W
10 /Courier AF
35647 XM
(trill-device)SH
11 /Times-Roman AF
43198 XM
(-- click on the left)
76 W( or right)77 W
8280 46918 MT
(arrows to change the value, and click the left mouse button on the text to edit it.)SH
8280 49216 MT
(The slots)101 W
10 /Courier AF
12760 XM
(:val-1)SH
11 /Times-Roman AF
16736 XM
(and)SH
10 /Courier AF
18700 XM
(:val-2)SH
11 /Times-Roman AF
22676 XM
(contain the upper and lower bounds for the value of the)
101 W( gadget.  Either)100 W
8280 50412 MT
(slot may be the minimum or maximum, and either slot may be NIL \050indicating no boundary\051.)
56 W( If)
388 W( a value)57 W
8280 51608 MT
(less than)
57 W( the minimum allowed value is entered, the value of the gadget will be set to the minimum, and)56 W
8280 52804 MT
(analogously for the maximum.  Clicking on the left trill box always moves the value closer to)88 W
10 /Courier AF
51205 XM
(:val-1)SH
11 /Times-Roman AF
(,)SH
8280 54000 MT
(whether that is the)
184 W( max or min, and clicking on the right trill box always moves the value closer to)183 W
10 /Courier AF
8280 55196 MT
(:val-2)SH
11 /Times-Roman AF
(.)SH
8280 57494 MT
(The current value of the gadget is stored in the)7 W
10 /Courier AF
29120 XM
(:value)SH
11 /Times-Roman AF
33002 XM
(slot, and may be set directly)
7 W( using)8 W
10 /Courier AF
48329 XM
(s-value)SH
11 /Times-Roman AF
(. The)291 W
10 /Courier AF
8280 58690 MT
(:scroll-incr)SH
11 /Times-Roman AF
15853 XM
(slot specifies the increment for changing the value with the trill boxes.)
98 W( All)
470 W( other slots)97 W
8280 59886 MT
(work the same as in the standard)SH
10 /Courier AF
22911 XM
(trill-device)SH
11 /Times-Roman AF
(. See)
275 W( section 3.3 for more information.)SH
8280 62184 MT
(The)SH
10 /Courier AF
10265 XM
(:foreground-color)SH
11 /Times-Roman AF
20740 XM
(slot specifies the color of the object.)SH
ES
%%Page: 432 85
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 432)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(4.5. Motif Gauge)SH
8 /Courier AF
8040 9303 MT
(\050create-instance 'gg:Motif-Gauge gg:motif-gadget-prototype)SH
9480 10168 MT
(\050:maybe-constant '\050:left :top :width :title :foreground-color :title-font)SH
18600 11033 MT
(:value-font :enum-font :num-marks :tic-marks-p)SH
18600 11898 MT
(:enumerate-p :value-feedback-p :text-offset :val-1 :val-2)SH
18600 12763 MT
(:scr-incr :format-string :enum-format-string :visible\051\051)SH
9480 13628 MT
(\050:left 0\051)SH
9480 14493 MT
(\050:top 0\051)SH
9480 15358 MT
(\050:width 230\051)SH
9480 16223 MT
(\050:title "Motif Gauge"\051)SH
9480 17088 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 17953 MT
(\050:title-font opal:default-font\051)SH
9480 18818 MT
(\050:value-font opal:default-font\051)SH
9480 19683 MT
(\050:enum-font \050create-instance NIL opal:font \050:size :small\051\051\051)SH
9480 20548 MT
(\050:num-marks 10\051)SH
/Times-Italic SF
22920 XM
(; Includes endpoints)SH
/Courier SF
9480 21413 MT
(\050:tic-marks-p T\051)SH
9480 22278 MT
(\050:enumerate-p T\051)SH
9480 23143 MT
(\050:value-feedback-p T\051)SH
9480 24008 MT
(\050:text-offset 5\051)SH
9480 24873 MT
(\050:val-1 0\051)SH
9480 25738 MT
(\050:val-2 180\051)SH
9480 26603 MT
(\050:scr-incr 5\051)SH
9480 27468 MT
(\050:format-string "~a"\051)SH
/Times-Italic SF
22920 XM
(; How to print the feedback value)SH
/Courier SF
9480 28333 MT
(\050:enum-format-string "~a"\051)SH
/Times-Italic SF
22920 XM
(; How to print the tic-mark values)SH
/Courier SF
9480 29198 MT
(\050:keyboard-selection-p NIL\051)SH
9480 30063 MT
(\050:value \050o-formula ...\051\051)SH
9480 30928 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 31793 MT
(\051)SH
11 SS 
75 100 0 6570 68115 GB 
%%BeginDocument: gadgets/motif-gauge-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 48
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:23 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 321 431 471
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -249 translate
gsave
0 648 250 150 ClipToRectangle
0 0 translate
gsave
0 648 250 150 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
0 1 1 1 true 0 0 [] 2 222 536 40 536 DrawLine
131.0 536.0 91.0 91.0 0 180 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.70 0.70 0.70 true DrawArc
0 0 0 0 false 0 0 [] 1 217 536 222 536 DrawLine
227 547 538 4 11 0 false 0 0 0 false 0 0 0 false (0) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 212 566 217 567 DrawLine
222 578 569 10 11 0 false 0 0 0 false 0 0 0 false (20) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 197 592 201 594 DrawLine
206 605 596 11 11 0 false 0 0 0 false 0 0 0 false (40) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 174 611 177 615 DrawLine
182 626 617 10 11 0 false 0 0 0 false 0 0 0 false (60) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 146 621 147 626 DrawLine
142 640 631 10 11 0 false 0 0 0 false 0 0 0 false (80) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 116 621 115 626 DrawLine
107 640 631 16 11 0 false 0 0 0 false 0 0 0 false (100) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 88 611 86 615 DrawLine
65 626 617 16 11 0 false 0 0 0 false 0 0 0 false (120) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 65 592 61 594 DrawLine
40 605 596 16 11 0 false 0 0 0 false 0 0 0 false (140) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 50 566 45 567 DrawLine
24 578 569 16 11 0 false 0 0 0 false 0 0 0 false (160) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 45 536 40 536 DrawLine
19 547 538 16 11 0 false 0 0 0 false 0 0 0 false (180) 10 /Courier DrawText
131 536 135 533 162 581 167 577 167 599 10 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
167 599 148 588 154 585 127 539 131 536 10 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
93 531 520 76 14 0 false 0 0 0 false 0 0 0 false (Temperature) 12 /Courier DrawText
111 513 502 40 14 0 false 0 0 0 false 0 0 0 false (60.000) 12 /Courier DrawText
grestore

grestore

0 648 250 150 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 181 321 431 471

%%EndDocument
 GE /Times-Roman SF
6120 46338 MT
(The)SH
10 /Courier AF
8137 XM
(motif-gauge)SH
11 /Times-Roman AF
15044 XM
(is a semi-circular meter)
32 W( with tic-marks around the perimeter.  As with scroll bars and)33 W
6120 47534 MT
(sliders, this object allows the user to)
24 W( specify a value between minimum and maximum values.  An arrow-)23 W
6120 48730 MT
(shaped polygon points to the currently chosen value, and may be)
111 W( rotated either by dragging it with the)112 W
6120 49926 MT
(mouse or by the arrow keys)
170 W( when keyboard selection is activated.  Text below the gauge reports the)169 W
6120 51122 MT
(current value to which the needle is pointing.)SH
6120 53420 MT
(The slots)299 W
10 /Courier AF
10996 XM
(:num-marks)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
17845 XM
(:tic-marks-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
25894 XM
(:enumerate-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33943 XM
(:val-1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
38392 XM
(:val-2)SH
11 /Times-Roman AF
(, and)299 W
10 /Courier AF
45003 XM
(:enum-font)SH
11 /Times-Roman AF
51578 XM
(are)SH
6120 54616 MT
(implemented as in the standard Garnet sliders \050see section 3.2\051.  The value in)42 W
10 /Courier AF
40858 XM
(:val-1)SH
11 /Times-Roman AF
44774 XM
(corresponds to the)41 W
6120 55812 MT
(right side of the gauge.)SH
6120 58110 MT
(The title of the gauge is specified in)75 W
10 /Courier AF
22788 XM
(:title)SH
11 /Times-Roman AF
(. No)
425 W( title will)
75 W( appear if)76 W
10 /Courier AF
37486 XM
(:title)SH
11 /Times-Roman AF
41437 XM
(is NIL.  The fonts for the)76 W
6120 59306 MT
(title of the gauge and the current chosen value are specified in)260 W
10 /Courier AF
36788 XM
(:title-font)SH
11 /Times-Roman AF
43923 XM
(and)SH
10 /Courier AF
46045 XM
(:value-font)SH
11 /Times-Roman AF
(,)SH
6120 60502 MT
(respectively.)SH
6120 62800 MT
(If)SH
10 /Courier AF
7225 XM
(:value-feedback-p)SH
11 /Times-Roman AF
17798 XM
(is T, then numerical)
98 W( text will appear below the gauge indicating the currently)99 W
6120 63996 MT
(chosen value.  The value)
185 W( in)184 W
10 /Courier AF
19537 XM
(:text-offset)SH
11 /Times-Roman AF
27196 XM
(determines the distance between the gauge and the title)184 W
6120 65192 MT
(string, and between the title string and the value feedback.)SH
6120 67490 MT
(The)SH
10 /Courier AF
8116 XM
(:format-string)SH
11 /Times-Roman AF
16802 XM
(and)SH
10 /Courier AF
18676 XM
(:enum-format-string)SH
11 /Times-Roman AF
30362 XM
(slots allow you to control the formatting of)
11 W( the text)12 W
6120 68686 MT
(strings, in case)
245 W( the standard formatting is not appropriate.  This is mainly useful for floating point)244 W
6120 69882 MT
(numbers. The)
529 W( slots should each contain a string that can be passed to the lisp)
127 W( function)128 W
10 /Courier AF
46529 XM
(format)SH
11 /Times-Roman AF
(. The)531 W
6120 71078 MT
(default string is)SH
10 /Courier AF
13239 XM
("~a")SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 433 86
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.6)
SH( Motif)
1800 W( Buttons)SH
51386 XM
(Page 433)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Setting)SH
10 /Courier AF
11719 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
24640 XM
(to T activates the keyboard interface to the)46 W
10 /Courier AF
44066 XM
(motif-gauge)SH
11 /Times-Roman AF
(. The)
367 W( left)46 W
8280 9151 MT
(and right arrow keys can then be used to change the value of the gauge.  The increment)
124 W( by which the)125 W
8280 10347 MT
(value of the gauge changes during each press of an arrow key is in)SH
10 /Courier AF
37782 XM
(:scr-incr)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 14165 MT
(4.6. Motif Buttons)SH
11 SS 
75 100 0 8730 53311 GB 
%%BeginDocument: gadgets/motif-buttons-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 8
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 4:58 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 156 286 456 506
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
84 -214 translate
gsave
0 648 300 220 ClipToRectangle
0 0 translate
gsave
0 648 300 220 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
77 626 44 20 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 624 42 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 624 40 16 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
82 623 612 21 14 0 false 0 0 0 false 0 0 0 false (Red) 12 /Courier DrawText
77 597 44 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 595 42 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 595 40 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
82 594 583 34 14 0 false 0 0 0 false 0 0 0 false (Green) 12 /Courier DrawText
77 568 44 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 566 42 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 566 40 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
82 565 554 27 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier DrawText
178 615 12 12 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
180 613 10 10 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
180 613 8 8 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
195 616 605 28 14 0 false 0 0 0 false 0 0 0 false (Bold) 12 /Courier DrawText
178 592 12 12 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
180 590 10 10 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
180 590 8 8 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
195 593 582 40 14 0 false 0 0 0 false 0 0 0 false (Italic) 12 /Courier DrawText
178 569 12 12 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
180 567 10 10 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
180 567 8 8 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
195 570 559 62 14 0 false 0 0 0 false 0 0 0 false (Underline) 12 /Courier DrawText
78 509 84 515 90 509 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
78 509 84 503 90 509 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
95 516 505 63 14 0 false 0 0 0 false 0 0 0 false (Helvetica) 12 /Courier DrawText
78 486 84 492 90 486 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.70 0.70 0.70 true DrawPolyline
78 486 84 480 90 486 6 0 1 1 1 true 0 0 [] 2 0 0.70 0.70 0.70 true DrawPolyline
95 493 482 41 14 0 false 0 0 0 false 0 0 0 false (Geneva) 12 /Courier DrawText
78 463 84 469 90 463 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
78 463 84 457 90 463 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
95 470 459 47 14 0 false 0 0 0 false 0 0 0 false (Courier) 12 /Courier DrawText
178 509 184 515 190 509 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
178 509 184 503 190 509 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
195 516 505 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
178 486 184 492 190 486 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
178 486 184 480 190 486 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
195 493 482 34 14 0 false 0 0 0 false 0 0 0 false (Times) 12 /Courier DrawText
178 463 184 469 190 463 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
178 463 184 457 190 463 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
195 470 459 41 14 0 false 0 0 0 false 0 0 0 false (Symbol) 12 /Courier DrawText
grestore

grestore

0 648 300 220 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 156 286 456 506

%%EndDocument
 GE 8280 33613 MT
(Figure 4-2:)SH
/Times-Roman SF
14053 XM
(Motif Text Buttons, Check Buttons, and Radio Buttons)SH
8280 35564 MT
(As with the)
150 W( standard Garnet buttons, the Motif buttons can be either a single, stand-alone button or a)149 W
8280 36760 MT
(panel of buttons.)
192 W( Use)
660 W( of the Motif gadgets is identical to the use of standard Garnet buttons in the)193 W
8280 37956 MT
(following respects \050see Section 3.5\051.)SH
10480 39409 MT
(1.)SH
11580 XM
(All slots that can be customized in an aggrelist)
214 W( can be customized in the Motif button)213 W
11580 40605 MT
(panels.)SH
10480 42499 MT
(2.)SH
11580 XM
(The)SH
10 /Courier AF
13927 XM
(:value)SH
11 /Times-Roman AF
18164 XM
(slot contains the string or atom of)
362 W( the currently selected item \050in the)363 W
10 /Courier AF
11580 43695 MT
(motif-check-button-panel)SH
11 /Times-Roman AF
26301 XM
(this value is a list of selected items\051.  In)
46 W( button panels, the)45 W
11580 44891 MT
(currently selected component of the panel's aggrelist is named in the)SH
10 /Courier AF
42095 XM
(:value-obj)SH
11 /Times-Roman AF
48370 XM
(slot.)SH
10480 46785 MT
(3.)SH
11580 XM
(The)SH
10 /Courier AF
13660 XM
(:width)SH
11 /Times-Roman AF
17630 XM
(and)SH
10 /Courier AF
19588 XM
(:height)SH
11 /Times-Roman AF
24158 XM
(of button panels are determined internally,)
95 W( and may not be set)96 W
11580 47981 MT
(directly. Instead,)
727 W( refer to the slots)226 W
10 /Courier AF
28465 XM
(:fixed-width-size)SH
11 /Times-Roman AF
39166 XM
(and)SH
10 /Courier AF
41255 XM
(:fixed-height-size)SH
11 /Times-Roman AF
(.)SH
11580 49177 MT
(The)SH
10 /Courier AF
13565 XM
(:width)SH
11 /Times-Roman AF
17440 XM
(and)SH
10 /Courier AF
19303 XM
(:height)SH
11 /Times-Roman AF
23778 XM
(slots may be accessed after the object is instantiated.)SH
10480 51071 MT
(4.)SH
11580 XM
(The)SH
10 /Courier AF
13611 XM
(:items)SH
11 /Times-Roman AF
17532 XM
(slot can be either a list of)
46 W( strings, a list of atoms, or a list of string/function or)47 W
11580 52267 MT
(atom/function pairs \050see section 1.4.3\051.)SH
10480 54161 MT
(5.)SH
11580 XM
(The font in which the button labels appear may be specified in the)SH
10 /Courier AF
40935 XM
(:font)SH
11 /Times-Roman AF
44210 XM
(slot.)SH
10480 56055 MT
(6.)SH
11580 XM
(Most of the buttons and button panels)
29 W( have a)28 W
10 /Courier AF
31849 XM
(:toggle-p)SH
11 /Times-Roman AF
37552 XM
(slot that controls whether buttons)28 W
11580 57251 MT
(can become deselected.  If the value of this slot is)
156 W( T, then clicking on a selected button)157 W
11580 58447 MT
(deselects it.)
1073 W( Otherwise,)
2419 W( the button always stays selected, though the)1072 W
10 /Courier AF
11580 59643 MT
(:selection-function)SH
11 /Times-Roman AF
23292 XM
(and the item functions)
37 W( will continue to be executed each time the)38 W
11580 60839 MT
(button is pressed.)SH
8280 63137 MT
(The following slots provide additional functionality for the Motif buttons:)SH
10480 64590 MT
(1.)SH
11580 XM
(In single Motif buttons, if the)48 W
10 /Courier AF
25099 XM
(:active-p)SH
11 /Times-Roman AF
30822 XM
(slot is NIL, then the string)
48 W( of the button appears)47 W
11580 65786 MT
(in "grayed-out" text and the button is not user selectable.)SH
10480 67680 MT
(2.)SH
11580 XM
(Analogously, the)234 W
10 /Courier AF
19839 XM
(:inactive-items)SH
11 /Times-Roman AF
29348 XM
(slot of the)
234 W( Motif button panels contains a list of)235 W
11580 68876 MT
(strings or atoms corresponding to the)
102 W( members of the)101 W
10 /Courier AF
36231 XM
(:items)SH
11 /Times-Roman AF
40207 XM
(list. The)
477 W( text of each item)101 W
11580 70072 MT
(listed in)147 W
10 /Courier AF
15664 XM
(:inactive-items)SH
11 /Times-Roman AF
25086 XM
(will appear "grayed-out" and those buttons)
147 W( will not be user)148 W
11580 71268 MT
(selectable. If)275 W
10 /Courier AF
17748 XM
(:active-p)SH
11 /Times-Roman AF
23423 XM
(is set to NIL, then all items will appear "grayed-out".)SH
ES
%%Page: 434 87
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 434)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
8320 7955 MT
(3.)SH
9420 XM
(When the slot)327 W
10 /Courier AF
16786 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
29988 XM
(is T, the keyboard interface to the button)326 W
9420 9151 MT
(gadgets is activated.  The arrow)
108 W( keys will move the selection box among the buttons in a)109 W
9420 10347 MT
(button panel, and)
68 W( the space-bar will select the boxed button.  The component of the button)67 W
9420 11543 MT
(panel aggrelist currently surrounded by)
1038 W( the selection box is named in)1039 W
10 /Courier AF
9420 12739 MT
(:keyboard-selection-obj)SH
11 /Times-Roman AF
(, and its string is in)12 W
10 /Courier AF
31941 XM
(:keyboard-selection)SH
11 /Times-Roman AF
(. Thus,)
298 W( the slot)11 W
10 /Courier AF
9420 13935 MT
(:keyboard-selection)SH
11 /Times-Roman AF
21191 XM
(may be set with a string \050or an atom, depending on)
96 W( the)97 W
10 /Courier AF
46570 XM
(:items)SH
11 /Times-Roman AF
9420 15131 MT
(list\051 to put the selection box around a button.  Since this slot)
248 W( contains a formula, the)247 W
9420 16327 MT
(programmer may not supply an)
139 W( initial value at create-instance time.  Instead, as with the)140 W
10 /Courier AF
9420 17523 MT
(:value)SH
11 /Times-Roman AF
13352 XM
(slot, the user)
57 W( must first gv the)56 W
10 /Courier AF
27068 XM
(:keyboard-selection)SH
11 /Times-Roman AF
38799 XM
(slot and then s-value it to)56 W
9420 18719 MT
(the desired initial value.)SH
8320 20613 MT
(4.)SH
/Times-Bold SF
9420 XM
(NOTE:)SH
/Times-Roman SF
13214 XM
(When keyboard selection is activated, the space-bar is used)
35 W( to select buttons, while)36 W
9420 21809 MT
(the return key is used to select items in the)SH
10 /Courier AF
28422 XM
(motif-menu)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 25493 MT
(4.6.1. Motif Text Buttons)SH
8 /Courier AF
8040 26658 MT
(\050create-instance 'gg:Motif-Text-Button gg:motif-gadget-prototype)SH
9480 27523 MT
(\050:maybe-constant '\050:left :top :text-offset :active-p :string :toggle-p :font)SH
18600 28388 MT
(:final-feedback-p :foreground-color :visible\051\051)SH
9480 29253 MT
(\050:left 0\051)SH
9480 30118 MT
(\050:top 0\051)SH
9480 30983 MT
(\050:text-offset 5\051)SH
9480 31848 MT
(\050:active-p T\051)SH
9480 32713 MT
(\050:string "Motif Text Button"\051)SH
9480 33578 MT
(\050:font opal:default-font\051)SH
9480 34443 MT
(\050:final-feedback-p NIL\051)SH
9480 35308 MT
(\050:toggle-p T\051)SH
9480 36173 MT
(\050:keyboard-selection-p NIL\051)SH
9480 37038 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 37903 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
9480 38768 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)SH
/Times-Italic SF
27720 XM
(;Set by interactor)SH
/Courier SF
9480 39633 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 40498 MT
(\051)SH
8040 43525 MT
(\050create-instance 'gg:Motif-Text-Button-Panel motif-gadget-prototype)SH
9480 44390 MT
(\050:maybe-constant '\050:left :top :text-offset :final-feedback-p :toggle-p :items :font)SH
18600 45255 MT
(:foreground-color :direction :v-spacing :h-spacing :v-align)SH
18600 46120 MT
(:h-align :indent :fixed-width-p :fixed-width-size :fixed-height-p)SH
18600 46985 MT
(:fixed-height-size :rank-margin :pixel-margin :visible\051\051)SH
9480 47850 MT
(\050:left 0\051)SH
9480 48715 MT
(\050:top 0\051)SH
9480 49580 MT
(\050:text-offset 5\051)SH
9480 50445 MT
(\050:final-feedback-p NIL\051)SH
9480 51310 MT
(\050:items '\050"Text 1" "Text 2" "Text 3" "Text 4"\051\051)SH
9480 52175 MT
(\050:inactive-items NIL\051)SH
9480 53040 MT
(\050:toggle-p NIL\051)SH
9480 53905 MT
(\050:keyboard-selection-p NIL\051)SH
9480 54770 MT
(\050:keyboard-selection \050o-formula ...\051\051)SH
9480 55635 MT
(\050:keyboard-selection-obj \050o-formula ...\051\051)SH
9480 56500 MT
(\050:font opal:default-font\051)SH
9480 57365 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 58230 MT
(\050:value-obj NIL\051)SH
9480 59095 MT
(\050:value \050o-formula ...\051\051)SH
9480 59960 MT
(\050:active-p \050o-formula ...\051\051)SH
9480 60825 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 61690 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
6120 63111 MT
(The loader file)
71 W( for the)70 W
10 /Courier AF
16397 XM
(motif-text-button)SH
11 /Times-Roman AF
26942 XM
(and)SH
10 /Courier AF
28875 XM
(motif-text-button-panel)SH
11 /Times-Roman AF
43020 XM
(is "motif-text-buttons-)70 W
6120 64307 MT
(loader".)SH
6120 66605 MT
(The)SH
10 /Courier AF
8120 XM
(motif-text-button-panel)SH
11 /Times-Roman AF
22210 XM
(is a)
15 W( set of rectangular buttons, with the string or atom associated with)16 W
6120 67801 MT
(each button aligned inside.  The button will stay depressed)
369 W( after the mouse is released only if)368 W
10 /Courier AF
6120 68997 MT
(:final-feedback-p)SH
11 /Times-Roman AF
16595 XM
(is T.)SH
6120 71295 MT
(The distance from the beginning of the longest label to the inside edge of the button frame is specified in)37 W
ES
%%Page: 435 88
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.6)
SH( Motif)
1800 W( Buttons)SH
51386 XM
(Page 435)SH
46800 50 8280 4486 UL
/Courier SF
8280 7955 MT
(:text-offset)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 11639 MT
(4.6.2. Motif Check Buttons)SH
8 /Courier AF
10200 12804 MT
(\050create-instance 'gg:Motif-Check-Button gg:motif-gadget-prototype)SH
11640 13669 MT
(\050:maybe-constant '\050:left :top :button-width :text-offset :text-on-left-p)SH
20760 14534 MT
(:active-p :toggle-p :string :font :foreground-color :visible\051\051)SH
11640 15399 MT
(\050:left 0\051)SH
11640 16264 MT
(\050:top 0\051)SH
11640 17129 MT
(\050:button-width 12\051)SH
11640 17994 MT
(\050:text-offset 5\051)SH
11640 18859 MT
(\050:text-on-left-p NIL\051)SH
11640 19724 MT
(\050:active-p T\051)SH
11640 20589 MT
(\050:string "Motif Check Button"\051)SH
11640 21454 MT
(\050:font opal:default-font\051)SH
11640 22319 MT
(\050:toggle-p T\051)SH
11640 23184 MT
(\050:keyboard-selection-p NIL\051)SH
11640 24049 MT
(\050:foreground-color opal:motif-gray\051)SH
11640 24914 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
11640 25779 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)SH
/Times-Italic SF
29400 XM
(;Set by interactor)SH
/Courier SF
11640 26644 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 27509 MT
(\051)SH
10200 30536 MT
(\050create-instance 'gg:Motif-Check-Button-Panel motif-gadget-prototype)SH
11640 31401 MT
(\050:maybe-constant '\050:left :top :button-width :text-offset :text-on-left-p :items)SH
20760 32266 MT
(:font :foreground-color :direction :v-spacing :h-spacing)SH
20760 33131 MT
(:v-align :h-align :indent :fixed-width-p :fixed-width-size)SH
20760 33996 MT
(:fixed-height-p :fixed-height-size :rank-margin :pixel-margin)SH
20760 34861 MT
(:visible\051\051)SH
11640 35726 MT
(\050:left 0\051)SH
11640 36591 MT
(\050:top 0\051)SH
11640 37456 MT
(\050:button-width 12\051)SH
11640 38321 MT
(\050:text-offset 5\051)SH
11640 39186 MT
(\050:text-on-left-p NIL\051)SH
11640 40051 MT
(\050:items '\050"Check 1" "Check 2" "Check 3"\051\051)SH
11640 40916 MT
(\050:inactive-items NIL\051)SH
11640 41781 MT
(\050:keyboard-selection-p NIL\051)SH
11640 42646 MT
(\050:keyboard-selection \050o-formula ...\051\051)SH
11640 43511 MT
(\050:keyboard-selection-obj \050o-formula ...\051\051)SH
11640 44376 MT
(\050:font opal:default-font\051)SH
11640 45241 MT
(\050:foreground-color opal:motif-gray\051)SH
11640 46106 MT
(\050:value-obj NIL\051)SH
11640 46971 MT
(\050:value \050o-formula ...\051\051)SH
11640 47836 MT
(\050:active-p \050o-formula ..\051\051)SH
11640 48701 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 49566 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
8280 50987 MT
(The loader file for the)51 W
10 /Courier AF
18460 XM
(motif-check-button)SH
11 /Times-Roman AF
29585 XM
(and the)50 W
10 /Courier AF
33167 XM
(motif-check-button-panel)SH
11 /Times-Roman AF
47892 XM
(is "motif-check-)50 W
8280 52183 MT
(buttons-loader".)SH
8280 54481 MT
(The)SH
10 /Courier AF
10459 XM
(motif-check-button-panel)SH
11 /Times-Roman AF
25328 XM
(is analogous to)
194 W( the)195 W
10 /Courier AF
34600 XM
(x-button-panel)SH
11 /Times-Roman AF
43470 XM
(from the standard Garnet)195 W
8280 55677 MT
(Gadget Set.)
191 W( Any)
656 W( number of buttons may be selected at one time, and clicking on a selected button)190 W
8280 56873 MT
(de-selects it.)SH
8280 59171 MT
(Since the)47 W
10 /Courier AF
12712 XM
(motif-check-button-panel)SH
11 /Times-Roman AF
27434 XM
(allows selection of several items)
47 W( at once, the)48 W
10 /Courier AF
47699 XM
(:value)SH
11 /Times-Roman AF
51622 XM
(slot is a)48 W
8280 60367 MT
(list of strings \050or atoms\051, rather than a single string.)
143 W( Similarly,)560 W
10 /Courier AF
37767 XM
(:value-obj)SH
11 /Times-Roman AF
44184 XM
(contains a list of button)142 W
8280 61563 MT
(objects.)SH
8280 63861 MT
(The slot)58 W
10 /Courier AF
12246 XM
(:text-on-left-p)SH
11 /Times-Roman AF
21579 XM
(specifies whether the text will appear on the right)
58 W( or left of the buttons.  A)59 W
8280 65057 MT
(NIL value indicates that the text should appear on the right.  When text appears on the right, the)
34 W( designer)33 W
8280 66253 MT
(will probably want to set)SH
10 /Courier AF
19493 XM
(:h-align)SH
11 /Times-Roman AF
24568 XM
(to)SH
10 /Courier AF
25699 XM
(:left)SH
11 /Times-Roman AF
28974 XM
(in order to left-justify the text against the buttons.)SH
8280 68551 MT
(The distance from the labels to the buttons is specified in)SH
10 /Courier AF
33667 XM
(:text-offset)SH
11 /Times-Roman AF
(.)SH
8280 70849 MT
(The slot)SH
10 /Courier AF
12130 XM
(:button-width)SH
11 /Times-Roman AF
20205 XM
(specifies the height and width of each button square.)SH
ES
%%Page: 436 89
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 436)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(4.6.3. Motif Radio Buttons)SH
8 /Courier AF
8040 9169 MT
(\050create-instance 'gg:Motif-Radio-Button gg:motif-gadget-prototype)SH
9480 10034 MT
(\050:maybe-constant '\050:left :top :button-width :text-offset :text-on-left-p)SH
18600 10899 MT
(:toggle-p :active-p :string :font :foreground-color :visible\051\051)SH
9480 11764 MT
(\050:left 0\051)SH
9480 12629 MT
(\050:top 0\051)SH
9480 13494 MT
(\050:button-width 12\051)SH
9480 14359 MT
(\050:text-offset 5\051)SH
9480 15224 MT
(\050:text-on-left-p NIL\051)SH
9480 16089 MT
(\050:active-p T\051)SH
9480 16954 MT
(\050:string "Motif Radio Button"\051)SH
9480 17819 MT
(\050:font opal:default-font\051)SH
9480 18684 MT
(\050:toggle-p T\051)SH
9480 19549 MT
(\050:keyboard-selection-p NIL\051)SH
9480 20414 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 21279 MT
(\050:value \050o-formula \050if \050gvl :selected\051 \050gvl :string\051\051\051\051)SH
9480 22144 MT
(\050:selected \050o-formula \050gvl :value\051\051\051)SH
/Times-Italic SF
27720 XM
(; Set by interactor)SH
/Courier SF
9480 23009 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
27720 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 23874 MT
(\051)SH
8040 26901 MT
(\050create-instance 'gg:Motif-Radio-Button-Panel motif-gadget-prototype)SH
9480 27766 MT
(\050:maybe-constant '\050:left :top :button-width :text-offset :text-on-left-p :toggle-p)SH
18600 28631 MT
(:items :font :foreground-color :direction :v-spacing :h-spacing)SH
18600 29496 MT
(:v-align :h-align :indent :fixed-width-p :fixed-width-size)SH
18600 30361 MT
(:fixed-height-p :fixed-height-size :rank-margin :pixel-margin)SH
18600 31226 MT
(:visible\051\051)SH
9480 32091 MT
(\050:left 0\051)SH
9480 32956 MT
(\050:top 0\051)SH
9480 33821 MT
(\050:button-width 12\051)SH
9480 34686 MT
(\050:text-offset 5\051)SH
9480 35551 MT
(\050:text-on-left-p NIL\051)SH
9480 36416 MT
(\050:items '\050"Radio 1" "Radio 2" "Radio 3"\051\051)SH
9480 37281 MT
(\050:inactive-items NIL\051)SH
9480 38146 MT
(\050:toggle-p NIL\051)SH
9480 39011 MT
(\050:keyboard-selection-p NIL\051)SH
9480 39876 MT
(\050:keyboard-selection \050o-formula ...\051\051)SH
9480 40741 MT
(\050:keyboard-selection-obj \050o-formula ...\051\051)SH
9480 41606 MT
(\050:font opal:default-font\051)SH
9480 42471 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 43336 MT
(\050:value-obj NIL\051)SH
9480 44201 MT
(\050:value \050o-formula ...\051\051)SH
9480 45066 MT
(\050:active-p \050o-formula ...\051\051)SH
9480 45931 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 46796 MT
(<All customizable slots of an aggrelist>\051)SH
11 /Times-Roman AF
6120 48217 MT
(The loader file)
269 W( for the)270 W
10 /Courier AF
17393 XM
(motif-radio-button)SH
11 /Times-Roman AF
28738 XM
(and)SH
10 /Courier AF
30871 XM
(motif-radio-button-panel)SH
11 /Times-Roman AF
45816 XM
(is "motif-radio-)270 W
6120 49413 MT
(buttons-loader".)SH
6120 51711 MT
(The)SH
10 /Courier AF
8129 XM
(motif-radio-button-panel)SH
11 /Times-Roman AF
22828 XM
(is a set of diamond buttons with)
24 W( items appearing to either the left or)23 W
6120 52907 MT
(the right of the buttons \050implementation of)6 W
10 /Courier AF
25197 XM
(:button-width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33553 XM
(:text-on-left-p)SH
11 /Times-Roman AF
42834 XM
(and)SH
10 /Courier AF
44704 XM
(:text-offset)SH
11 /Times-Roman AF
52186 XM
(is)SH
6120 54103 MT
(identical to the motif check buttons\051.  Only one button may be selected at a time.)SH
ES
%%Page: 437 90
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.8)
SH( Motif)
1800 W( Menu)SH
51386 XM
(Page 437)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(4.7. Motif Option Button)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Motif-Option-Button opal:aggregadget)SH
11160 10168 MT
(\050:maybe-constant '\050:left :top :text-offset :label :button-offset :items :initial-item)SH
20280 11033 MT
(:button-font :label-font :button-fixed-width-p :v-spacing)SH
20280 11898 MT
(:keep-menu-in-screen-p :menu-h-align :foreground-color\051\051)SH
11160 12763 MT
(\050:left 40\051 \050:top 40\051)SH
11160 13628 MT
(\050:text-offset 6\051)SH
11160 14493 MT
(\050:label "Option button:"\051)SH
11160 15358 MT
(\050:button-offset 2\051)SH
11160 16223 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" "Item 4"\051\051)SH
11160 17088 MT
(\050:initial-item \050o-formula \050first \050gvl :items\051\051\051\051)SH
11160 17953 MT
(\050:button-font opal:default-font\051)SH
11160 18818 MT
(\050:label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 19683 MT
(\050:foreground-color opal:motif-gray\051)SH
11160 20548 MT
(\050:value \050o-formula \050gvl :option-text-button :string\051\051\051)SH
11160 21413 MT
(\050:button-fixed-width-p T\051)SH
11160 22278 MT
(\050:v-spacing 8\051)SH
11160 23143 MT
(\050:keep-menu-in-screen-p T\051)SH
11160 24008 MT
(\050:menu-h-align :left\051)SH
11160 24873 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 25738 MT
(...\051)SH
11 SS 
75 100 0 -3585 66609 GB 
%%BeginDocument: gadgets/motif-option-button-normal.ps
%!PS-Adobe-2.0
%%Title: Option Demo
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 4:26 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 235 371 377 422
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
163 -298 translate
gsave
0 648 142 51 ClipToRectangle
0 0 translate
gsave
0 648 142 51 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
15 633 622 39 14 0 false 0 0 0 false 0 0 0 false (Color:) 12 /Courier-Bold DrawText
66 635 45 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
68 633 43 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
68 633 41 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
74 633 622 29 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier-BoldOblique DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-BoldOblique /Courier-Bold 
%%BoundingBox: 235 371 377 422

%%EndDocument
 GE 75 100 0 19140 62559 GB 
%%BeginDocument: gadgets/motif-option-button-pressed.ps
%!PS-Adobe-2.0
%%Title: 
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 4:29 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 220 317 393 475
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
148 -245 translate
gsave
0 648 173 158 ClipToRectangle
0 0 translate
gsave
%0 648 173 158 0 0 0 0 false 0 0 [] -1 0 1.00 1.00 1.00 true DrawRectangle
grestore

gsave

%
% Begin new window
%
0 -13 translate
gsave
0 648 142 51 ClipToRectangle
0 0 translate
gsave
0 648 142 51 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
15 633 622 39 14 0 false 0 0 0 false 0 0 0 false (Color:) 12 /Courier-Bold DrawText
grestore

grestore

grestore

gsave

%
% Begin new window
%
64 0 translate
gsave
0 648 109 158 ClipToRectangle
0 0 translate
gsave
0 648 109 158 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
2 646 107 156 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
2 646 105 154 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
16 642 631 23 14 0 false 0 0 0 false 0 0 0 false (Red) 12 /Courier-BoldOblique DrawText
16 620 609 29 14 0 false 0 0 0 false 0 0 0 false (Blue) 12 /Courier-BoldOblique DrawText
16 598 587 35 14 0 false 0 0 0 false 0 0 0 false (Green) 12 /Courier-BoldOblique DrawText
16 576 565 42 14 0 false 0 0 0 false 0 0 0 false (Yellow) 12 /Courier-BoldOblique DrawText
16 554 543 71 14 0 false 0 0 0 false 0 0 0 false (Aquamarine) 12 /Courier-BoldOblique DrawText
16 532 521 28 14 0 false 0 0 0 false 0 0 0 false (Cyan) 12 /Courier-BoldOblique DrawText
16 510 499 76 14 0 false 0 0 0 false 0 0 0 false (Fluorescent) 12 /Courier-BoldOblique DrawText
5 605 5 621 104 621 6 0 1 1 1 true 0 0 [] 2 -1 0 0 0 false DrawPolyline
104 621 104 605 5 605 6 0 0.20 0.20 0.20 true 0 0 [] 2 -1 0 0 0 false DrawPolyline
grestore

grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-BoldOblique /Courier-Bold 
%%BoundingBox: 220 317 393 475

%%EndDocument
 GE /Times-Bold SF
8280 40536 MT
(Figure 4-3:)SH
/Times-Roman SF
14053 XM
(A Motif option button in)
84 W( its normal state \050left\051, and showing the available options after the)83 W
14053 41732 MT
(button is pressed \050right\051.)SH
8280 43683 MT
(This is a Motif version of the)121 W
10 /Courier AF
22234 XM
(option-button)SH
11 /Times-Roman AF
30430 XM
(gadget. When)
518 W( the left mouse button is clicked on the)122 W
8280 44879 MT
(option button, a)
167 W( menu will pop up, from which items can be selected by moving the mouse over the)166 W
8280 46075 MT
(desired item and releasing the button.  The selected item will)
183 W( appear as the new label of the button.)184 W
8280 47271 MT
(Figure 4-3 shows a Motif option button in its normal state and after the button has been pressed.)SH
8280 49569 MT
(This button)
503 W( works exactly like the standard)502 W
10 /Courier AF
31072 XM
(option-button)SH
11 /Times-Roman AF
39649 XM
(described in section 3.6.  The)502 W
8280 50765 MT
(customizations are also alike, except that the)763 W
10 /Courier AF
33538 XM
(motif-option-button)SH
11 /Times-Roman AF
45977 XM
(does not have a)764 W
10 /Courier AF
8280 51961 MT
(:button-shadow-offset)SH
11 /Times-Roman AF
21305 XM
(slot and adds a)150 W
10 /Courier AF
28687 XM
(:background-color)SH
11 /Times-Roman AF
39312 XM
(slot. The)
574 W( loader file for the motif)149 W
8280 53157 MT
(option button is named "motif-option-button-loader".)SH
ES
%%Page: 438 91
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 438)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(4.8. Motif Menu)SH
8 /Courier AF
8040 9303 MT
(\050create-instance 'gg:Motif-Menu gg:motif-gadget-prototype)SH
9480 10168 MT
(\050:maybe-constant '\050:left :top :min-frame-width :text-offset :v-spacing :h-align)SH
18600 11033 MT
(:items :accelerators :bar-above-these-items :item-font)SH
18600 11898 MT
(:accel-font :item-to-string-function :final-feedback-p)SH
18600 12763 MT
(:foreground-color :visible\051\051)SH
9480 13628 MT
(\050:left 0\051)SH
9480 14493 MT
(\050:top 0\051)SH
9480 15358 MT
(\050:min-frame-width 0\051)SH
9480 16223 MT
(\050:text-offset 6\051)SH
9480 17088 MT
(\050:v-spacing 8\051)SH
9480 17953 MT
(\050:h-align :left\051)SH
9480 18818 MT
(\050:items '\050"Menu 1" "Menu 2" "Menu 3" "Menu 4" "Menu 5"\051\051)SH
9480 19683 MT
(\050:inactive-items NIL\051)SH
9480 20548 MT
(\050:accelerators NIL\051)SH
9480 21413 MT
(\050:bar-above-these-items NIL\051)SH
9480 22278 MT
(\050:item-to-string-function)SH
9960 23143 MT
(#'\050lambda \050item\051)SH
11880 24008 MT
(\050if item)SH
13800 24873 MT
(\050if \050stringp item\051)SH
15720 25738 MT
(item)SH
15720 26603 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
13800 27468 MT
(""\051\051\051)SH
9480 28333 MT
(\050:final-feedback-p T\051)SH
9480 29198 MT
(\050:keyboard-selection-p NIL\051)SH
9480 30063 MT
(\050:keyboard-selection \050o-formula ...\051\051)SH
9480 30928 MT
(\050:keyboard-selection-obj \050o-formula ...\051\051)SH
9480 31793 MT
(\050:item-font opal:default-font\051)SH
9480 32658 MT
(\050:accel-font opal:default-font\051)SH
9480 33523 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 34388 MT
(\050:value-obj NIL\051)SH
9480 35253 MT
(\050:value \050o-formula ...\051\051)SH
9480 36118 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 36983 MT
(\051)SH
11 SS 
75 100 0 6570 75180 GB 
%%BeginDocument: gadgets/motif-menu-pix.ps
%!PS-Adobe-2.0
%%Title: Motif Menu
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 1, 1992, 5:09 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 201 296 411 496
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
129 -224 translate
gsave
0 648 210 200 ClipToRectangle
0 0 translate
gsave
0 648 210 200 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
34 628 142 158 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
36 626 140 156 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
36 626 138 154 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
42 622 611 84 14 0.50 false 0 0 0 false 0.83 0.83 0.83 true (Restore size) 12 /Courier-Bold DrawText
153 622 611 13 14 0.50 false 0 0 0 false 0.83 0.83 0.83 true (F2) 12 /Courier-Bold DrawText
0.50 0 0 0 false 0 0 [] 1 49 609 42 609 DrawLine
42 600 589 78 14 0 false 0 0 0 false 0 0 0 false (Move window) 12 /Courier-Bold DrawText
153 600 589 13 14 0 false 0 0 0 false 0 0 0 false (F3) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 49 587 42 587 DrawLine
42 578 567 92 14 0 false 0 0 0 false 0 0 0 false (Resize window) 12 /Courier-Bold DrawText
153 578 567 13 14 0 false 0 0 0 false 0 0 0 false (F4) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 63 565 56 565 DrawLine
42 556 545 98 14 0 false 0 0 0 false 0 0 0 false (Iconify window) 12 /Courier-Bold DrawText
153 556 545 13 14 0 false 0 0 0 false 0 0 0 false (F5) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 49 543 42 543 DrawLine
42 534 523 62 14 0 false 0 0 0 false 0 0 0 false (Full-zoom) 12 /Courier-Bold DrawText
153 534 523 13 14 0 false 0 0 0 false 0 0 0 false (F6) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 49 521 42 521 DrawLine
42 512 501 85 14 0 false 0 0 0 false 0 0 0 false (Lower window) 12 /Courier-Bold DrawText
153 512 501 13 14 0 false 0 0 0 false 0 0 0 false (F7) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 49 499 42 499 DrawLine
42 490 479 78 14 0 false 0 0 0 false 0 0 0 false (Kill window) 12 /Courier-Bold DrawText
153 490 479 13 14 0 false 0 0 0 false 0 0 0 false (F8) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 49 477 42 477 DrawLine
0 0.20 0.20 0.20 true 0 0 [] 1 172 494 38 494 DrawLine
0 1 1 1 true 0 0 [] 1 172 493 38 493 DrawLine
39 563 39 579 171 579 6 0 1 1 1 true 0 0 [] 2 -1 0 0 0 false DrawPolyline
171 579 171 563 39 563 6 0 0.20 0.20 0.20 true 0 0 [] 2 -1 0 0 0 false DrawPolyline
grestore

grestore

0 648 210 200 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold 
%%BoundingBox: 201 296 411 496

%%EndDocument
 GE /Times-Roman SF
6120 55278 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(motif-menu)SH
11 /Times-Roman AF
22320 XM
(is "motif-menu-loader".)SH
12 /Times-Bold AF
6120 58962 MT
(4.8.1. Programming Interface)SH
11 /Times-Roman AF
6120 60158 MT
(The)SH
10 /Courier AF
8353 XM
(motif-menu)SH
11 /Times-Roman AF
14876 XM
(is analogous to the)248 W
10 /Courier AF
24362 XM
(menu)SH
11 /Times-Roman AF
27285 XM
(from the standard Gadget Set, with the)
248 W( addition of an)249 W
10 /Courier AF
6120 61354 MT
(:accelerators)SH
11 /Times-Roman AF
14263 XM
(slot which facilitates the selection)
68 W( of a menu item by the user.  Only one item may be)67 W
6120 62550 MT
(selected at a time.)SH
6120 64848 MT
(The)SH
10 /Courier AF
8158 XM
(:accelerators)SH
11 /Times-Roman AF
16286 XM
(slot is a list of triples)
53 W( which correspond to the items in the)54 W
10 /Courier AF
42740 XM
(:items)SH
11 /Times-Roman AF
46669 XM
(list. Consider)383 W
6120 66044 MT
(the following slot definitions in an instance of the)SH
10 /Courier AF
28271 XM
(motif-menu)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
8040 67209 MT
(\050:items '\050"Remove-window" "Move-window" ...\051\051)SH
8040 68074 MT
(\050:accelerators '\050\050#\134R "Alt+F2" :META-F2\051 \050#\134M "Alt+F3" :META-F3\051 ...\051\051)SH
11 /Times-Roman AF
6120 69495 MT
(Since the #\134M character appears in)
55 W( the second accelerator pair, the "M" in the "Move-window" item will)54 W
6120 70691 MT
(be underlined in the menu.  The string "Alt+F3" will)
84 W( appear to the right of the "Move-window" item in)85 W
6120 71887 MT
(the menu.  Interactors)
44 W( are defined in the)43 W
10 /Courier AF
24272 XM
(motif-menu)SH
11 /Times-Roman AF
30590 XM
(that allow the user to press the "M" key whenever)43 W
ES
%%Page: 439 92
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.8)
SH( Motif)
1800 W( Menu)SH
51386 XM
(Page 439)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(keyboard selection is activated to select "Move-window".  And,)
71 W( after properly initializing an instance of)72 W
8280 9151 MT
(the)SH
10 /Courier AF
9971 XM
(motif-menu-accelerator-inter)SH
11 /Times-Roman AF
27118 XM
(\050described below\051, simultaneously pressing the "Alt" and "F3")72 W
8280 10347 MT
(keys will also select "Move window".)SH
8280 12645 MT
(Since this menu supports only single selection, the)12 W
10 /Courier AF
30895 XM
(:value)SH
11 /Times-Roman AF
34782 XM
(slot contains the)
12 W( currently selected item \050from)13 W
8280 13841 MT
(the)SH
10 /Courier AF
9899 XM
(:items)SH
11 /Times-Roman AF
13774 XM
(list\051 and the)SH
10 /Courier AF
19243 XM
(:value-obj)SH
11 /Times-Roman AF
25518 XM
(slot contains the currently selected object in the menu's aggrelist.)SH
8280 16139 MT
(The)SH
10 /Courier AF
10419 XM
(:items)SH
11 /Times-Roman AF
14448 XM
(and)SH
10 /Courier AF
16464 XM
(:item-to-string-function)SH
11 /Times-Roman AF
31292 XM
(slots are implemented as in the)153 W
10 /Courier AF
46080 XM
(:scrolling-menu)SH
11 /Times-Roman AF
8280 17335 MT
(from the standard Gadget Set \050see Section 3.9\051.  Each item \050the actual item,)
140 W( not its string conversion\051)141 W
8280 18531 MT
(specified in the)SH
10 /Courier AF
15275 XM
(:inactive-items)SH
11 /Times-Roman AF
24550 XM
(list will appear "grayed-out" and will not be selectable.)SH
8280 20829 MT
(A separator bar will appear above each item listed in the slot)SH
10 /Courier AF
35220 XM
(:bar-above-these-items)SH
11 /Times-Roman AF
(.)SH
8280 23127 MT
(The minimum width of)
98 W( the menu frame is determined by)97 W
10 /Courier AF
34549 XM
(:min-frame-width)SH
11 /Times-Roman AF
(. The)
469 W( menu will appear)97 W
8280 24323 MT
(wider than this value only if the longest item string \050and its)
42 W( corresponding accelerator, if any\051 will not fit)43 W
8280 25519 MT
(in a menu of this width.)SH
8280 27817 MT
(The)SH
10 /Courier AF
10482 XM
(:v-spacing)SH
11 /Times-Roman AF
16974 XM
(slot determines the distance between each item in the menu, and)216 W
10 /Courier AF
47880 XM
(:text-offset)SH
11 /Times-Roman AF
8280 29013 MT
(determines the)
37 W( distance from the menu frame to the items \050and the distance between the longest item and)38 W
8280 30209 MT
(its corresponding accelerator, if any\051.)SH
8280 32507 MT
(The justification of the items in the menu)
44 W( is determined by the slot)43 W
10 /Courier AF
38391 XM
(:h-align)SH
11 /Times-Roman AF
43509 XM
(and may be either)43 W
10 /Courier AF
51805 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 33703 MT
(:center)SH
11 /Times-Roman AF
(, or)SH
10 /Courier AF
14221 XM
(:right)SH
11 /Times-Roman AF
(.)SH
8280 36001 MT
(A feedback box will appear around the currently selected item if)SH
10 /Courier AF
36897 XM
(:final-feedback-p)SH
11 /Times-Roman AF
47372 XM
(is T.)SH
8280 38299 MT
(When the slot)71 W
10 /Courier AF
14878 XM
(:keyboard-selection-p)SH
11 /Times-Roman AF
27824 XM
(is T, the keyboard interface to the)71 W
10 /Courier AF
43409 XM
(motif-menu)SH
11 /Times-Roman AF
49755 XM
(is activated.)71 W
8280 39495 MT
(The arrow keys will move the selection)
65 W( box among the items in the menu, and the return key will select)64 W
8280 40691 MT
(the boxed item.  The component of the menu's aggrelist currently surrounded)
162 W( by the selection box is)163 W
8280 41887 MT
(named in)153 W
10 /Courier AF
12924 XM
(:keyboard-selection-obj)SH
11 /Times-Roman AF
(, and its string)
153 W( is in)152 W
10 /Courier AF
36288 XM
(:keyboard-selection)SH
11 /Times-Roman AF
(. Thus,)
579 W( the slot)152 W
10 /Courier AF
8280 43083 MT
(:keyboard-selection)SH
11 /Times-Roman AF
20006 XM
(may be)
51 W( set with a string \050or an atom, depending on the)52 W
10 /Courier AF
44854 XM
(:items)SH
11 /Times-Roman AF
48781 XM
(list\051 to put the)52 W
8280 44279 MT
(selection box around an)
157 W( item.  Since this slot contains a formula, the programmer may not supply an)156 W
8280 45475 MT
(initial value at create-instance time.)
287 W( Instead,)
851 W( as with the)288 W
10 /Courier AF
36142 XM
(:value)SH
11 /Times-Roman AF
40305 XM
(slot, the user must first gv the)288 W
10 /Courier AF
8280 46671 MT
(:keyboard-selection)SH
11 /Times-Roman AF
20043 XM
(slot and then s-value it)
88 W( to the desired initial value.)87 W
/Times-Bold SF
43490 XM
(NOTE:)SH
/Times-Roman SF
47336 XM
(The return key is)87 W
8280 47867 MT
(used to select items in the)SH
10 /Courier AF
19890 XM
(motif-menu)SH
11 /Times-Roman AF
(, while the space-bar is used to select Motif buttons.)SH
8280 50165 MT
(The fonts in which to display)
465 W( the items and the accelerator strings are in)466 W
10 /Courier AF
46751 XM
(:item-font)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 51361 MT
(:accel-font)SH
11 /Times-Roman AF
(, respectively.)SH
12 /Times-Bold AF
8280 55045 MT
(4.8.2. The Motif-Menu Accelerator Interactor)SH
8 /Courier AF
10200 56210 MT
(\050create-instance 'gg:Motif-Menu-Accelerator-Inter inter:button-interactor)SH
11640 57075 MT
(\050:window NIL\051)SH
11640 57940 MT
(\050:menus NIL\051)SH
11640 58805 MT
(\050:continuous NIL\051)SH
11640 59670 MT
(\050:start-where T\051)SH
11640 60535 MT
(\050:start-event \050o-formula \050multiple-value-call #'append)SH
24600 61400 MT
(\050values-list \050gvl :accel-chars\051\051\051\051\051)SH
11640 62265 MT
(\050:accel-chars \050o-formula \050mapcar #'\050lambda \050menu\051)SH
29400 63130 MT
(\050gv menu :global-accel-chars\051\051)SH
27480 63995 MT
(\050gvl :menus\051\051\051\051)SH
11640 64860 MT
(\050:waiting-priority gg:motif-tab-priority-level\051)SH
11640 65725 MT
(\050:running-priority gg:motif-tab-priority-level\051)SH
11640 66590 MT
(\050:stop-action #'\050lambda \050interactor obj-over\051 ...\051\051)SH
11640 67455 MT
(\050:final-function NIL\051\051)SH
11 /Times-Roman AF
8280 69753 MT
(The)SH
10 /Courier AF
10523 XM
(motif-menu-accelerator-inter)SH
11 /Times-Roman AF
27856 XM
(interactor is used)
258 W( with a set of)257 W
10 /Courier AF
43128 XM
(motif-menu)SH
11 /Times-Roman AF
49660 XM
(instances to)257 W
8280 70949 MT
(implement the global character selection feature \050:META-F2, etc.  above\051.)
49 W( When)
374 W( an instance is supplied)50 W
ES
%%Page: 440 93
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 440)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(with a list of menus in the)27 W
10 /Courier AF
18012 XM
(:menus)SH
11 /Times-Roman AF
21914 XM
(slot and the window of the menus in the)27 W
10 /Courier AF
40030 XM
(:window)SH
11 /Times-Roman AF
44532 XM
(slot, then when the)26 W
6120 9151 MT
(user strikes any of the accelerator)
223 W( keys defined in the menus, the corresponding menu item will be)224 W
6120 10347 MT
(selected and its functions will be executed.  Only one item may be assigned to each global)
119 W( accelerator)118 W
6120 11543 MT
(character. An)
397 W( example of the)61 W
10 /Courier AF
19769 XM
(motif-menu-accelerator-inter)SH
11 /Times-Roman AF
36906 XM
(may be found in demo-motif and in)62 W
6120 12739 MT
(the)SH
10 /Courier AF
7739 XM
(motif-menu)SH
11 /Times-Roman AF
14014 XM
(demo.)SH
12 /Times-Bold AF
6120 16423 MT
(4.8.3. Adding Items to the Motif-Menu)SH
11 /Times-Roman AF
6120 17619 MT
(The)SH
10 /Courier AF
8488 XM
(add-item)SH
11 /Times-Roman AF
13946 XM
(method for the)383 W
10 /Courier AF
21846 XM
(motif-menu)SH
11 /Times-Roman AF
28504 XM
(is similar to the standard method,)
383 W( except that the)382 W
6120 18815 MT
(programmer may supply)
156 W( an accelerator to be added to the menu which corresponds to the item being)157 W
6120 20011 MT
(added.)SH
8 /Courier AF
8040 21224 MT
(opal:add-item)SH
/Times-Italic SF
14760 XM
(motif-menu item)SH
/Courier SF
20460 XM
([:accelerator)SH
/Times-Italic SF
27180 XM
(accel)SH
/Courier SF
(] [[:where])SH
/Times-Italic SF
34627 XM
(position [locator])SH
/Courier SF
40816 XM
([:key)SH
/Times-Italic SF
43696 XM
(function-name)SH
/Courier SF
(]])SH
11 /Times-Roman AF
6120 23522 MT
(The value)
69 W( for)68 W
/Times-Italic SF
12524 XM
(accel)SH
/Times-Roman SF
15187 XM
(should be an accelerator triplet that can be inserted into the)68 W
10 /Courier AF
42172 XM
(:accelerators)SH
11 /Times-Roman AF
50315 XM
(list of)68 W
6120 24718 MT
(the)SH
/Times-Italic SF
7767 XM
(motif-menu)SH
/Times-Roman SF
(, such as)28 W
10 /Courier AF
16893 XM
('\050#\134R "Alt+F2" :META-F2\051)28 W
11 /Times-Roman AF
(. Note)
331 W( that the accelerator parameter must come)28 W
6120 25914 MT
(before the "where" keys.)SH
2808 50 6120 26114 UL
6120 28212 MT
(The usual)259 W
10 /Courier AF
11220 XM
(remove-item)SH
11 /Times-Roman AF
18354 XM
(method is used for the)259 W
10 /Courier AF
29700 XM
(motif-menu)SH
11 /Times-Roman AF
(, with)
259 W( the additional feature that the)258 W
6120 29408 MT
(accelerator corresponding)
177 W( to the old item is automatically removed from the)178 W
10 /Courier AF
41830 XM
(:accelerators)SH
11 /Times-Roman AF
50083 XM
(list \050if)178 W
6120 30604 MT
(there is one\051.)SH
14 /Times-Bold AF
6120 34422 MT
(4.9. Motif Scrolling Menu)SH
11 SS 
75 100 0 6532 72769 GB 
%%BeginDocument: gadgets/motif-scrolling-menu-pix.ps
%!PS-Adobe-2.0 EPSF 2.0
%%Title: Opal 1
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Oct 14, 1991, 0:24 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 222 294 391 498
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
150 -222 translate
gsave
0 648 169 204 ClipToRectangle
0 0 translate
gsave
0 648 169 204 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
30 618 16 145 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
32 616 14 143 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
32 616 12 141 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
32 593 12 51 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
34 591 10 49 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
34 591 8 47 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
38 615 42 605 33 605 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 33 605 38 615 DrawLine
38 478 33 488 43 488 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 38 478 43 488 DrawLine
48 589 83 116 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
50 587 81 114 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
50 587 79 112 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
49 617 81 25 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
69 615 598 41 21 0 false 0 0 0 false 0 0 0 false (Menu) 18 /Times-Roman DrawText
57 583 572 34 14 0 false 0 0 0 false 0 0 0 false (Times) 12 /Courier DrawText
53 562 73 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
55 560 71 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
55 560 69 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
57 561 550 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
57 539 528 47 14 0 false 0 0 0 false 0 0 0 false (Courier) 12 /Courier DrawText
57 517 506 63 14 0 false 0 0 0 false 0 0 0 false (Helvetica) 12 /Courier DrawText
57 495 484 47 14 0 false 0 0 0 false 0 0 0 false (Chicago) 12 /Courier DrawText
grestore

grestore

0 648 169 204 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Times-Roman 
%%BoundingBox: 222 294 391 498

%%EndDocument
 GE ES
%%Page: 441 94
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.10)
SH( Motif-Menubar)1800 W
51386 XM
(Page 441)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'gg:Motif-Scrolling-Menu motif-gadget-prototype)SH
11640 8564 MT
(\050:maybe-constant '\050:left :top :scroll-on-left-p)SH
20760 9429 MT
(:scr-incr :page-incr :min-frame-width :v-spacing :h-align)SH
20760 10294 MT
(:multiple-p :items :item-to-string-function)SH
20760 11159 MT
(:item-font :num-visible :int-menu-feedback-p)SH
20760 12024 MT
(:final-feedback-p :text-offset :title :title-font)SH
20760 12889 MT
(:visible\051\051)SH
11640 13754 MT
(\050:left 0\051 \050:top 0\051)SH
11640 14619 MT
(\050:active-p T\051)SH
11640 16349 MT
(;; Scroll bar slots)SH
11640 17214 MT
(\050:scroll-on-left-p T\051)SH
11640 18079 MT
(\050:scr-incr 1\051)SH
11640 18944 MT
(\050:page-incr \050o-formula \050gvl :num-visible\051\051\051)SH
11640 19809 MT
(\050:scroll-selection-function NIL\051)SH
11640 21539 MT
(;; Menu slots)SH
11640 22404 MT
(\050:toggle-p T\051)SH
11640 23269 MT
(\050:min-frame-width 0\051)SH
11640 24134 MT
(\050:v-spacing 6\051)SH
11640 24999 MT
(\050:h-align :left\051)SH
11640 25864 MT
(\050:multiple-p T\051)SH
11640 26729 MT
(\050:items '\050"Item 1" "Item 2" "Item 3" "Item 4" "Item 5" "Item 6" "Item 7")SH
16440 27594 MT
("Item 8" "Item 9" "Item 10" "Item 11" "Item 12" "Item 13")SH
16440 28459 MT
("Item 14" "Item 15" "Item 16" "Item 17" "Item 18" "Item 19")SH
16440 29324 MT
("Item 20"\051\051)SH
11640 30189 MT
(\050:item-to-string-function)SH
12120 31054 MT
(#'\050lambda \050item\051)SH
14040 31919 MT
(\050if item)SH
15960 32784 MT
(\050if \050stringp item\051)SH
17880 33649 MT
(item)SH
17880 34514 MT
(\050string-capitalize \050string-trim ":" item\051\051\051)SH
15960 35379 MT
(""\051\051\051)SH
11640 36244 MT
(\050:item-font opal:default-font\051)SH
11640 37109 MT
(\050:num-visible 5\051)SH
11640 37974 MT
(\050:int-menu-feedback-p T\051)SH
11640 38839 MT
(\050:final-feedback-p T\051)SH
11640 39704 MT
(\050:text-offset 6\051)SH
11640 40569 MT
(\050:title NIL\051)SH
11640 41434 MT
(\050:title-font \050opal:get-standard-font :serif :roman :large\051\051)SH
11640 42299 MT
(\050:menu-selection-function NIL\051)SH
11640 43164 MT
(\050:selected-ranks NIL\051)SH
11640 44029 MT
(\050:foreground-color opal:motif-gray\051)SH
11640 44894 MT
(\050:value \050o-formula ...\051\051\051)SH
11 /Times-Roman AF
8280 47192 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(motif-scrolling-menu)SH
11 /Times-Roman AF
30480 XM
(is named "motif-scrolling-menu-loader".)SH
8280 49490 MT
(The)SH
10 /Courier AF
10412 XM
(motif-scrolling-menu)SH
11 /Times-Roman AF
22834 XM
(is very much like the standard)147 W
10 /Courier AF
37218 XM
(scrolling-menu)SH
11 /Times-Roman AF
(, but there are a few)146 W
8280 50686 MT
(differences. Since)
1371 W( the scrolling window has a motif-v-scroll-bar as a part of it, the)
548 W( slots)549 W
10 /Courier AF
8280 51882 MT
(:min-scroll-bar-width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
21452 XM
(page-trill-p)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29224 XM
(:indicator-text-p)SH
11 /Times-Roman AF
(, and)22 W
10 /Courier AF
41880 XM
(:int-scroll-feedback-p)SH
11 /Times-Roman AF
8280 53078 MT
(are not applicable.)SH
8280 55376 MT
(Also, the)135 W
10 /Courier AF
12797 XM
(motif-scrolling-menu)SH
11 /Times-Roman AF
25207 XM
(has a slot)135 W
10 /Courier AF
29981 XM
(:foreground-color)SH
11 /Times-Roman AF
(, which is absent in the standard)136 W
10 /Courier AF
8280 56572 MT
(scrolling-menu)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 60390 MT
(4.10. Motif-Menubar)SH
8 /Courier AF
10200 61555 MT
(\050create-instance 'gg:Motif-Menubar gg::motif-gadget-prototype)SH
11160 62420 MT
(\050:left 0\051\050:top 0\051)SH
11160 63285 MT
(\050:items NIL\051)SH
11160 64150 MT
(\050:title-font opal:default-font\051)SH
11160 65015 MT
(\050:item-font opal:default-font\051)SH
11160 65880 MT
(\050:min-menubar-width 0\051)SH
11160 66745 MT
(\050:accelerators NIL\051)SH
11160 67610 MT
(\050:accelerator-windows \050o-formula \050gvl :window\051\051\051)SH
11160 68475 MT
(\050:bar-above-these-items NIL\051\051)SH
11 /Times-Roman AF
8280 70773 MT
(To load the)SH
10 /Courier AF
13565 XM
(motif-menubar)SH
11 /Times-Roman AF
(, execute)SH
10 /Courier AF
25548 XM
(\050garnet-load "gadgets:motif-menubar-loader"\051)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 442 95
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 442)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
75 100 0 6570 42600 GB 
%%BeginDocument: gadgets/motif-menubar-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jul 13, 1993, 11:00 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 169 320 443 472
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/BitmapDict 20 dict def
/DrawBitmap { % left top width height pattern transparent-p color => -
    BitmapDict begin
        /color exch def /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
            translate
            width height scale
            color length 3 eq {
                color aload pop setrgbcolor
            } {
                .5 setgray % fudge pattern fills
            } ifelse
            transparent-p {
                % The case where the background is not drawn
                width height false
                [ width 0 0 height 0 height ]
                {pattern} imagemask
            } {
                % The case where the background is drawn
                width height 1
                [ width 0 0 height 0 height ]
                {pattern} image
            } ifelse
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-2 /image-2-font 16 16 <
ffff ff3f ff3f fe7f ee7f e4ff e0ff e01f e03f e07f e0ff e1ff e3ff e7ff efff
ffff>
DefImage

/image-1 /image-1-font 16 16 <
ff3f fe1f fe1f cc3f c43f c07f c00f c00f c01f c03f c07f c0ff c1ff c3ff c7ff
cfff>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
97 400 translate

%
% Begin new window
%
gsave
0 0 274 152 ClipToRectangle
gsave
0 0 274 152 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 270 148 2 2 2 2 DrawGenericWindowFrame
0 0 270 148 ClipToRectangle
gsave
0 0 270 148 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
0 0 270 28 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
2 -2 268 26 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
2 -2 266 24 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
9 -7 -18 42 14 false [0 0 0] [1 1 1] (Family) 12 /Courier-Bold DrawText
59 -7 -18 27 14 false [0 0 0] [1 1 1] (Face) 12 /Courier-Bold DrawText
94 -7 -18 27 14 false [0 0 0] [1 1 1] (Size) 12 /Courier-Bold DrawText
90 -24 {
  { 125 -5 90 -5 }
} [1 1 1] 0 0 [] 2 null DrawPolyline
89 -23 {
  { 124 -6 124 -23 }
} [0.20 0.20 0.20] 0 0 [] 2 null DrawPolyline
grestore

grestore


%
% Begin new window
%
gsave
89 -29 translate
() 0 0 108 92 0 0 0 0 DrawGenericWindowFrame
0 0 108 92 ClipToRectangle
gsave
0 0 108 92 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
0 0 108 92 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
2 -2 106 90 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
2 -2 104 88 [0 0 0] 0 0 [] -1 [0.83 0.83 0.83] DrawRectangle
6 -6 -17 34 14 false [0 0 0] [1 1 1] (Small) 12 /Courier-Bold DrawText
89 -6 -17 11 14 false [0 0 0] [1 1 1] (!s) 12 /Courier-Bold DrawText
6 -28 -39 42 14 false [0 0 0] [1 1 1] (Medium) 12 /Courier-Bold DrawText
89 -28 -39 11 14 false [0 0 0] [1 1 1] (!m) 12 /Courier-Bold DrawText
6 -50 -61 35 14 false [0 0 0] [1 1 1] (Large) 12 /Courier-Bold DrawText
89 -50 -61 11 14 false [0 0 0] [1 1 1] (!l) 12 /Courier-Bold DrawText
6 -72 -83 70 14 false [0 0 0] [1 1 1] (Very-Large) 12 /Courier-Bold DrawText
88 -72 -83 12 14 false [0 0 0] [1 1 1] (!v) 12 /Courier-Bold DrawText
[0.20 0.20 0.20] 0 0 [] 1 104 -46 4 -46 DrawLine
[1 1 1] 0 0 [] 1 104 -47 4 -47 DrawLine
5 -21 {
  { 103 -5 5 -5 }
} [1 1 1] 0 0 [] 2 null DrawPolyline
103 -5 {
  { 5 -21 103 -21 }
} [0.20 0.20 0.20] 0 0 [] 2 null DrawPolyline
61 -15 16 16 image-1 true [1 1 1] DrawBitmap
61 -15 16 16 image-2 true [0 0 0] DrawBitmap
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold Helvetica-Bold 
%%BoundingBox: 169 320 443 472

%%EndDocument
 GE /Times-Bold SF
6120 20352 MT
(Figure 4-4:)SH
/Times-Roman SF
11893 XM
(An instance of the)SH
/Courier SF
20201 XM
(motif-menubar)SH
/Times-Roman SF
29056 XM
(gadget)SH
6120 22650 MT
(The)SH
10 /Courier AF
8287 XM
(motif-menubar)SH
11 /Times-Roman AF
16544 XM
(is used very much like the standard)182 W
10 /Courier AF
33611 XM
(menubar)SH
11 /Times-Roman AF
(, described in)
182 W( section 3.10.  The)181 W
10 /Courier AF
6120 23846 MT
(motif-menubar)SH
11 /Times-Roman AF
14203 XM
(has several additional features, including:  slots that allow the menubar to extend)
8 W( across)9 W
6120 25042 MT
(the top of the entire window, keyboard accelerators, and decorative "bars" in the submenus.)SH
6120 27340 MT
(A simple demo)
91 W( which uses the)90 W
10 /Courier AF
20410 XM
(motif-menubar)SH
11 /Times-Roman AF
28575 XM
(is loaded along with the)90 W
10 /Courier AF
39810 XM
(motif-menubar)SH
11 /Times-Roman AF
(. To)
455 W( run it,)90 W
6120 28536 MT
(execute)SH
10 /Courier AF
10361 XM
(\050gg:motif-menubar-go\051)SH
11 /Times-Roman AF
(. Larger)
1491 W( demos)
608 W( also use the)609 W
10 /Courier AF
39805 XM
(motif-menubar)SH
11 /Times-Roman AF
(, including)609 W
10 /Courier AF
6120 29732 MT
(GarnetDraw)SH
11 /Times-Roman AF
12395 XM
(and)SH
10 /Courier AF
14258 XM
(Demo-Multifont)SH
11 /Times-Roman AF
(.)SH
6120 32030 MT
(The)SH
10 /Courier AF
8254 XM
(:min-menubar-width)SH
11 /Times-Roman AF
19478 XM
(slot specifies how wide the)149 W
10 /Courier AF
32412 XM
(motif-menubar)SH
11 /Times-Roman AF
40636 XM
(should be.)
149 W( If)
571 W( it contains a)148 W
6120 33226 MT
(value greater than the current width of the)141 W
10 /Courier AF
26000 XM
(motif-menubar)SH
11 /Times-Roman AF
(, the bar will extend itself.  However,)
141 W( the)142 W
6120 34422 MT
(items will remain fixed \050i.e. they won't spread out equidistantly over the)
9 W( bar\051.  This feature is useful when)8 W
6120 35618 MT
(you want the menubar to extend across the top of the entire window, as in Figure 4-4.)SH
12 /Times-Bold AF
6120 39302 MT
(4.10.1. Selection Functions)SH
11 /Times-Roman AF
6120 40498 MT
(Like in the standard)208 W
10 /Courier AF
15994 XM
(menubar)SH
11 /Times-Roman AF
(, there is no)208 W
10 /Courier AF
26433 XM
(:value)SH
11 /Times-Roman AF
30516 XM
(slot for this gadget.  The designer must)
208 W( use the)209 W
10 /Courier AF
6120 41694 MT
(:selection-function)SH
11 /Times-Roman AF
17795 XM
(or the item functions to act on the user's selections.)SH
6120 43992 MT
(There are three levels of functions in the)189 W
10 /Courier AF
25712 XM
(motif-menubar)SH
11 /Times-Roman AF
33976 XM
(gadget that may be called when)
189 W( the user)188 W
6120 45188 MT
(makes a selection.  Functions can)
85 W( be attached to individual submenu items, whole submenus, or the top)86 W
6120 46384 MT
(level menubar.)SH
6120 48682 MT
(All the selection functions take three parameters:)SH
8 /Courier AF
8040 49847 MT
(\050lambda \050gadget menu-item submenu-item\051\051)SH
11 /Times-Roman AF
6120 52145 MT
(The following)23 W
10 /Courier AF
12704 XM
(:items)SH
11 /Times-Roman AF
16602 XM
(list is)
23 W( taken from the)22 W
10 /Courier AF
26032 XM
(gg:Motif-Menubar-Go)SH
11 /Times-Roman AF
37729 XM
(demo, defined at the end of motif-)22 W
6120 53341 MT
(menubar.lisp.)SH
8 /Courier AF
8040 54506 MT
(\050:items)SH
8520 55371 MT
(`\050\050:family ,#'family-fn)SH
13800 56236 MT
(\050\050:fixed ,#'fixed-fn\051\050:serif ,#'serif-fn\051\050:sans-serif ,#'sans-serif-fn\051\051\051)SH
9480 57101 MT
(\050:face ,#'face-fn)SH
12840 57966 MT
(\050\050:roman\051\050:bold\051\050:italic\051\050:bold-italic\051\051\051)SH
9480 58831 MT
(\050:size ,#'size-fn)SH
12840 59696 MT
(\050\050:small\051\050:medium\051\050:large\051\050:very-large\051\051\051\051\051)SH
11 /Times-Roman AF
6120 61994 MT
(This)SH
10 /Courier AF
8382 XM
(:items)SH
11 /Times-Roman AF
12288 XM
(list attaches the functions)31 W
10 /Courier AF
23838 XM
(family-fn)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29819 XM
(face-fn)SH
11 /Times-Roman AF
(, and)31 W
10 /Courier AF
36494 XM
(size-fn)SH
11 /Times-Roman AF
41000 XM
(to each)
31 W( of the submenus in)32 W
4400 50 47357 62194 UL
6120 63190 MT
(the menubar.  Whenever the user selects an item)
288 W( from one of those submenus, the corresponding)287 W
6120 64386 MT
(submenu-function will be executed.)SH
6120 66684 MT
(Additionally, the functions)29 W
10 /Courier AF
18307 XM
(fixed-fn)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
23686 XM
(serif-fn)SH
11 /Times-Roman AF
(, and)29 W
10 /Courier AF
30957 XM
(sans-serif-fn)SH
11 /Times-Roman AF
39061 XM
(are attached to each)
29 W( item in the)30 W
1956 50 48154 66884 UL
6120 67880 MT
(first submenu.  Whenever the user chooses "Fixed", "Serif",)
36 W( or "Sans-Serif" from the "Family" menu, the)35 W
6120 69076 MT
(function associated with that item will be executed.)SH
6120 71374 MT
(The order of function execution is as)
236 W( follows:  First, the submenu-item function is called, then the)237 W
ES
%%Page: 443 96
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.10)
SH( Motif-Menubar)1800 W
51386 XM
(Page 443)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(submenu function, and then the)
33 W( top-level)32 W
10 /Courier AF
26775 XM
(:selection-function)SH
11 /Times-Roman AF
(. Notice)
339 W( that this is different from the)32 W
8280 9151 MT
(order in which the functions for the regular menubar are called.)SH
12 /Times-Bold AF
8280 12835 MT
(4.10.2. Accelerators)SH
11 /Times-Roman AF
8280 14031 MT
(Since the)273 W
10 /Courier AF
13164 XM
(motif-menubar)SH
11 /Times-Roman AF
21512 XM
(uses actual instances of the)273 W
10 /Courier AF
35064 XM
(motif-menu)SH
11 /Times-Roman AF
41612 XM
(gadget for)
273 W( its submenus, the)274 W
8280 15227 MT
("accelerators" feature of the)42 W
10 /Courier AF
21007 XM
(motif-menu)SH
11 /Times-Roman AF
27323 XM
(gadget can be used in the menubar.  The syntax for specifying)41 W
8280 16423 MT
(accelerators is a bit more complicated in the menubar, because multiple submenus are used.)SH
8280 18721 MT
(An accelerator is a relationship between a keyboard)
106 W( event and an item in the menubar.  When a key is)107 W
8280 19917 MT
(typed that corresponds to a menubar item, the function that is associated with the item is executed as if the)SH
8280 21113 MT
(user had pulled down the submenu and selected the item with the mouse.  Each accelerator)
12 W( is specified by)13 W
8280 22309 MT
(its lisp character \050e.g.,)144 W
10 /Courier AF
18842 XM
(:F3)SH
11 /Times-Roman AF
(\051, and a string to be shown to the user describing the accelerator key \050e.g.,)143 W
8280 23505 MT
("F3"\051. These)
531 W( string/character pairs are supplied to the menubar in a list, one pair)
128 W( for each item in the)129 W
8280 24701 MT
(menubar. For)
275 W( example,)SH
8 /Courier AF
10200 25866 MT
(\050:accelerators '\050\050\050"!f" :|META-f|\051 \050"!b" :|META-b|\051\051)SH
18360 26731 MT
(NIL)SH
18360 27596 MT
(\050NIL NIL \050"!x" :|META-x|\051\051\051\051)SH
11 /Times-Roman AF
8280 29894 MT
(In this accelerators list, the)
10 W( first item in the first submenu has accelerator string "!f", and is selected by the)9 W
8280 31090 MT
(keyboard event, :META-f.  The second item in the first)
171 W( submenu has the accelerator string "!b", and)172 W
8280 32286 MT
(keyboard event :META-b.)
143 W( The)
560 W( second submenu has no accelerators.  The first two items in the third)142 W
8280 33482 MT
(submenu have no accelerators.  The third item in the third submenu has string "!x" and event META-x.)SH
8280 35780 MT
(In general, the format for the)SH
10 /Courier AF
21259 XM
(:accelerators)SH
11 /Times-Roman AF
29334 XM
(slot is:)SH
8 /Courier AF
10200 36945 MT
(\050:accelerators '\050\050\050s1,1 k1,1\051 \050s1,2 k1,2\051 ...\051)SH
18360 37810 MT
(\050\050s2,1 k2,1\051 \050s2,2 k2,2\051 ...\051)SH
18360 38675 MT
(...\051\051)SH
11 /Times-Roman AF
8280 40973 MT
(where sM,N is the accelerator string for the N-th item)
93 W( in the M-th submenu, and kM,N is the keyboard)94 W
8280 42169 MT
(event for the same.)SH
8280 44467 MT
(The)SH
10 /Courier AF
10298 XM
(:accelerator-windows)SH
11 /Times-Roman AF
22606 XM
(slot by default contains the)33 W
10 /Courier AF
34900 XM
(motif-menubar)SH
11 /Times-Roman AF
('s window,)
33 W( but may contain)32 W
8280 45663 MT
(a list of)
30 W( windows.  When an accelerator event occurs in one of these windows, it will be perceived by the)31 W
8280 46859 MT
(menubar and the item functions will be)
252 W( executed.  If the mouse is in a different window, and the)251 W
8280 48055 MT
(accelerator event occurs, the menubar will not notice the event.  For)
64 W( this reason, you should put a list of)65 W
8280 49251 MT
(all your application's windows in this slot, if you always want the accelerator to activate the menubar.)SH
12 /Times-Bold AF
8280 52935 MT
(4.10.3. Decorative Bars)SH
11 /Times-Roman AF
8280 54131 MT
(The "bars" feature of the)377 W
10 /Courier AF
21292 XM
(motif-menu)SH
11 /Times-Roman AF
27944 XM
(can also be used in the)377 W
10 /Courier AF
40408 XM
(motif-menubar)SH
11 /Times-Roman AF
48860 XM
(gadget. The)1028 W
10 /Courier AF
8280 55327 MT
(:bar-above-these-items)SH
11 /Times-Roman AF
22052 XM
(slot specifies over which items)
297 W( a horizontal line should appear.  For)298 W
8280 56523 MT
(example:)SH
8 /Courier AF
10200 57688 MT
(\050:bar-above-these-items '\050\050"Small"\051)SH
22680 58553 MT
(NIL)SH
22680 59418 MT
(\050"Faster" "Warp Speed"\051\051\051)SH
11 /Times-Roman AF
8280 61716 MT
(will cause a bar to appear above the item "Small")
93 W( in the first submenu, and above the items)92 W
10 /Courier AF
50280 XM
("Faster")SH
11 /Times-Roman AF
8280 62912 MT
(and)SH
10 /Courier AF
10180 XM
("Warp Speed")37 W
11 /Times-Roman AF
17729 XM
(in the third submenu, with no)
37 W( bars in the second submenu.  In the)38 W
10 /Courier AF
47280 XM
(motif-menubar)SH
11 /Times-Roman AF
8280 64108 MT
(demo, pictured in Figure 4-4, there is a bar above third item in the last submenu.)SH
12 /Times-Bold AF
8280 67792 MT
(4.10.4. Programming the Motif-Menubar the Traditional Garnet Way)SH
11 /Times-Roman AF
8280 68988 MT
(There are two approaches to programming a)38 W
10 /Courier AF
28305 XM
(motif-menubar)SH
11 /Times-Roman AF
(. The)
351 W( first, discussed)
38 W( in this section, is the)37 W
8280 70184 MT
(Garnet way, where all)
204 W( the)205 W
10 /Courier AF
20906 XM
(:items)SH
11 /Times-Roman AF
24986 XM
(are provided while creating the menubar.  The second approach,)205 W
8280 71380 MT
(discussed in section 4.10.5, requires)
123 W( that all the sub-objects be created individually and attached to the)122 W
ES
%%Page: 444 97
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 444)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(menubar.)SH
6120 10253 MT
(The format for the)153 W
10 /Courier AF
15100 XM
(:items)SH
11 /Times-Roman AF
19128 XM
(slot of the)153 W
10 /Courier AF
24262 XM
(motif-menubar)SH
11 /Times-Roman AF
32490 XM
(is the same)
153 W( as in the regular)154 W
10 /Courier AF
46059 XM
(menubar)SH
11 /Times-Roman AF
(. For)583 W
6120 11449 MT
(example,)SH
8 /Courier AF
8040 12614 MT
(\050:items '\050\050"Speed" NIL \050\050"Slow" Slow-Fn\051 \050"Medium" Med-Fn\051)SH
19560 13479 MT
(\050"Fast" Fast-Fn\051 \050"Whoa" Too-Fast-Fn\051\051\051\051\051)SH
11 /Times-Roman AF
6120 15777 MT
(This)SH
10 /Courier AF
8602 XM
(:items)SH
11 /Times-Roman AF
12728 XM
(list creates a)
251 W( menubar with one bar-item,)250 W
10 /Courier AF
32684 XM
("Speed")SH
11 /Times-Roman AF
(, which has no submenu selection)250 W
6120 16973 MT
(function. In)
547 W( that bar-item's submenu, are the items)136 W
10 /Courier AF
30163 XM
("Slow")SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
34449 XM
("Medium")SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
39935 XM
("Fast")SH
11 /Times-Roman AF
43946 XM
(and)SH
10 /Courier AF
45945 XM
("Whoa")SH
11 /Times-Roman AF
(, which)137 W
6120 18169 MT
(will call)234 W
10 /Courier AF
10437 XM
(Slow-Fn)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15420 XM
(Med-Fn)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
19803 XM
(Fast-Fn)SH
11 /Times-Roman AF
24511 XM
(and)SH
10 /Courier AF
26607 XM
(Too-Fast-Fn)SH
11 /Times-Roman AF
33715 XM
(respectively when selected.  Note that in)233 W
6120 19365 MT
(contrast to the example)
150 W( of Section 4.10.1, we did not include #' function specifiers with the selection)151 W
6120 20561 MT
(function names.  This is not necessary, because the functions)
11 W( are invoked with)10 W
10 /Courier AF
40990 XM
(funcall)SH
11 /Times-Roman AF
(, and the symbols)10 W
6120 21757 MT
(will be dereferenced when necessary \050though it would)
315 W( be faster to include the #', and avoid the)316 W
6120 22953 MT
(dereferencing\051.)SH
6120 25251 MT
(The submenu-items should always be described with lists, even if they have no)
4 W( functions \050e.g.,)3 W
10 /Courier AF
48120 XM
(\050"Slow"\051)SH
11 /Times-Roman AF
6120 26447 MT
(instead of)129 W
10 /Courier AF
10960 XM
("Slow")SH
11 /Times-Roman AF
(\051. Also,)
533 W( the submenu function should either be)
129 W( NIL \050as in the above example\051 or a)130 W
6120 27643 MT
(function. As)
275 W( in the regular menubar, the item functions are optional and may be omitted.)SH
12 /Times-Bold AF
6120 30607 MT
(4.10.4.1. An Example)SH
11 /Times-Roman AF
6120 31803 MT
(The following example)
141 W( creates the)140 W
10 /Courier AF
22307 XM
(motif-menubar)SH
11 /Times-Roman AF
30522 XM
(pictured in Figure 4-4.  Note the behavior of the)140 W
6120 32999 MT
(META-f accelerator and the location of the bar.)SH
8 /Courier AF
8040 34164 MT
(\050create-instance 'WIN inter:interactor-window)SH
9000 35029 MT
(\050:background-color opal:motif-gray\051)SH
9000 35894 MT
(\050:aggregate \050create-instance 'TOP-AGG opal:aggregate\051\051\051)SH
8040 37624 MT
(\050defun Fixed-Fn \050submenu bar-item submenu-item\051)SH
9000 38489 MT
(\050format T "Fixed called with ~s ~s ~s~%" submenu bar-item submenu-item\051\051)SH
8040 40219 MT
(\050defun Face-Fn \050gadget menu-item submenu-item\051)SH
9000 41084 MT
(\050format T "Face called with ~s ~s ~s~%")SH
12840 41949 MT
(gadget menu-item submenu-item\051\051)SH
8040 43679 MT
(\050create-instance 'MY-MOTIF-MENUBAR gg:motif-menubar)SH
9000 44544 MT
(\050:foreground-color opal:motif-gray\051)SH
9000 45409 MT
(\050:items)SH
9480 46274 MT
('\050\050:family NIL)SH
14760 47139 MT
(\050\050:fixed fixed-fn\051\050:serif\051\050:sans-serif\051\051\051)SH
10440 48004 MT
(\050:face face-fn)SH
13800 48869 MT
(\050\050:roman\051\050:bold\051\050:italic\051\050:bold-italic\051\051\051)SH
10440 49734 MT
(\050:size NIL)SH
13800 50599 MT
(\050\050:small\051\050:medium\051\050:large\051\050:very-large\051\051\051\051\051)SH
9000 51464 MT
(\050:accelerators)SH
9480 52329 MT
('\050\050\050"!f" :|META-f|\051 \050"!e" :|META-e|\051 \050"!a" :|META-a|\051\051)SH
10440 53194 MT
(\050\050"!r" :|META-r|\051 \050"!b" :|META-b|\051 \050"!i" :|META-i|\051 \050"!B" :META-B\051\051)SH
10440 54059 MT
(\050\050"!s" :|META-s|\051 \050"!m" :|META-m|\051 \050"!l" :|META-l|\051 \050"!v" :|META-v|\051\051\051\051)SH
9000 54924 MT
(\050:bar-above-these-items)SH
9480 55789 MT
('\050NIL)SH
10440 56654 MT
(NIL)SH
10440 57519 MT
(\050:large\051\051\051\051)SH
8040 59249 MT
(\050opal:add-component TOP-AGG MY-MOTIF-MENUBAR\051)SH
8040 60114 MT
(\050opal:update WIN\051)SH
12 /Times-Bold AF
6120 63078 MT
(4.10.4.2. Adding Items to the Motif-Menubar)SH
11 /Times-Roman AF
6120 64274 MT
(Adding items to the)103 W
10 /Courier AF
15516 XM
(motif-menubar)SH
11 /Times-Roman AF
23694 XM
(is very similar to adding items to the regular)103 W
10 /Courier AF
44388 XM
(menubar)SH
11 /Times-Roman AF
(, with)
103 W( the)104 W
6120 65470 MT
(additional ability to add accelerators to the menubar along with the new items.)SH
6120 67768 MT
(The add-item method for the motif-menubar may be used to add submenus:)SH
8 /Courier AF
8040 68981 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(menubar submenu)SH
/Courier SF
21128 XM
([:accelerators)SH
/Times-Italic SF
28328 XM
(accels)SH
/Courier SF
(])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
21240 69846 MT
([[:where])SH
/Times-Italic SF
26040 XM
(position)SH
/Courier SF
29097 XM
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(] [:key)SH
/Times-Italic SF
35727 XM
(index-function)SH
/Courier SF
(]])SH
ES
%%Page: 445 98
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.10)
SH( Motif-Menubar)1800 W
51386 XM
(Page 445)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(NOTE: If any accelerators are being added, the)120 W
10 /Courier AF
30279 XM
(:accelerators)SH
11 /Times-Roman AF
38474 XM
(keyword and arguments)120 W
/Times-Italic SF
49677 XM
(must)SH
/Times-Roman SF
52150 XM
(appear)SH
8280 9151 MT
(before the)SH
10 /Courier AF
12982 XM
(:where)SH
11 /Times-Roman AF
16857 XM
(arguments.)SH
8280 11449 MT
(The following will add a bar item named "Volume", with a few items and accelerators in it:)SH
8 /Courier AF
10200 12614 MT
(\050opal:add-item MY-MOTIF-MENUBAR)SH
17400 13479 MT
('\050"Volume" NIL \050\050"Low"\051 \050"Medium"\051 \050"High"\051 \050"Yowsa"\051\051\051)SH
17400 14344 MT
(:accelerators '\050NIL NIL)SH
25080 15209 MT
(\050"!h" :|META-h|\051 \050"!y" :|META-y|\051\051)SH
17400 16074 MT
(:before :size :key #'car\051)SH
11 /Times-Roman AF
8280 18372 MT
(To add a submenu item, use the function:)SH
8 /Courier AF
10200 19585 MT
(gg:Add-Submenu-Item)SH
/Times-Italic SF
19800 XM
(menubar submenu-title submenu-item)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
19800 20450 MT
([:accelerator)SH
/Times-Italic SF
26520 XM
(accel)SH
/Courier SF
(])SH
19800 21315 MT
([[:where])SH
/Times-Italic SF
24600 XM
(position)SH
/Courier SF
27657 XM
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(] [:key)SH
/Times-Italic SF
34287 XM
(index-function)SH
/Courier SF
(]])SH
11 /Times-Roman AF
8280 23613 MT
(As with)
63 W( the previous function, if any accelerators are being added, they)64 W
/Times-Italic SF
40689 XM
(must)SH
/Times-Roman SF
43106 XM
(appear before the)64 W
10 /Courier AF
51205 XM
(:where)SH
11 /Times-Roman AF
(.)SH
8280 24809 MT
(Also, notice that since only one accelerator is being added for the item, the)
64 W( keyword is)63 W
10 /Courier AF
47605 XM
(:accelerator)SH
11 /Times-Roman AF
(,)SH
8280 26005 MT
(not)SH
10 /Courier AF
9961 XM
(:accelerators)SH
11 /Times-Roman AF
(.)SH
8280 28303 MT
(The following example will add a submenu item named "Quiet")
15 W( to the submenu named "Volume", and its)16 W
8280 29499 MT
(accelerator will be META-q:)SH
8 /Courier AF
10200 30664 MT
(\050gg:add-submenu-item MY-MOTIF-MENUBAR "Volume" '\050"Quiet"\051)SH
20280 31529 MT
(:accelerator '\050"!q" :|META-q|\051 :before "Low" :key #'car\051)SH
12 /Times-Bold AF
8280 34493 MT
(4.10.4.3. Removing Items from the Motif-Menubar)SH
11 /Times-Roman AF
8280 35689 MT
(An item is removed)
116 W( from a)115 W
10 /Courier AF
21131 XM
(motif-menubar)SH
11 /Times-Roman AF
29321 XM
(in exactly the same way as from a regular menubar.  To)115 W
8280 36885 MT
(remove an entire submenu, use:)SH
8 /Courier AF
10200 38098 MT
(opal:Remove-Item)SH
/Times-Italic SF
18360 XM
(menubar submenu)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 40396 MT
(For traditional Garnet programming, the)98 W
/Times-Italic SF
26795 XM
(submenu)SH
/Times-Roman SF
31079 XM
(should be a sublist of the top level)99 W
10 /Courier AF
47209 XM
(:items)SH
11 /Times-Roman AF
51183 XM
(list, or it)99 W
8280 41592 MT
(can just be the title of a submenu.)SH
8280 43890 MT
(The following line will remove the "Volume" submenu from the previous examples.)SH
8 /Courier AF
10200 45055 MT
(\050opal:remove-item MY-MOTIF-MENUBAR "Volume"\051)SH
11 /Times-Roman AF
8280 47353 MT
(For removing submenu items, use)SH
8 /Courier AF
10200 48566 MT
(gg:Remove-Submenu-Item)SH
/Times-Italic SF
21240 XM
(menubar submenu-title submenu-item)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 50864 MT
(The following will remove the)SH
10 /Courier AF
21997 XM
(:small)SH
11 /Times-Roman AF
25872 XM
(item from the submenu,)SH
10 /Courier AF
36657 XM
(:size)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 52029 MT
(\050gg:remove-submenu-item MY-MOTIF-MENUBAR :size '\050:small\051\051)SH
ES
%%Page: 446 99
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 446)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(4.10.5. Programming the Motif-Menubar with Components)SH
11 /Times-Roman AF
6120 9200 MT
(The designer may also choose a bottom-up way of programming the)118 W
10 /Courier AF
37751 XM
(motif-menubar)SH
11 /Times-Roman AF
(. The)
511 W( idea is to)117 W
6120 10396 MT
(create the submenus of the)
101 W( menubar individually using the functions described in this section, and then)102 W
6120 11592 MT
(attach them to a menubar.)SH
12 /Times-Bold AF
6120 14556 MT
(4.10.5.1. An Example)SH
11 /Times-Roman AF
6120 15752 MT
(This example creates a)SH
10 /Courier AF
16442 XM
(motif-menubar)SH
11 /Times-Roman AF
24517 XM
(and several components, and attaches them together.)SH
8 /Courier AF
8040 16917 MT
(\050create-instance 'WIN inter:interactor-window)SH
9000 17782 MT
(\050:background-color opal:motif-blue\051)SH
9000 18647 MT
(\050:aggregate \050create-instance 'TOP-AGG opal:aggregate\051\051\051)SH
/Times-Italic SF
8040 20377 MT
(; Create the menubar and a bar item)SH
/Courier SF
8040 21242 MT
(\050setf MY-MOTIF-MENUBAR \050garnet-gadgets:make-motif-menubar\051\051)SH
8040 22107 MT
(\050s-value MY-MOTIF-MENUBAR :foreground-color opal:motif-blue\051)SH
8040 23837 MT
(\050setf MAC-BAR \050garnet-gadgets:make-motif-bar-item :title "Fonts"\051\051)SH
/Times-Italic SF
8040 25567 MT
(; Create the submenu items)SH
/Courier SF
8040 26432 MT
(\050setf SUB1 \050garnet-gadgets:make-motif-submenu-item :desc '\050"Gothic"\051\051\051)SH
8040 27297 MT
(\050setf SUB2 \050garnet-gadgets:make-motif-submenu-item :desc '\050"Venice"\051\051\051)SH
8040 28162 MT
(\050setf SUB3 \050garnet-gadgets:make-motif-submenu-item :desc '\050"Outlaw"\051\051\051)SH
/Times-Italic SF
8040 29892 MT
(; Add submenu items to the bar item)SH
/Courier SF
8040 30757 MT
(\050opal:add-item MAC-BAR SUB1\051)SH
8040 31622 MT
(\050opal:add-item MAC-BAR SUB2\051)SH
8040 32487 MT
(\050opal:add-item MAC-BAR SUB3 :after "Venice" :key #'car\051)SH
/Times-Italic SF
8040 34217 MT
(; Add the bar item to the menubar and update the window)SH
/Courier SF
8040 35082 MT
(\050opal:add-item MY-MOTIF-MENUBAR MAC-BAR)SH
15240 35947 MT
(:accelerators '\050\050"!g" :|META-g|\051 \050"!v" :|META-v|\051 \050"!o" :|META-o|\051\051\051)SH
/Times-Italic SF
8040 37677 MT
(; Add the menubar to the top-level aggregate)SH
/Courier SF
8040 38542 MT
(\050opal:add-component TOP-AGG MY-MOTIF-MENUBAR\051)SH
8040 40272 MT
(\050opal:update WIN\051)SH
11 /Times-Roman AF
6120 42570 MT
(When programming a)49 W
10 /Courier AF
16194 XM
(motif-menubar)SH
11 /Times-Roman AF
24318 XM
(by components, you should add accelerators only)
49 W( when you add)48 W
6120 43766 MT
(a bar-item to the menubar, or when adding a submenu item to a bar item that)
32 W( has already been added to a)33 W
6120 44962 MT
(menubar. That)
447 W( is, you cannot add an accelerator to a submenu that)
86 W( has not been attached to a menubar)85 W
6120 46158 MT
(yet.)SH
12 /Times-Bold AF
6120 49122 MT
(4.10.5.2. Creating Components of the Motif-Menubar)SH
11 /Times-Roman AF
6120 50318 MT
(A)SH
10 /Courier AF
7199 XM
(motif-menubar)SH
11 /Times-Roman AF
15284 XM
(is essentially the same as a menubar)
10 W( in that there are three components - the menubar)11 W
6120 51514 MT
(itself, bar items containing submenus, and submenu items.  Each can be created with the following)224 W
6120 52710 MT
(functions:)SH
8 /Courier AF
8040 53923 MT
(gg:Make-Motif-Menubar)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 56221 MT
(Will return an instance of)SH
10 /Courier AF
17635 XM
(motif-menubar)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 57434 MT
(gg:Make-Motif-Bar-Item &key)SH
/Times-Italic SF
21480 XM
(desc font title)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 59732 MT
(Returns a)135 W
10 /Courier AF
10850 XM
(motif-bar-item)SH
11 /Times-Roman AF
(. Like)
545 W( the regular)135 W
10 /Courier AF
28049 XM
(menubar)SH
11 /Times-Roman AF
(, the)135 W
10 /Courier AF
34688 XM
(:desc)SH
11 /Times-Roman AF
38099 XM
(parameter is a description of the)136 W
6120 60928 MT
(submenu \050e.g.,)112 W
10 /Courier AF
13095 XM
('\050"Speed" NIL \050\050"Fast"\051 \050"Slow"\051 \050"Crawl"\051\051\051)112 W
11 /Times-Roman AF
(\051, and the font and title keys)111 W
6120 62124 MT
(specify the font and the heading of the submenu.)SH
8 /Courier AF
8040 63337 MT
(gg:Make-Motif-Submenu-Item &key)SH
/Times-Italic SF
23400 XM
(desc enabled)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 65635 MT
(Creates and returns an instance of)SH
10 /Courier AF
21268 XM
(motif-submenu-item)SH
11 /Times-Roman AF
(, which is actually a)SH
10 /Courier AF
41110 XM
(motif-menu-item)SH
11 /Times-Roman AF
(, since)SH
6120 66831 MT
(each motif-submenu is just a)493 W
10 /Courier AF
21507 XM
(motif-menu)SH
11 /Times-Roman AF
(. The)1259 W
10 /Courier AF
31793 XM
(:desc)SH
11 /Times-Roman AF
35560 XM
(parameter describes the item, \050e.g.,)492 W
10 /Courier AF
6120 68027 MT
('\050"Italic"\051)SH
11 /Times-Roman AF
12995 XM
(or)SH
10 /Courier AF
14186 XM
('\050"Italic" italic-fn\051)SH
11 /Times-Roman AF
(\051. The)
275 W( default for enabled is T.)SH
ES
%%Page: 447 100
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.10)
SH( Motif-Menubar)1800 W
51386 XM
(Page 447)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(4.10.5.3. Adding Components to the Motif-Menubar)SH
11 /Times-Roman AF
8280 9200 MT
(Two types of components that can be added to the)104 W
10 /Courier AF
31680 XM
(motif-menubar)SH
11 /Times-Roman AF
39859 XM
(are bar-items and submenu-items.)105 W
8280 10396 MT
(The)SH
10 /Courier AF
10373 XM
(add-item)SH
11 /Times-Roman AF
15556 XM
(method can be used to add new bar-items to the menubar, and can also)
108 W( be used to add)107 W
8280 11592 MT
(new submenu-items to existing bar-items.  The)180 W
10 /Courier AF
30498 XM
(set-...)SH
11 /Times-Roman AF
35153 XM
(functions are used to install a)
180 W( collection of)181 W
8280 12788 MT
(components all at once.)SH
8 /Courier AF
10200 14001 MT
(gg:Set-Menubar)SH
/Times-Italic SF
17400 XM
(motif-menubar new-bar-items)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 16299 MT
(This removes the current)
98 W( bar-items from)97 W
/Times-Italic SF
26947 XM
(motif-menubar)SH
/Times-Roman SF
33857 XM
(and adds the new bar items.  This is useful for)97 W
8280 17495 MT
(recycling a menubar instead of creating a new one.)SH
8 /Courier AF
10200 18708 MT
(gg:Set-Submenu)SH
/Times-Italic SF
17400 XM
(motif-bar-item new-submenu-items)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 21006 MT
(Sets the)107 W
/Times-Italic SF
12222 XM
(motif-bar-item)SH
/Times-Roman SF
19020 XM
(to have the)
107 W( new submenu-items.  For more information on these two functions,)108 W
8280 22202 MT
(see section 3.10.)SH
8 /Courier AF
10200 23415 MT
(opal:Add-Item)SH
/Times-Italic SF
16920 XM
(motif-menubar motif-bar-item)SH
/Courier SF
27018 XM
([:accelerators)SH
/Times-Italic SF
34218 XM
(accels)SH
/Courier SF
(])SH
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
27200 24280 MT
([[:where])SH
/Times-Italic SF
32000 XM
(position)SH
/Courier SF
35057 XM
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(] [:key)SH
/Times-Italic SF
41687 XM
(index-function)SH
/Courier SF
(]])SH
11 /Times-Roman AF
8280 26578 MT
(Will add)426 W
/Times-Italic SF
13226 XM
(motif-bar-item)SH
/Times-Roman SF
20343 XM
(to)SH
/Times-Italic SF
21900 XM
(motif-menubar)SH
/Times-Roman SF
(. As)
1127 W( usual, if any accelerators are)
426 W( being added, the)425 W
10 /Courier AF
8280 27774 MT
(:accelerators)SH
11 /Times-Roman AF
16664 XM
(key)SH
/Times-Italic SF
18836 XM
(must)SH
/Times-Roman SF
21498 XM
(be specified before the)309 W
10 /Courier AF
32994 XM
(:where)SH
11 /Times-Roman AF
37178 XM
(key. The)893 W
10 /Courier AF
42504 XM
(:accelerators)SH
11 /Times-Roman AF
50889 XM
(syntax is)310 W
8280 28970 MT
(described in Section 4.10.2.)SH
8 /Courier AF
10200 30183 MT
(opal:Add-Item)SH
/Times-Italic SF
16920 XM
(motif-bar-item motif-menu-item)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
16920 31048 MT
([:accelerator)SH
/Times-Italic SF
23640 XM
(accels)SH
/Courier SF
(])SH
16920 31913 MT
([[:where])SH
/Times-Italic SF
21720 XM
(position)SH
/Courier SF
24777 XM
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(] [:key)SH
/Times-Italic SF
31407 XM
(index-function)SH
/Courier SF
(]])SH
11 /Times-Roman AF
8280 34211 MT
(Adds the submenu-item,)162 W
/Times-Italic SF
19826 XM
(motif-menu-item)SH
/Times-Roman SF
27533 XM
(to)SH
/Times-Italic SF
28825 XM
(motif-bar-item)SH
/Times-Roman SF
(. If)
597 W( the)161 W
/Times-Italic SF
39336 XM
(motif-bar-item)SH
/Times-Roman SF
46188 XM
(is not attached to a)161 W
10 /Courier AF
8280 35407 MT
(motif-menubar)SH
11 /Times-Roman AF
(, then no accelerators will be added, regardless of whether any are specified.)SH
8280 37705 MT
(The following example shows how bar items are added to a)SH
10 /Courier AF
34763 XM
(motif-menubar)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
10200 38870 MT
(\050setf bar1 \050gg:make-motif-bar-item)SH
15960 39735 MT
(:desc '\050"Color" NIL \050\050"Red"\051 \050"Blue"\051 \050"Polka Dots"\051\051\051\051\051)SH
10200 40600 MT
(\050setf bar2 \050gg:make-motif-bar-item)SH
15960 41465 MT
(:desc '\050"Size" NIL \050\050"Small"\051 \050"Medium"\051 \050"Large"\051\051\051\051\051)SH
10200 42330 MT
(\050opal:add-item MY-MOTIF-MENUBAR bar1)SH
17400 43195 MT
(:accelerators '\050\050"!r" :|META-r|\051 \050"!b" :|META-b|\051 \050"!p" :|META-p|\051\051\051)SH
10200 44060 MT
(\050opal:add-item MY-MOTIF-MENUBAR bar2 :before bar1\051)SH
10200 44925 MT
(\050opal:update WIN\051)SH
11 /Times-Roman AF
8280 47223 MT
(This sequence shows how submenu-items can be attached to bar-items:)SH
8 /Courier AF
10200 48388 MT
(\050setf color1 \050gg:make-motif-submenu-item :desc '\050"Maroon"\051\051\051)SH
10200 49253 MT
(\050setf color2 \050gg:make-motif-submenu-item :desc '\050"Peachpuff"\051\051\051)SH
10200 50118 MT
(\050opal:add-item bar1 color1 :accelerator '\050"!m" :|META-m|\051\051)SH
10200 50983 MT
(\050opal:add-item bar1 color2 :after "Blue" :key #'car\051)SH
12 /Times-Bold AF
8280 53947 MT
(4.10.5.4. Removing Components from the Menubar)SH
11 /Times-Roman AF
8280 55143 MT
(Bar-items and submenu-items can be removed from the menubar with the)SH
10 /Courier AF
40995 XM
(remove-item)SH
11 /Times-Roman AF
47870 XM
(method.)SH
8280 57441 MT
(In the example from the previous section, to remove)SH
10 /Courier AF
31556 XM
(color1)SH
11 /Times-Roman AF
35431 XM
(from)SH
10 /Courier AF
37844 XM
(bar1)SH
11 /Times-Roman AF
(, we say:)SH
8 /Courier AF
10200 58606 MT
(\050opal:remove-item bar1 color1\051)SH
11 /Times-Roman AF
8280 60904 MT
(And to remove the)SH
10 /Courier AF
16772 XM
(bar1)SH
11 /Times-Roman AF
19447 XM
(itself:)SH
8 /Courier AF
10200 62069 MT
(\050opal:remove-item MY-MOTIF-MENUBAR bar1\051)SH
ES
%%Page: 448 101
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 448)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(4.10.6. Methods Shared with the Regular Menubar)SH
11 /Times-Roman AF
6120 9200 MT
(The following methods have)
231 W( the same effect on the)232 W
10 /Courier AF
31022 XM
(motif-menubar)SH
11 /Times-Roman AF
39329 XM
(as they have on the standard)232 W
10 /Courier AF
6120 10396 MT
(menubar)SH
11 /Times-Roman AF
(. Please)
275 W( see section 3.10 for more information.)SH
8 /Courier AF
8040 11609 MT
(gg:Menubar-Components)SH
/Times-Italic SF
18600 XM
(motif-menubar)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 12474 MT
(gg:Submenu-Components)SH
/Times-Italic SF
18600 XM
(motif-bar-item)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 13339 MT
(gg:Get-Bar-Component)SH
/Times-Italic SF
18120 XM
(motif-menubar item)280 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 14204 MT
(gg:Get-Submenu-Component)SH
/Times-Italic SF
20040 XM
(motif-bar-item item)280 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 15069 MT
(gg:Find-Submenu-Component)SH
/Times-Italic SF
20520 XM
(motif-menubar submenu-title submenu-item)280 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 15934 MT
(gg:Menubar-Disable-Component)SH
/Times-Italic SF
21960 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 16799 MT
(gg:Menubar-Enable-Component)SH
/Times-Italic SF
21480 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 17664 MT
(gg:Menubar-Enabled-P)SH
/Times-Italic SF
18120 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 18529 MT
(gg:Menubar-Get-Title)SH
/Times-Italic SF
18120 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 19394 MT
(gg:Menubar-Set-Title)SH
/Times-Italic SF
18120 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 20259 MT
(gg:Menubar-Installed-P)SH
/Times-Italic SF
19080 XM
(motif-menubar-component)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
14 /Times-Bold AF
6120 24077 MT
(4.11. Motif-Scrolling-Labeled-Box)SH
8 /Courier AF
8040 25242 MT
(\050create-instance 'gg:Motif-Scrolling-Labeled-Box motif-gadget-prototype)SH
9480 26107 MT
(\050:maybe-constant '\050:left :top :width :field-offset :label-offset :label-string)SH
18600 26972 MT
(:field-font :label-font :foreground-color :active-p :visible\051\051)SH
9480 27837 MT
(\050:left 0\051)SH
9480 28702 MT
(\050:top 0\051)SH
9480 29567 MT
(\050:width 135\051)SH
9480 30432 MT
(\050:field-offset 4\051)SH
9480 31297 MT
(\050:label-offset 5\051)SH
9480 32162 MT
(\050:label-string "Label:"\051)SH
9480 33027 MT
(\050:value "Field"\051)SH
9480 33892 MT
(\050:field-font opal:default-font\051)SH
/Times-Italic SF
26280 XM
(;;**Must be fixed width**)SH
/Courier SF
9480 34757 MT
(\050:label-font \050create-instance NIL opal:font \050:face :bold\051\051\051)SH
9480 35622 MT
(\050:foreground-color opal:motif-gray\051)SH
9480 36487 MT
(\050:keyboard-selection-p NIL\051)SH
9480 37352 MT
(\050:active-p T\051)SH
9480 38217 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22920 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9480 39082 MT
(\051)SH
11 SS 
75 100 0 6570 72629 GB 
%%BeginDocument: gadgets/motif-scrolling-labeled-box-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 2
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 9:03 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 206 359 406 434
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
134 -286 translate
gsave
0 648 200 75 ClipToRectangle
0 0 translate
gsave
0 648 200 75 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
32 619 608 40 14 0 false 0 0 0 false 0 0 0 false (Label:) 12 /Courier-Bold DrawText
77 621 86 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 619 84 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 619 82 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
81 619 608 35 14 0 false 0 0 0 false 0 0 0 false (Field) 12 /Courier DrawText
grestore

grestore

0 648 200 75 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 206 359 406 434

%%EndDocument
 GE /Times-Roman SF
6120 48002 MT
(The loader file for the)SH
10 /Courier AF
16045 XM
(motif-scrolling-labeled-box)SH
11 /Times-Roman AF
32520 XM
(is "motif-scrolling-labeled-box-loader".)SH
6120 50300 MT
(This gadget is a Motif version)
63 W( of the)62 W
10 /Courier AF
22935 XM
(scrolling-labeled-box)SH
11 /Times-Roman AF
(. The)399 W
10 /Courier AF
38531 XM
(:width)SH
11 /Times-Roman AF
42468 XM
(of the box is fixed, and)62 W
6120 51496 MT
(the)SH
10 /Courier AF
7739 XM
(:value)SH
11 /Times-Roman AF
11614 XM
(string will scroll inside the box if it is too long to be displayed.)SH
6120 53794 MT
(When the)3 W
10 /Courier AF
10646 XM
(:active-p)SH
11 /Times-Roman AF
16324 XM
(slot is set to NIL, both the label and the field will appear "grayed-out" and the)
3 W( field)4 W
6120 54990 MT
(will not be editable.)SH
14 /Times-Bold AF
6120 58808 MT
(4.12. Motif-Error-Gadget)SH
11 SS 
75 100 0 6570 94005 GB 
%%BeginDocument: gadgets/motif-error-gadget-pix.ps
%!PS-Adobe-2.0
%%Title: Opal 13
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 9:20 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 209 337 403 456
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
137 -264 translate
gsave
0 648 194 119 ClipToRectangle
0 0 translate
gsave
0 648 194 119 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
10 628 616 174 15 0 false 0 0 0 false 0 0 0 false (Error: Invalid input from user.) 12 /Helvetica-Bold DrawText
32 613 601 129 15 0 false 0 0 0 false 0 0 0 false (Press OK to continue.) 12 /Helvetica-Bold DrawText
83 577 28 25 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
85 575 26 23 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
85 575 24 21 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
88 572 560 18 15 0 false 0 0 0 false 0 0 0 false (OK) 12 /Helvetica-Bold DrawText
grestore

grestore

0 648 194 119 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Helvetica-Bold 
%%BoundingBox: 209 337 403 456

%%EndDocument
 GE ES
%%Page: 449 102
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.14)
SH( Motif)
1800 W( Save Gadget)SH
51386 XM
(Page 449)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'gg:Motif-Error-Gadget opal:aggregadget)SH
11640 8564 MT
(\050:string "Error"\051)SH
11640 9429 MT
(\050:parent-window NIL\051)SH
11640 10294 MT
(\050:font \050opal:get-standard-font :sans-serif :bold :medium\051\051)SH
11640 11159 MT
(\050:justification :center\051)SH
11640 12024 MT
(\050:modal-p T\051)SH
11640 12889 MT
(\050:beep-p T\051)SH
11640 13754 MT
(\050:window NIL\051)SH
/Times-Italic SF
21720 XM
(;; Automatically initialized)SH
/Courier SF
11640 14619 MT
(\050:foreground-color opal:motif-orange\051)SH
11640 15484 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 16349 MT
(\051)SH
11 /Times-Roman AF
8280 17770 MT
(The loader file for the)SH
10 /Courier AF
18205 XM
(motif-error-gadget)SH
11 /Times-Roman AF
29280 XM
(is "motif-error-gadget-loader".)SH
8280 20068 MT
(The)SH
10 /Courier AF
10437 XM
(motif-error-gadget)SH
11 /Times-Roman AF
21684 XM
(is a dialog box that works exactly the same way as the)172 W
10 /Courier AF
47880 XM
(error-gadget)SH
11 /Times-Roman AF
8280 21264 MT
(described in section 3.20.  The same caveats apply, and the functions)500 W
10 /Courier AF
44917 XM
(display-error)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 22460 MT
(display-error-and-wait)SH
11 /Times-Roman AF
21755 XM
(may be used to display the dialog box.)SH
8280 24758 MT
(There is an additional slot provided in the)167 W
10 /Courier AF
28252 XM
(motif-error-gadget)SH
11 /Times-Roman AF
39494 XM
(which determines the color)
167 W( of the)166 W
8280 25954 MT
(dialog box.  The)SH
10 /Courier AF
15765 XM
(:foreground-color)SH
11 /Times-Roman AF
26240 XM
(slot may contain any instance of)SH
10 /Courier AF
40720 XM
(opal:color)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 29772 MT
(4.13. Motif-Query-Gadget)SH
8 /Courier AF
10200 30937 MT
(\050create-instance 'gg:Motif-Query-Gadget gg:motif-error-gadget)SH
11640 31802 MT
(\050:string "Is that OK?"\051)SH
11640 32667 MT
(\050:button-names '\050"OK" "CANCEL"\051\051)SH
11640 33532 MT
(\050:parent-window NIL\051)SH
11640 34397 MT
(\050:font \050opal:get-standard-font :sans-serif :bold :medium\051\051)SH
11640 35262 MT
(\050:justification :center\051)SH
11640 36127 MT
(\050:modal-p T\051)SH
11640 36992 MT
(\050:beep-p T\051)SH
11640 37857 MT
(\050:window NIL\051)SH
/Times-Italic SF
21720 XM
(;; Automatically initialized)SH
/Courier SF
11640 38722 MT
(\050:foreground-color opal:motif-orange\051)SH
11640 39587 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11640 40452 MT
(\051)SH
11 /Times-Roman AF
8280 41873 MT
(The loader file for the)113 W
10 /Courier AF
18770 XM
(motif-query-gadget)SH
11 /Times-Roman AF
29958 XM
(is "motif-error-gadget-loader")
113 W( \050it is defined in the same)114 W
8280 43069 MT
(file as the)SH
10 /Courier AF
12831 XM
(motif-error-gadget)SH
11 /Times-Roman AF
(\051.)SH
8280 45367 MT
(The)SH
10 /Courier AF
10436 XM
(motif-query-gadget)SH
11 /Times-Roman AF
21682 XM
(works exactly the)
171 W( same way as the)170 W
10 /Courier AF
38359 XM
(query-gadget)SH
11 /Times-Roman AF
46004 XM
(described in section)170 W
8280 46563 MT
(3.21. It)
341 W( has more buttons than the)33 W
10 /Courier AF
23820 XM
(motif-error-gadget)SH
11 /Times-Roman AF
(, so it can be)
33 W( used as a general-purpose dialog)34 W
8280 47759 MT
(box. The)
752 W( functions)238 W
10 /Courier AF
18062 XM
(display-query)SH
11 /Times-Roman AF
26375 XM
(and)SH
10 /Courier AF
28476 XM
(display-query-and-wait)SH
11 /Times-Roman AF
42189 XM
(may be used to display the)238 W
8280 48955 MT
(dialog box.)SH
8280 51253 MT
(The additional)27 W
10 /Courier AF
14994 XM
(:foreground-color)SH
11 /Times-Roman AF
25496 XM
(slot may contain any instance of)27 W
10 /Courier AF
40138 XM
(opal:color)SH
11 /Times-Roman AF
(, and determines the)28 W
8280 52449 MT
(color of the dialog box.)SH
ES
%%Page: 450 103
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 450)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(4.14. Motif Save Gadget)SH
11 SS 
75 100 0 6570 50134 GB 
%%BeginDocument: gadgets/motif-save-gadget.ps
%!PS-Adobe-2.0
%%Title: Save Window
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 25, 1992, 3:14 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 176 249 436 544
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
104 -176 translate
gsave
0 648 260 295 ClipToRectangle
0 0 translate
gsave
0 648 260 295 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
12 620 609 68 14 0 false 0 0 0 false 0 0 0 false (Directory:) 12 /Courier-Bold DrawText
85 622 163 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
87 620 161 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
87 620 159 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
88 620 609 83 14 0 false 0 0 0 false 0 0 0 false (/usr0/rajan/) 12 /Courier DrawText
32 582 16 120 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
34 580 14 118 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
34 580 12 116 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
34 518 12 19 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
36 516 10 17 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
36 516 8 15 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
40 579 44 569 35 569 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 35 569 40 579 DrawLine
40 467 35 477 45 477 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 40 467 45 477 DrawLine
50 582 188 120 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
52 580 186 118 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
52 580 184 116 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
57 578 567 41 14 0 false 0 0 0 false 0 0 0 false (GARNET) 12 /Courier-Bold DrawText
57 559 548 28 14 0 false 0 0 0 false 0 0 0 false (Mail) 12 /Courier-Bold DrawText
55 539 178 15 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
57 537 176 13 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
57 537 174 11 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
57 540 529 57 14 0 false 0 0 0 false 0 0 0 false (Untitled) 12 /Courier-Bold DrawText
57 521 510 21 14 0 false 0 0 0 false 0 0 0 false (bin) 12 /Courier-Bold DrawText
57 502 491 41 14 0 false 0 0 0 false 0 0 0 false (g.lisp) 12 /Courier-Bold DrawText
57 483 472 48 14 0 false 0 0 0 false 0 0 0 false (include) 12 /Courier-Bold DrawText
12 438 427 60 14 0 false 0 0 0 false 0 0 0 false (Filename:) 12 /Courier-Bold DrawText
77 440 171 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
79 438 169 16 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
79 438 167 14 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
80 438 427 56 14 0 false 0 0 0 false 0 0 0 false (Untitled) 12 /Courier DrawText
56 394 49 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
58 392 47 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
58 392 45 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
67 392 381 26 14 0 false 0 0 0 false 0 0 0 false (Save) 12 /Courier DrawText
134 394 49 18 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
136 392 47 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
136 392 45 14 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
138 392 381 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
grestore

grestore

0 648 260 295 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 176 249 436 544

%%EndDocument
 GE 6120 33211 MT
(Figure 4-5:)SH
/Times-Roman SF
11893 XM
(An instance of the Motif save gadget.  "/usr0/rajan" is the current directory.)SH
8 /Courier AF
8040 34906 MT
(\050create-instance 'motif-save-gadget opal:aggregadget)SH
9000 35771 MT
(\050:maybe-constant '\050:left :top :parent-window :window-title :window-left :window-top)SH
18120 36636 MT
(:message-string :num-visible :initial-directory :button-panel-items)SH
18120 37501 MT
(:button-panel-h-spacing :min-gadget-width :check-filenames-p)SH
18120 38366 MT
(:modal-p :query-message :query-buttons :foreground-color)SH
18120 39231 MT
(:dir-input-field-font :dir-input-label-font :file-input-field-font)SH
18120 40096 MT
(:file-input-label-font :file-menu-font :button-panel-font)SH
18120 40961 MT
(:message-font\051\051)SH
9000 41826 MT
(\050:window-title "save window"\051)SH
9000 42691 MT
(\050:initial-directory "./"\051)SH
9000 43556 MT
(\050:message-string "fetching directory..."\051)SH
9000 44421 MT
(\050:num-visible 6\051)SH
9000 45286 MT
(\050:button-panel-items '\050"save" "cancel"\051\051)SH
9000 46151 MT
(\050:button-panel-h-spacing 25\051)SH
9000 47016 MT
(\050:min-gadget-width 240\051)SH
9000 47881 MT
(\050:modal-p NIL\051)SH
9000 48746 MT
(\050:check-filenames-p t\051)SH
9000 49611 MT
(\050:query-message "save over existing file"\051)SH
9000 50476 MT
(\050:foreground-color opal:motif-light-blue\051)SH
9000 51341 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
22440 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
9000 52206 MT
(\050:dir-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
9000 53071 MT
(\050:dir-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
9000 53936 MT
(\050:file-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
9000 54801 MT
(\050:file-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
9000 55666 MT
(\050:message-font \050opal:get-standard-font :fixed :italic :small\051\051)SH
9000 56531 MT
(\050:file-menu-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
9000 57396 MT
(\050:button-panel-font opal:default-font\051)SH
9000 58261 MT
(...\051)SH
11 /Times-Roman AF
6120 60559 MT
(The)SH
10 /Courier AF
8223 XM
(motif-save-gadget)SH
11 /Times-Roman AF
18816 XM
(works exactly like the)118 W
10 /Courier AF
29246 XM
(save-gadget)SH
11 /Times-Roman AF
(, described in section)
118 W( 3.22.  The only)117 W
6120 61755 MT
(difference is that the)153 W
10 /Courier AF
16016 XM
(motif-save-gadget)SH
11 /Times-Roman AF
26644 XM
(has a)
153 W( slot called)154 W
10 /Courier AF
34529 XM
(:foreground-color)SH
11 /Times-Roman AF
45158 XM
(which allows the)154 W
6120 62951 MT
(user to set the color of the gadget.  This slot can be set to any)SH
10 /Courier AF
33277 XM
(opal:color)SH
11 /Times-Roman AF
39552 XM
(object.)SH
6120 65249 MT
(The loader file for the)31 W
10 /Courier AF
16199 XM
(motif-save-gadget)SH
11 /Times-Roman AF
26704 XM
(is named "motif-save-gadget-loader".  Figure 4-5 shows an)30 W
6120 66445 MT
(instance of the Motif save gadget.)SH
ES
%%Page: 451 104
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.16)
SH( Motif)
1800 W( Property Sheets)SH
51386 XM
(Page 451)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(4.15. Motif Load Gadget)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Motif-Load-Gadget opal:aggregadget)SH
11160 10168 MT
(\050:maybe-constant '\050:left :top :parent-window :window-title :window-left)SH
20280 11033 MT
(:window-top :dir-input-field-font :dir-input-label-font)SH
20280 11898 MT
(:message-font :message-string :num-visible :file-menu-font)SH
20280 12763 MT
(:initial-directory :file-input-field-font)SH
20280 13628 MT
(:file-input-label-font :button-panel-items :button-panel-font)SH
20280 14493 MT
(:button-panel-h-spacing :min-gadget-width :modal-p)SH
20280 15358 MT
(:check-filenames-p :foreground-color\051\051\051)SH
11160 16223 MT
(\050:parent-window NIL\051)SH
11160 17088 MT
(\050:window-title "load window"\051)SH
11160 17953 MT
(\050:message-string "fetching directory..."\051)SH
11160 18818 MT
(\050:num-visible 6\051)SH
11160 19683 MT
(\050:initial-directory "./"\051)SH
11160 20548 MT
(\050:button-panel-items '\050"load" "cancel"\051\051)SH
11160 21413 MT
(\050:button-panel-h-spacing 25\051)SH
11160 22278 MT
(\050:min-gadget-width 240\051)SH
11160 23143 MT
(\050:modal-p NIL\051)SH
11160 24008 MT
(\050:check-filenames-p t\051)SH
11160 24873 MT
(\050:foreground-color opal:motif-light-blue\051)SH
11160 25738 MT
(\050:selection-function NIL\051)SH
/Times-Italic SF
24600 XM
(; \050lambda \050gadget value\051\051)SH
/Courier SF
11160 26603 MT
(\050:dir-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
11160 27468 MT
(\050:dir-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 28333 MT
(\050:file-input-field-font \050opal:get-standard-font NIL NIL :small\051\051)SH
11160 29198 MT
(\050:file-input-label-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 30063 MT
(\050:message-font \050opal:get-standard-font :fixed :italic :small\051\051)SH
11160 30928 MT
(\050:file-menu-font \050opal:get-standard-font NIL :bold NIL\051\051)SH
11160 31793 MT
(\050:button-panel-font opal:default-font\051)SH
11160 32658 MT
(...\051)SH
11 /Times-Roman AF
8280 35821 MT
(The)SH
10 /Courier AF
10521 XM
(motif-load-gadget)SH
11 /Times-Roman AF
21253 XM
(is loaded along with the)257 W
10 /Courier AF
33323 XM
(motif-save-gadget)SH
11 /Times-Roman AF
44055 XM
(by the file "motif-save-)257 W
8280 37017 MT
(gadget-loader".)SH
8280 39315 MT
(The)SH
10 /Courier AF
10351 XM
(motif-load-gadget)SH
11 /Times-Roman AF
20912 XM
(works the same way as the standard)86 W
10 /Courier AF
37549 XM
(load-gadget)SH
11 /Times-Roman AF
(. The)
445 W( only difference is)85 W
8280 40511 MT
(that the motif)
31 W( gadget has an additional)32 W
10 /Courier AF
25641 XM
(:foreground-color)SH
11 /Times-Roman AF
36148 XM
(slot, which can be set to any)32 W
10 /Courier AF
49080 XM
(opal:color)SH
11 /Times-Roman AF
8280 41707 MT
(object.)SH
ES
%%Page: 452 105
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 452)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(4.16. Motif Property Sheets)SH
11 /Times-Roman AF
6120 9334 MT
(The following property sheets are similar to the)
79 W( standard property sheets, except that they use the Motif)78 W
6120 10530 MT
(look and feel.  For a complete discussion of the use of property sheets, see section 3.24.)SH
12 /Times-Bold AF
6120 14214 MT
(4.16.1. Motif-Prop-Sheet-With-OK)SH
8 /Courier AF
8040 15379 MT
(\050create-instance 'gg:Motif-Prop-Sheet-With-OK opal:aggregadget)SH
9960 16244 MT
(\050:maybe-constant '\050:left :top :items :default-filter :ok-function :apply-function)SH
19080 17109 MT
(:cancel-function :v-spacing :multi-line-p :select-label-p)SH
19080 17974 MT
(:label-selected-func :label-select-event :select-value-p)SH
19080 18839 MT
(:value-selected-func :single-select-p :foreground-color :visible\051\051)SH
/Times-Italic SF
9480 20569 MT
(; Customizable slots)SH
/Courier SF
9960 21434 MT
(\050:foreground-color opal:motif-gray\051)SH
/Times-Italic SF
27240 XM
(; the color for the background)SH
/Courier SF
9960 22299 MT
(\050:left 0\051 \050:top 0\051)SH
9960 23164 MT
(\050:items NIL\051)SH
9960 24029 MT
(\050:default-filter 'default-filter\051)SH
9960 24894 MT
(\050:OK-Function NIL\051)SH
9960 25759 MT
(\050:Apply-Function NIL\051)SH
9960 26624 MT
(\050:Cancel-Function NIL\051)SH
9960 27489 MT
(\050:v-spacing 1\051)SH
9960 28354 MT
(\050:pixel-margin NIL\051)SH
9960 29219 MT
(\050:rank-margin NIL\051)SH
9960 30084 MT
(\050:multi-line-p NIL\051)SH
9960 30949 MT
(\050:select-label-p NIL\051)SH
9960 31814 MT
(\050:label-select-event :any-mousedown\051)SH
9960 32679 MT
(\050:label-selected-func NIL\051)SH
9960 33544 MT
(\050:select-value-p NIL\051)SH
9960 34409 MT
(\050:value-selected-func NIL\051)SH
9960 35274 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
9480 37004 MT
(; Read-only slots)SH
/Courier SF
9960 37869 MT
(\050:label-selected ...)SH
9960 38734 MT
(\050:value-selected ...)SH
9960 39599 MT
(\050:value ...)SH
9960 40464 MT
(\050:changed-values ...)SH
11 /Times-Roman AF
6120 42762 MT
(The loader for)SH
10 /Courier AF
12685 XM
(motif-prop-sheet-with-OK)SH
11 /Times-Roman AF
27360 XM
(is "motif-prop-sheet-win-loader".)SH
6120 45060 MT
(This is the same)
165 W( as)166 W
10 /Courier AF
15532 XM
(Prop-Sheet-With-OK)SH
11 /Times-Roman AF
26773 XM
(\050described in section 3.24.5 except that it uses the Motif)166 W
6120 46256 MT
(look-and-feel, and you can set the foreground color.)SH
ES
%%Page: 453 106
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.16)
SH( Motif)
1800 W( Property Sheets)SH
51386 XM
(Page 453)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(4.16.2. Motif-Prop-Sheet-For-Obj-With-OK)SH
8 /Courier AF
10200 9169 MT
(\050create-instance 'Motif-Prop-Sheet-For-Obj-With-OK Motif-Prop-Sheet-With-OK)SH
12120 10034 MT
(\050:maybe-constant '\050:left :top :obj :slots :eval-p :ok-function :apply-function)SH
21240 10899 MT
(:cancel-function :v-spacing :multi-line-p :select-label-p)SH
21240 11764 MT
(:label-selected-func :label-select-event :select-value-p)SH
21240 12629 MT
(:value-selected-func :single-select-p :foreground-color :visible\051\051)SH
/Times-Italic SF
11640 14359 MT
(; Customizable slots)SH
/Courier SF
12120 15224 MT
(\050:foreground-color opal:motif-gray\051)SH
12120 16089 MT
(\050:OK-Function NIL\051)SH
12120 16954 MT
(\050:Apply-Function NIL\051)SH
12120 17819 MT
(\050:Cancel-Function NIL\051)SH
12120 18684 MT
(\050:left 0\051 \050:top 0\051)SH
12120 19549 MT
(\050:obj NIL\051)SH
/Times-Italic SF
18360 XM
(; a single obj or a list of objects)SH
/Courier SF
12120 20414 MT
(\050:slots NIL\051)SH
/Times-Italic SF
18360 XM
(; list of slots to show. If NIL, get from :parameters)SH
/Courier SF
12120 21279 MT
(\050:union? T\051)SH
/Times-Italic SF
18360 XM
(; if slots is NIL and multiple objects, use union or intersection of :parameters?)SH
/Courier SF
12120 23009 MT
(\050:eval-p T\051)SH
/Times-Italic SF
18360 XM
(; if T, then evaluates what the user types.  Use T for)SH
18360 23874 MT
(; graphical objects.  If NIL, then all the values will be strings.)SH
/Courier SF
12120 24739 MT
(\050:set-immediately-p T\051)SH
/Times-Italic SF
23160 XM
(; if T then sets slots when user hits)SH
10 /Courier AF
34378 XM
(return)SH
8 /Times-Italic AF
(, else doesn't)SH
23160 25604 MT
(; ever set the slot.)SH
/Courier SF
12120 26469 MT
(\050:type-gadgets NIL\051)SH
/Times-Italic SF
22200 XM
(; descriptor of special handling for types)SH
/Courier SF
12120 27334 MT
(\050:error-gadget NIL\051)SH
/Times-Italic SF
22200 XM
(; an error gadget to use to report errors.)SH
/Courier SF
12120 29064 MT
(;;)SH
/Times-Italic SF
13560 XM
(plus the rest of the slots also provided by prop-sheet)SH
/Courier SF
12120 30794 MT
(\050:v-spacing 1\051)SH
12120 31659 MT
(\050:pixel-margin NIL\051)SH
12120 32524 MT
(\050:rank-margin NIL\051)SH
12120 33389 MT
(\050:multi-line-p NIL\051)SH
/Times-Italic SF
21720 XM
(; T if multi-line strings are allowed)SH
/Courier SF
12120 34254 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
22680 XM
(; T if want to be able to select the labels)SH
/Courier SF
12120 35119 MT
(\050:label-select-event :any-mousedown\051)SH
12120 35984 MT
(\050:label-selected-func NIL\051)SH
12120 36849 MT
(\050:select-value-p NIL\051)SH
/Times-Italic SF
22680 XM
(; if want to be able to select the values)SH
/Courier SF
12120 37714 MT
(\050:value-selected-func NIL\051)SH
12120 38579 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
23160 XM
(; to select more than one value or label)SH
11640 40309 MT
(; Read-only slots)SH
/Courier SF
12120 41174 MT
(\050:label-selected NIL\051)SH
/Times-Italic SF
22680 XM
(; set with the selected label objects \050or a list)SH
/Courier SF
(\051)SH
12120 42039 MT
(\050:value-selected NIL\051)SH
/Times-Italic SF
22680 XM
(; set with the selected value objects \050or a list)SH
/Courier SF
(\051)SH
12120 42904 MT
(\050:value ...\051)SH
/Times-Italic SF
18840 XM
(; list of pairs of all the slots and their \050filtered\051 values)SH
/Courier SF
12120 43769 MT
(\050:changed-values NIL\051\051)SH
/Times-Italic SF
23160 XM
(; only the values that have changed)SH
46800 50 8280 45920 UL
11 SS 
66 100 0 11484 77473 GB 
%%BeginDocument: gadgets/motifpropforobj.PS
%!PS-Adobe-2.0
%%Title: Opal 1
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 11:17 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 205 327 407 466
%%%Pages: 1
%%EndComments


/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
        /color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
          color-p {red green blue setrgbcolor} if
          transparent-p
          % The case where the background is not drawn
          { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
          % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-1
<0003 7ffb 601b 7ffb 601b 7ffb 601b 7ffb 601b 7ffb 0003>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
133 -254 translate
gsave
0 648 202 139 ClipToRectangle
0 0 translate
gsave
0 648 202 139 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
7 641 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
9 639 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
9 639 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
12 638 627 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
67 641 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
69 639 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
69 639 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
72 638 627 35 14 0 false 0 0 0 false 0 0 0 false (Apply) 12 /Courier DrawText
127 641 51 20 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
129 639 49 18 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
129 639 47 16 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
132 638 627 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
5 529 518 95 14 0 false 0 0 0 false 0 0 0 false (FILLING-STYLE:) 12 /Courier DrawText
111 527 14 11 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
109 529 14 11 image-1 false 0 0 0 false DrawBitmap
5 543 532 74 14 0 false 0 0 0 false 0 0 0 false (LINE-STYLE:) 12 /Courier DrawText
90 541 14 11 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
88 543 14 11 image-1 false 0 0 0 false DrawBitmap
5 561 550 52 14 0 false 0 0 0 false 0 0 0 false (QUALITY:) 12 /Courier DrawText
68 559 124 15 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
66 561 124 15 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
68 561 550 31 14 0 false 0 0 0 false 0 0 0 false (:GOOD) 12 /Courier DrawText
109 561 550 46 14 0 false 0 0 0 false 0 0 0 false (:MEDIUM) 12 /Courier DrawText
165 561 550 24 14 0 false 0 0 0 false 0 0 0 false (:BAD) 12 /Courier DrawText
5 575 564 46 14 0 false 0 0 0 false 0 0 0 false (HEIGHT:) 12 /Courier DrawText
60 575 564 12 14 0 false 0 0 0 false 0 0 0 false (20) 12 /Courier DrawText
5 589 578 39 14 0 false 0 0 0 false 0 0 0 false (WIDTH:) 12 /Courier DrawText
53 589 578 12 14 0 false 0 0 0 false 0 0 0 false (20) 12 /Courier DrawText
5 603 592 25 14 0 false 0 0 0 false 0 0 0 false (TOP:) 12 /Courier DrawText
39 603 592 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
5 617 606 32 14 0 false 0 0 0 false 0 0 0 false (LEFT:) 12 /Courier DrawText
46 617 606 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
grestore

grestore

0 648 202 139 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 205 327 407 466

%%EndDocument
 GE /Times-Bold SF
8280 57643 MT
(Figure 4-6:)SH
/Times-Roman SF
14053 XM
(An example of)167 W
10 /Courier AF
21364 XM
(motif-prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
41005 XM
(containing some gadgets.  The)166 W
14053 58839 MT
(code to create this is shown in section 3.24.9.)SH
46800 50 8280 60791 UL
8280 62542 MT
(The loader for)SH
10 /Courier AF
14845 XM
(motif-prop-sheet-for-obj-with-OK)SH
11 /Times-Roman AF
34320 XM
(is "motif-prop-sheet-win-loader".)SH
8280 64840 MT
(The implementation and operation)
347 W( of)348 W
10 /Courier AF
26666 XM
(motif-prop-sheet-for-obj-with-ok)SH
11 /Times-Roman AF
46489 XM
(is identical to the)348 W
10 /Courier AF
8280 66036 MT
(prop-sheet-for-obj-with-ok)SH
11 /Times-Roman AF
24520 XM
(gadget \050described in section 3.24.6 with)
365 W( the exception that the)364 W
10 /Courier AF
8280 67232 MT
(:foreground-color)SH
11 /Times-Roman AF
18755 XM
(slot may be set to any)SH
10 /Courier AF
28593 XM
(opal:color)SH
11 /Times-Roman AF
34868 XM
(object.)SH
ES
%%Page: 454 107
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 454)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(4.17. Motif-Prop-Sheet-For-Obj-With-Done)SH
11 /Times-Roman AF
6120 9334 MT
(There is)
114 W( a new gadget that displays a property sheet for an object and a ``Done'' button.  When a slot)115 W
6120 10530 MT
(value is edited, the slot is set immediately, rather than waiting for an OK or APPLY)
51 W( to be hit.  Thus, the)50 W
6120 11726 MT
(prop-sheet-for-obj slot)294 W
10 /Courier AF
16910 XM
(:set-immediately-p)SH
11 /Times-Roman AF
28279 XM
(is always T. This is especially useful for when)
294 W( the)295 W
6120 12922 MT
(property sheet is displaying multiple objects, since slots which)
128 W( are not edited won't be set.  The Done)127 W
6120 14118 MT
(button simply removes the property sheet window from the screen.)SH
6120 16416 MT
(Sorry, there is no Garnet look-and-feel version of this gadget.)SH
6120 18714 MT
(The parameters are pretty much the same as for)287 W
10 /Courier AF
29866 XM
(prop-sheet-for-obj)SH
11 /Times-Roman AF
(, with the)
287 W( addition of the)288 W
10 /Courier AF
6120 19910 MT
(:done-function)SH
11 /Times-Roman AF
14795 XM
(which is called with the property sheet as a parameter.)SH
8 /Courier AF
8040 21075 MT
(\050create-instance 'gg:Motif-Prop-Sheet-For-Obj-With-Done opal:aggregadget)SH
9960 21940 MT
(\050:maybe-constant '\050:left :top :obj :slots :eval-p :done-function :v-spacing)SH
19080 22805 MT
(:multi-line-p :select-label-p :label-selected-func)SH
19080 23670 MT
(:label-select-event :select-value-p :value-selected-func)SH
19080 24535 MT
(:single-select-p :foreground-color :visible :type-gadgets)SH
19080 25400 MT
(:union? :error-gadget\051\051)SH
9960 26265 MT
(\050:left 5\051 \050:top 5\051)SH
9960 27130 MT
(\050:obj NIL\051)SH
/Times-Italic SF
20520 XM
(; can be one object or a list of objects)SH
/Courier SF
9960 27995 MT
(\050:slots NIL\051)SH
/Times-Italic SF
20520 XM
(; list of slots to show.  If NIL uses :parameters)SH
/Courier SF
9960 28860 MT
(\050:done-function NIL\051)SH
/Times-Italic SF
20520 XM
(; called when hit done as \050lambda \050prop\051\051)SH
/Courier SF
9960 29725 MT
(\050:eval-p T\051)SH
/Times-Italic SF
20520 XM
(; evaluate the values of the slots?  Usually T.)SH
/Courier SF
9960 30590 MT
(\050:error-gadget NIL\051)SH
/Times-Italic SF
20520 XM
(; used to report errors on evaluation)SH
/Courier SF
9960 31455 MT
(\050:type-gadgets NIL\051)SH
/Times-Italic SF
20520 XM
(; modifies the default display of slots)SH
/Courier SF
9960 32320 MT
(\050:union? T\051)SH
/Times-Italic SF
16200 XM
(; if slots is NIL and multiple objects, use union or intersection of :parameters?)SH
/Courier SF
9960 33185 MT
(\050:v-spacing 1\051)SH
9960 34050 MT
(\050:select-p NIL\051)SH
/Times-Italic SF
20520 XM
(; T if want to be able to select the entries)SH
/Courier SF
9960 35780 MT
(\050:foreground-color opal:Motif-Gray\051)SH
/Times-Italic SF
27240 XM
(; background color of the window)SH
/Courier SF
9960 37510 MT
(\050:select-label-p NIL\051)SH
/Times-Italic SF
20520 XM
(; T if want to be able to select the entries)SH
/Courier SF
9960 38375 MT
(\050:label-selected-func NIL\051)SH
9960 39240 MT
(\050:label-select-event :any-mousedown\051)SH
9960 40105 MT
(\050:select-value-p NIL\051)SH
9960 40970 MT
(\050:value-selected-func NIL\051)SH
9960 41835 MT
(\050:single-select-p NIL\051)SH
/Times-Italic SF
9480 43565 MT
(;; Read-Only Slots)SH
/Courier SF
9960 44430 MT
(\050:label-selected \050o-formula \050gvl :propsheet :label-selected\051\051\051)SH
9960 45295 MT
(\050:value-selected \050o-formula \050gvl :propsheet :value-selected\051\051\051)SH
9960 46160 MT
(\050:value \050o-formula \050gvl :propsheet :value\051\051\051)SH
9960 47025 MT
(\050:changed-values \050o-formula \050gvl :propsheet :changed-values\051\051\051)SH
9960 47890 MT
(\050:width \050o-formula \050MAX \050gvl :done-panel :width\051)SH
21480 48755 MT
(\050gvl :propsheet :width\051\051\051\051)SH
9960 49620 MT
(\050:height \050o-formula \050+ 2 \050gvl :done-panel :height\051)SH
21000 50485 MT
(\050gvl :propsheet :height\051\051\051\051)SH
11 /Times-Roman AF
6120 53648 MT
(The loader for)SH
10 /Courier AF
12685 XM
(motif-prop-sheet-for-obj-with-done)SH
11 /Times-Roman AF
33360 XM
(is "motif-prop-sheet-win-loader".)SH
ES
%%Page: 455 108
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.18)
SH( Motif)
1800 W( Scrolling Window)SH
51386 XM
(Page 455)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(4.18. Motif Scrolling Window)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'gg:Motif-Scrolling-Window-With-Bars opal:aggregadget)SH
11640 10168 MT
(\050:maybe-constant '\050:left :top :width :height :border-width :title :total-width)SH
20760 11033 MT
(:total-height :foreground-color :h-scroll-bar-p :v-scroll-bar-p)SH
20760 11898 MT
(:h-scroll-on-top-p :v-scroll-on-left-p :h-scr-incr :h-page-incr)SH
20760 12763 MT
(:v-scr-incr :v-page-incr :icon-title :parent-window :visible\051\051)SH
11640 14493 MT
(;;)SH
/Times-Italic SF
13080 XM
(Window slots)SH
/Courier SF
11640 15358 MT
(\050:left 0\051  ;)SH
/Times-Italic SF
17880 XM
(left, top, width and height of outermost window)SH
/Courier SF
11640 16223 MT
(\050:top 0\051)SH
11640 17088 MT
(\050:position-by-hand NIL\051 ;)SH
/Times-Italic SF
24120 XM
(if T, then left,top ignored and user asked for window position)SH
/Courier SF
11640 17953 MT
(\050:width 150\051 ;)SH
/Times-Italic SF
(width and height of inside of outer window)SH
/Courier SF
11640 18818 MT
(\050:height 150\051)SH
11640 19683 MT
(\050:border-width 2\051 ;)SH
/Times-Italic SF
21240 XM
(of outer window)SH
/Courier SF
11640 20548 MT
(\050:parent-window NIL\051 ;)SH
/Times-Italic SF
22680 XM
(window this scrolling-window is inside of, or NIL if top level)SH
/Courier SF
11640 21413 MT
(\050:double-buffered-p NIL\051)SH
11640 22278 MT
(\050:omit-title-bar-p NIL\051)SH
11640 23143 MT
(\050:title "Motif-Scrolling-Window"\051)SH
11640 24008 MT
(\050:icon-title \050o-formula \050gvl :title\051\051\051 ;)SH
/Times-Italic SF
(Default is the same as the title)SH
/Courier SF
11640 24873 MT
(\050:total-width 200\051)
SH( ;)960 W
/Times-Italic SF
22680 XM
(total size of the scrollable area inside)SH
/Courier SF
11640 25738 MT
(\050:total-height 200\051)SH
11640 26603 MT
(\050:X-Offset 0\051  ;)SH
/Times-Italic SF
19800 XM
(x offset in of the scrollable area. CANNOT BE A FORMULA)SH
/Courier SF
11640 27468 MT
(\050:Y-Offset 0\051  ;)SH
/Times-Italic SF
19800 XM
(CANNOT BE A FORMULA)SH
/Courier SF
11640 28333 MT
(\050:visible T\051  ;)SH
/Times-Italic SF
19320 XM
(whether the window and bars are visible \050mapped\051)SH
/Courier SF
11640 29198 MT
(\050:foreground-color opal:motif-gray\051)SH
11640 30928 MT
(\050:h-scroll-bar-p T\051  ;)SH
/Times-Italic SF
22680 XM
(Is there a horizontal scroll bar?)SH
/Courier SF
11640 31793 MT
(\050:v-scroll-bar-p T\051  ;)SH
/Times-Italic SF
22680 XM
(Is there a vertical scroll bar?)SH
/Courier SF
11640 33523 MT
(;;)SH
/Times-Italic SF
13080 XM
(Scroll Bar slots)SH
/Courier SF
11640 34388 MT
(\050:h-scroll-on-top-p NIL\051  ;)SH
/Times-Italic SF
25080 XM
(whether horiz scroll bar is on top or bottom)SH
/Courier SF
11640 35253 MT
(\050:v-scroll-on-left-p T\051)
SH( ;)960 W
/Times-Italic SF
25080 XM
(whether vert scroll bar is on left or right)SH
/Courier SF
11640 36118 MT
(\050:h-scr-incr 10\051  ;)SH
/Times-Italic SF
21240 XM
(in pixels)SH
/Courier SF
11640 36983 MT
(\050:h-page-incr \050o-formula \050- \050gvl :width\051 10\051\051\051 ;)SH
/Times-Italic SF
35160 XM
(default jumps one page minus 10 pixels)SH
/Courier SF
11640 37848 MT
(\050:v-scr-incr 10\051  ;)SH
/Times-Italic SF
21240 XM
(in pixels)SH
/Courier SF
11640 38713 MT
(\050:v-page-incr \050o-formula \050- \050gvl :height\051 10\051\051\051 ;)SH
/Times-Italic SF
35640 XM
(default jumps one page minus 10 pixels)SH
/Courier SF
11640 40443 MT
(;;)SH
/Times-BoldItalic SF
13080 XM
(Read-Only slots)SH
/Courier SF
11640 41308 MT
(\050:Inner-Window NIL\051  ;)SH
/Times-Italic SF
22680 XM
(these are created by the update method)SH
/Courier SF
11640 42173 MT
(\050:inner-aggregate NIL\051 ;)SH
/Times-Italic SF
23640 XM
(add your objects to this aggregate \050but have to update first\051)SH
/Courier SF
11640 43038 MT
(\050:outer-window NIL\051 ;)SH
/Times-Italic SF
22200 XM
(call Opal:Update on this window \050or on gadget itself\051)SH
/Courier SF
11640 43903 MT
(\050:clip-window NIL\051)SH
11640 44768 MT
(...\051)SH
11 SS 
75 100 0 8692 85815 GB 
%%BeginDocument: gadgets/motif-scrolling-window-gadget.ps
%!PS-Adobe-2.0
%%Title: Scrolling Window
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 2, 1992, 9:55 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 154 257 459 534
%%%Pages: 1
%%EndComments


/SetUserScreenDict 22 dict def
SetUserScreenDict begin
  /tempctm matrix def
  /temprot matrix def
  /tempscale matrix def
  /ConcatProcs
   {/proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add
      array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
   } def
  /resmatrix matrix def
  /findresolution
   { 72 0 resmatrix defaultmatrix dtransform
     /yres exch def /xres exch def
     xres dup mul yres dup mul add sqrt
   } def
end

/SetUserScreen
  { SetUserScreenDict begin
    /spotfunction exch def
    /cellsize exch def
    /m tempctm currentmatrix def
    /rm 0 temprot rotate def
    /sm cellsize dup tempscale scale def
    sm rm m m concatmatrix m concatmatrix pop
    1 0 m dtransform /y1 exch def /x1 exch def
    /veclength x1 dup mul y1 dup mul add sqrt def
    /frequency findresolution veclength div def
    /newscreenangle y1 x1 atan def
    m 2 get m 1 get mul m 0 get m 3 get mul sub
     0 gt
     { { neg } /spotfunction load ConcatProcs
         /spotfunction exch def
     } if
    frequency newscreenangle /spotfunction load setscreen
  end
} def

/SetPatternDict 18 dict def
SetPatternDict begin
  /bitison
   { /ybit exch def /xbit exch def
     /bytevalue bstring ybit bwidth mul xbit 8 idiv
       add get def
     /mask 1 7 xbit 8 mod sub bitshift def
     bytevalue mask and 0 ne
    } def
end

/BitPatternSpotFunction
  { SetPatternDict begin
     /y exch def /x exch def
     /xindex x 1 add 2 div bpside mul cvi def
     /yindex y 1 add 2 div bpside mul cvi def
     xindex yindex bitison
      { /onbits onbits 1 add def 1 }
      { /offbits offbits 1 add def 0 }
      ifelse
    end
  } def

/SetPattern
  { SetPatternDict begin
    /cellsz exch def
    /bwidth exch def
    /bpside exch def
    /bstring exch def
    /onbits 0 def /offbits 0 def
    cellsz /BitPatternSpotFunction load
     SetUserScreen
    {} settransfer
    offbits offbits onbits add div setgray
    end
  } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-1
<ff80 f780 e380 c180 8080 c180 e380 f780 ff80>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
82 -186 translate
gsave
0 648 305 277 ClipToRectangle
0 0 translate
gsave
0 648 305 277 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
2 646 16 253 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
4 644 14 251 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
4 644 12 249 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
4 631 12 113 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
6 629 10 111 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
6 629 8 109 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
10 643 14 633 5 633 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 5 633 10 643 DrawLine
10 398 5 408 15 408 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 10 398 15 408 DrawLine
22 388 281 16 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
24 386 279 14 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
24 386 277 12 0 0 0 0 false 0 0 [] -1 0 0.70 0.70 0.70 true DrawRectangle
37 386 141 12 0 0 0 0 false 0 0 [] -1 0 1 1 1 true DrawRectangle
39 384 139 10 0 0 0 0 false 0 0 [] -1 0 0.20 0.20 0.20 true DrawRectangle
39 384 137 8 0 0 0 0 false 0 0 [] -1 0 0.83 0.83 0.83 true DrawRectangle
25 381 35 376 35 386 6 0 0.20 0.20 0.20 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 1 1 1 true 0 0 [] 2 35 386 25 381 DrawLine
288 375 288 385 298 380 6 0 1 1 1 true 0 0 [] 2 0 0.83 0.83 0.83 true DrawPolyline
0 0.20 0.20 0.20 true 0 0 [] 2 298 380 288 375 DrawLine
grestore

gsave

%
% Begin new window
%
20 0 translate
gsave
0 648 285 257 ClipToRectangle
0 0 translate
gsave
0 648 285 257 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
grestore

gsave

%
% Begin new window
%
0 0 translate
gsave
0 648 500 500 ClipToRectangle
0 0 translate
gsave
0 648 500 500 0 0 0 0 false 0 0 [] -1 0 0.827451 0.827451 0.827451 true DrawRectangle
0 648 30 30 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
470 648 30 30 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 178 30 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
470 178 30 30 0 0 0 0 false 0 0 [] 1 0.75 0 0 0 false DrawRectangle
image-1 9 2 15.36
250.0 398.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -2 0 0 0 false DrawEllipse
grestore

grestore

grestore

grestore

grestore

grestore

0 648 305 277 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 154 257 459 534

%%EndDocument
 GE /Times-Roman SF
8280 68838 MT
(The loader file for)
233 W( the)232 W
10 /Courier AF
19368 XM
(motif-scrolling-window-with-bars)SH
11 /Times-Roman AF
39075 XM
(gadget is "motif-scrolling-window-)232 W
8280 70034 MT
(loader".)SH
ES
%%Page: 456 109
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 456)
SH( Gadgets)830 W
36678 XM
(The Motif Gadget Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The use of)173 W
10 /Courier AF
11556 XM
(motif-scrolling-window-with-bars)SH
11 /Times-Roman AF
31204 XM
(is identical to)
173 W( the)174 W
10 /Courier AF
39720 XM
(scrolling-window-with-)SH
6120 9151 MT
(bars)SH
11 /Times-Roman AF
9012 XM
(gadget described in section 3.16, with the exception that the parameters to the scroll)
217 W( bars are)216 W
6120 10347 MT
(slightly different and the)SH
10 /Courier AF
17240 XM
(:foreground-color)SH
11 /Times-Roman AF
27715 XM
(can be set.)SH
/Times-Bold SF
6120 12645 MT
(Caveats:)SH
/Symbol SF
8089 14209 MT
(\267)SH
/Times-Bold SF
8870 XM
(If the motif-scrolling-window has a)5 W
10 /Courier AF
25608 XM
(:parent-window)SH
11 /Times-Bold AF
(, update the parent window before)6 W
8870 15377 MT
(instantiating the motif-scrolling-window.)SH
/Symbol SF
8089 17229 MT
(\267)SH
/Times-Bold SF
8870 XM
(Update the scrolling-window gadget before referring to its inner/outer windows and)201 W
8870 18397 MT
(aggregates.)SH
/Symbol SF
8089 20249 MT
(\267)SH
/Times-Bold SF
8870 XM
(The instance of the motif-scrolling-window should not be added to an aggregate.)SH
1528 50 32644 20449 UL
/Times-Roman SF
6120 22547 MT
(The)SH
10 /Courier AF
8236 XM
(motif-scrolling-window-with-bars)SH
11 /Times-Roman AF
27842 XM
(gadget is not a window itself; it is an aggregadget that)131 W
6120 23743 MT
(points to its own windows.  These windows are accessed through)
679 W( the)678 W
10 /Courier AF
44845 XM
(:outer-window)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
6120 24939 MT
(:inner-window)SH
11 /Times-Roman AF
(, and)500 W
10 /Courier AF
17333 XM
(:clip-window)SH
11 /Times-Roman AF
25308 XM
(slots of the)
500 W( gadget, as in)501 W
10 /Courier AF
39219 XM
(\050g-value MY-SCROLL-WIN)501 W
6120 26135 MT
(:outer-window\051)SH
11 /Times-Roman AF
(. So)
501 W( you)
113 W( cannot call)112 W
10 /Courier AF
24452 XM
(opal:make-ps-file)SH
11 /Times-Roman AF
35039 XM
(with the scrolling-window gadget as an)112 W
6120 27331 MT
(argument. You)
275 W( have to send one of the windows that it points to:)SH
8 /Courier AF
8040 28496 MT
(> \050opal:make-ps-file \050g-value SCROLL-WIN :outer-window\051)SH
18120 29361 MT
("fig.PS" :LANDSCAPE-P T :BORDERS-P :MOTIF\051)SH
8040 30226 MT
(T)SH
8040 31091 MT
(>)SH
ES
%%Page: 457 110
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 5.4)
SH( Selecting)
1800 W( Buttons)SH
51386 XM
(Page 457)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(5. Using the Gadgets: Examples)SH
14 SS 
8280 13146 MT
(5.1. Using the :value Slot)SH
11 /Times-Roman AF
8280 14342 MT
(In order to use the value returned by)
173 W( a gadget, we have to access the top level)174 W
10 /Courier AF
45559 XM
(:value)SH
11 /Times-Roman AF
49608 XM
(slot. As)
623 W( an)174 W
8280 15538 MT
(example, suppose we want to make an aggregadget)
51 W( out of a vertical slider and a circle, and that we want)50 W
8280 16734 MT
(the diameter of the circle to be dependent on the current value of the)
7 W( slider.  We may create such a unit by)8 W
8280 17930 MT
(putting a formula in the)52 W
10 /Courier AF
19203 XM
(:diameter)SH
11 /Times-Roman AF
24930 XM
(slot of)
52 W( the circle that depends on the value returned from the slider.)51 W
8280 19126 MT
(Such an)
102 W( aggregadget is implemented below.  The formula in the)103 W
10 /Courier AF
37882 XM
(:diameter)SH
11 /Times-Roman AF
43660 XM
(slot of the circle uses the)103 W
8280 20322 MT
(KR function)SH
10 /Courier AF
14024 XM
(gvl)SH
11 /Times-Roman AF
16099 XM
(to access the)SH
10 /Courier AF
21932 XM
(:value)SH
11 /Times-Roman AF
25807 XM
(slot of the vertical slider.)SH
8 /Courier AF
10200 21487 MT
(\050create-instance 'BALLOON opal:aggregadget)SH
11640 22352 MT
(\050:parts)SH
12120 23217 MT
(`\050\050:slider ,gg:v-slider)SH
17400 24082 MT
(\050:left 10\051)SH
17400 24947 MT
(\050:top 20\051\051)SH
13080 25812 MT
(\050:circle ,opal:circle)SH
17400 26677 MT
(\050:diameter ,\050o-formula \050gvl :parent :slider :value\051\051\051)SH
17400 27542 MT
(\050:left 100\051 \050:top 50\051)SH
17400 28407 MT
(\050:width ,\050o-formula \050gvl :diameter\051\051\051)SH
17400 29272 MT
(\050:height ,\050o-formula \050gvl :diameter\051\051\051\051\051\051\051)SH
14 /Times-Bold AF
8280 33090 MT
(5.2. Using the :selection-function Slot)SH
11 /Times-Roman AF
8280 34286 MT
(In order to execute a function whenever any new value or item is selected \050i.e., when)
118 W( the)117 W
10 /Courier AF
49498 XM
(:value)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 35482 MT
(changes\051, that function must be specified in the slot)32 W
10 /Courier AF
31480 XM
(:selection-function)SH
11 /Times-Roman AF
(. Suppose)
339 W( we want a)
32 W( set of)33 W
8280 36678 MT
(buttons which give us a choice of several)
78 W( ancient cities.  We would also like to define a function which)77 W
8280 37874 MT
(displays a message to the screen when a new city is selected.  This panel can be)
235 W( created with the)236 W
8280 39070 MT
(definitions below.)SH
8 /Courier AF
10200 40235 MT
(\050create-instance 'MY-BUTTONS gg:text-button-panel)SH
12120 41100 MT
(\050:selection-function #'Report-City-Selected\051)SH
12120 41965 MT
(\050:items '\050"Athens" "Babylon" "Rome" "Carthage"\051\051\051)SH
10200 43695 MT
(\050defun Report-City-Selected \050gadgets-object value\051)SH
11160 44560 MT
(\050format t "Selected city:  ~S~%~%" value\051)SH
11160 45425 MT
(\050format t "Pressed button object ~S~%")SH
15960 46290 MT
(\050gv gadgets-object :value-obj\051\051\051)SH
14 /Times-Bold AF
8280 50108 MT
(5.3. Using Functions in the :items Slot)SH
11 /Times-Roman AF
8280 51304 MT
(In order to execute a specific function when)
170 W( a specific menu item \050or button\051 is selected, the desired)169 W
8280 52500 MT
(function must be paired with its associated string or atom in the)110 W
10 /Courier AF
37831 XM
(:items)SH
11 /Times-Roman AF
41817 XM
(list. A)
497 W( menu which executes)111 W
8280 53696 MT
(functions assigned to item strings appears below.  Only one function \050)50 W
10 /Courier AF
(My-Cut)SH
11 /Times-Roman AF
(\051 has been defined, but the)50 W
8280 54892 MT
(definition of the others is analogous.)SH
8 /Courier AF
10200 56057 MT
(\050create-instance 'MY-MENU gg:menu)SH
11640 56922 MT
(\050:left 20\051)SH
11640 57787 MT
(\050:top 20\051)SH
11640 58652 MT
(\050:title "Menu"\051)SH
11640 59517 MT
(\050:items '\050\050"Cut" my-cut\051 \050"Copy" my-copy\051 \050"Paste" my-paste\051\051\051\051)SH
10200 61247 MT
(\050defun my-cut \050gadgets-object item-string\051)SH
11160 62112 MT
(\050format t "Function CUT called~%~%"\051\051)SH
ES
%%Page: 458 111
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 458)
SH( Gadgets)830 W
35344 XM
(Using the Gadgets: Examples)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(5.4. Selecting Buttons)SH
11 /Times-Roman AF
6120 9334 MT
(In order to directly select a button in a button panel \050rather than allowing the user to)
9 W( select the button with)10 W
6120 10530 MT
(the mouse\051, either the)39 W
10 /Courier AF
16081 XM
(:value)SH
11 /Times-Roman AF
19995 XM
(or)SH
10 /Courier AF
21225 XM
(:value-obj)SH
11 /Times-Roman AF
27539 XM
(slots may be set.  However, neither)
39 W( of these slots may be)38 W
6120 11726 MT
(given values at the time that)
488 W( the button panel is created \050i.e.,)489 W
/Times-Italic SF
38712 XM
(do not supply values in the)489 W
10 /Courier AF
6120 12922 MT
(create-instance)SH
11 /Times-Italic AF
15395 XM
(call for these slots)SH
/Times-Roman SF
(\051, since this would permanently override the formulas in the slots.)SH
6120 15220 MT
(The)SH
10 /Courier AF
8208 XM
(:value)SH
11 /Times-Roman AF
12186 XM
(slot may be set with any of the items \050or the first element in any of the item pairs\051)
103 W( in the)102 W
10 /Courier AF
6120 16416 MT
(:items)SH
11 /Times-Roman AF
10092 XM
(list of the button panel.  The example below shows how buttons on a)
97 W( text-button-panel and an)98 W
6120 17612 MT
(x-button-panel could be manually selected.  In both)
60 W( cases, the selected items \050i.e., those appearing in the)59 W
10 /Courier AF
6120 18808 MT
(:value)SH
11 /Times-Roman AF
9995 XM
(slot\051 will appear selected when the button panels are displayed in a window.)SH
8 /Courier AF
8040 19973 MT
(\050create-instance 'MY-TEXT-BUTTONS gg:text-button-panel)SH
9480 20838 MT
(\050:items '\050:left :center :right\051\051\051)SH
8040 21703 MT
(\050gv MY-TEXT-BUTTONS :value\051)SH
/Times-Italic SF
22440 XM
(;; initialize the formula in the :value slot)SH
/Courier SF
8040 22568 MT
(\050s-value MY-TEXT-BUTTONS :value :center\051)SH
8040 24298 MT
(\050create-instance 'MY-X-BUTTONS gg:x-button-panel)SH
9480 25163 MT
(\050:items '\050"Bold" "Underline" "Italic"\051\051\051)SH
8040 26028 MT
(\050gv MY-X-BUTTONS :value\051)SH
/Times-Italic SF
21000 XM
(;; initialize the formula in the :value slot)SH
8040 26893 MT
(;; Value must be a list because x-buttons have multiple selection)SH
/Courier SF
8040 27758 MT
(\050s-value MY-X-BUTTONS :value '\050"Bold" "Underline"\051\051)SH
11 /Times-Roman AF
6120 29179 MT
(Buttons may also be selected by setting the)148 W
10 /Courier AF
26552 XM
(:value-obj)SH
11 /Times-Roman AF
32975 XM
(slot to be the)
148 W( actual button object or list of)149 W
6120 30375 MT
(button objects which should be selected.  This method requires)
19 W( the designer to look at the internal slots of)18 W
6120 31571 MT
(the button gadgets.  The example below shows how the)
64 W( same results may be obtained using this method)65 W
6120 32767 MT
(as were obtained in the above example.)SH
8 /Courier AF
8040 33932 MT
(\050create-instance 'NEW-TEXT-BUTTONS gg:text-buttons-panel)SH
9480 34797 MT
(\050:items `\050:left :center :right\051\051\051)SH
8040 35662 MT
(\050s-value NEW-TEXT-BUTTONS)SH
12360 36527 MT
(:value-obj)SH
/Times-Italic SF
12360 37392 MT
(;; The second button corresponds to the item ":center")SH
/Courier SF
12360 38257 MT
(\050second \050gv NEW-TEXT-BUTTONS :text-button-list :components\051\051\051)SH
11 /Times-Roman AF
6120 39678 MT
(The)SH
10 /Courier AF
8142 XM
(:value)SH
11 /Times-Roman AF
12054 XM
(slot of a single button will either contain the)36 W
10 /Courier AF
32085 XM
(:string)SH
11 /Times-Roman AF
36596 XM
(of the button or NIL.  Single buttons)36 W
6120 40874 MT
(will appear selected when the)SH
10 /Courier AF
19405 XM
(:value)SH
11 /Times-Roman AF
23280 XM
(slot contains any non-NIL value.)SH
14 /Times-Bold AF
6120 44692 MT
(5.5. The :item-to-string-function Slot)SH
11 /Times-Roman AF
6120 45888 MT
(The)SH
10 /Courier AF
8207 XM
(:items)SH
11 /Times-Roman AF
12185 XM
(slot of the scrolling menu may be a list of any objects at all, including the standard items)103 W
6120 47084 MT
(described in section 3.5.  The mechanism which allows strings to be generated from arbitrary objects is)88 W
6120 48280 MT
(the user-defined)294 W
10 /Courier AF
14098 XM
(:item-to-string-function)SH
11 /Times-Roman AF
(. The)
863 W( default scrolling menu)
294 W( will handle a list of)295 W
6120 49476 MT
(standard items, but for a list of other objects a suitable function must be supplied.)SH
6120 51774 MT
(As discussed in)
1 W( section 1.4.3, the elements of the)SH
10 /Courier AF
27996 XM
(:items)SH
11 /Times-Roman AF
31871 XM
(list can be either single atoms or lists.  When an)SH
6120 52970 MT
(element of the)83 W
10 /Courier AF
12936 XM
(:items)SH
11 /Times-Roman AF
16894 XM
(list is a list, then the)83 W
10 /Courier AF
26469 XM
(:item-to-string-function)SH
11 /Times-Roman AF
41227 XM
(is applied only)
83 W( to the first)84 W
6120 54166 MT
(element in)
108 W( the list, rather than the list itself.  In other words, the)107 W
10 /Courier AF
35878 XM
(:item-to-string-function)SH
11 /Times-Roman AF
50660 XM
(takes)SH
6120 55362 MT
(the)SH
10 /Courier AF
7739 XM
(car)SH
11 /Times-Roman AF
9814 XM
(of the item list as its parameter, rather than the entire item list.)SH
6120 57660 MT
(Suppose the list in the)SH
10 /Courier AF
16113 XM
(:items)SH
11 /Times-Roman AF
19988 XM
(slot of the scrolling menu is)SH
8 /Courier AF
8040 59764 MT
(\050list v-scroll-bar v-slider trill-device\051)SH
11 /Times-Roman AF
6120 62324 MT
(which is a list of Garnet Gadget schemas.  A function must be provided which returns a string)
22 W( identifying)23 W
6120 63520 MT
(an item when given a schema as)
82 W( input.  The following slot/value pair, inserted into the definition of the)81 W
6120 64716 MT
(new schema, will accomplish this task:)SH
8 /Courier AF
8040 66820 MT
(\050:item-to-string-function #'\050lambda \050item\051)SH
22440 67685 MT
(\050if item)SH
24360 68550 MT
(\050name-for-schema item\051)SH
/Times-Italic SF
35880 XM
(;; imported from KR)SH
/Courier SF
24360 69415 MT
(""\051\051\051)SH
ES
%%Page: 459 112
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Index)SH
51386 XM
(Page 459)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(Index)SH
8 /Times-Roman AF
8280 11525 MT
(Abort-Polyline-Creator 403)400 W
23880 XM
(Indicator 362)400 W
39480 XM
(Notice-items-changed 356)400 W
8280 12449 MT
(Add-item)SH
23880 XM
(Inheritance 353)400 W
39480 XM
(Number input)
SH( 365)400 W
9378 13373 MT
(Gadgets 356)400 W
23880 XM
(Initial value)
SH( 355,)
400 W( 457)SH
9378 14297 MT
(Menubar 380,)
400 W( 382)SH
23880 XM
(Int-feedback-p 362)400 W
39480 XM
(Option-button 371)400 W
9378 15221 MT
(Motif-menubar 444,)
400 W( 447)SH
23880 XM
(Is-A-Motif-Background 425)400 W
8280 16145 MT
(Add-submenu-item 380)400 W
23880 XM
(Is-A-Motif-Rect 425)400 W
39480 XM
(Page-trill-p 362)400 W
8280 17069 MT
(Additional-selection 400)400 W
23880 XM
(Item functions)
SH( 356,)
400 W( 368)SH
39480 XM
(Polyline editing)
SH( 401)400 W
8280 17993 MT
(Aggrelists 367)400 W
23880 XM
(Item-to-string-function 375,)
400 W( 399, 458)SH
39480 XM
(Polyline-Creator 401)400 W
8280 18917 MT
(Arrow-line 395)400 W
23880 XM
(Items slot)
SH( 355,)
400 W( 368)SH
39480 XM
(Polyline-creator-loader 401)400 W
8280 19841 MT
(Atoms 356)400 W
39480 XM
(Pop-Up-From-Icon 420)400 W
23880 20765 MT
(Keyboard-selection 433)400 W
39480 XM
(Pop-Up-Win-Change-Items 420)400 W
8280 21689 MT
(Balloon Help)
SH( 421)400 W
39480 XM
(Pop-Up-Win-Change-Obj 420)400 W
8280 22613 MT
(Bar-item 378)400 W
23880 XM
(Labeled box)
SH( 384)400 W
39480 XM
(Pop-Up-Win-For-Prop 420)400 W
8280 23537 MT
(Box 384)400 W
23880 XM
(Lines-bitmap 373)400 W
39480 XM
(Popup-menu-button 372)400 W
8280 24461 MT
(Browser gadget)
SH( 396)400 W
23880 XM
(Load-gadget 410)400 W
39480 XM
(Promote-item 400)400 W
8280 25385 MT
(Browser-gadget-loader 397)400 W
23880 XM
(Loader files)
SH( 354,)
400 W( 358)SH
39480 XM
(Prop-sheet 412)400 W
8280 26309 MT
(Buttons 367,)
400 W( 368)SH
39480 XM
(Prop-Sheet-For-Obj 414)400 W
23880 27233 MT
(Make-bar-item 381)400 W
39480 XM
(Prop-Sheet-for-obj-With-OK 418)400 W
8280 28157 MT
(Careful-eval 404)400 W
23880 XM
(Make-menubar 381)400 W
39480 XM
(Prop-Sheet-With-OK 417)400 W
8280 29081 MT
(Careful-eval-formula-lambda 405)400 W
23880 XM
(Make-motif-bar-item 446)400 W
39480 XM
(Property sheets)
SH( 411)400 W
8280 30005 MT
(Careful-read-from-string 405)400 W
23880 XM
(Make-motif-menubar 446)400 W
39480 XM
(Pull-down menus)
SH( 378)400 W
8280 30929 MT
(Careful-string-eval 405)400 W
23880 XM
(Make-motif-submenu-item 446)400 W
39480 XM
(Push-first-item 400)400 W
8280 31853 MT
(Circular gauge)
SH( 366)400 W
23880 XM
(Make-submenu-item 382)400 W
8280 32777 MT
(Clipboard-Object 423)400 W
23880 XM
(Maybe-constant 357)400 W
39480 XM
(Query-gadget 406)400 W
8280 33701 MT
(Constants)SH
23880 XM
(Menu 374)400 W
9378 34625 MT
(Gadgets 357)400 W
23880 XM
(Menu-items-generating-function 399)400 W
39480 XM
(Radio-button 370)400 W
8280 35549 MT
(Customization 353,)
400 W( 354)SH
23880 XM
(Menubar 378)400 W
39480 XM
(Radio-button-panel 371)400 W
23880 36473 MT
(Menubar-components 383)400 W
39480 XM
(Remove-item 381,)
400 W( 383)SH
8280 37397 MT
(Demo-file-browser 397)400 W
23880 XM
(Menubar-disable-component 384)400 W
40578 XM
(motif-menubar 445)400 W
8280 38321 MT
(Demo-schema-browser 397)400 W
23880 XM
(Menubar-enable-component 384)400 W
39480 XM
(Remove-submenu-item 381,)
400 W( 445)SH
8280 39245 MT
(Directories in save-gadget)
SH( 408)400 W
23880 XM
(Menubar-enabled-p 384)400 W
39480 XM
(ReUsePropSheet 417)400 W
8280 40169 MT
(Display-error 403)400 W
23880 XM
(Menubar-get-title 384)400 W
39480 XM
(ReUsePropSheetObj 417)400 W
8280 41093 MT
(Display-error-and-wait 403)400 W
23880 XM
(Menubar-set-title 384)400 W
8280 42017 MT
(Display-load-gadget 411)400 W
23880 XM
(Mode line)
SH( 421)400 W
39480 XM
(Save-file-if-wanted 410)400 W
8280 42941 MT
(Display-load-gadget-and-wait 411)400 W
23880 XM
(Modules 358)400 W
39480 XM
(Save-gadget 406)400 W
8280 43865 MT
(Display-query 406)400 W
23880 XM
(Motif colors)
SH( 426)400 W
39480 XM
(Saving Garnet objects)
SH( 406)400 W
8280 44789 MT
(Display-query-and-wait 406)400 W
23880 XM
(Motif filling styles)
SH( 426)400 W
39480 XM
(Scr-incr 362)400 W
8280 45713 MT
(Display-save-gadget 408)400 W
23880 XM
(Motif-check-buttons 435)400 W
39480 XM
(Scr-trill-p 362)400 W
8280 46637 MT
(Display-save-gadget-and-wait 408)400 W
23880 XM
(Motif-error-gadget 448)400 W
39480 XM
(Scroll-bars 361)400 W
8280 47561 MT
(Displaying objects)
SH( 354)400 W
23880 XM
(Motif-gadget-prototype 426)400 W
39480 XM
(Scroll-Win-Inc 394)400 W
8280 48485 MT
(Documentation Line)
SH( 421)400 W
23880 XM
(Motif-gauge 431)400 W
39480 XM
(Scroll-Win-To 394)400 W
8280 49409 MT
(Double-arrow-line 395)400 W
23880 XM
(Motif-h-scroll-bar 428)400 W
39480 XM
(Scrolling menu)
SH( 375)400 W
8280 50333 MT
(Downarrow-bitmap 373)400 W
23880 XM
(Motif-load-gadget 451)400 W
39480 XM
(Scrolling-Input-String 385)400 W
23880 51257 MT
(Motif-menu 437)400 W
39480 XM
(Scrolling-Input-String-loader 385)400 W
8280 52181 MT
(Error-checking 404)400 W
23880 XM
(Motif-menu-accelerator-inter 439)400 W
39480 XM
(Scrolling-Labeled-Box 385)400 W
8280 53105 MT
(Error-gadget 403)400 W
23880 XM
(Motif-menubar 441)400 W
39480 XM
(Scrolling-labeled-box-loader 386)400 W
23880 54029 MT
(Motif-option-button 436)400 W
39480 XM
(Scrolling-window-loader 393,)
400 W( 455)SH
8280 54953 MT
(Find-submenu-component 383)400 W
23880 XM
(Motif-prop-sheet-for-obj-with-done 454)400 W
39480 XM
(Scrolling-window-with-bars 392)400 W
23880 55877 MT
(Motif-Prop-Sheet-for-obj-With-OK 452)400 W
39480 XM
(Selecting objects in a region)
SH( 391)400 W
8280 56801 MT
(Garnet-gadgets package)
SH( 354)400 W
23880 XM
(Motif-Prop-Sheet-With-OK 451)400 W
39480 XM
(Selection 386)400 W
8280 57725 MT
(Garnet-gadgets-loader 358)400 W
23880 XM
(Motif-query-gadget 449)400 W
39480 XM
(Selection-function 355)400 W
8280 58649 MT
(Gauge 366)400 W
23880 XM
(Motif-radio-buttons 435)400 W
39480 XM
(Set-first-item 399,)
400 W( 400)SH
8280 59573 MT
(Get-bar-component 383)400 W
23880 XM
(Motif-scrolling-labeled-box 448)400 W
39480 XM
(Set-menubar 382,)
400 W( 447)SH
8280 60497 MT
(Get-submenu-component 383)400 W
23880 XM
(Motif-scrolling-menu 440)400 W
39480 XM
(Set-selection 391)400 W
8280 61421 MT
(Get-val-for-propsheet-value 417)400 W
23880 XM
(Motif-scrolling-window 454)400 W
39480 XM
(Set-submenu 382,)
400 W( 447)SH
8280 62345 MT
(Gg nickname)
SH( 354)400 W
23880 XM
(Motif-scrolling-window-with-bars 454)400 W
39480 XM
(Set-val-for-propsheet-value 417)400 W
8280 63269 MT
(Graphics selection)
SH( 386)400 W
23880 XM
(Motif-slider 430)400 W
39480 XM
(Show-box 394)400 W
8280 64193 MT
(Gray feedback object)
SH( 400)400 W
23880 XM
(Motif-tab-inter 427)400 W
39480 XM
(Sliders 363)400 W
23880 65117 MT
(Motif-text-buttons 434)400 W
39480 XM
(Slots 353)400 W
8280 66041 MT
(H-scroll-bar 361)400 W
23880 XM
(Motif-trill-device 431)400 W
39480 XM
(Sort-objs-display-order 425)400 W
8280 66965 MT
(H-slider 363)400 W
23880 XM
(Motif-v-scroll-bar 428)400 W
39480 XM
(Standard Edit)
SH( 423)400 W
8280 67889 MT
(Help Line)
SH( 421)400 W
23880 XM
(Mouse Documentation Line)
SH( 421)400 W
39480 XM
(Standard-Copy 424)400 W
8280 68813 MT
(Help-string slot)
SH( 422)400 W
23880 XM
(MouseLine 421)400 W
39480 XM
(Standard-Cut 424)400 W
8280 69737 MT
(Hide-load-gadget 411)400 W
23880 XM
(MouseLinePopup 422)400 W
39480 XM
(Standard-Delete 424)400 W
8280 70661 MT
(Hide-save-gadget 408)400 W
23880 XM
(Multi-graphics-selection 387)400 W
39480 XM
(Standard-Delete-All 424)400 W
8280 71585 MT
(Horiz-choice-list 420)400 W
23880 XM
(Multi-selection-loader 388)400 W
39480 XM
(Standard-Duplicate 425)400 W
ES
%%Page: 460 113
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 460)
SH( Gadgets)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
8 SS 
6120 7749 MT
(Standard-Group 425)400 W
6120 8673 MT
(Standard-Initialize-Gadget 424)400 W
6120 9597 MT
(Standard-NIY 424)400 W
6120 10521 MT
(Standard-Paste-Inc-Place 424)400 W
6120 11445 MT
(Standard-Paste-Same-Place 424)400 W
6120 12369 MT
(Standard-Refresh 424)400 W
6120 13293 MT
(Standard-Select-All 424)400 W
6120 14217 MT
(Standard-To-Bottom 424)400 W
6120 15141 MT
(Standard-To-Top 424)400 W
6120 16065 MT
(Standard-Undo-Last-Delete 424)400 W
6120 16989 MT
(Standard-UnGroup 425)400 W
6120 17913 MT
(Stop-Polyline-Creator 403)400 W
6120 18837 MT
(String input)
SH( 384)400 W
6120 19761 MT
(Submenu-components 383)400 W
6120 20685 MT
(Submenu-item 378)400 W
6120 22533 MT
(Text-button 368)400 W
6120 23457 MT
(Text-button-panel 369)400 W
6120 24381 MT
(Toggle-polyline-handles 402)400 W
6120 25305 MT
(Trill boxes)
SH( 362)400 W
6120 26229 MT
(Trill-device 365)400 W
6120 27153 MT
(Trill-incr 362)400 W
6120 29001 MT
(Undo 391)400 W
6120 29925 MT
(Undo-Last-Move-Grow 391)400 W
6120 30849 MT
(Use-package 354)400 W
6120 32697 MT
(V-scroll-bar 354,)
400 W( 361)SH
6120 33621 MT
(V-slider 363)400 W
6120 34545 MT
(Value slot)
SH( 354,)
400 W( 368)SH
6120 35469 MT
(Value-obj 368)400 W
6120 37317 MT
(Who line)
SH( 421)400 W
6120 39165 MT
(X-button 369)400 W
6120 40089 MT
(X-button-panel 369)400 W
ES
%%Page: i 114
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Gadgets)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
25591 8272 MT
(Table of Contents)SH
12 SS 
8280 9796 MT
(1. Introduction)SH
53280 XM
(349)SH
10 SS 
9780 11186 MT
(1.1. Current Gadgets)SH
53580 XM
(349)SH
9780 12266 MT
(1.2. Customization)SH
53580 XM
(353)SH
9780 13346 MT
(1.3. Using Gadget Objects)SH
53580 XM
(354)SH
9780 14426 MT
(1.4. Application Interface)SH
53580 XM
(354)SH
11780 15506 MT
(1.4.1. The :value slot)SH
53580 XM
(354)SH
11780 16586 MT
(1.4.2. The :selection-function slot)SH
53580 XM
(355)SH
11780 17666 MT
(1.4.3. The :items slot)SH
53580 XM
(355)SH
13780 18746 MT
(1.4.3.1. Item functions)SH
53580 XM
(356)SH
13780 19826 MT
(1.4.3.2. Adding and removing items)SH
53580 XM
(356)SH
9780 20906 MT
(1.5. Constants with the Gadgets)SH
53580 XM
(357)SH
12 SS 
8280 22430 MT
(2. Accessing the Gadgets)SH
53280 XM
(358)SH
10 SS 
9780 23820 MT
(2.1. Gadgets Modules)SH
53580 XM
(358)SH
9780 24900 MT
(2.2. Loading the Gadgets)SH
53580 XM
(358)SH
9780 25980 MT
(2.3. Gadget Files)SH
53580 XM
(358)SH
9780 27060 MT
(2.4. Gadget Demos)SH
53580 XM
(358)SH
12 SS 
8280 28584 MT
(3. The Standard Gadget Objects)SH
53280 XM
(361)SH
10 SS 
9780 29974 MT
(3.1. Scroll Bars)SH
53580 XM
(361)SH
9780 31054 MT
(3.2. Sliders)SH
53580 XM
(363)SH
9780 32134 MT
(3.3. Trill Device)SH
53580 XM
(365)SH
9780 33214 MT
(3.4. Gauge)SH
53580 XM
(366)SH
9780 34294 MT
(3.5. Buttons)SH
53580 XM
(367)SH
11780 35374 MT
(3.5.1. Text Buttons)SH
53580 XM
(369)SH
11780 36454 MT
(3.5.2. X Buttons)SH
53580 XM
(370)SH
11780 37534 MT
(3.5.3. Radio Buttons)SH
53580 XM
(371)SH
9780 38614 MT
(3.6. Option Button)SH
53580 XM
(371)SH
9780 39694 MT
(3.7. Popup-Menu-Button)SH
53580 XM
(373)SH
9780 40774 MT
(3.8. Menu)SH
53580 XM
(374)SH
9780 41854 MT
(3.9. Scrolling Menu)SH
53580 XM
(376)SH
11780 42934 MT
(3.9.1. Scroll Bar Control)SH
53580 XM
(377)SH
11780 44014 MT
(3.9.2. Menu Control)SH
53580 XM
(377)SH
9780 45094 MT
(3.10. Menubar)SH
53580 XM
(378)SH
11780 46174 MT
(3.10.1. Item Selection Functions)SH
53580 XM
(379)SH
11780 47254 MT
(3.10.2. Programming the Menubar in the Traditional Garnet Way)SH
53580 XM
(379)SH
13780 48334 MT
(3.10.2.1. An example)SH
53580 XM
(380)SH
13780 49414 MT
(3.10.2.2. Adding items to the menubar)SH
53580 XM
(380)SH
13780 50494 MT
(3.10.2.3. Removing items from the menubar)SH
53580 XM
(381)SH
11780 51574 MT
(3.10.3. Programming the Menubar with Components)SH
53580 XM
(381)SH
13780 52654 MT
(3.10.3.1. An example)SH
53580 XM
(381)SH
13780 53734 MT
(3.10.3.2. Creating components of the menubar)SH
53580 XM
(381)SH
13780 54814 MT
(3.10.3.3. Adding components to the menubar)SH
53580 XM
(382)SH
13780 55894 MT
(3.10.3.4. Removing components from the menubar)SH
53580 XM
(383)SH
11780 56974 MT
(3.10.4. Finding Components of the Menubar)SH
53580 XM
(383)SH
11780 58054 MT
(3.10.5. Enabling and Disabling Components)SH
53580 XM
(384)SH
11780 59134 MT
(3.10.6. Other Menubar Functions)SH
53580 XM
(384)SH
9780 60214 MT
(3.11. Labeled Box)SH
53580 XM
(384)SH
9780 61294 MT
(3.12. Scrolling-Input-String)SH
53580 XM
(385)SH
9780 62374 MT
(3.13. Scrolling-Labeled-Box)SH
53580 XM
(385)SH
9780 63454 MT
(3.14. Graphics-Selection)SH
53580 XM
(386)SH
9780 64534 MT
(3.15. Multi-Graphics-Selection)SH
53580 XM
(388)SH
11780 65614 MT
(3.15.1. Programming Interface)SH
53580 XM
(389)SH
11780 66694 MT
(3.15.2. End User Operation)SH
53580 XM
(391)SH
9780 67774 MT
(3.16. Scrolling-Windows)SH
53580 XM
(391)SH
ES
%%Page: ii 115
BS
0 SI
10 /Times-Bold AF
7620 7870 MT
(3.17. Arrow-line and Double-Arrow-Line)SH
51420 XM
(395)SH
9620 8950 MT
(3.17.1. Arrow-Line)SH
51420 XM
(395)SH
9620 10030 MT
(3.17.2. Double-Arrow-Line)SH
51420 XM
(396)SH
7620 11110 MT
(3.18. Browser Gadget)SH
51420 XM
(397)SH
9620 12190 MT
(3.18.1. User Interface)SH
51420 XM
(397)SH
9620 13270 MT
(3.18.2. Programming Interface)SH
51420 XM
(398)SH
11620 14350 MT
(3.18.2.1. Overview)SH
51420 XM
(398)SH
11620 15430 MT
(3.18.2.2. An example)SH
51420 XM
(398)SH
9620 16510 MT
(3.18.3. Generating Functions for Items and Strings)SH
51420 XM
(399)SH
9620 17590 MT
(3.18.4. Other Browser-Gadget Slots)SH
51420 XM
(399)SH
9620 18670 MT
(3.18.5. The Additional Selection)SH
51420 XM
(400)SH
9620 19750 MT
(3.18.6. Manipulating the browser-gadget)SH
51420 XM
(400)SH
7620 20830 MT
(3.19. Polyline-Creator)SH
51420 XM
(401)SH
9620 21910 MT
(3.19.1. Creating New Polylines)SH
51420 XM
(402)SH
9620 22990 MT
(3.19.2. Editing Existing Polylines)SH
51420 XM
(402)SH
9620 24070 MT
(3.19.3. Some Useful Functions)SH
51420 XM
(403)SH
7620 25150 MT
(3.20. Error-Gadget)SH
51420 XM
(403)SH
9620 26230 MT
(3.20.1. Programming Interface)SH
51420 XM
(403)SH
9620 27310 MT
(3.20.2. Error-Checking and Careful Evaluation)SH
51420 XM
(404)SH
11620 28390 MT
(3.20.2.1. Careful-Eval)SH
51420 XM
(405)SH
11620 29470 MT
(3.20.2.2. Careful-Read-From-String)SH
51420 XM
(405)SH
11620 30550 MT
(3.20.2.3. Careful-String-Eval)SH
51420 XM
(405)SH
11620 31630 MT
(3.20.2.4. Careful-Eval-Formula-Lambda)SH
51420 XM
(405)SH
7620 32710 MT
(3.21. Query-Gadget)SH
51420 XM
(406)SH
7620 33790 MT
(3.22. Save Gadget)SH
51420 XM
(407)SH
9620 34870 MT
(3.22.1. Programming Interface)SH
51420 XM
(408)SH
9620 35950 MT
(3.22.2. Adding more gadgets to the save gadget)SH
51420 XM
(409)SH
9620 37030 MT
(3.22.3. Hacking the Save Gadget)SH
51420 XM
(410)SH
9620 38110 MT
(3.22.4. The Save-File-If-Wanted function)SH
51420 XM
(410)SH
7620 39190 MT
(3.23. Load Gadget)SH
51420 XM
(411)SH
7620 40270 MT
(3.24. Property Sheets)SH
51420 XM
(411)SH
9620 41350 MT
(3.24.1. User Interface)SH
51420 XM
(412)SH
9620 42430 MT
(3.24.2. Prop-Sheet)SH
51420 XM
(412)SH
9620 43510 MT
(3.24.3. Prop-Sheet-For-Obj)SH
51420 XM
(415)SH
9620 44590 MT
(3.24.4. Useful Functions)SH
51420 XM
(417)SH
9620 45670 MT
(3.24.5. Prop-Sheet-With-OK)SH
51420 XM
(418)SH
9620 46750 MT
(3.24.6. Prop-Sheet-For-Obj-With-OK)SH
51420 XM
(419)SH
9620 47830 MT
(3.24.7. Useful Functions)SH
51420 XM
(420)SH
9620 48910 MT
(3.24.8. Useful Gadgets)SH
51420 XM
(420)SH
11620 49990 MT
(3.24.8.1. Horiz-Choice-List)SH
51420 XM
(420)SH
11620 51070 MT
(3.24.8.2. Pop-Up-From-Icon)SH
51420 XM
(420)SH
9620 52150 MT
(3.24.9. Property Sheet Examples)SH
51420 XM
(421)SH
7620 53230 MT
(3.25. Mouseline)SH
51420 XM
(421)SH
9620 54310 MT
(3.25.1. MouseLine gadget)SH
51420 XM
(422)SH
9620 55390 MT
(3.25.2. MouseLinePopup gadget)SH
51420 XM
(422)SH
7620 56470 MT
(3.26. Standard Edit)SH
51420 XM
(423)SH
9620 57550 MT
(3.26.1. General Operation)SH
51420 XM
(423)SH
9620 58630 MT
(3.26.2. The Standard-Edit Objects)SH
51420 XM
(423)SH
9620 59710 MT
(3.26.3. Standard Editing Routines)SH
51420 XM
(424)SH
9620 60790 MT
(3.26.4. Utility Procedures)SH
51420 XM
(425)SH
12 SS 
6120 62314 MT
(4. The Motif Gadget Objects)SH
51120 XM
(426)SH
10 SS 
7620 63704 MT
(4.1. Useful Motif Objects)SH
51420 XM
(426)SH
9620 64784 MT
(4.1.1. Motif Colors and Filling Styles)SH
51420 XM
(426)SH
9620 65864 MT
(4.1.2. Motif-Background)SH
51420 XM
(427)SH
9620 66944 MT
(4.1.3. Motif-Tab-Inter)SH
51420 XM
(427)SH
7620 68024 MT
(4.2. Motif Scroll Bars)SH
51420 XM
(428)SH
ES
%%Page: iii 116
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Gadgets)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
/Times-Bold SF
9780 7870 MT
(4.3. Motif Slider)SH
53580 XM
(430)SH
9780 8950 MT
(4.4. Motif-Trill-Device)SH
53580 XM
(431)SH
9780 10030 MT
(4.5. Motif Gauge)SH
53580 XM
(432)SH
9780 11110 MT
(4.6. Motif Buttons)SH
53580 XM
(433)SH
11780 12190 MT
(4.6.1. Motif Text Buttons)SH
53580 XM
(434)SH
11780 13270 MT
(4.6.2. Motif Check Buttons)SH
53580 XM
(435)SH
11780 14350 MT
(4.6.3. Motif Radio Buttons)SH
53580 XM
(436)SH
9780 15430 MT
(4.7. Motif Option Button)SH
53580 XM
(437)SH
9780 16510 MT
(4.8. Motif Menu)SH
53580 XM
(438)SH
11780 17590 MT
(4.8.1. Programming Interface)SH
53580 XM
(438)SH
11780 18670 MT
(4.8.2. The Motif-Menu Accelerator Interactor)SH
53580 XM
(439)SH
11780 19750 MT
(4.8.3. Adding Items to the Motif-Menu)SH
53580 XM
(440)SH
9780 20830 MT
(4.9. Motif Scrolling Menu)SH
53580 XM
(440)SH
9780 21910 MT
(4.10. Motif-Menubar)SH
53580 XM
(441)SH
11780 22990 MT
(4.10.1. Selection Functions)SH
53580 XM
(442)SH
11780 24070 MT
(4.10.2. Accelerators)SH
53580 XM
(443)SH
11780 25150 MT
(4.10.3. Decorative Bars)SH
53580 XM
(443)SH
11780 26230 MT
(4.10.4. Programming the Motif-Menubar the Traditional Garnet Way)SH
53580 XM
(443)SH
13780 27310 MT
(4.10.4.1. An Example)SH
53580 XM
(444)SH
13780 28390 MT
(4.10.4.2. Adding Items to the Motif-Menubar)SH
53580 XM
(444)SH
13780 29470 MT
(4.10.4.3. Removing Items from the Motif-Menubar)SH
53580 XM
(445)SH
11780 30550 MT
(4.10.5. Programming the Motif-Menubar with Components)SH
53580 XM
(446)SH
13780 31630 MT
(4.10.5.1. An Example)SH
53580 XM
(446)SH
13780 32710 MT
(4.10.5.2. Creating Components of the Motif-Menubar)SH
53580 XM
(446)SH
13780 33790 MT
(4.10.5.3. Adding Components to the Motif-Menubar)SH
53580 XM
(447)SH
13780 34870 MT
(4.10.5.4. Removing Components from the Menubar)SH
53580 XM
(447)SH
11780 35950 MT
(4.10.6. Methods Shared with the Regular Menubar)SH
53580 XM
(448)SH
9780 37030 MT
(4.11. Motif-Scrolling-Labeled-Box)SH
53580 XM
(448)SH
9780 38110 MT
(4.12. Motif-Error-Gadget)SH
53580 XM
(448)SH
9780 39190 MT
(4.13. Motif-Query-Gadget)SH
53580 XM
(449)SH
9780 40270 MT
(4.14. Motif Save Gadget)SH
53580 XM
(450)SH
9780 41350 MT
(4.15. Motif Load Gadget)SH
53580 XM
(451)SH
9780 42430 MT
(4.16. Motif Property Sheets)SH
53580 XM
(452)SH
11780 43510 MT
(4.16.1. Motif-Prop-Sheet-With-OK)SH
53580 XM
(452)SH
11780 44590 MT
(4.16.2. Motif-Prop-Sheet-For-Obj-With-OK)SH
53580 XM
(453)SH
9780 45670 MT
(4.17. Motif-Prop-Sheet-For-Obj-With-Done)SH
53580 XM
(454)SH
9780 46750 MT
(4.18. Motif Scrolling Window)SH
53580 XM
(455)SH
12 SS 
8280 48274 MT
(5. Using the Gadgets: Examples)SH
53280 XM
(457)SH
10 SS 
9780 49664 MT
(5.1. Using the :value Slot)SH
53580 XM
(457)SH
9780 50744 MT
(5.2. Using the :selection-function Slot)SH
53580 XM
(457)SH
9780 51824 MT
(5.3. Using Functions in the :items Slot)SH
53580 XM
(457)SH
9780 52904 MT
(5.4. Selecting Buttons)SH
53580 XM
(458)SH
9780 53984 MT
(5.5. The :item-to-string-function Slot)SH
53580 XM
(458)SH
12 SS 
8280 55508 MT
(Index)SH
53280 XM
(459)SH
ES
%%Trailer
%%Pages: 116
%%DocumentFonts: Times-Roman Times-Bold Symbol Courier Times-Italic Times-BoldItalic
