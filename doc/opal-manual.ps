%!PS-Adobe-2.0
%%Title: opal/opal-manual.mss
%%DocumentFonts: (atend)
%%Creator: Andrew Mickish and Scribe 7(1700)
%%CreationDate: 12 December 1994 15:26
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {showpage SV restore} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale
    /showpage {} def
    /letter {} def
    /lettersmall {} def
    /note {} def
    } bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
11 SS 
1 1 0 8280 7200 GB 
%%BeginDocument: single-sided.ps
%!PS-Adobe-2.0
%
%  This PostScript code turns off double-sided printing,
%  which is desirable since we want to be able to move the
%  Tables of Contents by hand after the manuals are printed.
%
statusdict begin
   false setduplexmode
end

%%EndDocument
 GE 16 /Times-Bold AF
23503 18976 MT
(Opal Reference Manual)SH
18880 20672 MT
(The Garnet Graphical Object System)SH
11 SS 
27753 23064 MT
(Andrew Mickish)SH
28182 24260 MT
(Brad A. Myers)SH
28516 25456 MT
(David Kosbie)SH
27326 26652 MT
(Richard McDaniel)SH
28089 27848 MT
(Edward Pervin)SH
27204 29044 MT
(Matthew Goldberg)SH
/Times-Roman SF
28183 30970 MT
(December 1994)SH
/Times-Bold SF
29634 44214 MT
(Abstract)SH
/Times-Roman SF
8280 45966 MT
(This document is a reference manual for)
37 W( the graphical object system used by the Garnet project, which is)36 W
8280 47262 MT
(called Opal.  ``Opal'' stands for)
23 W( the Object Programming Aggregate Layer.  Opal makes it very simple to)24 W
8280 48558 MT
(create and manipulate)
18 W( graphical objects.  In particular, Opal automatically handles object redrawing when)17 W
8280 49854 MT
(properties of objects are changed.)SH
21010 55572 MT
(Copyright)SH
/Symbol SF
25747 XM
(\323)SH
/Times-Roman SF
26891 XM
(1994 - Carnegie Mellon University)SH
8280 62355 MT
(This research was sponsored by NCCOSC under Contract No.  N66001-94-C-6037, Arpa Order)
207 W( No.)208 W
8280 63651 MT
(B326. The)
381 W( views and conclusions contained in this document)
53 W( are those of the authors and should not be)52 W
8280 64947 MT
(interpreted as representing the official policies, either expressed or implied, of NCCOSC or)
192 W( the U.S.)193 W
8280 66243 MT
(Government.)SH
ES
%%Page: 153 2
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 1)
SH( Introduction)1550 W
51386 XM
(Page 153)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(1. Introduction)SH
11 /Times-Roman AF
8280 10524 MT
(This document is the reference)
64 W( manual for the Opal graphical object system.  Opal, which stands for the)63 W
8280 11720 MT
(Object Programming Aggregate Layer, is being developed as part)
49 W( of the Garnet project)
50 W( [Myers)
SH( 88].  The)50 W
794 50 8280 11920 UL
612 50 11536 11920 UL
794 50 17910 11920 UL
672 50 22814 11920 UL
8280 12916 MT
(goal of Opal is to make it easy to create and edit graphical objects.  To this end, Opal)
98 W( provides default)97 W
8280 14112 MT
(values for all of the properties of objects, so simple objects can)
290 W( be drawn by setting only a few)291 W
8280 15308 MT
(parameters. If)
363 W( an object is changed, Opal automatically)
44 W( handles refreshing the screen and redrawing that)43 W
8280 16504 MT
(object and any other objects that)
96 W( may overlap it.  The algorithm used to handle the automatic update is)97 W
8280 17700 MT
(documented in)
67 W( [VanderZanden)
SH( 89].)
67 W( Objects)
407 W( in Opal can be connected together using)66 W
/Times-Italic SF
46886 XM
(constraints)SH
/Times-Roman SF
(, which)66 W
8280 18896 MT
(are relations among objects that are declared once and automatically maintained by the system.  An)204 W
8280 20092 MT
(example of a constraint is that a line must stay attached to a rectangle.)
84 W( Constraints)
441 W( are discussed in the)83 W
8280 21288 MT
(Tutorial and the KR Manual.)SH
8280 23586 MT
(Opal is built on top of the Gem module, which is the Graphics and Events)
19 W( Module that refers to machine-)20 W
8280 24782 MT
(specific functions.  Gem provides an interface to both X windows and)
31 W( the Macintosh QuickDraw system,)30 W
8280 25978 MT
(so applications implemented with Opal objects)
335 W( and functions will run on either platform without)336 W
8280 27174 MT
(modification.)SH
8280 29472 MT
(Opal is known to work in virtually any Common Lisp environment on many)
65 W( different machines \050see the)64 W
8280 30668 MT
(Overview section of this manual\051.  Opal will also work with any window manager on top of X/11, such)
8 W( as)9 W
8280 31864 MT
(uwm, twm, awm, etc.  Additionally, Opal provides support for color and gray-scale displays.)SH
8280 34162 MT
(Within the Garnet toolkit, Opal forms an intermediary layer.)
49 W( It)
372 W( uses facilities provided by the KR object)48 W
8280 35358 MT
(and constraint system)
84 W( [Giuse)
SH( 89],)
84 W( and provides graphical objects that comprise the higher level gadgets.)85 W
8280 36554 MT
(To use Opal, the programmer should)
26 W( be familiar with the ideas of objects and constraints presented in the)25 W
8280 37750 MT
(Tour and Tutorial.  Opal does not handle any input from the keyboard or mouse.  That is handled by the)55 W
8280 38946 MT
(separate)SH
/Times-Italic SF
12500 XM
(Interactors)SH
/Times-Roman SF
18006 XM
(package. On)
961 W( top of Opal is also the)342 W
/Times-Italic SF
37092 XM
(Aggregadgets)SH
/Times-Roman SF
43819 XM
(module which makes it)342 W
8280 40142 MT
(significantly easier to create groups of objects.)
6 W( A)
289 W( collection of pre-defined interaction techniques, such as)7 W
8280 41338 MT
(menus, scroll bars, buttons,)
62 W( and sliders, is provided in the Garnet Gadget set which, of course, use Opal,)61 W
8280 42534 MT
(Interactors, and Aggregadgets.)SH
8280 44832 MT
(The highest level of)
119 W( Garnet, built using the toolkit, contains the graphical construction tools that allow)120 W
8280 46028 MT
(significant parts of application graphics to be created without programming.)
46 W( The)
365 W( most sophisticated tool)45 W
8280 47224 MT
(is Lapidary.  When Lapidary is used,)
54 W( the programmer should rarely need to write code that calls Opal or)55 W
8280 48420 MT
(any other part of the toolkit.)SH
ES
%%Page: 154 3
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 154)
SH( Opal)830 W
39984 XM
(Overview of Opal)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(2. Overview of Opal)SH
14 SS 
6120 13146 MT
(2.1. Basic Concepts)SH
11 /Times-Roman AF
6120 14342 MT
(The important concepts in Opal are)SH
/Times-Italic SF
21942 XM
(windows)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
26344 XM
(objects)SH
/Times-Roman SF
(, and)SH
/Times-Italic SF
31873 XM
(aggregates)SH
/Times-Roman SF
(.)SH
6120 16640 MT
(X/11 and Macintosh QuickDraw both allow you to create windows on the screen.)
94 W( In)
462 W( X they are called)93 W
6120 17836 MT
("drawables", and in QuickDraw they)
170 W( are called "views".  An Opal window is a schema that contains)171 W
3544 50 37310 18036 UL
6120 19032 MT
(pointers to these machine-specific structures.  Like in X/11 and QuickDraw, Opal windows can)
27 W( be nested)26 W
6120 20228 MT
(inside other windows \050to)
1 W( form ``sub-windows''\051.  Windows clip all graphics so they do not extend outside)2 W
6120 21424 MT
(the window's borders.  Also, each window forms a new coordinate system with \0500,0\051 in the upper left)126 W
6120 22620 MT
(corner. The)
435 W( coordinate system is one-to-one with)
80 W( the pixels on the screen \050each pixel is one unit of the)81 W
6120 23816 MT
(coordinate system\051.  Garnet windows are discussed fully in section 10.)SH
6120 26114 MT
(The basics of object-oriented programming are beyond the)
26 W( scope of this manual.  The objects in Opal use)25 W
3116 50 44444 26314 UL
6120 27310 MT
(the KR object)
85 W( system)
86 W( [Giuse)
SH( 89], and therefore operate as a prototype-instance model.  This means that)86 W
6120 28506 MT
(each object can serve as)
8 W( a prototype \050like a class\051 for any further instances; there is \050almost\051 no distinction)7 W
6120 29702 MT
(between classes and instances.  Each graphic primitive in Opal)
95 W( is implemented as an object.  When the)96 W
6120 30898 MT
(programmer wants to cause something to be displayed in Opal, it)
33 W( is necessary to create instances of these)32 W
6120 32094 MT
(graphical objects.  Each instance remembers its properties so it)
220 W( can be redrawn automatically if the)221 W
6120 33290 MT
(window needs to be refreshed or if objects change.)SH
6120 35588 MT
(An aggregate is a special kind of Opal object that)
4 W( holds a collection of other objects.  Aggregates can hold)3 W
4274 50 7743 35788 UL
6120 36784 MT
(any kind of graphic object including other aggregates, but an object can only be in one aggregate at)
131 W( a)132 W
6120 37980 MT
(time. Therefore,)
702 W( aggregates form a pure hierarchy.  The objects that are in an aggregate are called)213 W
/Times-Italic SF
6120 39176 MT
(components)SH
/Times-Roman SF
11766 XM
(of that aggregate, and the aggregate is called the)117 W
/Times-Italic SF
34319 XM
(parent)SH
/Times-Roman SF
37583 XM
(of each of the components.  Each)118 W
6120 40372 MT
(window has associated with it a top-level aggregate.  All)
9 W( objects that are displayed in the window must be)8 W
6120 41568 MT
(reachable by going through the components)
126 W( of this aggregate \050recursively for any number of levels, in)127 W
6120 42764 MT
(case any of the components are aggregates themselves\051.)SH
6120 45062 MT
(The prototype inheritance hierarchy for all graphical objects in Opal is shown in Figure 2-1.)SH
14 /Times-Bold AF
6120 48880 MT
(2.2. The Opal Package)SH
11 /Times-Roman AF
6120 50076 MT
(Once Garnet is loaded, all the graphical objects reside)
252 W( in the)251 W
10 /Courier AF
35645 XM
(opal)SH
11 /Times-Roman AF
38571 XM
(package. We)
777 W( recommend that)251 W
6120 51272 MT
(programmers explicitly reference)
154 W( names from the)155 W
10 /Courier AF
29098 XM
(opal)SH
11 /Times-Roman AF
31928 XM
(package, for example:)155 W
10 /Courier AF
42409 XM
(opal:rectangle)SH
11 /Times-Roman AF
(, but)155 W
6120 52468 MT
(you can also get complete access to all exported symbols by doing a)65 W
10 /Courier AF
37238 XM
(\050use-package "OPAL"\051)65 W
11 /Times-Roman AF
(. All)
405 W( of)65 W
6120 53664 MT
(the symbols referenced in this document are exported from)SH
10 /Courier AF
32357 XM
(opal)SH
11 /Times-Roman AF
(, unless otherwise stated.)SH
14 /Times-Bold AF
6120 57482 MT
(2.3. Simple Displays)SH
11 /Times-Roman AF
6120 58678 MT
(An important goal of Opal is to make it significantly easier to create pictures,)
262 W( hiding most of the)263 W
6120 59874 MT
(complexity of the)
24 W( X/11 and QuickDraw graphics models.  Therefore, there are appropriate defaults for all)23 W
6120 61070 MT
(properties of objects \050such as the color, line-thickness, etc.\051.  These only need to)
37 W( be set if the user desires)38 W
6120 62266 MT
(to. All)
311 W( of the complexity of the X/11 and QuickDraw graphics packages is available to the)
18 W( Opal user, but)17 W
6120 63462 MT
(it is hidden so that you do not need to deal with it unless it is necessary to your task.)SH
ES
%%Page: 155 4
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.3)
SH( Simple)
1800 W( Displays)SH
51386 XM
(Page 155)SH
46800 50 8280 4486 UL
11 SS 
8 10 0 7200 66240 GB 
%%BeginDocument: opal/opal-objects.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Opal 1
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 28, 1993, 5:33 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 15 54 597 738
%%%Pages: 1
%%EndComments


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
612 0 translate
90 rotate
72 72 translate
0.75 0.75 scale
-24 700 translate

%
% Begin new window
%
gsave
0 0 912 776 ClipToRectangle
gsave
0 0 912 776 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 912 776 ClipToRectangle
gsave
[0 0 0] 0 0 [] 1 267 -51 247 -51 DrawLine
[0 0 0] 0 0 [] 1 742 -189 722 -216 DrawLine
[0 0 0] 0 0 [] 1 742 -216 722 -216 DrawLine
[0 0 0] 0 0 [] 1 742 -243 722 -216 DrawLine
[0 0 0] 0 0 [] 1 735 -319 715 -319 DrawLine
[0 0 0] 0 0 [] 1 614 -319 594 -319 DrawLine
[0 0 0] 0 0 [] 1 565 -395 545 -408 DrawLine
[0 0 0] 0 0 [] 1 565 -422 545 -408 DrawLine
[0 0 0] 0 0 [] 1 554 -456 534 -456 DrawLine
[0 0 0] 0 0 [] 1 426 -120 406 -343 DrawLine
[0 0 0] 0 0 [] 1 426 -216 406 -343 DrawLine
[0 0 0] 0 0 [] 1 426 -319 406 -343 DrawLine
[0 0 0] 0 0 [] 1 426 -408 406 -343 DrawLine
[0 0 0] 0 0 [] 1 426 -456 406 -343 DrawLine
[0 0 0] 0 0 [] 1 426 -539 406 -343 DrawLine
[0 0 0] 0 0 [] 1 428 -753 408 -753 DrawLine
[0 0 0] 0 0 [] 1 286 -657 266 -712 DrawLine
[0 0 0] 0 0 [] 1 286 -726 266 -712 DrawLine
[0 0 0] 0 0 [] 1 286 -753 266 -712 DrawLine
[0 0 0] 0 0 [] 1 152 -51 132 -368 DrawLine
[0 0 0] 0 0 [] 1 152 -343 132 -368 DrawLine
[0 0 0] 0 0 [] 1 152 -712 132 -368 DrawLine
10 -322 122 92 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
14 -326 -337 111 14 false [0 0 0] [1 1 1] (OPAL:VIEW-OBJECT) 12 /Courier-Bold DrawText
16 -341 -352 45 14 false [0 0 0] [1 1 1] (:left 0) 12 /Courier DrawText
16 -355 -366 38 14 false [0 0 0] [1 1 1] (:top 0) 12 /Courier DrawText
16 -369 -380 52 14 false [0 0 0] [1 1 1] (:width 0) 12 /Courier DrawText
16 -383 -394 59 14 false [0 0 0] [1 1 1] (:height 0) 12 /Courier DrawText
16 -397 -408 108 14 false [0 0 0] [1 1 1] (:visible #k<F16>) 12 /Courier DrawText
152 -12 95 78 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
156 -16 -27 84 14 false [0 0 0] [1 1 1] (OPAL::WINDOW) 12 /Courier-Bold DrawText
158 -31 -42 45 14 false [0 0 0] [1 1 1] (:left 0) 12 /Courier DrawText
158 -45 -56 38 14 false [0 0 0] [1 1 1] (:top 0) 12 /Courier DrawText
158 -59 -70 66 14 false [0 0 0] [1 1 1] (:width 355) 12 /Courier DrawText
158 -73 -84 73 14 false [0 0 0] [1 1 1] (:height 277) 12 /Courier DrawText
267 -40 172 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
271 -44 -55 161 14 false [0 0 0] [1 1 1] (INTER:INTERACTOR-WINDOW) 12 /Courier-Bold DrawText
152 -283 254 120 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
156 -287 -298 146 14 false [0 0 0] [1 1 1] (OPAL:GRAPHICAL-OBJECT) 12 /Courier-Bold DrawText
158 -302 -313 59 14 false [0 0 0] [1 1 1] (:width 20) 12 /Courier DrawText
158 -316 -327 66 14 false [0 0 0] [1 1 1] (:height 20) 12 /Courier DrawText
158 -330 -341 137 14 false [0 0 0] [1 1 1] (:draw-function :copy) 12 /Courier DrawText
158 -344 -355 241 14 false [0 0 0] [1 1 1] (:line-style opal:default-line-style) 12 /Courier DrawText
158 -358 -369 122 14 false [0 0 0] [1 1 1] (:filling-style NIL) 12 /Courier DrawText
158 -372 -383 164 14 false [0 0 0] [1 1 1] (:select-outline-only NIL) 12 /Courier DrawText
158 -386 -397 108 14 false [0 0 0] [1 1 1] (:hit-threshold 0) 12 /Courier DrawText
426 -67 171 106 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -71 -82 62 14 false [0 0 0] [1 1 1] (OPAL:TEXT) 12 /Courier-Bold DrawText
432 -86 -97 94 14 false [0 0 0] [1 1 1] (:width #k<F51>) 12 /Courier DrawText
432 -100 -111 101 14 false [0 0 0] [1 1 1] (:height #k<F52>) 12 /Courier DrawText
432 -114 -125 65 14 false [0 0 0] [1 1 1] (:string "") 12 /Courier DrawText
432 -128 -139 158 14 false [0 0 0] [1 1 1] (:font opal:default-font) 12 /Courier DrawText
432 -142 -153 150 14 false [0 0 0] [1 1 1] (:fill-background-p NIL) 12 /Courier DrawText
432 -156 -167 137 14 false [0 0 0] [1 1 1] (:justification :left) 12 /Courier DrawText
426 -184 296 64 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -188 -199 76 14 false [0 0 0] [1 1 1] (OPAL:BITMAP) 12 /Courier-Bold DrawText
432 -203 -214 94 14 false [0 0 0] [1 1 1] (:width #k<F32>) 12 /Courier DrawText
432 -217 -228 101 14 false [0 0 0] [1 1 1] (:height #k<F31>) 12 /Courier DrawText
432 -231 -242 283 14 false [0 0 0] [1 1 1] (:filling-style opal:default-filling-style) 12 /Courier DrawText
742 -178 87 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
746 -182 -193 76 14 false [0 0 0] [1 1 1] (OPAL:PIXMAP) 12 /Courier-Bold DrawText
742 -205 158 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
746 -209 -220 147 14 false [0 0 0] [1 1 1] (OPAL:HOURGLASS-CURSOR) 12 /Courier-Bold DrawText
742 -232 130 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
746 -236 -247 119 14 false [0 0 0] [1 1 1] (OPAL:ARROW-CURSOR) 12 /Courier-Bold DrawText
426 -273 168 92 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -277 -288 104 14 false [0 0 0] [1 1 1] (OPAL:MULTIPOINT) 12 /Courier-Bold DrawText
432 -292 -303 155 14 false [0 0 0] [1 1 1] (:point-list \05018 10 ...\051) 12 /Courier DrawText
432 -306 -317 87 14 false [0 0 0] [1 1 1] (:left #k<F30>) 12 /Courier DrawText
432 -320 -331 80 14 false [0 0 0] [1 1 1] (:top #k<F29>) 12 /Courier DrawText
432 -334 -345 94 14 false [0 0 0] [1 1 1] (:width #k<F28>) 12 /Courier DrawText
432 -348 -359 101 14 false [0 0 0] [1 1 1] (:height #k<F27>) 12 /Courier DrawText
614 -308 101 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
618 -312 -323 90 14 false [0 0 0] [1 1 1] (OPAL:POLYLINE) 12 /Courier-Bold DrawText
735 -259 108 120 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
739 -263 -274 97 14 false [0 0 0] [1 1 1] (OPAL:ARROWHEAD) 12 /Courier-Bold DrawText
741 -278 -289 59 14 false [0 0 0] [1 1 1] (:from-x 0) 12 /Courier DrawText
741 -292 -303 59 14 false [0 0 0] [1 1 1] (:from-y 0) 12 /Courier DrawText
741 -306 -317 59 14 false [0 0 0] [1 1 1] (:head-x 0) 12 /Courier DrawText
741 -320 -331 59 14 false [0 0 0] [1 1 1] (:head-y 0) 12 /Courier DrawText
741 -334 -345 66 14 false [0 0 0] [1 1 1] (:length 10) 12 /Courier DrawText
741 -348 -359 80 14 false [0 0 0] [1 1 1] (:diameter 10) 12 /Courier DrawText
741 -362 -373 60 14 false [0 0 0] [1 1 1] (:open-p T) 12 /Courier DrawText
426 -383 119 50 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -387 -398 55 14 false [0 0 0] [1 1 1] (OPAL:ARC) 12 /Courier-Bold DrawText
432 -402 -413 59 14 false [0 0 0] [1 1 1] (:angle1 0) 12 /Courier DrawText
432 -416 -427 106 14 false [0 0 0] [1 1 1] (:angle2 \050/ PI 4\051) 12 /Courier DrawText
565 -384 87 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
569 -388 -399 76 14 false [0 0 0] [1 1 1] (OPAL:CIRCLE) 12 /Courier-Bold DrawText
565 -411 72 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
569 -415 -426 61 14 false [0 0 0] [1 1 1] (OPAL:OVAL) 12 /Courier-Bold DrawText
426 -445 108 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -449 -460 97 14 false [0 0 0] [1 1 1] (OPAL:RECTANGLE) 12 /Courier-Bold DrawText
554 -438 122 36 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
558 -442 -453 111 14 false [0 0 0] [1 1 1] (OPAL:ROUNDTANGLE) 12 /Courier-Bold DrawText
560 -457 -468 95 14 false [0 0 0] [1 1 1] (:radius :small) 12 /Courier DrawText
426 -479 114 120 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
430 -483 -494 62 14 false [0 0 0] [1 1 1] (OPAL:LINE) 12 /Courier-Bold DrawText
432 -498 -509 80 14 false [0 0 0] [1 1 1] (:x1 0  :x2 0) 12 /Courier DrawText
432 -512 -523 80 14 false [0 0 0] [1 1 1] (:y1 0  :y2 0) 12 /Courier DrawText
432 -526 -537 87 14 false [0 0 0] [1 1 1] (:left #k<F25>) 12 /Courier DrawText
432 -540 -551 80 14 false [0 0 0] [1 1 1] (:top #k<F24>) 12 /Courier DrawText
432 -554 -565 94 14 false [0 0 0] [1 1 1] (:width #k<F23>) 12 /Courier DrawText
432 -568 -579 101 14 false [0 0 0] [1 1 1] (:height #k<F24>) 12 /Courier DrawText
432 -582 -593 60 14 false [0 0 0] [1 1 1] (:line-p T) 12 /Courier DrawText
152 -673 114 78 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
156 -677 -688 97 14 false [0 0 0] [1 1 1] (OPAL:AGGREGATE) 12 /Courier-Bold DrawText
158 -692 -703 87 14 false [0 0 0] [1 1 1] (:left #k<F21>) 12 /Courier DrawText
158 -706 -717 80 14 false [0 0 0] [1 1 1] (:top #k<F20>) 12 /Courier DrawText
158 -720 -731 94 14 false [0 0 0] [1 1 1] (:width #k<F19>) 12 /Courier DrawText
158 -734 -745 101 14 false [0 0 0] [1 1 1] (:height #k<F18>) 12 /Courier DrawText
286 -604 150 106 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
290 -608 -619 132 14 false [0 0 0] [1 1 1] (OPAL:MULTIFONT-TEXT) 12 /Courier-Bold DrawText
292 -623 -634 107 14 false [0 0 0] [1 1 1] (:initial-text "") 12 /Courier DrawText
292 -637 -648 108 14 false [0 0 0] [1 1 1] (:word-wrap-p NIL) 12 /Courier DrawText
292 -651 -662 101 14 false [0 0 0] [1 1 1] (:text-width 300) 12 /Courier DrawText
292 -665 -676 137 14 false [0 0 0] [1 1 1] (:fill-background-p T) 12 /Courier DrawText
292 -679 -690 137 14 false [0 0 0] [1 1 1] (:draw-function :copy) 12 /Courier DrawText
292 -693 -704 101 14 false [0 0 0] [1 1 1] (:show-marks NIL) 12 /Courier DrawText
286 -715 108 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
290 -719 -730 97 14 false [0 0 0] [1 1 1] (OPAL:AGGRELIST) 12 /Courier-Bold DrawText
286 -742 122 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
290 -746 -757 111 14 false [0 0 0] [1 1 1] (OPAL:AGGREGADGET) 12 /Courier-Bold DrawText
428 -742 116 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
432 -746 -757 105 14 false [0 0 0] [1 1 1] (OPAL:AGGREGRAPH) 12 /Courier-Bold DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 15 54 597 738

%%EndDocument
 GE 46800 50 8280 63872 UL
/Times-Bold SF
8280 65424 MT
(Figure 2-1:)SH
/Times-Roman SF
14053 XM
(The objects in Opal and their slots.)
115 W( Each)
503 W( object also inherits slots from its prototype \050the)114 W
14053 66620 MT
(object to its left\051.  The default values for the)
226 W( slots are shown.  Those with values like)227 W
10 /Courier AF
14053 67816 MT
(#k<F21>)SH
11 /Times-Roman AF
18528 XM
(have formulas in them \050refer to the Tutorial and the KR Manual\051.)SH
ES
%%Page: 156 5
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 156)
SH( Opal)830 W
39984 XM
(Overview of Opal)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(To get the string "Hello world" displayed)
142 W( on the screen \050and refreshed automatically if the window is)143 W
6120 9151 MT
(covered and uncovered\051, you only need the following simple program:)SH
8 /Courier AF
8040 11255 MT
(\050use-package "KR"\051)SH
8040 12985 MT
(;;)SH
/Times-Italic SF
(Create a small window at the upper left corner of the screen)SH
/Courier SF
8040 13850 MT
(\050create-instance 'WIN inter:interactor-window)SH
9000 14715 MT
(\050:left 10\051\050:top 10\051)SH
9000 15580 MT
(\050:width 200\051\050:height 50\051\051)SH
8040 17310 MT
(;;)SH
/Times-Italic SF
(create an aggregate for the window)SH
/Courier SF
8040 18175 MT
(\050s-value WIN :aggregate \050create-instance 'AGG opal:aggregate\051\051)SH
8040 19905 MT
(;;)SH
/Times-Italic SF
(create the string)SH
/Courier SF
8040 20770 MT
(\050create-instance 'HELLO opal:text)SH
9000 21635 MT
(\050:left 10\051\050:top 20\051)SH
9000 22500 MT
(\050:string "Hello World"\051\051)SH
8040 24230 MT
(\050opal:add-component AGG HELLO\051 ;)SH
/Times-Italic SF
(add the string to the aggregate)SH
/Courier SF
8040 25960 MT
(\050opal:update WIN\051 ;)SH
/Times-Italic SF
(cause the window and string to be displayed)SH
11 /Times-Roman AF
6120 28520 MT
(Opal also strives to make it easy to change the picture.)
106 W( To)
486 W( change the)105 W
/Times-Italic SF
38740 XM
(x)SH
/Times-Roman SF
39608 XM
(position of the rectangle only)105 W
6120 29716 MT
(requires setting the value of the)SH
10 /Courier AF
20232 XM
(:left)SH
11 /Times-Roman AF
23507 XM
(slot; Opal handles the refresh:)SH
8 /Courier AF
8040 31569 MT
(\050s-value HELLO :left 50\051  ;)SH
/Times-Italic SF
(change the position)SH
/Courier SF
8040 33299 MT
(\050opal:update WIN\051 ;)SH
/Times-Italic SF
(cause the change to be visible)SH
11 /Times-Roman AF
6120 36662 MT
(Note that the programmer never calls ``draw'' or)
189 W( ``erase'' methods on objects.  This is a significant)190 W
6120 37858 MT
(difference from other graphical object systems.  Opal causes the objects to be drawn and)
123 W( erased at the)122 W
6120 39054 MT
(appropriate times automatically.)SH
6120 41352 MT
(Chapter 6 and figure 6-1 present all the kinds of objects available in Opal.)SH
14 /Times-Bold AF
6120 45170 MT
(2.4. Object Visibility)SH
11 /Times-Roman AF
6120 46366 MT
(Objects are visible if and only)
97 W( if their)98 W
10 /Courier AF
23639 XM
(:visible)SH
11 /Times-Roman AF
28812 XM
(slot is non-)98 W
9 SS 
(NIL)SH
11 SS 
35771 XM
(and they are a component of a visible)98 W
6120 47562 MT
(aggregate that \050recursively\051 is)
15 W( attached to a window.  \050Aggregates are discussed in Chapter 8.\051  Therefore,)14 W
6120 48758 MT
(to make a single object invisible, its)16 W
10 /Courier AF
22304 XM
(:visible)SH
11 /Times-Roman AF
27395 XM
(slot can be set to NIL.  To make it visible again,)
16 W( it is only)17 W
856 50 16617 48958 UL
6120 49954 MT
(necessary to set the)83 W
10 /Courier AF
15248 XM
(:visible)SH
11 /Times-Roman AF
20406 XM
(slot to T. Alternatively, the object can)
83 W( be removed from its aggregate to)82 W
6120 51150 MT
(make it invisible.)SH
6120 53448 MT
(Of course, an object with a non-)51 W
9 SS 
(NIL)SH
10 /Courier AF
22393 XM
(:visible)SH
11 /Times-Roman AF
27519 XM
(slot in a visible)
51 W( aggregate hierarchy might be completely)52 W
6120 54644 MT
(obscured behind another object so it cannot be seen.)SH
6120 56942 MT
(Every object)
7 W( has a default formula in its)6 W
10 /Courier AF
24069 XM
(:visible)SH
11 /Times-Roman AF
29150 XM
(slot that depends on the visibility of the its parent \050the)6 W
6120 58138 MT
(``parent'' is the)
115 W( aggregate that it is in\051.  Therefore, to make an entire aggregate and all its components)116 W
6120 59334 MT
(invisible, it is only necessary to set the)22 W
10 /Courier AF
23559 XM
(:visible)SH
11 /Times-Roman AF
28656 XM
(slot of the aggregate.)
22 W( All)
317 W( the components will become)21 W
6120 60530 MT
(invisible \050in this case, it is important that the components have the)
129 W( default formula in their)130 W
10 /Courier AF
48120 XM
(:visible)SH
11 /Times-Roman AF
6120 61726 MT
(slot\051.)SH
6120 64024 MT
(If you provide a specific value or formula)
133 W( for the)132 W
10 /Courier AF
29253 XM
(:visible)SH
11 /Times-Roman AF
34460 XM
(slot to override the default formula, it is)132 W
6120 65220 MT
(important that this value be)15 W
9 SS 
18508 XM
(NIL)SH
11 SS 
20298 XM
(if the object's parent aggregate is not visible.  Otherwise, routines)
15 W( such as)16 W
10 /Courier AF
6120 66416 MT
(point-in-gob)SH
11 /Times-Roman AF
13595 XM
(may report that a point is inside the object, even though the object is invisible.)SH
6120 68714 MT
(For example, if)
140 W( you want the)139 W
10 /Courier AF
19939 XM
(:visible)SH
11 /Times-Roman AF
25153 XM
(slot of an object to depend on its own)139 W
10 /Courier AF
43177 XM
(:selected)SH
11 /Times-Roman AF
48991 XM
(slot, you)139 W
6120 69910 MT
(should additionally constrain it to depend on the visibility of its parent:)SH
8 /Courier AF
8040 71075 MT
(\050s-value OBJ :visible \050o-formula \050if \050gvl :parent :visible\051)SH
25800 71940 MT
(\050gvl :selected\051\051\051\051)SH
ES
%%Page: 157 6
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.7)
SH( Different)
1800 W( Common Lisps)SH
51386 XM
(Page 157)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(2.5. View Objects)SH
11 /Times-Roman AF
8280 9334 MT
(At the top of the class hierarchy is the class)SH
10 /Courier AF
27646 XM
(opal:view-object)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 10499 MT
(\050create-instance 'opal:View-Object NIL)SH
11160 11364 MT
(\050:left 0\051)SH
11160 12229 MT
(\050:top 0\051)SH
11160 13094 MT
(\050:width 0\051)SH
11160 13959 MT
(\050:height 0\051)SH
11160 14824 MT
(\050:visible \050o-formula ...\051\051)SH
11160 15689 MT
(...\051)SH
11 /Times-Roman AF
8280 18747 MT
(Each view object)
149 W( has a bounding box as defined by the left, top corner and a width and height.  The)150 W
10 /Courier AF
8280 19943 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11963 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15046 XM
(:width)SH
11 /Times-Roman AF
(, and)133 W
10 /Courier AF
21324 XM
(:height)SH
11 /Times-Roman AF
25931 XM
(slots describe the bounding box for the object.  Coordinates are)132 W
8280 21139 MT
(given as non-negative fixnums, so any formulas must apply)161 W
10 /Courier AF
36247 XM
(floor)SH
11 /Times-Roman AF
39683 XM
(or)SH
10 /Courier AF
41035 XM
(round)SH
11 /Times-Roman AF
44472 XM
(to all values that could)162 W
8280 22335 MT
(generate floating point or ratio values.)
211 W( In)
695 W( particular, be careful using ")210 W
10 /Courier AF
(/)SH
11 /Times-Roman AF
(" for division, because that)210 W
8280 23531 MT
(generates ratios or floats which are not legal values.)SH
8280 25829 MT
(With the exception of windows, coordinates of objects are relative to the window in)
147 W( which the object)148 W
8280 27025 MT
(appears. \050If)
495 W( the window)
110 W( in which an object appears has borders, then the coordinates of the object are)109 W
8280 28221 MT
(relative to the)5 W
/Times-Italic SF
14618 XM
(inner)SH
/Times-Roman SF
17220 XM
(edges of the borders.\051  Windows coordinates are)
5 W( given in the coordinate system of the)6 W
8280 29417 MT
(parent of the window, or in the case of top level windows, given in screen coordinates.)SH
14 /Times-Bold AF
8280 33235 MT
(2.6. Read-Only Slots)SH
11 /Times-Roman AF
8280 34431 MT
(There are many)
70 W( slots in graphical objects, windows, and interactors that are set internally by Garnet and)69 W
8280 35627 MT
(should never be set by)
5 W( users.  For example, the)6 W
10 /Courier AF
29230 XM
(:parent)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33986 XM
(:window)SH
11 /Times-Roman AF
(, and)6 W
10 /Courier AF
40611 XM
(:components)SH
11 /Times-Roman AF
47492 XM
(slots of graphical)6 W
8280 36823 MT
(objects are set)
378 W( automatically whenever the objects are added to an aggregate using)377 W
10 /Courier AF
49680 XM
(opal:add-)SH
8280 38019 MT
(component)SH
11 /Times-Roman AF
(, and should not be set manually.)SH
8280 40317 MT
(All public slots that are intended to be read-only are labeled as)
32 W( such in their object's definitions.  Internal)33 W
8280 41513 MT
(slots of an object \050used for)
45 W( data or calculations\051 that are not documented should be considered read-only.)44 W
8280 42709 MT
(Setting these slots "temporarily" or during initialization can lead to insidious errors at run-time.)SH
14 /Times-Bold AF
8280 46527 MT
(2.7. Different Common Lisps)SH
11 /Times-Roman AF
8280 47723 MT
(Running Opal under different implementations of Common Lisp should be almost the same.)
281 W( The)838 W
8280 48919 MT
(differences in the locations of files, such the Opal binary files, and the cursors, bitmaps)
48 W( and fonts, are all)47 W
8280 50115 MT
(handled in the top level)SH
10 /Courier AF
18881 XM
(garnet-loader)SH
11 /Times-Roman AF
26956 XM
(file, which defines variables for the locations of the files.)SH
8280 52413 MT
(An important difference)
196 W( among Lisp interpreters is the)197 W
10 /Courier AF
34168 XM
(main-event-loop)SH
11 /Times-Roman AF
(. In)
669 W( CMU CommonLisp,)197 W
8280 53609 MT
(there is a process running in the)
62 W( background that allows interactors to always run with automatic refresh)61 W
9 SS 
17371 54467 MT
(1)SH
11 SS 
8280 54830 MT
(of Garnet windows.)193 W
18756 XM
(In Allegro, Lucid, and LispWorks, Garnet creates its own)192 W
10 /Courier AF
46080 XM
(main-event-loop)SH
11 /Times-Roman AF
8280 56026 MT
(process in the background that does the same thing.  Some Lisp interpreters have)
78 W( problems running this)79 W
8280 57222 MT
(process in the background, and you may have to call)28 W
10 /Courier AF
31927 XM
(inter:main-event-loop)SH
11 /Times-Roman AF
44830 XM
(by hand in order to)
28 W( run)27 W
8280 58418 MT
(the interactors.  Consult the Interactors manual for directions on how to control the)75 W
10 /Courier AF
46080 XM
(main-event-loop)SH
11 /Times-Roman AF
8280 59614 MT
(process.)SH
10800 50 8280 69158 UL
7 SS 
9180 70659 MT
(1)SH
9 SS 
9530 70986 MT
(Automatic refresh while an interactor is running is)
27 W( different from updating a window after you manually make a change with)28 W
10 /Courier AF
8280 72000 MT
(s-value)SH
9 /Times-Roman AF
(. Unless)
225 W( changes are made by the interactors, you will still have to call)SH
10 /Courier AF
38305 XM
(opal:update)SH
9 /Times-Roman AF
45130 XM
(to see the graphics change.)SH
ES
%%Page: 158 7
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 158)
SH( Opal)830 W
35316 XM
(Slots of All Graphical objects)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(3. Slots of All Graphical objects)SH
11 /Times-Roman AF
6120 10524 MT
(This chapter discusses properties shared by all graphical objects.)SH
8 /Courier AF
8040 11888 MT
(\050create-instance 'opal:Graphical-Object opal:view-object)SH
9000 12753 MT
(\050:left 0\051)
SH( \050:top)
960 W( 0\051)SH
9000 13618 MT
(\050:width 20\051 \050:height 20\051)SH
9000 14483 MT
(\050:line-style opal:default-line-style\051)SH
9000 15348 MT
(\050:filling-style NIL\051)SH
9000 16213 MT
(\050:draw-function :copy\051)SH
9000 17078 MT
(\050:select-outline-only NIL\051)SH
9000 17943 MT
(\050:hit-threshold 0\051)SH
9000 18808 MT
(...\051)SH
14 /Times-Bold AF
6120 22626 MT
(3.1. Left, top, width and height)SH
11 /Times-Roman AF
6120 23822 MT
(Graphical objects are objects with)
103 W( graphical properties that can be displayed in Garnet windows.  They)102 W
6120 25018 MT
(inherit the)SH
10 /Courier AF
10886 XM
(:left, :top, :width)SH
11 /Times-Roman AF
22561 XM
(and)SH
10 /Courier AF
24424 XM
(:height)SH
11 /Times-Roman AF
28899 XM
(slots from)SH
10 /Courier AF
33605 XM
(view-objects)SH
11 /Times-Roman AF
(, of course.)SH
14 /Times-Bold AF
6120 28836 MT
(3.2. Line style and filling style)SH
11 /Times-Roman AF
6120 30032 MT
(The)SH
10 /Courier AF
8142 XM
(:line-style)SH
11 /Times-Roman AF
15054 XM
(and)SH
10 /Courier AF
16954 XM
(:filling-style)SH
11 /Times-Roman AF
25666 XM
(slots hold instances of the)37 W
10 /Courier AF
37492 XM
(opal:line-style)SH
11 /Times-Roman AF
46804 XM
(prototype and)37 W
6120 31228 MT
(the)SH
10 /Courier AF
7755 XM
(opal:filling-style)SH
11 /Times-Roman AF
18846 XM
(prototype, respectively.  These objects parameterize the drawing of)
16 W( graphical)15 W
6120 32424 MT
(objects. Graphical)
877 W( objects with a)301 W
10 /Courier AF
22863 XM
(:line-style)SH
11 /Times-Roman AF
30039 XM
(of)SH
9 SS 
31532 XM
(NIL)SH
11 SS 
33609 XM
(will not have an outline.  Those with a)302 W
10 /Courier AF
6120 33620 MT
(:filling-style)SH
11 /Times-Roman AF
14971 XM
(of)SH
9 SS 
16338 XM
(NIL)SH
11 SS 
18289 XM
(will have)
176 W( no filling.  Otherwise, the)175 W
10 /Courier AF
35432 XM
(:line-style)SH
11 /Times-Roman AF
42482 XM
(and)SH
10 /Courier AF
44520 XM
(:filling-style)SH
11 /Times-Roman AF
6120 34816 MT
(control various parameters of the outline and filling when the object)
25 W( is drawn.  Appropriate values for the)26 W
10 /Courier AF
6120 36012 MT
(:line-style)SH
11 /Times-Roman AF
12995 XM
(and)SH
10 /Courier AF
14858 XM
(:filling-style)SH
11 /Times-Roman AF
23533 XM
(slots are described below in Chapter 5.)SH
14 /Times-Bold AF
6120 39830 MT
(3.3. Drawing function)SH
11 /Times-Roman AF
6120 41026 MT
(The value of the)74 W
10 /Courier AF
13868 XM
(:draw-function)SH
11 /Times-Roman AF
22617 XM
(slot determines how the object being)
74 W( drawn will affect the graphics)73 W
6120 42222 MT
(already in the window.  For example, even though)
113 W( a line may be "black", it could cause objects that it)114 W
6120 43418 MT
(covers to be "whited-out")
25 W( if it is drawn with a)24 W
10 /Courier AF
26751 XM
(:clear)SH
11 /Times-Roman AF
30650 XM
(draw-function. A)
323 W( list of all allowed values for the)24 W
10 /Courier AF
6120 44614 MT
(:draw-function)SH
11 /Times-Roman AF
14795 XM
(slot is included in Figure 3-1.)SH
6120 46912 MT
(Every time an object is displayed in a)
16 W( window, its drawn bits interact with the bits of the pixels already in)17 W
6120 48108 MT
(the window.  The way the object's bits)
184 W( \050the source bits\051 interact with the window's current bits \050the)183 W
6120 49304 MT
(destination bits\051 depends on the draw function.  The)76 W
10 /Courier AF
29960 XM
(:draw-function)SH
11 /Times-Roman AF
38711 XM
(is the bitwise function)
76 W( to use in)77 W
6120 50500 MT
(calculating the resulting bits.  Opal insures that black pixels pretend to be ``1'')
2 W( and white pixels pretend to)1 W
6120 51696 MT
(be ``0'' for the purposes of the drawing functions \050independent of)
106 W( the values of how the actual display)107 W
6120 52892 MT
(works\051. Therefore,)
557 W( when using the colors)
141 W( black and white, you can rely on)140 W
10 /Courier AF
41347 XM
(:or)SH
11 /Times-Roman AF
43562 XM
(to always add to the)140 W
6120 54088 MT
(picture and make it more black, and)SH
10 /Courier AF
22186 XM
(:and)SH
11 /Times-Roman AF
24861 XM
(to take things away from the picture and make it more white.)SH
6120 56386 MT
(Results of draw-functions on colors other than black and white tend to be random.)
49 W( This)
375 W( is because X/11)50 W
6120 57582 MT
(and Mac QuickDraw initialize)
12 W( the colormap with colors stored in an arbitrary order, and a color's index is)11 W
6120 58778 MT
(unlikely to be the same between Garnet sessions.  So performing a logical operation on two)
128 W( particular)129 W
6120 59974 MT
(colors will yield a different resulting color in different Garnet sessions.)SH
6120 62272 MT
(One of the)
75 W( most useful draw functions is)74 W
10 /Courier AF
24860 XM
(:xor)SH
11 /Times-Roman AF
(, which occurs frequently in feedback objects.  If a black)74 W
6120 63468 MT
(rectangle is XOR'ed over another object, the region under the rectangle will appear)
2 W( in inverse video.  This)3 W
6120 64664 MT
(technique is used in the)SH
10 /Courier AF
16721 XM
(gg:text-button)SH
11 /Times-Roman AF
(, and many other standard Garnet gadgets.)SH
6120 66962 MT
(A fundamental limitation of the PostScript language)
71 W( prevents it from rendering draw functions properly.)70 W
6120 68158 MT
(If)SH
10 /Courier AF
7137 XM
(opal:make-ps-file)SH
11 /Times-Roman AF
17622 XM
(\050see Chapter 11\051 is used to generate a PostScript file from a Garnet window,)
10 W( the)11 W
6120 69354 MT
(draw functions used in the window will be ignored in the printed image.  Usually the graphics in)
151 W( the)150 W
6120 70550 MT
(window can be reimplemented without using draw-functions to)
130 W( get the same effect, so that the picture)131 W
6120 71746 MT
(generated by)SH
10 /Courier AF
12044 XM
(opal:make-ps-file)SH
11 /Times-Roman AF
22519 XM
(matches the window exactly.)SH
ES
%%Page: 159 8
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.4)
SH( Select-Outline-Only,)
1800 W( Hit-Threshold, and Pretend-To-Be-Leaf)SH
51386 XM
(Page 159)SH
46800 50 8280 4486 UL
/Courier SF
21365 8354 MT
(Draw-Function)SH
11 /Times-Roman AF
34323 XM
(Function)SH
22028 50 20666 8994 LH BX1
-1794 50 29864 8994 LV BX1
10 /Courier AF
21065 10148 MT
(:clear)SH
11 /Times-Roman AF
30263 XM
(0)SH
10 /Courier AF
21065 12005 MT
(:set)SH
11 /Times-Roman AF
30263 XM
(1)SH
10 /Courier AF
21065 13862 MT
(:copy)SH
11 /Times-Roman AF
30263 XM
(src)SH
10 /Courier AF
21065 15719 MT
(:no-op)SH
11 /Times-Roman AF
30263 XM
(dst)SH
10 /Courier AF
21065 17576 MT
(:copy-inverted)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051)SH
10 /Courier AF
21065 19433 MT
(:invert)SH
11 /Times-Roman AF
30263 XM
(\050NOT dst\051)SH
10 /Courier AF
21065 21290 MT
(:or)SH
11 /Times-Roman AF
30263 XM
(src OR dst)SH
10 /Courier AF
21065 23147 MT
(:and)SH
11 /Times-Roman AF
30263 XM
(src AND dst)SH
10 /Courier AF
21065 25004 MT
(:xor)SH
11 /Times-Roman AF
30263 XM
(src XOR dst)SH
10 /Courier AF
21065 26861 MT
(:equiv)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051 XOR dst)SH
10 /Courier AF
21065 28718 MT
(:nand)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051 OR \050NOT dst\051)SH
10 /Courier AF
21065 30575 MT
(:nor)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051 AND \050NOT dst\051)SH
10 /Courier AF
21065 32432 MT
(:and-inverted)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051 and dst)SH
10 /Courier AF
21065 34289 MT
(:and-reverse)SH
11 /Times-Roman AF
30263 XM
(src AND \050NOT dst\051)SH
10 /Courier AF
21065 36146 MT
(:or-inverted)SH
11 /Times-Roman AF
30263 XM
(\050NOT src\051 OR dst)SH
10 /Courier AF
21065 38003 MT
(:or-reverse)SH
11 /Times-Roman AF
30263 XM
(src OR \050NOT dst\051)SH
22028 31443 50 20666 38643 BX BX1
/Times-Bold SF
8280 40395 MT
(Figure 3-1:)SH
/Times-Roman SF
14053 XM
(Allowed values for the)SH
10 /Courier AF
24377 XM
(:draw-function)SH
11 /Times-Roman AF
33052 XM
(slot and their logical counterparts.)SH
46800 50 8280 42347 UL
14 /Times-Bold AF
8280 45965 MT
(3.4. Select-Outline-Only, Hit-Threshold, and Pretend-To-Be-Leaf)SH
11 /Times-Roman AF
8280 47161 MT
(The)SH
10 /Courier AF
10379 XM
(:select-outline-only)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
23042 XM
(:hit-threshold)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
32105 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
(, and)113 W
10 /Courier AF
46144 XM
(:visible)SH
11 /Times-Roman AF
51332 XM
(slots are)113 W
8280 48357 MT
(used by)
36 W( functions which search for objects given a rectangular region or an \050x,y\051 coordinate \050see sections)37 W
8280 49553 MT
(8.5 and 8.4\051.  If the)54 W
10 /Courier AF
17309 XM
(:select-outline-only)SH
11 /Times-Roman AF
29638 XM
(slot is non-)53 W
9 SS 
(NIL)SH
11 SS 
36462 XM
(then)SH
10 /Courier AF
38684 XM
(point-in-gob)SH
11 /Times-Roman AF
46212 XM
(will only report hits)53 W
8280 50749 MT
(only on or near)
107 W( the outline of the object.  Otherwise, the object will be sensitive over the entire region)108 W
8280 51945 MT
(\050inside and on the outline\051.  The)SH
10 /Courier AF
22638 XM
(:select-outline-only)SH
11 /Times-Roman AF
34913 XM
(slot defaults to)SH
9 SS 
41666 XM
(NIL)SH
11 SS 
(.)SH
8280 54578 MT
(The)SH
10 /Courier AF
10436 XM
(:hit-threshold)SH
11 /Times-Roman AF
19282 XM
(slot controls the sensitivity of the internal Opal)171 W
10 /Courier AF
41610 XM
(point-in-gob)SH
11 /Times-Roman AF
49256 XM
(methods that)171 W
8280 55774 MT
(decide whether an event \050like a mouse click\051 occurred "inside" an object.  If the)59 W
10 /Courier AF
44451 XM
(:hit-threshold)SH
11 /Times-Roman AF
53186 XM
(is 3,)60 W
8280 56970 MT
(for example, then an event 3 pixels away from the object will)
122 W( still be interpreted as being "inside" the)121 W
8280 58166 MT
(object. When)557 W
10 /Courier AF
15117 XM
(:select-outline-only)SH
11 /Times-Roman AF
27533 XM
(is T,)
141 W( then any event directly on the outline of the object, or)142 W
8280 59362 MT
(within 3 pixels of the)
340 W( outline, will be interpreted as a hit on the object.  The default value of)339 W
10 /Courier AF
8280 60558 MT
(:hit-threshold)SH
11 /Times-Roman AF
17071 XM
(is 0.)116 W
/Times-Bold SF
19803 XM
(Note:)SH
/Times-Roman SF
22758 XM
(it is often necessary to set the)117 W
10 /Courier AF
36804 XM
(:hit-threshold)SH
11 /Times-Roman AF
45596 XM
(slot of all aggregates)117 W
/Times-Italic SF
8280 61754 MT
(above)SH
/Times-Roman SF
11205 XM
(a target object; if an event occurs "outside" of an aggregate, then the)23 W
10 /Courier AF
41844 XM
(point-in-gob)SH
11 /Times-Roman AF
49342 XM
(methods will)23 W
8280 62950 MT
(not check)
172 W( the components of that aggregate.  The function)173 W
10 /Courier AF
35880 XM
(opal:set-aggregate-hit-threshold)SH
11 /Times-Roman AF
8280 64146 MT
(\050see section 8.1\051 can simplify this procedure.)SH
8280 66444 MT
(When an aggregate's)592 W
10 /Courier AF
19613 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
31879 XM
(slot contains the value)591 W
9 SS 
44325 XM
(T)SH
11 SS 
(, then the functions)591 W
10 /Courier AF
8280 67640 MT
(point-to-component)SH
11 /Times-Roman AF
19488 XM
(and)SH
10 /Courier AF
21484 XM
(leaf-objects-in-rectangle)SH
11 /Times-Roman AF
36892 XM
(will treat that aggregate as a)
133 W( leaf object)134 W
8280 68836 MT
(\050even though the aggregate has components\051.  This might be useful)
33 W( in searching for a button aggregate in)32 W
8280 70032 MT
(an aggrelist of buttons.)SH
ES
%%Page: 160 9
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 160)
SH( Opal)830 W
35122 XM
(Methods on All View-Objects)
SH( Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(4. Methods on All View-Objects)SH
11 /Times-Roman AF
6120 10524 MT
(There are a number of methods defined on all subclasses of)16 W
10 /Courier AF
32715 XM
(opal:view-object)SH
11 /Times-Roman AF
(. This)
307 W( section describes)17 W
6120 11720 MT
(these methods and other accessors defined for all graphical objects.)SH
14 /Times-Bold AF
6120 15538 MT
(4.1. Standard Functions)SH
11 /Times-Roman AF
6120 16734 MT
(The various slots in objects, like)61 W
10 /Courier AF
20999 XM
(:left, :top, :width, :height, :visible)60 W
11 /Times-Roman AF
(, etc. can be set and)60 W
6120 17930 MT
(accessed using the standard)227 W
10 /Courier AF
19428 XM
(s-value)SH
11 /Times-Roman AF
24130 XM
(and)SH
10 /Courier AF
26221 XM
(gv)SH
11 /Times-Roman AF
27924 XM
(functions and macros.  Some additional functions are)228 W
6120 19126 MT
(provided for convenience in accessing and setting the size and position slots.)
193 W( Some)
659 W( slots of objects)192 W
6120 20322 MT
(should not be set \050although they)
164 W( can be accessed\051.  This includes the)165 W
10 /Courier AF
38562 XM
(:left, :top, :width,)165 W
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 21518 MT
(:height)SH
11 /Times-Roman AF
10709 XM
(of lines and polylines \050since they are computed from the end)
114 W( points\051, and the components of)113 W
6120 22714 MT
(aggregates \050use the)SH
10 /Courier AF
14823 XM
(add-component)SH
11 /Times-Roman AF
22898 XM
(and)SH
10 /Courier AF
24761 XM
(remove-component)SH
11 /Times-Roman AF
34636 XM
(functions\051.)SH
8 /Courier AF
8040 25364 MT
(opal:Point-In-Gob)SH
/Times-Italic SF
16680 XM
(graphical-object x y)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 27662 MT
(This routine determines whether the point)7 W
10 /Courier AF
24858 XM
(\050x,y\051)SH
11 /Times-Roman AF
28140 XM
(is inside the graphical object \050"gob" stands for graphical)7 W
6120 28858 MT
(object\051. This)
1733 W( uses an object-specific method, and is dependent on the setting)
729 W( of the)728 W
10 /Courier AF
6120 30054 MT
(:select-outline-only)SH
11 /Times-Roman AF
18395 XM
(and)SH
10 /Courier AF
20258 XM
(:hit-threshold)SH
11 /Times-Roman AF
28933 XM
(slots in the object as described above.)SH
6120 32352 MT
(The)SH
10 /Courier AF
8186 XM
(:point-in-gob)SH
11 /Times-Roman AF
16342 XM
(methods for)81 W
10 /Courier AF
22064 XM
(opal:polyline)SH
11 /Times-Roman AF
30220 XM
(and)SH
10 /Courier AF
32164 XM
(opal:arrowhead)SH
11 /Times-Roman AF
40920 XM
(actually check whether the)81 W
6120 33548 MT
(point is inside the polygon,)
277 W( rather than just inside the polygon's bounding box.  Additionally, the)276 W
10 /Courier AF
6120 34744 MT
(:hit-full-interior-p)SH
11 /Times-Roman AF
18488 XM
(slot of a polygon controls)
93 W( which algorithm is used to determine if a point is)94 W
6120 35940 MT
(inside it \050see section)
80 W( 6.3\051.  If an object's)79 W
10 /Courier AF
24703 XM
(:visible)SH
11 /Times-Roman AF
29857 XM
(slot is)79 W
9 SS 
32889 XM
(NIL)SH
11 SS 
(, then)79 W
10 /Courier AF
37266 XM
(point-in-gob)SH
11 /Times-Roman AF
44820 XM
(will always return)79 W
9 SS 
6120 37136 MT
(NIL)SH
11 SS 
7895 XM
(for that object.)SH
8 /Courier AF
8040 39786 MT
(opal:Destroy)SH
/Times-Italic SF
14280 XM
(graphical-object)SH
/Courier SF
20090 XM
(&optional)SH
/Times-Italic SF
24890 XM
(erase)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 42084 MT
(This causes the object to be removed from an aggregate \050if it is in one\051, and)
64 W( the storage for the object is)65 W
6120 43280 MT
(deallocated. You)
555 W( can)140 W
10 /Courier AF
16483 XM
(destroy)SH
11 /Times-Roman AF
21098 XM
(any kind)
140 W( of object, including windows.  If you destroy a window, all)139 W
6120 44476 MT
(objects inside of it are automatically destroyed.  Similarly, if)
8 W( you destroy an aggregate, all objects in it are)9 W
6120 45672 MT
(destroyed \050recursively\051.  When you)
52 W( destroy an object, it is automatically removed from any aggregates it)51 W
6120 46868 MT
(might be in and erased from the screen.  If destroying the object causes you to)
164 W( go into the debugger)165 W
6120 48064 MT
(\050usually due to illegal values in some slots\051,)
8 W( you might try passing in the)7 W
10 /Courier AF
38400 XM
(erase)SH
11 /Times-Roman AF
41682 XM
(parameter as)7 W
9 SS 
47558 XM
(NIL)SH
11 SS 
49340 XM
(to cause)7 W
6120 49260 MT
(Opal to not erase the object from the window.  The default for)SH
10 /Courier AF
33732 XM
(erase)SH
11 /Times-Roman AF
37007 XM
(is T.)SH
6120 51558 MT
(Often, it is not)
32 W( necessary to destroy individual objects because they are destroyed automatically when the)33 W
6120 52754 MT
(window they are in is destroyed.)SH
8 /Courier AF
8040 55404 MT
(opal:Rotate)SH
/Times-Italic SF
13800 XM
(graphical-object angle)SH
/Courier SF
21587 XM
(&optional)SH
/Times-Italic SF
26387 XM
(center-x center-y)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 57702 MT
(The)SH
10 /Courier AF
8116 XM
(rotate)SH
11 /Times-Roman AF
12002 XM
(method rotates)11 W
/Times-Italic SF
18806 XM
(graphical-object)SH
/Times-Roman SF
26424 XM
(around \050)11 W
/Times-Italic SF
(center-x)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
34293 XM
(center-y)SH
/Times-Roman SF
(\051 by)11 W
/Times-Italic SF
39933 XM
(angle)SH
/Times-Roman SF
42663 XM
(radians. It)
297 W( does)
11 W( this by)10 W
6120 58898 MT
(changing the values of)
108 W( the controlling points \050using)109 W
10 /Courier AF
29903 XM
(s-value)SH
11 /Times-Roman AF
(\051 for the object \050e.g., the values for)109 W
10 /Courier AF
50520 XM
(:x1,)SH
6120 60094 MT
(:y1, :x2,)110 W
11 /Times-Roman AF
12015 XM
(and)SH
10 /Courier AF
13988 XM
(:y2)SH
11 /Times-Roman AF
16173 XM
(for lines\051.  Therefore, it is a bad)
110 W( idea to call)109 W
10 /Courier AF
36712 XM
(rotate)SH
11 /Times-Roman AF
40696 XM
(when there are formulas in)109 W
6120 61290 MT
(these slots.  If)24 W
/Times-Italic SF
12601 XM
(center-x)SH
/Times-Roman SF
16502 XM
(or)SH
/Times-Italic SF
17717 XM
(center-y)SH
/Times-Roman SF
21618 XM
(are not)
24 W( specified, then the geometric center of the object \050as calculated)25 W
6120 62486 MT
(by using the center of its bounding box\051 is used.  Certain objects can't be rotated, namely)
102 W( Ovals, Arcs,)101 W
6120 63682 MT
(Roundtangles, and Text.  A rectangle that is rotated becomes a)
149 W( polygon and remains one even if it is)150 W
6120 64878 MT
(rotated back into its original position.)SH
ES
%%Page: 161 10
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.2)
SH( Extended)
1800 W( Accessor Functions)SH
51386 XM
(Page 161)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(4.2. Extended Accessor Functions)SH
11 /Times-Roman AF
8280 9334 MT
(The following macros, functions and)111 W
10 /Courier AF
25331 XM
(setf)SH
11 /Times-Roman AF
28117 XM
(methods are defined to make)
111 W( it easier to access the slots of)110 W
8280 10530 MT
(graphical objects.)SH
8280 12828 MT
(When set, the first set of functions below)
52 W( only change the position of the graphical object; the width and)53 W
8280 14024 MT
(height remain the same.  The following are both accessors and valid place arguments for)102 W
10 /Courier AF
49027 XM
(setf)SH
11 /Times-Roman AF
(. These)477 W
8280 15220 MT
(use)SH
10 /Courier AF
10080 XM
(s-value)SH
11 /Times-Roman AF
14614 XM
(and)SH
10 /Courier AF
16536 XM
(g-value)SH
11 /Times-Roman AF
21070 XM
(so they should not be)
59 W( used inside of formulas, use the)60 W
10 /Courier AF
45556 XM
(gv-xxx)SH
11 /Times-Roman AF
49491 XM
(forms below)60 W
8280 16416 MT
(instead inside of formulas.)SH
8 /Courier AF
10200 17629 MT
(opal:Bottom)SH
/Times-Italic SF
15960 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 19359 MT
(opal:Right)SH
/Times-Italic SF
15480 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 21089 MT
(opal:Center-X)SH
/Times-Italic SF
16920 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 22819 MT
(opal:Center-Y)SH
/Times-Italic SF
16920 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 24240 MT
(To use one of these in a)SH
10 /Courier AF
19001 XM
(setf)SH
11 /Times-Roman AF
(, the form is)SH
8 /Courier AF
10200 25405 MT
(\050setf \050opal:bottom obj\051 new-value\051)SH
11 /Times-Roman AF
8280 26826 MT
(In contrast to the above accessors, the four below when set change the size of the object.)
81 W( For)
435 W( example,)80 W
8280 28022 MT
(changing the top-side of an object changes the top and height of the object; the bottom does not change.)SH
8 /Courier AF
10200 29235 MT
(opal:Top-Side)SH
/Times-Italic SF
16920 XM
(graphical-object value)SH
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
10200 30965 MT
(opal:Left-Side)SH
/Times-Italic SF
17400 XM
(graphical-object value)SH
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
10200 32695 MT
(opal:Bottom-Side)SH
/Times-Italic SF
18360 XM
(graphical-object value)SH
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
10200 34425 MT
(opal:Right-Side)SH
/Times-Italic SF
17880 XM
(graphical-object value)SH
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 35846 MT
(Opal also provides the following accessor functions which set up)
71 W( dependencies and should only be used)72 W
8280 37042 MT
(inside of formulas.)
249 W( For)
771 W( more information on using formulas, see the example section and the KR)248 W
8280 38238 MT
(document. These)
275 W( should not be used outside of formulas.)SH
8 /Courier AF
10200 39451 MT
(opal:Gv-Bottom)SH
/Times-Italic SF
17400 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 41181 MT
(opal:Gv-Right)SH
/Times-Italic SF
16920 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 42911 MT
(opal:Gv-Center-X)SH
/Times-Italic SF
18360 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 44641 MT
(opal:Gv-Center-Y)SH
/Times-Italic SF
18360 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 46062 MT
(The following functions should be used in the)86 W
10 /Courier AF
29438 XM
(:left)SH
11 /Times-Roman AF
32800 XM
(and)SH
10 /Courier AF
34750 XM
(:top)SH
11 /Times-Roman AF
37512 XM
(slots of objects, respectively.  The first)87 W
8280 47258 MT
(returns the value for)SH
10 /Courier AF
17442 XM
(:left)SH
11 /Times-Roman AF
20717 XM
(such that)SH
/Times-Italic SF
24933 XM
(\050gv-center-x :self\051)SH
/Times-Roman SF
33115 XM
(equals)SH
/Times-Italic SF
36200 XM
(\050gv-center-x object\051)SH
/Times-Roman SF
(.)SH
8 /Courier AF
10200 48471 MT
(opal:Gv-Center-X-Is-Center-Of)SH
/Times-Italic SF
24600 XM
(object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 50201 MT
(opal:Gv-Center-Y-Is-Center-Of)SH
/Times-Italic SF
24600 XM
(object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 52499 MT
(In more concrete terms, if you had two objects)
58 W( OBJ1 and OBJ2, and you wanted to constrain the)57 W
10 /Courier AF
52080 XM
(:left)SH
11 /Times-Roman AF
8280 53695 MT
(of OBJ1 so that the centers of OBJ1 and OBJ2 were the same, you would say:)SH
8 /Courier AF
10200 54860 MT
(\050s-value OBJ1 :left \050o-formula \050opal:gv-center-x-is-center-of OBJ2\051\051\051)SH
11 /Times-Roman AF
8280 56281 MT
(The next group of functions are for accessing multiple slots simultaneously.  These are not)SH
10 /Courier AF
48420 XM
(setf)SH
11 /Times-Roman AF
('able.)SH
8 /Courier AF
10200 57494 MT
(opal:Center)SH
/Times-Italic SF
15960 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11160 58359 MT
(\050declare \050values center-x center-y\051\051)SH
10200 60089 MT
(opal:Set-Center)SH
/Times-Italic SF
17880 XM
(graphical-object center-x center-y)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 61819 MT
(opal:Bounding-Box)SH
/Times-Italic SF
18840 XM
(graphical-object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11160 62684 MT
(\050declare \050values left top width height\051\051)SH
10200 64414 MT
(opal:Set-Bounding-Box)SH
/Times-Italic SF
20760 XM
(graphical-object left top width height)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 66144 MT
(opal:Set-Position)SH
/Times-Italic SF
18840 XM
(graphical-object left top)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 67874 MT
(opal:Set-Size)SH
/Times-Italic SF
16920 XM
(graphical-object width height)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
ES
%%Page: 162 11
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 162)
SH( Opal)830 W
40122 XM
(Graphic Qualities)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(5. Graphic Qualities)SH
11 /Times-Roman AF
6120 10524 MT
(Objects that are instances of class)169 W
10 /Courier AF
22222 XM
(opal:graphic-quality)SH
11 /Times-Roman AF
34666 XM
(are used to specify a number of related)169 W
6120 11720 MT
(drawing qualities at one time.  The)105 W
10 /Courier AF
22435 XM
(:line-style)SH
11 /Times-Roman AF
29415 XM
(and)SH
10 /Courier AF
31383 XM
(:filling-style)SH
11 /Times-Roman AF
40162 XM
(slots present in all graphical)104 W
6120 12916 MT
(objects hold instances of)868 W
10 /Courier AF
20712 XM
(opal:line-style)SH
11 /Times-Roman AF
30855 XM
(and)SH
10 /Courier AF
33587 XM
(opal:filling-style)SH
11 /Times-Roman AF
45531 XM
(objects. The)2013 W
10 /Courier AF
6120 14112 MT
(opal:line-style)SH
11 /Times-Roman AF
15422 XM
(object controls many parameters about how a)
27 W( graphical object's outline is displayed.)26 W
6120 15308 MT
(Likewise, the)9 W
10 /Courier AF
12339 XM
(opal:filling-style)SH
11 /Times-Roman AF
23423 XM
(object controls)
9 W( how the filling of objects are displayed.  Figure 5-1)10 W
6120 16504 MT
(shows the graphic qualities provided by Opal.)SH
46800 50 6120 18655 UL
85 100 0 3552 71727 GB 
%%BeginDocument: opal/gquality.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Opal 9
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Sep 27, 1993, 1:09 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 112 177 499 615
%%%Pages: 1
%%EndComments


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
40 543 translate

%
% Begin new window
%
gsave
0 0 387 438 ClipToRectangle
gsave
0 0 translate
0 0 387 438 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 387 438 ClipToRectangle
gsave
-10 10 translate
[0 0 0] 0 0 [] 1 191 -56 161 -259 DrawLine
[0 0 0] 0 0 [] 1 191 -174 161 -259 DrawLine
[0 0 0] 0 0 [] 1 191 -285 161 -259 DrawLine
[0 0 0] 0 0 [] 1 191 -361 161 -259 DrawLine
[0 0 0] 0 0 [] 1 191 -423 161 -259 DrawLine
10 -248 151 22 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
14 -252 -263 140 14 false [0 0 0] [1 1 1] (OPAL:GRAPHIC-QUALITY) 12 /Courier-Bold DrawText
191 -10 206 92 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
195 -14 -25 125 14 false [0 0 0] [1 1 1] (OPAL:FILLING-STYLE) 12 /Courier-Bold DrawText
197 -29 -40 123 14 false [0 0 0] [1 1 1] (:fill-style :solid) 12 /Courier DrawText
197 -43 -54 137 14 false [0 0 0] [1 1 1] (:fill-rule :even-odd) 12 /Courier DrawText
197 -57 -68 80 14 false [0 0 0] [1 1 1] (:stipple NIL) 12 /Courier DrawText
197 -71 -82 193 14 false [0 0 0] [1 1 1] (:foreground-color opal:black) 12 /Courier DrawText
197 -85 -96 192 14 false [0 0 0] [1 1 1] (:background-color opal:white) 12 /Courier DrawText
191 -107 206 134 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
195 -111 -122 104 14 false [0 0 0] [1 1 1] (OPAL:LINE-STYLE) 12 /Courier-Bold DrawText
197 -126 -137 115 14 false [0 0 0] [1 1 1] (:line-thickness 0) 12 /Courier DrawText
197 -140 -151 123 14 false [0 0 0] [1 1 1] (:line-style :solid) 12 /Courier DrawText
197 -154 -165 109 14 false [0 0 0] [1 1 1] (:cap-style :butt) 12 /Courier DrawText
197 -168 -179 122 14 false [0 0 0] [1 1 1] (:join-style :miter) 12 /Courier DrawText
197 -182 -193 115 14 false [0 0 0] [1 1 1] (:dash-pattern NIL) 12 /Courier DrawText
197 -196 -207 80 14 false [0 0 0] [1 1 1] (:stipple NIL) 12 /Courier DrawText
197 -210 -221 193 14 false [0 0 0] [1 1 1] (:foreground-color opal:black) 12 /Courier DrawText
197 -224 -235 192 14 false [0 0 0] [1 1 1] (:background-color opal:white) 12 /Courier DrawText
191 -246 114 78 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
195 -250 -261 70 14 false [0 0 0] [1 1 1] (OPAL:COLOR) 12 /Courier-Bold DrawText
197 -265 -276 52 14 false [0 0 0] [1 1 1] (:red 1.0) 12 /Courier DrawText
197 -279 -290 66 14 false [0 0 0] [1 1 1] (:green 1.0) 12 /Courier DrawText
197 -293 -304 59 14 false [0 0 0] [1 1 1] (:blue 1.0) 12 /Courier DrawText
197 -307 -318 101 14 false [0 0 0] [1 1 1] (:color-name NIL) 12 /Courier DrawText
191 -329 108 64 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
195 -333 -344 62 14 false [0 0 0] [1 1 1] (OPAL:FONT) 12 /Courier-Bold DrawText
197 -348 -359 95 14 false [0 0 0] [1 1 1] (:family :fixed) 12 /Courier DrawText
197 -362 -373 81 14 false [0 0 0] [1 1 1] (:face :roman) 12 /Courier DrawText
197 -376 -387 88 14 false [0 0 0] [1 1 1] (:size :medium) 12 /Courier DrawText
191 -398 143 50 5 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRoundtangle
195 -402 -413 132 14 false [0 0 0] [1 1 1] (OPAL:FONT-FROM-FILE) 12 /Courier-Bold DrawText
197 -417 -428 68 14 false [0 0 0] [1 1 1] (:font-name ) 12 /Courier DrawText
197 -431 -442 94 14 false [0 0 0] [1 1 1] (:font-path NIL) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 112 177 499 615

%%EndDocument
 GE /Times-Bold SF
6120 58434 MT
(Figure 5-1:)SH
/Times-Roman SF
11893 XM
(The graphic qualities that can be applied to objects.)SH
46800 50 6120 60386 UL
6120 62484 MT
(The properties controlled by the)96 W
10 /Courier AF
20986 XM
(opal:line-style)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
30631 XM
(opal:filling-style)SH
11 /Times-Roman AF
(, and)95 W
10 /Courier AF
44034 XM
(opal:font)SH
11 /Times-Roman AF
49804 XM
(objects)SH
6120 63680 MT
(are similar to PostScript's graphics state \050described in section 4.3 in the)
85 W( PostScript Language Reference)86 W
6120 64876 MT
(Manual\051 or)
45 W( the XLIB graphics context \050described in the X Window System Protocol Manual\051.  The Opal)44 W
6120 66072 MT
(design is simpler since there are appropriate defaults)
43 W( for all values and you only have to set the ones you)44 W
6120 67268 MT
(are interested in.)
102 W( The)478 W
10 /Courier AF
16462 XM
(:line-style)SH
11 /Times-Roman AF
23438 XM
(slot in graphical objects holds an object that contains all relevant)101 W
6120 68464 MT
(information to parameterize the drawing of lines and outlines.  Similarly,)
42 W( the)43 W
10 /Courier AF
40658 XM
(:filling-style)SH
11 /Times-Roman AF
49376 XM
(controls)SH
6120 69660 MT
(the insides of objects.  The)27 W
10 /Courier AF
18349 XM
(:font)SH
11 /Times-Roman AF
21651 XM
(slot appears only in text and related objects, and controls the font used)27 W
6120 70856 MT
(in drawing the string.)SH
ES
%%Page: 163 12
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 5.1)
SH( Color)1800 W
51386 XM
(Page 163)SH
46800 50 8280 4486 UL
11 /Times-Bold AF
8280 7955 MT
(Note)SH
/Times-Roman SF
(: Although the properties of these graphic qualities can)
257 W( be changed after they are created, for)258 W
8280 9151 MT
(example to make a font change to be italic, Garnet will not notice the change)
7 W( because the font object itself)6 W
8280 10347 MT
(is still the same \050i.e., the value of the)84 W
10 /Courier AF
25472 XM
(:font)SH
11 /Times-Roman AF
28831 XM
(slot has not changed\051.  Therefore, line-styles,)
84 W( filling-styles)85 W
8280 11543 MT
(and fonts should be considered read-only after they are created.  You can make as many as you want and)36 W
8280 12739 MT
(put them in objects, but if you want to change the property of an object, insert a)93 W
/Times-Italic SF
45145 XM
(new)SH
/Times-Roman SF
47286 XM
(line-style, filling-)94 W
8280 13935 MT
(style, or font object rather than changing the slots of the style or font itself.)
121 W( If)
516 W( a set of objects should)120 W
8280 15131 MT
(share a changeable graphics quality, then put a formula into each object that)
147 W( calculates which graphic)148 W
8280 16327 MT
(quality to use,)
25 W( so they will all change references together, rather than sharing a pointer to a single graphic)24 W
8280 17523 MT
(quality object that is changed.)SH
14 /Times-Bold AF
8280 21341 MT
(5.1. Color)SH
11 /Times-Roman AF
8280 22537 MT
(A graphical quality called)SH
10 /Courier AF
19948 XM
(opal:color)SH
11 /Times-Roman AF
26223 XM
(exists which is defined as:)SH
8 /Courier AF
10200 24641 MT
(\050create-instance 'opal:Color opal:graphic-quality)SH
11640 25506 MT
(\050:constant '\050:color-p\051\051)SH
11640 26371 MT
(\050:color-p ...\051)SH
/Times-Italic SF
19320 XM
(; Set during initialization according to the display - T if color, NIL otherwise)SH
/Courier SF
11640 27236 MT
(\050:red 1.0\051)SH
11640 28101 MT
(\050:green 1.0\051)SH
11640 28966 MT
(\050:blue 1.0\051)SH
11640 29831 MT
(\050:color-name NIL\051\051)SH
11 /Times-Roman AF
8280 32129 MT
(The following colors are exported from Opal.  They are instances)
93 W( of)94 W
10 /Courier AF
39665 XM
(opal:color)SH
11 /Times-Roman AF
46034 XM
(with the appropriate)94 W
8280 33325 MT
(values for their)SH
10 /Courier AF
15213 XM
(:red)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18163 XM
(:green)SH
11 /Times-Roman AF
(, and)SH
10 /Courier AF
24176 XM
(:blue)SH
11 /Times-Roman AF
27451 XM
(slots as shown:)SH
10 /Courier AF
10680 35846 MT
(opal:Red)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 1.0\051  \050:green 0.0\051  \050:blue 0.0\051)SH
10680 36877 MT
(opal:Green)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 0.0\051  \050:green 1.0\051  \050:blue 0.0\051)SH
10680 37908 MT
(opal:Blue)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 0.0\051  \050:green 0.0\051  \050:blue 1.0\051)SH
10680 38939 MT
(opal:Yellow)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 1.0\051  \050:green 1.0\051  \050:blue 0.0\051)SH
10680 39970 MT
(opal:Purple)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 1.0\051  \050:green 0.0\051  \050:blue 1.0\051)SH
10680 41001 MT
(opal:Cyan)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 0.0\051  \050:green 1.0\051  \050:blue 1.0\051)SH
10680 42032 MT
(opal:Orange)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 0.75\051 \050:green 0.25\051 \050:blue 0.0\051)SH
10680 43063 MT
(opal:White)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 1.0\051  \050:green 1.0\051  \050:blue 1.0\051)SH
10680 44094 MT
(opal:Black)SH
/Times-Roman SF
18480 XM
(\320)SH
/Courier SF
20680 XM
(\050:red 0.0\051  \050:green 0.0\051  \050:blue 0.0\051)SH
11 /Times-Roman AF
8280 46392 MT
(The following)
203 W( objects are also instances of)202 W
10 /Courier AF
28786 XM
(opal:color)SH
11 /Times-Roman AF
(, with RGB values chosen to correspond to)202 W
8280 47588 MT
(standard Motif colors:)SH
10 /Courier AF
10680 49151 MT
(opal:Motif-Gray)SH
35268 XM
(opal:Motif-Light-Gray)SH
10680 50253 MT
(opal:Motif-Blue)SH
35268 XM
(opal:Motif-Light-Blue)SH
10680 51355 MT
(opal:Motif-Green)SH
35268 XM
(opal:Motif-Light-Green)SH
10680 52457 MT
(opal:Motif-Orange)SH
35268 XM
(opal:Motif-Light-Orange)SH
11 /Times-Roman AF
8280 55056 MT
(Users can)
93 W( create any color they want by creating an object of type)94 W
10 /Courier AF
38788 XM
(opal:color)SH
11 /Times-Roman AF
(, and setting the)94 W
10 /Courier AF
52405 XM
(:red)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 56252 MT
(:green)SH
11 /Times-Roman AF
12155 XM
(and)SH
10 /Courier AF
14018 XM
(:blue)SH
11 /Times-Roman AF
17293 XM
(slots to be any real number between 0.0 and 1.0.)SH
8280 58550 MT
(An)SH
10 /Courier AF
9994 XM
(opal:color)SH
11 /Times-Roman AF
16364 XM
(can also be)
95 W( created using the)94 W
10 /Courier AF
29818 XM
(:color-name)SH
11 /Times-Roman AF
36787 XM
(slot instead of the)94 W
10 /Courier AF
45229 XM
(:red, :green,)94 W
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 59746 MT
(:blue)SH
11 /Times-Roman AF
11626 XM
(slots. The)417 W
10 /Courier AF
16667 XM
(:color-name)SH
11 /Times-Roman AF
23613 XM
(slot takes a string such)
71 W( as)72 W
/Times-Italic SF
35467 XM
("pink")SH
/Times-Roman SF
38632 XM
(or atom such as)72 W
/Times-Italic SF
46068 XM
('pink)SH
/Times-Roman SF
(. These)
419 W( names)72 W
8280 60942 MT
(are looked up by the Xserver, and the appropriate color will be returned.  Usually the)
15 W( list of allowed color)14 W
8280 62138 MT
(names is stored in the file)488 W
10 /Courier AF
22756 XM
(/usr/misc/lib/rgb.txt)SH
11 /Times-Roman AF
36120 XM
(or)SH
10 /Courier AF
37800 XM
(/usr/misc/.X11/lib/rgb.txt)SH
11 /Times-Roman AF
54164 XM
(or)SH
10 /Courier AF
8280 63334 MT
(/usr/lib/X11/rgb.txt)SH
11 /Times-Roman AF
(. However,)
636 W( if the Xserver does not find the color, an error will be raised.)180 W
8280 64530 MT
(There is apparently no way to ask X whether it)
175 W( understands a color name.  Thus, code that uses the)176 W
10 /Courier AF
8280 65726 MT
(:color-name)SH
11 /Times-Roman AF
15297 XM
(slot may not be portable across)
142 W( machines.  Note that the)141 W
10 /Courier AF
41719 XM
(:red, :green,)141 W
11 /Times-Roman AF
50076 XM
(and)SH
10 /Courier AF
52080 XM
(:blue)SH
11 /Times-Roman AF
8280 66922 MT
(slots of the color are set automatically in color objects defined with names.)SH
8280 69220 MT
(For example:)SH
8 /Courier AF
10200 70385 MT
(\050create-instance 'FUN-COLOR opal:color \050:color-name "papaya whip"\051\051)SH
ES
%%Page: 164 13
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 164)
SH( Opal)830 W
40122 XM
(Graphic Qualities)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The)SH
10 /Courier AF
8209 XM
(:color-p)SH
11 /Times-Roman AF
13388 XM
(slot of)104 W
10 /Courier AF
16652 XM
(opal:color)SH
11 /Times-Roman AF
23032 XM
(is automatically set to)105 W
9 SS 
33352 XM
(T)SH
11 SS 
34282 XM
(or)SH
9 SS 
35578 XM
(NIL)SH
11 SS 
37458 XM
(depending on whether or not your)105 W
6120 9151 MT
(screen is color or black-and-white \050it)
17 W( is also)16 W
9 SS 
25801 XM
(T)SH
11 SS 
26642 XM
(if the screen is gray-scale\051.  This should not be set by hand.)16 W
6120 10347 MT
(The Motif widget set contains formulas that change their display mode based on the value of)SH
10 /Courier AF
47176 XM
(:color-p)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
6120 14165 MT
(5.2. Line-Style Class)SH
8 /Courier AF
8040 16322 MT
(\050create-instance 'opal:Line-Style opal:graphic-quality)SH
9000 17187 MT
(\050:maybe-constant '\050:line-thickness :cap-style :join-style :line-style :dash-pattern)SH
18120 18052 MT
(:foreground-color :background-color :stipple\051\051)SH
9000 18917 MT
(\050:line-thickness 0\051)SH
9000 19782 MT
(\050:cap-style :butt\051)SH
9000 20647 MT
(\050:join-style :miter\051)SH
9000 21512 MT
(\050:line-style :solid\051)SH
9000 22377 MT
(\050:foreground-color opal:black\051)SH
9000 23242 MT
(\050:background-color opal:white\051)SH
9000 24107 MT
(\050:dash-pattern NIL\051)SH
9000 24972 MT
(\050:stipple NIL\051\051)SH
8040 26702 MT
(\050create-instance 'opal:Default-Line-Style opal:line-style)SH
9480 27567 MT
(\050:constant T\051\051)SH
11 /Times-Roman AF
6120 30127 MT
(Before you read the sordid details below about what all)
32 W( these slots mean, be aware that most applications)33 W
6120 31323 MT
(will just use the default line styles provided.)SH
6120 33458 MT
(The following line-styles \050except)412 W
10 /Courier AF
22614 XM
(opal:no-line)SH
11 /Times-Roman AF
(\051 are all instances)
412 W( of)411 W
10 /Courier AF
41003 XM
(opal:line-style)SH
11 /Times-Roman AF
(, with)411 W
6120 34654 MT
(particular values for their)211 W
10 /Courier AF
18386 XM
(:line-thickness)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
28147 XM
(:line-style)SH
11 /Times-Roman AF
(, or)211 W
10 /Courier AF
36910 XM
(:dash-pattern)SH
11 /Times-Roman AF
45196 XM
(slots. Except)
699 W( as)212 W
6120 35850 MT
(noted, they are identical to)SH
10 /Courier AF
18094 XM
(opal:default-line-style)SH
11 /Times-Roman AF
(. All)
275 W( of them are black.)SH
10 /Courier AF
8620 37926 MT
(opal:No-Line)SH
11 /Times-Roman AF
16095 XM
(\320)SH
9 SS 
17470 XM
(NIL)SH
10 /Courier AF
8620 39621 MT
(opal:Thin-Line)SH
11 /Times-Roman AF
17295 XM
(\320 Same as)SH
10 /Courier AF
22580 XM
(opal:default-line-style)SH
8620 41316 MT
(opal:Line-0)SH
11 /Times-Roman AF
15495 XM
(\320 Same as)SH
10 /Courier AF
20780 XM
(opal:default-line-style)SH
8620 43011 MT
(opal:Line-1)SH
11 /Times-Roman AF
15495 XM
(\320)SH
10 /Courier AF
16870 XM
(:line-thickness)SH
11 /Times-Roman AF
26145 XM
(= 1)SH
10 /Courier AF
8620 44706 MT
(opal:Line-2)SH
11 /Times-Roman AF
15495 XM
(\320)SH
10 /Courier AF
16870 XM
(:line-thickness)SH
11 /Times-Roman AF
26145 XM
(= 2)SH
10 /Courier AF
8620 46401 MT
(opal:Line-4)SH
11 /Times-Roman AF
15495 XM
(\320)SH
10 /Courier AF
16870 XM
(:line-thickness)SH
11 /Times-Roman AF
26145 XM
(= 4)SH
10 /Courier AF
8620 48096 MT
(opal:Line-8)SH
11 /Times-Roman AF
15495 XM
(\320)SH
10 /Courier AF
16870 XM
(:line-thickness)SH
11 /Times-Roman AF
26145 XM
(= 8)SH
10 /Courier AF
8620 49791 MT
(opal:Dotted-Line)SH
11 /Times-Roman AF
18495 XM
(\320)SH
10 /Courier AF
19870 XM
(:line-style)SH
11 /Times-Roman AF
26745 XM
(=)SH
10 /Courier AF
27640 XM
(:dash)SH
11 /Times-Roman AF
(, and)SH
10 /Courier AF
33053 XM
(:dash-pattern)SH
11 /Times-Roman AF
41128 XM
(= '\0501 1\051)SH
10 /Courier AF
8620 51486 MT
(opal:Dashed-Line)SH
11 /Times-Roman AF
18495 XM
(\320)SH
10 /Courier AF
19870 XM
(:line-style)SH
11 /Times-Roman AF
26745 XM
(=)SH
10 /Courier AF
27640 XM
(:dash)SH
11 /Times-Roman AF
(, and)SH
10 /Courier AF
33053 XM
(:dash-pattern)SH
11 /Times-Roman AF
41128 XM
(= '\0504 4\051)SH
6120 54576 MT
(The following line-styles are)
585 W( all identical to)584 W
10 /Courier AF
29732 XM
(opal:default-line-style)SH
11 /Times-Roman AF
(, except that their)584 W
10 /Courier AF
6120 55772 MT
(:foreground-color)SH
11 /Times-Roman AF
16864 XM
(slot is set with the appropriate instance)
269 W( of)270 W
10 /Courier AF
37592 XM
(opal:color)SH
11 /Times-Roman AF
(. For)
815 W( example, the)270 W
10 /Courier AF
6120 56968 MT
(:foreground-color)SH
11 /Times-Roman AF
16595 XM
(slot of)SH
10 /Courier AF
19651 XM
(opal:red-line)SH
11 /Times-Roman AF
27726 XM
(is set to)SH
10 /Courier AF
31363 XM
(opal:red)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8520 58531 MT
(opal:Red-Line)SH
33108 XM
(opal:Purple-Line)SH
8520 59633 MT
(opal:Green-Line)SH
33108 XM
(opal:Cyan-Line)SH
8520 60735 MT
(opal:Blue-Line)SH
33108 XM
(opal:Orange-Line)SH
8520 61837 MT
(opal:Yellow-Line)SH
33108 XM
(opal:White-Line)SH
11 /Times-Roman AF
6120 63938 MT
(For each of the predefined line-styles above, you may not customize)
237 W( any of the normal parameters)236 W
6120 65134 MT
(described below.  These line-styles)
67 W( have been created with their)68 W
10 /Courier AF
35169 XM
(:constant)SH
11 /Times-Roman AF
40912 XM
(slot set to T for efficiency,)68 W
6120 66330 MT
(which prohibits the overriding of the default values.  You may)
173 W( use these line-styles as values of any)172 W
10 /Courier AF
6120 67526 MT
(:line-style)SH
11 /Times-Roman AF
13067 XM
(slot, but you may not create customized instances of them.  Instead, to create a thick red)72 W
6120 68722 MT
(line-style, for example,)
188 W( you should create your own instance of)187 W
10 /Courier AF
36032 XM
(opal:line-style)SH
11 /Times-Roman AF
45494 XM
(with appropriate)187 W
6120 69918 MT
(values for)SH
10 /Courier AF
10762 XM
(:line-thickness)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20312 XM
(:foreground-color)SH
11 /Times-Roman AF
(, etc.  See the examples at the end of this section.)SH
ES
%%Page: 165 14
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 5.2)
SH( Line-Style)
1800 W( Class)SH
51386 XM
(Page 165)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10311 XM
(:line-thickness)SH
11 /Times-Roman AF
19632 XM
(slot holds the integer)
46 W( line thickness in pixels.  There may be a subtle difference)47 W
8280 9151 MT
(between lines with thickness zero and lines with thickness one.  Zero thickness lines)
138 W( are free to use a)137 W
8280 10347 MT
(device dependent line drawing algorithm, and therefore may be less aesthetically pleasing.  They)
35 W( are also)36 W
8280 11543 MT
(probably drawn much more efficiently.  Lines with thickness one are)
139 W( drawn using the same algorithm)138 W
8280 12739 MT
(with which all the thick)
24 W( lines are drawn.  For this reason, a thickness zero line parallel to a thick line may)25 W
8280 13935 MT
(not be as aesthetically pleasing as a line with thickness one.)SH
8280 16568 MT
(For objects of the types)299 W
10 /Courier AF
20375 XM
(opal:rectangle)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29623 XM
(opal:roundtangle)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
40071 XM
(opal:circle)SH
11 /Times-Roman AF
47244 XM
(and)SH
10 /Courier AF
49405 XM
(opal:oval)SH
11 /Times-Roman AF
(,)SH
8280 17764 MT
(increasing the)13 W
10 /Courier AF
14720 XM
(:line-thickness)SH
11 /Times-Roman AF
24008 XM
(of the)13 W
10 /Courier AF
26844 XM
(:line-style)SH
11 /Times-Roman AF
33732 XM
(will not increase the)13 W
10 /Courier AF
42948 XM
(:width)SH
11 /Times-Roman AF
46837 XM
(or)SH
10 /Courier AF
48042 XM
(:height)SH
11 /Times-Roman AF
52531 XM
(of the)14 W
8280 18960 MT
(object; the object will stay the same size, but the solid black boundary of the object will extend)3 W
/Times-Italic SF
50401 XM
(inwards)SH
/Times-Roman SF
54224 XM
(to)SH
8280 20156 MT
(occupy more of the object.  On the other hand, increasing the)62 W
10 /Courier AF
36208 XM
(:line-thickness)SH
11 /Times-Roman AF
45545 XM
(of the)62 W
10 /Courier AF
48480 XM
(:line-style)SH
11 /Times-Roman AF
8280 21352 MT
(of objects of the types)107 W
10 /Courier AF
18804 XM
(opal:line)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
24861 XM
(opal:polyline)SH
11 /Times-Roman AF
33043 XM
(and)SH
10 /Courier AF
35013 XM
(opal:arrowhead)SH
11 /Times-Roman AF
43795 XM
(will increase the)
107 W( objects')106 W
10 /Courier AF
8280 22548 MT
(:width)SH
11 /Times-Roman AF
12155 XM
(and)SH
10 /Courier AF
14018 XM
(:height)SH
11 /Times-Roman AF
(; for these objects the thickness will extend)SH
/Times-Italic SF
37464 XM
(outward)SH
/Times-Roman SF
41407 XM
(on)SH
/Times-Italic SF
42782 XM
(both sides)SH
/Times-Roman SF
47488 XM
(of the line or arc.)SH
8280 25181 MT
(The)SH
10 /Courier AF
10363 XM
(:cap-style)SH
11 /Times-Roman AF
16736 XM
(slot \050which is ignored by)
98 W( the Mac\051 describes how the endpoints of line segments are)99 W
8280 26377 MT
(drawn:)SH
10 /Courier AF
13931 28528 MT
(:cap-style)SH
11 /Times-Roman AF
33972 XM
(Result)SH
36895 50 13232 29168 LH BX1
-1794 50 20630 29168 LV BX1
21029 30322 MT
(Square at the endpoint \050perpendicular to the slope of the line\051)SH
10 /Courier AF
13631 31518 MT
(:butt)SH
11 /Times-Roman AF
21029 XM
(with no projection beyond.)SH
21029 33375 MT
(Equivalent to)SH
10 /Courier AF
27201 XM
(:butt)SH
11 /Times-Roman AF
(, except that for)SH
10 /Courier AF
13631 34571 MT
(:not-last)SH
21029 XM
(:line-thickness)SH
11 /Times-Roman AF
30304 XM
(0 or 1 the final endpoint is not drawn.)SH
21029 36428 MT
(A circular arc with the diameter equal to the)SH
10 /Courier AF
40728 XM
(:line-thickness)SH
13631 37624 MT
(:round)SH
11 /Times-Roman AF
21029 XM
(centered on the endpoint.)SH
21029 39481 MT
(Square at the end, but the path continues beyond the)SH
10 /Courier AF
13631 40677 MT
(:projecting)SH
11 /Times-Roman AF
21029 XM
(endpoint for a distance equal to half of the)SH
10 /Courier AF
39936 XM
(:line-thickness.)SH
36895 13943 50 13232 41317 BX BX1
11 /Times-Roman AF
8280 44706 MT
(The)SH
10 /Courier AF
10296 XM
(:join-style)SH
11 /Times-Roman AF
17202 XM
(slot \050which is ignored by the Mac\051 describes how corners)
31 W( \050where multiple lines come)30 W
8280 45902 MT
(together\051 are drawn for)
52 W( thick lines as part of poly-line, polygon, or rectangle kinds of objects.  This does)53 W
8280 47098 MT
(not affect individual lines \050instances)
43 W( of)42 W
10 /Courier AF
25948 XM
(opal:line)SH
11 /Times-Roman AF
(\051 that are part of an aggregate, even if they happen to)42 W
8280 48294 MT
(have the same endpoints.)SH
10 /Courier AF
14059 51384 MT
(:join-style)SH
11 /Times-Roman AF
34272 XM
(Result)SH
36639 50 13360 52024 LH BX1
-1794 50 21358 52024 LV BX1
10 /Courier AF
13759 53178 MT
(:miter)SH
11 /Times-Roman AF
21757 XM
(The outer edges of the two lines extend to meet at an angle.)SH
21757 55035 MT
(A circular arc with a diameter equal to the)SH
10 /Courier AF
40600 XM
(:line-thickness)SH
13759 56231 MT
(:round)SH
11 /Times-Roman AF
21757 XM
(is drawn centered on the join point.)SH
10 /Courier AF
13759 58088 MT
(:bevel)SH
21757 XM
(:butt)SH
11 /Times-Roman AF
25032 XM
(endpoint styles, with the triangular notch filled.)SH
36639 8498 50 13360 58728 BX BX1
8280 62117 MT
(The)SH
10 /Courier AF
10459 XM
(:foreground-color)SH
11 /Times-Roman AF
21128 XM
(slot contains an object of type)194 W
10 /Courier AF
35734 XM
(opal:color)SH
11 /Times-Roman AF
42204 XM
(which specifies the color in)195 W
8280 63313 MT
(which the line will appear on a color screen.  The default value is)SH
10 /Courier AF
37265 XM
(opal:black)SH
11 /Times-Roman AF
(.)SH
8280 65611 MT
(The)SH
10 /Courier AF
10326 XM
(:background-color)SH
11 /Times-Roman AF
20862 XM
(slot contains an object of type)61 W
10 /Courier AF
34670 XM
(opal:color)SH
11 /Times-Roman AF
41005 XM
(which specifies the color of the)60 W
8280 66807 MT
("off" dashes of double-dash)
256 W( lines will appear on a color screen \050see below\051.  The default value is)257 W
10 /Courier AF
8280 68003 MT
(opal:white)SH
11 /Times-Roman AF
(. It)
1594 W( also specifies the color of the bounding box of a text object whose)659 W
10 /Courier AF
8280 69199 MT
(:fill-background-p)SH
11 /Times-Roman AF
19355 XM
(slot is set to T.)SH
ES
%%Page: 166 15
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 166)
SH( Opal)830 W
40122 XM
(Graphic Qualities)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The contents of the)196 W
10 /Courier AF
15641 XM
(:line-style)SH
11 /Times-Roman AF
22713 XM
(slot declare whether the line is solid or dashed. Valid values are)197 W
10 /Courier AF
6120 9151 MT
(:solid)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
10309 XM
(:dash)SH
11 /Times-Roman AF
13623 XM
(or)SH
10 /Courier AF
14853 XM
(:double-dash.)SH
11 /Times-Roman AF
22967 XM
(With)SH
10 /Courier AF
25481 XM
(:dash)SH
11 /Times-Roman AF
28795 XM
(only the on dashes are drawn, and nothing is drawn in)39 W
6120 10347 MT
(the off dashes.  With)2 W
10 /Courier AF
15538 XM
(:double-dash)SH
11 /Times-Roman AF
(, both on and off dashes)
2 W( are drawn; the on dashes are drawn with the)3 W
6120 11543 MT
(foreground color \050usually black\051 and the off dashes are drawn with the background color \050usually white\051.)SH
6120 14176 MT
(The)SH
10 /Courier AF
8168 XM
(:dash-pattern)SH
11 /Times-Roman AF
16306 XM
(slot holds an)
63 W( \050optionally empty\051 list of numbers corresponding to the pattern used)62 W
6120 15372 MT
(when drawing dashes.  Each pair of)
33 W( elements in the list refers to an on and an off dash.  The numbers are)34 W
6120 16568 MT
(pixel lengths for each)
11 W( dash.  Thus a)10 W
10 /Courier AF
22056 XM
(:dash-pattern)SH
11 /Times-Roman AF
30141 XM
(of \0501 1 1 1 3 1\051 is a typical dot-dot-dash line.  A list)10 W
6120 17764 MT
(with an odd)
52 W( number of elements is equivalent to the list being appended to itself.  Thus, the dash pattern)53 W
6120 18960 MT
(\0503 2 1\051 is equivalent to \0503 2 1 3 2 1\051.)SH
6120 21593 MT
(Since Mac QuickDraw does not support drawing real)
70 W( dashed lines, Garnet simulates dashed lines on the)69 W
6120 22789 MT
(Mac by drawing lines with a stippled pattern.  There is only)
262 W( one stipple pattern available for this)263 W
6120 23985 MT
(simulation, so lines whose)59 W
10 /Courier AF
18243 XM
(:line-style)SH
11 /Times-Roman AF
25177 XM
(is)SH
10 /Courier AF
26245 XM
(:dash)SH
11 /Times-Roman AF
29579 XM
(or)SH
10 /Courier AF
30829 XM
(:double-dash)SH
11 /Times-Roman AF
38363 XM
(have the same gray stipple.  The)59 W
10 /Courier AF
6120 25181 MT
(:dash-pattern)SH
11 /Times-Roman AF
14238 XM
(slot is ignored on the Mac.  You can supply your own stipple for this)
43 W( simulation in the)44 W
10 /Courier AF
6120 26377 MT
(:stipple)SH
11 /Times-Roman AF
11195 XM
(slot of the)SH
10 /Courier AF
15870 XM
(line-style)SH
11 /Times-Roman AF
22145 XM
(object \050see below\051.)SH
6120 28675 MT
(The)SH
10 /Courier AF
8140 XM
(:stipple)SH
11 /Times-Roman AF
13250 XM
(slot holds either)35 W
9 SS 
20658 XM
(NIL)SH
11 SS 
22468 XM
(or a)35 W
10 /Courier AF
24492 XM
(opal:bitmap)SH
11 /Times-Roman AF
31402 XM
(object with which the line is)
35 W( to be stippled.  The)34 W
10 /Courier AF
6120 29871 MT
(:foreground-color)SH
11 /Times-Roman AF
16693 XM
(of the line-style will be)
98 W( used for the "dark" pixels in the stipple pattern, and the)99 W
10 /Courier AF
6120 31067 MT
(:background-color)SH
11 /Times-Roman AF
16595 XM
(will be used for the "light" pixels.)SH
6120 33700 MT
(Some examples:)SH
8 /Courier AF
8040 34865 MT
(; black line of thickness 2 pixels)SH
8040 35730 MT
(opal:line-2)SH
8040 37460 MT
(; black line of thickness 30 pixels)SH
8040 38325 MT
(\050create-instance 'THICKLINE opal:line-style \050:line-thickness 30\051\051)SH
8040 40055 MT
(; gray line of thickness 5 pixels)SH
8040 40920 MT
(\050create-instance 'GRAYLINE opal:line-style)SH
9000 41785 MT
(\050:line-thickness 5\051)SH
9000 42650 MT
(\050:stipple \050create-instance NIL opal:bitmap)SH
14760 43515 MT
(\050:image \050opal:halftone-image 50\051\051\051\051\051 ; 50% gray)SH
8040 45245 MT
(; dot-dot-dash line, thickness 1)SH
8040 46110 MT
(\050create-instance 'DOTDOTDASHLINE opal:line-style)SH
9000 46975 MT
(\050:line-style :dash\051)SH
9000 47840 MT
(\050:dash-pattern '\0501 1 1 1 3 1\051\051\051)SH
14 /Times-Bold AF
6120 51658 MT
(5.3. Filling-Styles)SH
8 /Courier AF
8040 53815 MT
(\050create-instance 'opal:Filling-Style opal:graphic-quality)SH
9000 54680 MT
(\050:foreground-color opal:black\051)SH
9000 55545 MT
(\050:background-color opal:white\051)SH
9000 56410 MT
(\050:fill-style :solid\051)SH
/Times-Italic SF
20520 XM
(;; Transparent or opaque.  See section 5.3.3)SH
/Courier SF
(.)SH
9000 57275 MT
(\050:fill-rule :even-odd\051)SH
/Times-Italic SF
20520 XM
(;; For self-intersecting polygons.  See section 5.3.3)SH
/Courier SF
(.)SH
9000 58140 MT
(\050:stipple NIL\051\051)SH
/Times-Italic SF
20520 XM
(;; The pattern.  See section 5.3.1)SH
/Courier SF
(.)SH
8040 59870 MT
(\050create-instance 'opal:Default-Filling-Style opal:filling-style\051)SH
11 /Times-Roman AF
6120 62168 MT
(Before you read all the sordid details below about)
281 W( what all these slots mean, be aware that most)280 W
6120 63364 MT
(applications will)
100 W( just use the default filling styles provided.  There are two basic types of filling-styles:)101 W
6120 64560 MT
(those that rely on stipple patterns to control their shades of gray, and those that are solid colors.)SH
ES
%%Page: 167 16
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 5.3)
SH( Filling-Styles)1800 W
51386 XM
(Page 167)SH
46800 50 8280 4486 UL
11 /Times-Bold AF
8280 7937 MT
(Stippled Filling-Styles)SH
/Times-Roman SF
8280 10235 MT
(Stippled filling-styles rely on)
27 W( their patterns to control their color shades.  The)26 W
10 /Courier AF
42899 XM
(:stipple)SH
11 /Times-Roman AF
48000 XM
(slot controls the)26 W
8280 11431 MT
(mixing of the)112 W
10 /Courier AF
14819 XM
(:foreground-color)SH
11 /Times-Roman AF
25406 XM
(and)SH
10 /Courier AF
27381 XM
(:background-color)SH
11 /Times-Roman AF
37968 XM
(colors, which)
112 W( default to)113 W
10 /Courier AF
49080 XM
(opal:black)SH
11 /Times-Roman AF
8280 12627 MT
(and)SH
10 /Courier AF
10322 XM
(opal:white)SH
11 /Times-Roman AF
(, respectively.)
179 W( Thus,)
631 W( the default stippled filling-styles are shades of gray, but other)178 W
8280 13823 MT
(colors may be used as well.  Here is a list of pre-defined stippled filling-styles:)SH
10 /Courier AF
10480 15899 MT
(opal:No-Fill)SH
11 /Times-Roman AF
17955 XM
(\320 NIL)SH
10 /Courier AF
10480 17594 MT
(opal:Black-Fill)SH
11 /Times-Roman AF
19755 XM
(\320 Same as)SH
10 /Courier AF
25040 XM
(opal:default-filling-style)SH
10480 19289 MT
(opal:Gray-Fill)SH
11 /Times-Roman AF
19155 XM
(\320 Same as)SH
10 /Courier AF
24440 XM
(\050opal:halftone 50\051)SH
10480 20984 MT
(opal:Light-Gray-Fill)SH
11 /Times-Roman AF
22755 XM
(\320 Same as)SH
10 /Courier AF
28040 XM
(\050opal:halftone 25\051)SH
10480 22679 MT
(opal:Dark-Gray-Fill)SH
11 /Times-Roman AF
22155 XM
(\320 Same as)SH
10 /Courier AF
27440 XM
(\050opal:halftone 75\051)SH
10480 24374 MT
(opal:Diamond-Fill)SH
11 /Times-Roman AF
21258 XM
(\320 A special pattern, defined)
303 W( with)304 W
10 /Courier AF
38259 XM
(opal:make-filling-style)SH
11 /Times-Roman AF
(. See)883 W
13780 25570 MT
(section 5.3.2.)SH
/Times-Bold SF
8280 29158 MT
(Solid Filling-Styles)SH
/Times-Roman SF
8280 31456 MT
(The second set of filling-styles are solid colors, and do)
80 W( not rely on stipples.  For these filling-styles, the)79 W
10 /Courier AF
8280 32652 MT
(:foreground-color)SH
11 /Times-Roman AF
18922 XM
(slot of the object is set with the corresponding instance of)167 W
10 /Courier AF
46391 XM
(opal:color)SH
11 /Times-Roman AF
(. For)611 W
8280 33848 MT
(example, the)134 W
10 /Courier AF
14443 XM
(:foreground-color)SH
11 /Times-Roman AF
25052 XM
(slot of)134 W
10 /Courier AF
28376 XM
(opal:red-fill)SH
11 /Times-Roman AF
36585 XM
(is set with)134 W
10 /Courier AF
41724 XM
(opal:red)SH
11 /Times-Roman AF
(. Otherwise,)
543 W( these)133 W
8280 35044 MT
(filling-styles are all identical to)SH
10 /Courier AF
22303 XM
(opal:default-filling-style)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
10680 37105 MT
(opal:White-Fill)SH
35268 XM
(opal:Yellow-Fill)SH
10680 38207 MT
(opal:Red-Fill)SH
35268 XM
(opal:Purple-Fill)SH
10680 39309 MT
(opal:Green-Fill)SH
35268 XM
(opal:Cyan-Fill)SH
10680 40411 MT
(opal:Blue-Fill)SH
35268 XM
(opal:Orange-Fill)SH
10680 42438 MT
(opal:Motif-Gray-Fill)SH
35268 XM
(opal:Motif-Light-Gray-Fill)SH
10680 43540 MT
(opal:Motif-Blue-Fill)SH
35268 XM
(opal:Motif-Light-Blue-Fill)SH
10680 44642 MT
(opal:Motif-Green-Fill)SH
35268 XM
(opal:Motif-Light-Green-Fill)SH
10680 45744 MT
(opal:Motif-Orange-Fill)SH
35268 XM
(opal:Motif-Light-Orange-Fill)SH
12 /Times-Bold AF
8280 49428 MT
(5.3.1. Creating Your Own Stippled Filling-Styles)SH
11 /Times-Roman AF
8280 50624 MT
(The)SH
10 /Courier AF
10384 XM
(:stipple)SH
11 /Times-Roman AF
15578 XM
(slot of a)119 W
10 /Courier AF
19754 XM
(filling-style)SH
11 /Times-Roman AF
27948 XM
(object is used to specify patterns)
119 W( for mixing the foreground)120 W
8280 51820 MT
(and background colors.)
60 W( The)393 W
10 /Courier AF
21405 XM
(:stipple)SH
11 /Times-Roman AF
26539 XM
(slot is either NIL or an)59 W
10 /Courier AF
37157 XM
(opal:bitmap)SH
11 /Times-Roman AF
44091 XM
(object, whose image can)59 W
8280 53016 MT
(be generated from the)97 W
10 /Courier AF
18562 XM
(/usr/misc/.X11/bin/bitmap)SH
11 /Times-Roman AF
33935 XM
(Unix program \050see section 6.9\051.  Alternatively,)98 W
8280 54212 MT
(there is a Garnet function supplied for generating halftone bitmaps to get various gray shades.)SH
8 /Courier AF
10200 56364 MT
(opal:Halftone)SH
/Times-Italic SF
16920 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 58662 MT
(The)SH
10 /Courier AF
10330 XM
(halftone)SH
11 /Times-Roman AF
15470 XM
(function returns an)65 W
10 /Courier AF
24248 XM
(opal:filling-style)SH
11 /Times-Roman AF
35388 XM
(object. The)403 W
/Times-Italic SF
41078 XM
(percentage)SH
/Times-Roman SF
46303 XM
(argument is used to)64 W
8280 59858 MT
(specify the shade of the halftone \0500 is white and 100 is black\051.  Its halftone)
65 W( is as close as possible to the)66 W
/Times-Italic SF
8280 61054 MT
(percentage)SH
/Times-Roman SF
13670 XM
(halftone value as can be generated.  Since a range of)228 W
/Times-Italic SF
39508 XM
(percentage)SH
/Times-Roman SF
44897 XM
(values map onto each)228 W
8280 62250 MT
(halftone shade, two additional functions are)
36 W( provided to get halftones that are guaranteed to be one shade)37 W
8280 63446 MT
(darker or one shade lighter than a specified value.)SH
8 /Courier AF
10200 65598 MT
(opal:Halftone-Darker)SH
/Times-Italic SF
20280 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 67328 MT
(opal:Halftone-Lighter)SH
/Times-Italic SF
20760 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 69626 MT
(The)SH
10 /Courier AF
10417 XM
(halftone-darker)SH
11 /Times-Roman AF
19844 XM
(and)SH
10 /Courier AF
21858 XM
(halftone-lighter)SH
11 /Times-Roman AF
31884 XM
(functions return a stippled)151 W
10 /Courier AF
44280 XM
(opal:filling-style)SH
11 /Times-Roman AF
8280 70822 MT
(object that is guaranteed to be exactly one shade different than the halftone)
172 W( object with the specified)173 W
ES
%%Page: 168 17
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 168)
SH( Opal)830 W
40122 XM
(Graphic Qualities)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
11 /Times-Italic AF
6120 7955 MT
(percentage)SH
/Times-Roman SF
(. With)
608 W( these functions you are guaranteed to get a different darker \050or lighter\051)607 W
10 /Courier AF
6120 9151 MT
(filling-style)SH
11 /Times-Roman AF
14195 XM
(object. Currently,)
275 W( there are 17 different halftone shades.)SH
6120 11784 MT
(Examples of creating rectangles that are: black, 25% gray, and 33% gray are:)SH
8 /Courier AF
8040 12949 MT
(\050create-instance 'BLACKRECT opal:rectangle)SH
9480 13814 MT
(\050:left 10\051\050:top 20\051\050:width 50\051\050:height 70\051)SH
9480 14679 MT
(\050:filling-style opal:black-fill\051\051)SH
8040 15544 MT
(\050create-instance 'LIGHTGRAYRECT opal:rectangle)SH
9480 16409 MT
(\050:left 10\051\050:top 20\051\050:width 50\051\050:height 70\051)SH
9480 17274 MT
(\050:filling-style opal:light-gray-fill\051\051)SH
8040 18139 MT
(\050create-instance 'ANOTHERGRAYRECT opal:rectangle)SH
9480 19004 MT
(\050:left 10\051\050:top 20\051\050:width 50\051\050:height 70\051)SH
9480 19869 MT
(\050:filling-style \050opal:halftone 33\051\051\051)SH
12 /Times-Bold AF
6120 23553 MT
(5.3.2. Fancy Stipple Patterns)SH
11 /Times-Roman AF
6120 24749 MT
(Another way to)
932 W( create your own customized filling styles is to use the function)933 W
10 /Courier AF
6120 25945 MT
(opal:make-filling-style)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
8040 28097 MT
(opal:Make-Filling-Style)SH
/Times-Italic SF
19560 XM
(description)SH
/Courier SF
23638 XM
(&key)SH
/Times-Italic SF
26038 XM
(from-file-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
19560 28962 MT
(\050)SH
/Times-Italic SF
(foreground-color)SH
/Courier SF
26073 XM
(opal:black\051 \050)SH
/Times-Italic SF
(background-color)SH
/Courier SF
38568 XM
(opal:white\051)SH
11 /Times-Roman AF
6120 31260 MT
(The)SH
/Times-Italic SF
8144 XM
(description)SH
/Times-Roman SF
13408 XM
(can be)
39 W( a list of lists which represent the bit-mask of the filling style, or may be the name)38 W
6120 32456 MT
(of a file that contains a bitmap.  The)47 W
/Times-Italic SF
22733 XM
(from-file-p)SH
/Times-Roman SF
27821 XM
(parameter should)
47 W( be T if a filename is being supplied as)48 W
6120 33652 MT
(the)SH
/Times-Italic SF
7739 XM
(description)SH
/Times-Roman SF
(.)SH
6120 35950 MT
(As an example, the filling-style)SH
10 /Courier AF
20234 XM
(opal:diamond-fill)SH
11 /Times-Roman AF
30709 XM
(is defined by:)SH
8 /Courier AF
8040 37115 MT
(\050setq opal:diamond-fill)SH
10920 37980 MT
(\050opal:make-filling-style)SH
11400 38845 MT
('\050\0501 1 1 1 1 1 1 1 1\051)SH
12360 39710 MT
(\0501 1 1 1 0 1 1 1 1\051)SH
12360 40575 MT
(\0501 1 1 0 0 0 1 1 1\051)SH
12360 41440 MT
(\0501 1 0 0 0 0 0 1 1\051)SH
12360 42305 MT
(\0501 0 0 0 0 0 0 0 1\051)SH
12360 43170 MT
(\0501 1 0 0 0 0 0 1 1\051)SH
12360 44035 MT
(\0501 1 1 0 0 0 1 1 1\051)SH
12360 44900 MT
(\0501 1 1 1 0 1 1 1 1\051)SH
12360 45765 MT
(\0501 1 1 1 1 1 1 1 1\051\051\051\051)SH
12 /Times-Bold AF
6120 49449 MT
(5.3.3. Other Slots Affecting Stipple Patterns)SH
11 /Times-Roman AF
6120 50645 MT
(The)SH
10 /Courier AF
8225 XM
(:fill-style)SH
11 /Times-Roman AF
15220 XM
(slot specifies the colors used for drawing)
120 W( the "off" pixels in the stippled pattern of)119 W
6120 51841 MT
(filling-styles. The)
275 W( "on" pixels are always drawn with the)SH
10 /Courier AF
31487 XM
(:foreground-color)SH
11 /Times-Roman AF
41962 XM
(of the filling-style.)SH
10 /Courier AF
18765 53992 MT
(:fill-style)SH
11 /Times-Roman AF
28863 XM
(Color used for "off" pixels)SH
25308 50 16866 54632 LH BX1
-1794 50 27264 54632 LV BX1
10 /Courier AF
17265 55786 MT
(:solid)SH
11 /Times-Roman AF
27663 XM
(Color in)SH
10 /Courier AF
31575 XM
(:foreground-color)SH
17265 57643 MT
(:stippled)SH
11 /Times-Roman AF
27663 XM
(Transparent)SH
10 /Courier AF
17265 59500 MT
(:opaque-stippled)SH
11 /Times-Roman AF
27663 XM
(Color in)SH
10 /Courier AF
31575 XM
(:background-color)SH
25308 7302 50 16866 60140 BX BX1
11 /Times-Roman AF
6120 62438 MT
(The)SH
10 /Courier AF
8282 XM
(:fill-rule)SH
11 /Times-Roman AF
14734 XM
(is either)177 W
10 /Courier AF
18876 XM
(:even-odd)SH
11 /Times-Roman AF
24728 XM
(or)SH
10 /Courier AF
26096 XM
(:winding)SH
11 /Times-Roman AF
(. These)
629 W( are used to control the)
177 W( filling for self-)178 W
6120 63634 MT
(intersecting polygons.)
24 W( For)
322 W( a better description of these see any reasonable graphics textbook, or the X/11)23 W
6120 64830 MT
(Protocol Manual.)SH
ES
%%Page: 169 18
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 5.4)
SH( Fast)
1800 W( Redraw Objects)SH
51386 XM
(Page 169)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(5.4. Fast Redraw Objects)SH
11 /Times-Roman AF
8280 9334 MT
(When an interface contains one or more objects that must be redrawn)
6 W( frequently, the designer may choose)7 W
8280 10530 MT
(to define these objects as fast)
30 W( redraw objects.  Such objects could be feedback rectangles that indicate the)29 W
8280 11726 MT
(current selection, or text strings which are updated)
81 W( after any character is typed.  Fast redraw objects are)82 W
8280 12922 MT
(redrawn with an algorithm that is much faster)
101 W( than the standard update procedure for refreshing Garnet)100 W
8280 14118 MT
(windows.)SH
8280 16416 MT
(However, because of certain requirements)
74 W( that the algorithm makes on fast redraw objects, most objects)75 W
8280 17612 MT
(in an)
43 W( interface are not candidates for this procedure.  Primarily, fast redraw objects cannot be covered by)42 W
8280 18808 MT
(other objects, and they must be either drawn)
117 W( with XOR, or else are guaranteed to be over only a solid)118 W
8280 20004 MT
(background. Additionally,)
2025 W( aggregates cannot be fast-redraw objects; only instances of)874 W
10 /Courier AF
8280 21200 MT
(opal:graphical-object)SH
11 /Times-Roman AF
21155 XM
(\050those with their own)SH
10 /Courier AF
30809 XM
(:draw)SH
11 /Times-Roman AF
34084 XM
(methods\051 can be fast-redraw objects.)SH
8280 23498 MT
(To define an object as a)
27 W( fast redraw object, the)28 W
10 /Courier AF
29352 XM
(:fast-redraw-p)SH
11 /Times-Roman AF
38055 XM
(slot of the object must be set to one of)28 W
8280 24694 MT
(three allowed values --)74 W
10 /Courier AF
18898 XM
(:redraw)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
23722 XM
(:rectangle)SH
11 /Times-Roman AF
(, or T. These values determine how the object)
74 W( should be)73 W
8280 25890 MT
(erased from the window)
70 W( \050so that it can be redrawn at its new position or with its new graphic qualities\051.)71 W
8280 27086 MT
(The following paragraphs describe the functions and requirements of each of these values.)SH
10 /Courier AF
8280 29037 MT
(:redraw)SH
11 /Times-Roman AF
12886 XM
(-- The object will be erased by drawing it a second time with the line style and filling style)131 W
11880 30233 MT
(defined in)
461 W( the slots)462 W
10 /Courier AF
22343 XM
(:fast-redraw-line-style)SH
11 /Times-Roman AF
36880 XM
(and)SH
10 /Courier AF
39205 XM
(:fast-redraw-filling-style)SH
11 /Times-Roman AF
(.)SH
11880 31429 MT
(These styles should be defined)
209 W( to have the same color as the background behind the object.)208 W
11880 32625 MT
(Additionally, these styles should have)
203 W( the same structure as the line and filling styles of the)204 W
11880 33821 MT
(object. For)
443 W( example, if the object has a line thickness of 8, then the fast redraw line)
84 W( style must)83 W
11880 35017 MT
(have a thickness of 8 also.  This value may be used for objects on color screens where)
57 W( there is a)58 W
11880 36213 MT
(uniform color behind the object.)SH
10 /Courier AF
8280 38846 MT
(:rectangle)SH
11 /Times-Roman AF
14619 XM
(-- The object will be erased by drawing a rectangle over it with the filling style defined in)64 W
11880 40042 MT
(the slot)73 W
10 /Courier AF
15510 XM
(:fast-redraw-filling-style)SH
11 /Times-Roman AF
(. This)
421 W( filling style should have the same color as the)74 W
11880 41238 MT
(background behind the object.)
106 W( Like)486 W
10 /Courier AF
28673 XM
(:redraw)SH
11 /Times-Roman AF
(, this value assumes that there is a uniform color)105 W
11880 42434 MT
(behind the object.  However,)198 W
10 /Courier AF
25851 XM
(:rectangle)SH
11 /Times-Roman AF
32324 XM
(is particularly useful for complicated)
198 W( objects like)199 W
11880 43630 MT
(bitmaps and text, since drawing a rectangle takes less time than drawing these intricate objects.)SH
10 /Courier AF
8280 46263 MT
(T)SH
11 /Times-Roman AF
9165 XM
(-- In)
10 W( this case, the object must additionally have its)9 W
10 /Courier AF
31955 XM
(:draw-function)SH
11 /Times-Roman AF
40639 XM
(slot set to)9 W
10 /Courier AF
45159 XM
(:xor)SH
11 /Times-Roman AF
(. This)
293 W( will cause)9 W
11880 47459 MT
(the object to be XOR'ed on top of its background.  To erase the object, the object is)
79 W( just drawn)80 W
11880 48655 MT
(again, which)
233 W( will cause the two images to cancel out.  This value is most useful when the)232 W
11880 49851 MT
(background is white and the)
88 W( objects are black \050e.g., on a monochrome screen\051, and can be used)89 W
11880 51047 MT
(with a feedback object that shows selection by inverse video.)SH
ES
%%Page: 170 19
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 170)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(6. Specific Graphical Objects)SH
11 /Times-Roman AF
6120 10524 MT
(This chapter describes a number)
61 W( of specific subclasses of the)60 W
10 /Courier AF
33784 XM
(opal:graphical-object)SH
11 /Times-Roman AF
46719 XM
(prototype that)60 W
6120 11720 MT
(implement all of the graphic primitives that can be displayed, such as rectangles, lines, text strings, etc.)SH
6120 14018 MT
(For all graphical)
114 W( objects, coordinates are specified as fixnum quantities from the top, left corner of the)115 W
6120 15214 MT
(window. All)
275 W( coordinates and distances are specified in pixels.)SH
6120 17512 MT
(Most of these objects can be)
11 W( filled with a filling style, have a border with a line-style or both.  The default)10 W
6120 18708 MT
(for closed objects)
610 W( is that)611 W
10 /Courier AF
20140 XM
(:filling-style)SH
11 /Times-Roman AF
29426 XM
(is NIL \050not filled\051 and the)611 W
10 /Courier AF
44700 XM
(:line-style)SH
11 /Times-Roman AF
52186 XM
(is)SH
10 /Courier AF
6120 19904 MT
(opal:default-line-style)SH
11 /Times-Roman AF
(.)SH
6120 22202 MT
(Note that only the slots that are not inherited from)
36 W( view objects and graphic objects are shown below.  In)35 W
6120 23398 MT
(addition, of course, all of the objects)
133 W( shown below have the following slots \050described in the previous)134 W
6120 24594 MT
(sections\051:)SH
8 /Courier AF
9000 25759 MT
(\050:left 0\051)SH
9000 26624 MT
(\050:top 0\051)SH
9000 27489 MT
(\050:width 0\051)SH
9000 28354 MT
(\050:height 0\051)SH
9000 29219 MT
(\050:visible \050o-formula ...\051\051)SH
9000 30084 MT
(\050:line-style opal:default-line-style\051)SH
9000 30949 MT
(\050:filling-style NIL\051)SH
9000 31814 MT
(\050:draw-function :copy\051)SH
9000 32679 MT
(\050:select-outline-only NIL\051)SH
9000 33544 MT
(\050:hit-threshold 0\051)SH
11 /Times-Roman AF
6120 35842 MT
(Most of the)
3 W( prototypes in this section have a list of slots in their)2 W
10 /Courier AF
34444 XM
(:maybe-constant)SH
11 /Times-Roman AF
43721 XM
(slot, which generally)2 W
6120 37038 MT
(correspond to the customizable slots of)
130 W( the object.  This is part of the)131 W
/Times-Italic SF
38590 XM
(constant slots)131 W
/Times-Roman SF
45148 XM
(feature of Garnet)131 W
6120 38234 MT
(which allows advanced users to optimize their Garnet objects by reusing storage space.  Consult the)
67 W( KR)66 W
6120 39430 MT
(manual for documentation about how to take advantage of constant slots.)SH
6120 41728 MT
(HINT: If you want a black-filled object, set)
88 W( the line-style to be)89 W
9 SS 
35008 XM
(NIL)SH
11 SS 
36872 XM
(or else the object will take twice as)89 W
6120 42924 MT
(long to draw \050since it draws both the border and the inside\051.)SH
6120 45222 MT
(Figure 6-1 shows examples of the basic object types in Opal.)SH
46800 50 6120 47373 UL
75 100 0 6607 85445 GB 
%%BeginDocument: opal/allobjspic.PS
%!PS-Adobe-2.0
%%Title: Opal 15
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 4, 1992, 1:21 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 295 539 497
%%%Pages: 1
%%EndComments


/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
        /color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
          color-p {red green blue setrgbcolor} if
          transparent-p
          % The case where the background is not drawn
          { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
          % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/SetUserScreenDict 22 dict def
SetUserScreenDict begin
  /tempctm matrix def
  /temprot matrix def
  /tempscale matrix def
  /ConcatProcs
   {/proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add
      array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
   } def
  /resmatrix matrix def
  /findresolution
   { 72 0 resmatrix defaultmatrix dtransform
     /yres exch def /xres exch def
     xres dup mul yres dup mul add sqrt
   } def
end

/SetUserScreen
  { SetUserScreenDict begin
    /spotfunction exch def
    /cellsize exch def
    /m tempctm currentmatrix def
    /rm 0 temprot rotate def
    /sm cellsize dup tempscale scale def
    sm rm m m concatmatrix m concatmatrix pop
    1 0 m dtransform /y1 exch def /x1 exch def
    /veclength x1 dup mul y1 dup mul add sqrt def
    /frequency findresolution veclength div def
    /newscreenangle y1 x1 atan def
    m 2 get m 1 get mul m 0 get m 3 get mul sub
     0 gt
     { { neg } /spotfunction load ConcatProcs
         /spotfunction exch def
     } if
    frequency newscreenangle /spotfunction load setscreen
  end
} def

/SetPatternDict 18 dict def
SetPatternDict begin
  /bitison
   { /ybit exch def /xbit exch def
     /bytevalue bstring ybit bwidth mul xbit 8 idiv
       add get def
     /mask 1 7 xbit 8 mod sub bitshift def
     bytevalue mask and 0 ne
    } def
end

/BitPatternSpotFunction
  { SetPatternDict begin
     /y exch def /x exch def
     /xindex x 1 add 2 div bpside mul cvi def
     /yindex y 1 add 2 div bpside mul cvi def
     xindex yindex bitison
      { /onbits onbits 1 add def 1 }
      { /offbits offbits 1 add def 0 }
      ifelse
    end
  } def

/SetPattern
  { SetPatternDict begin
    /cellsz exch def
    /bwidth exch def
    /bpside exch def
    /bstring exch def
    /onbits 0 def /offbits 0 def
    cellsz /BitPatternSpotFunction load
     SetUserScreen
    {} settransfer
    offbits offbits onbits add div setgray
    end
  } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-2
<ffff80ffffff fffc7f1fffff fff3ffe7ffff ffef80fbffff ffde7f3dffff ffb9ffceffff
ff7780f77fff feee7f3bbfff feddffddbfff ffffffffe1ff fffffffff3ff fffffffff3ff
030388ac007f 99cf34a9933f 99cf3ca9933f 99cf3cac133f 99cf3c0f933f 830e015c247f
9fff3fffffff 9fff3fffffff 1fcfffffffff ffffffffffff feddffddbfff feee7f3bbfff
ff7780f77fff ffb9ffceffff ffde7f3dffff ffef80fbffff fff3ffe7ffff fffc7f1fffff
ffff80ffffff>
def

/image-1
<ff80 f780 e380 c180 8080 c180 e380 f780 ff80>
def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
0 -223 translate
gsave
0 648 467 202 ClipToRectangle
0 0 translate
gsave
0 0 0 0 false 0 0 [] 1 10 598 50 638 DrawLine
60 638 60 30 0 0 0 0 false 0 0 [] 1 0.75 0 0 0 false DrawRectangle
image-1 9 2 15.36
141 637 78 58 12 0 0 0 0 false 0 0 [] 2 -2 0 0 0 false DrawRoundtangle
250 618 603 200 20 0 false 0 0 0 false 0 0 0 false (Hello World) 35 /Courier-BoldOblique DrawText
31.5 566.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
51.5 546.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
51.5 526.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
31.5 506.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
11.5 526.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
11.5 546.5 1.5 1.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
90 568 110 548 110 528 90 508 70 528 70 548 90 568 14 0 0 0 0 false 0 0 [] -1 0.88 0 0 0 false DrawPolyline
130 528 150 538 146 516 6 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawPolyline
210.0 538.0 39.5 29.5 0 360 0 0 0 0 false 0 0 [1 1] 1 -1 0 0 0 false DrawEllipse
295.0 543.0 25.0 25.0 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
350 568 557 103 14 0 false 0 0 0 false 0 0 0 false (Garnet supports) 12 /Courier DrawText
367 554 543 69 14 0 false 0 0 0 false 0 0 0 false (multi-line) 12 /Courier DrawText
388 540 529 27 14 0 false 0 0 0 false 0 0 0 false (text) 12 /Courier DrawText
375 526 515 52 14 0 false 0 0 0 false 0 0 0 false (strings!) 12 /Courier DrawText
60.0 463.0 50.0 25.0 0 180 0 0 0 0 false 0 0 [4 4] 1 -1 0 0 0 false DrawArc
130 488 42 31 image-2 false 0 0 0 false DrawBitmap
grestore

grestore

0 648 467 202 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-BoldOblique 
%%BoundingBox: 72 295 539 497

%%EndDocument
 GE /Times-Bold SF
6120 65072 MT
(Figure 6-1:)SH
/Times-Roman SF
11893 XM
(Examples of the types of objects supported)
123 W( by Opal: lines, rectangles, rounded rectangles,)122 W
11893 66268 MT
(text, multipoints, polylines, arrowheads, ovals, circles, arcs, and)
109 W( bitmaps, with a variety of)110 W
11893 67464 MT
(line and filling styles.)SH
46800 50 6120 69416 UL
ES
%%Page: 171 20
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.3)
SH( Polyline)
1800 W( and Multipoint)SH
51386 XM
(Page 171)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(6.1. Line)SH
8 /Courier AF
10200 9502 MT
(\050create-instance 'opal:Line opal:graphical-object)SH
11160 10367 MT
(\050:maybe-constant '\050:x1 :y1 :x2 :y2 :line-style :visible\051\051)SH
11160 11232 MT
(\050:x1 0\051)SH
11160 12097 MT
(\050:y1 0\051)SH
11160 12962 MT
(\050:x2 0\051)SH
11160 13827 MT
(\050:y2 0\051\051)SH
11 /Times-Roman AF
8280 16125 MT
(The)SH
10 /Courier AF
10434 XM
(opal:line)SH
11 /Times-Roman AF
16278 XM
(class describes an object that displays a line from \050)169 W
10 /Courier AF
(:x1)SH
/Times-Roman SF
(,)SH
/Courier SF
42947 XM
(:y1)SH
11 /Times-Roman AF
(\051 to \050)169 W
10 /Courier AF
(:x2)SH
/Times-Roman SF
(,)SH
/Courier SF
50042 XM
(:y2)SH
11 /Times-Roman AF
(\051. The)612 W
10 /Courier AF
8280 17321 MT
(:left)SH
/Times-Roman SF
(,)SH
/Courier SF
12198 XM
(:top)SH
/Times-Roman SF
(,)SH
/Courier SF
15517 XM
(:width)SH
/Times-Roman SF
(, and)69 W
/Courier SF
21799 XM
(:height)SH
11 /Times-Roman AF
26343 XM
(reflect the correct bounding box for the line, but cannot be used)69 W
8280 18517 MT
(to change the line \050i.e.,)134 W
/Times-Bold SF
19274 XM
(do not set the)134 W
10 /Courier AF
26348 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
30032 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33116 XM
(:width)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
37400 XM
(or)SH
10 /Courier AF
38847 XM
(:height)SH
11 /Times-Bold AF
43456 XM
(slots)SH
/Times-Roman SF
(\051. Lines)
543 W( ignore)
134 W( their)133 W
10 /Courier AF
8280 19713 MT
(:filling-style)SH
11 /Times-Roman AF
16955 XM
(slot.)SH
14 /Times-Bold AF
8280 23531 MT
(6.2. Rectangles)SH
8 /Courier AF
10200 24895 MT
(\050create-instance 'opal:Rectangle opal:graphical-object)SH
11160 25760 MT
(\050:maybe-constant '\050:left :top :width :height :line-style :filling-style)SH
20280 26625 MT
(:draw-function :visible\051\051\051)SH
11 /Times-Roman AF
8280 28923 MT
(The)SH
10 /Courier AF
10297 XM
(opal:rectangle)SH
11 /Times-Roman AF
19004 XM
(class describes an object that)
32 W( displays a rectangle with top, left corner at \050)33 W
10 /Courier AF
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 30119 MT
(:top)SH
11 /Times-Roman AF
(\051, width of)SH
10 /Courier AF
15568 XM
(:width)SH
11 /Times-Roman AF
(, and height of)SH
10 /Courier AF
25797 XM
(:height)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 33803 MT
(6.2.1. Rounded-corner Rectangles)SH
8 /Courier AF
10200 35167 MT
(\050create-instance 'opal:Roundtangle opal:rectangle)SH
11160 36032 MT
(\050:maybe-constant '\050:left :top :width :height :radius :line-style)SH
20280 36897 MT
(:filling-style :draw-function :visible\051\051)SH
11160 37762 MT
(\050:radius 5\051\051)SH
11 /Times-Roman AF
8280 40060 MT
(Instances of the)25 W
10 /Courier AF
15532 XM
(opal:roundtangle)SH
11 /Times-Roman AF
25432 XM
(class are rectangles with rounded)
25 W( corners.  Objects of this class are)24 W
8280 41256 MT
(similar to rectangles, but contain an additional slot,)256 W
10 /Courier AF
33121 XM
(:radius)SH
11 /Times-Roman AF
(, which specifies the curvature of the)257 W
8280 42452 MT
(corners. The)
297 W( values for this slot can be either)11 W
10 /Courier AF
28701 XM
(:small)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
32862 XM
(:medium)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37623 XM
(:large)SH
11 /Times-Roman AF
(, or a numeric)
11 W( value interpreted)10 W
8280 43648 MT
(as the number of pixels to be used.  The)
59 W( keyword values do not correspond directly to pixels values, but)60 W
8280 44844 MT
(rather compute a pixel value as a fraction of the length of the shortest side of the bounding box.)SH
10 /Courier AF
26415 46995 MT
(:radius)SH
11 /Times-Roman AF
32345 XM
(Fraction)SH
11327 50 26016 47635 LH BX1
-1794 50 31014 47635 LV BX1
10 /Courier AF
26415 48789 MT
(:small)SH
11 /Times-Roman AF
31413 XM
(1/5)SH
10 /Courier AF
26415 50646 MT
(:medium)SH
11 /Times-Roman AF
31413 XM
(1/4)SH
10 /Courier AF
26415 52503 MT
(:large)SH
11 /Times-Roman AF
31413 XM
(1/3)SH
11327 7302 50 26016 53143 BX BX1
8280 55441 MT
(Figure 6-2 demonstrates the meanings of the slots of roundtangles.  If the value of)140 W
10 /Courier AF
46732 XM
(:radius)SH
11 /Times-Roman AF
51347 XM
(is 0, the)140 W
8280 56637 MT
(roundtangle looks just like a)
119 W( rectangle.  If the value of)120 W
10 /Courier AF
33666 XM
(:radius)SH
11 /Times-Roman AF
38261 XM
(is more than half of the minimum of)120 W
10 /Courier AF
8280 57833 MT
(:width)SH
11 /Times-Roman AF
12287 XM
(or)SH
10 /Courier AF
13610 XM
(:height)SH
11 /Times-Roman AF
(, the roundtangle is drawn as if the value of)132 W
10 /Courier AF
38464 XM
(:radius)SH
11 /Times-Roman AF
43070 XM
(were half the minimum of)131 W
10 /Courier AF
8280 59029 MT
(:width)SH
11 /Times-Roman AF
12155 XM
(and)SH
10 /Courier AF
14018 XM
(:height)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 62847 MT
(6.3. Polyline and Multipoint)SH
8 /Courier AF
10200 64211 MT
(\050create-instance 'opal:MultiPoint opal:graphical-object)SH
11160 65076 MT
(\050:maybe-constant '\050:point-list :line-style :filling-style :draw-function :visible\051\051)SH
11160 65941 MT
(\050:point-list NIL\051\051)SH
10200 67671 MT
(\050create-instance 'opal:PolyLine opal:multipoint)SH
11160 68536 MT
(\050:hit-full-interior-p NIL\051\051)SH
11 /Times-Roman AF
8280 70834 MT
(The)SH
10 /Courier AF
10533 XM
(opal:polyline)SH
11 /Times-Roman AF
18877 XM
(prototype provides for multi-segmented lines.  Polygons can be specified by)269 W
ES
%%Page: 172 21
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 172)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
75 100 0 6570 54848 GB 
%%BeginDocument: opal/roundtangle.PS
%!PS-Adobe-2.0
%%Title: Opal 7
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 3, 1992, 12:46 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 106 196 506 596
%%%Pages: 1
%%EndComments


/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
34 -124 translate
gsave
0 648 400 400 ClipToRectangle
0 0 translate
gsave
58 590 185 185 50 0 0 0 0 false 0 0 [] 15 0.75 0 0 0 false DrawRoundtangle
0 0 0 0 false 0 0 [4 4] 1 50 309 50 498 DrawLine
0 0 0 0 false 0 0 [4 4] 1 339 598 150 598 DrawLine
0 0 0 0 false 0 0 [4 4] 1 339 399 150 399 DrawLine
0 0 0 0 false 0 0 [4 4] 1 249 309 249 498 DrawLine
0 0 0 0 false 0 0 [4 4] 1 339 450 198 450 DrawLine
0 0 0 0 false 0 0 [] 1 279 399 279 450 DrawLine
284 409 279 399 274 409 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
274 440 279 450 284 440 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
282 427 418 39 11 0 false 0 0 0 false 0 0 0 false (:radius) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 249 329 50 329 DrawLine
239 334 249 329 239 324 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
60 324 50 329 60 334 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
147 326 317 34 11 0 false 0 0 0 false 0 0 0 false (:width) 10 /Courier DrawText
0 0 0 0 false 0 0 [] 1 319 399 319 598 DrawLine
324 409 319 399 314 409 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
314 588 319 598 324 588 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
322 498 489 40 11 0 false 0 0 0 false 0 0 0 false (:height) 10 /Courier DrawText
36 309 300 28 11 0 false 0 0 0 false 0 0 0 false (:left) 10 /Courier DrawText
339 603 594 29 11 0 false 0 0 0 false 0 0 0 false ( :top) 10 /Courier DrawText
198.0 450.0 49.0 49.0 45 225 0 0 0 0 false 0 0 [4 4] 1 -1 0 0 0 false DrawArc
198.0 450.0 49.0 49.0 225 405 0 1.00 1.00 1.00 true 0 0 [4 4] 1 -1 0 0 0 false DrawArc
grestore

grestore

0 648 400 400 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 106 196 506 596

%%EndDocument
 GE /Times-Bold SF
6120 41900 MT
(Figure 6-2:)SH
/Times-Roman SF
11893 XM
(The parameters of a roundtangle.)SH
46800 50 6120 43852 UL
6120 45603 MT
(creating a polyline)
48 W( with the same first and last points.  The point list is a flat list of values \050)47 W
/Times-Italic SF
(x)SH
48315 XM
(y)SH
49575 XM
(x)SH
50835 XM
(y)SH
52095 XM
(...)SH
9 SS 
47543 45963 MT
(1)SH
48803 XM
(1)SH
50063 XM
(2)SH
51323 XM
(2)SH
11 SS 
6120 46903 MT
(x)SH
7339 XM
(y)SH
/Times-Roman SF
8277 XM
(\051. If)
289 W( a polyline object has a filling-style, and if the last point is not the same as the first point, then an)7 W
9 /Times-Italic AF
6608 47263 MT
(n)SH
7827 XM
(n)SH
11 /Times-Roman AF
6120 48203 MT
(invisible line is drawn between them, and the resulting polygon is filled.)SH
6120 50501 MT
(The)SH
10 /Courier AF
8233 XM
(:point-in-gob)SH
11 /Times-Roman AF
16436 XM
(method for the)128 W
10 /Courier AF
23571 XM
(opal:polyline)SH
11 /Times-Roman AF
31774 XM
(actually checks whether the point)
128 W( is inside the)127 W
6120 51697 MT
(polygon, rather than just inside the polygon's bounding)
81 W( box.  If the)82 W
10 /Courier AF
36855 XM
(:hit-full-interior-p)SH
11 /Times-Roman AF
49212 XM
(slot of a)82 W
10 /Courier AF
6120 52893 MT
(polyline)SH
11 /Times-Roman AF
11464 XM
(is NIL \050the default\051, then the)269 W
10 /Courier AF
25937 XM
(:point-in-gob)SH
11 /Times-Roman AF
34281 XM
(method will use the)
269 W( "even-odd" rule to)268 W
6120 54089 MT
(determine if a point is inside it.)
67 W( If)
410 W( the value of)68 W
10 /Courier AF
27672 XM
(:hit-full-interior-p)SH
11 /Times-Roman AF
40015 XM
(is T, the method will use the)68 W
6120 55285 MT
("winding" rule.  The slot)SH
10 /Courier AF
17284 XM
(:hit-threshold)SH
11 /Times-Roman AF
25959 XM
(has its usual functionality.)SH
6120 57583 MT
(The)SH
10 /Courier AF
8217 XM
(:left)SH
/Times-Roman SF
(,)SH
/Courier SF
12179 XM
(:top)SH
/Times-Roman SF
(,)SH
/Courier SF
15541 XM
(:width)SH
/Times-Roman SF
(, and)112 W
/Courier SF
21909 XM
(:height)SH
11 /Times-Roman AF
26496 XM
(slots reflect the correct bounding box for the polyline, but)112 W
6120 58779 MT
(cannot be used to change the polyline \050i.e.,)SH
/Times-Bold SF
25211 XM
(do not set the)SH
10 /Courier AF
31749 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
35299 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
38249 XM
(:width)SH
11 /Times-Roman AF
(,)SH
/Times-Bold SF
42399 XM
(or)SH
10 /Courier AF
43712 XM
(:height)SH
11 /Times-Bold AF
48187 XM
(slots)SH
/Times-Roman SF
(\051.)SH
6120 61412 MT
(For example:)SH
8 SS 
75 100 0 6607 94694 GB 
%%BeginDocument: opal/polyline.PS
%!PS-Adobe-2.0
%%Title: Opal 20
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 3, 1992, 3:19 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 218 359 393 434
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
146 -286 translate
gsave
0 648 175 75 ClipToRectangle
0 0 translate
gsave
10 598 50 638 90 638 130 598 8 0 0 0 0 false 0 0 [] 4 0.75 0 0 0 false DrawPolyline
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 218 359 393 434

%%EndDocument
 GE /Courier SF
8040 69000 MT
(\050create-instance NIL opal:polyline)SH
9480 69865 MT
(\050:point-list '\05010 50 50 10 90 10 130 50\051\051)SH
9480 70730 MT
(\050:filling-style opal:light-gray-fill\051)SH
9480 71595 MT
(\050:line-style opal:line-4\051\051)SH
ES
%%Page: 173 22
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.5)
SH( Arcs)1800 W
51386 XM
(Page 173)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(A multipoint is like a)
20 W( polyline, but only appears on the screen as a collection of disconnected points.  The)21 W
8280 9151 MT
(line-style and filling-style are ignored.)SH
14 /Times-Bold AF
8280 12969 MT
(6.4. Arrowheads)SH
8 /Courier AF
10200 14134 MT
(\050create-instance 'opal:ArrowHead opal:polyline)SH
11160 14999 MT
(\050:maybe-constant '\050:line-style :filling-style :length :diameter :open-p)SH
20280 15864 MT
(:head-x :head-y :from-x :from-y :visible\051\051)SH
11160 16729 MT
(\050:head-x 0\051 \050:head-y 0\051)SH
11160 17594 MT
(\050:from-x 0\051 \050:from-y 0\051)SH
11160 18459 MT
(\050:connect-x \050o-formula ...\051\051)SH
/Times-Italic SF
25560 XM
(; Read-only slot)SH
/Courier SF
11160 19324 MT
(\050:connect-y \050o-formula ...\051\051)SH
/Times-Italic SF
25560 XM
(; Read-only slot)SH
/Courier SF
11160 20189 MT
(\050:length 10\051)SH
11160 21054 MT
(\050:diameter 10\051)SH
11160 21919 MT
(\050:open-p T\051)SH
11160 22784 MT
(...\051)SH
11 /Times-Roman AF
8280 24205 MT
(The)SH
10 /Courier AF
10536 XM
(opal:arrowhead)SH
11 /Times-Roman AF
19482 XM
(class provides arrowheads.  Figure 6-3 shows the meaning of)
271 W( the slots for)270 W
8280 25401 MT
(arrowheads. The arrowhead is oriented with the point at \050)57 W
10 /Courier AF
(:head-x)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
38829 XM
(:head-y)SH
11 /Times-Roman AF
(\051 and will point away from)58 W
8280 26597 MT
(\050)SH
10 /Courier AF
(:from-x)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13443 XM
(:from-y)SH
11 /Times-Roman AF
(\051. \050)369 W
/Times-Bold SF
(Note:)SH
/Times-Roman SF
22180 XM
(no line is drawn from \050)46 W
10 /Courier AF
(:from-x)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37317 XM
(:from-y)SH
11 /Times-Roman AF
(\051 to \050)46 W
10 /Courier AF
(:head-x)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
48543 XM
(:head-y)SH
11 /Times-Roman AF
(\051; the)46 W
10 /Courier AF
8280 27793 MT
(:from-)SH
11 /Times-Roman AF
12210 XM
(point is just used for reference.\051  The)55 W
10 /Courier AF
29173 XM
(:length)SH
11 /Times-Roman AF
33703 XM
(slot determines the)
55 W( distance \050in pixels\051 from the)56 W
8280 28989 MT
(point of the)
168 W( arrow to the base of the triangle.  The)167 W
10 /Courier AF
32431 XM
(:diameter)SH
11 /Times-Roman AF
38273 XM
(is the distance across the base.  The)167 W
10 /Courier AF
8280 30185 MT
(:open-p)SH
11 /Times-Roman AF
12755 XM
(slot determines if a line is drawn across the base.)SH
8280 32483 MT
(The arrowhead)
199 W( can have both a filling and an outline \050by using the standard)200 W
10 /Courier AF
44617 XM
(:filling-style)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 33679 MT
(:line-style)SH
11 /Times-Roman AF
15164 XM
(slots\051. Arrowhead)
293 W( objects also have 2 slots that describe the)
9 W( point at the center of the base)8 W
8280 34875 MT
(to which one should)
347 W( attach other lines.  This point is \050)348 W
10 /Courier AF
(:connect-x, :connect-y)348 W
11 /Times-Roman AF
(\051 and is set)348 W
8280 36071 MT
(automatically by)
30 W( Opal; do not set these slots.  These slots are useful if the arrow is closed \050see Figure 6-3)29 W
8280 37267 MT
(below\051.)SH
8280 39565 MT
(If you want an arrowhead connected to a line, you)
72 W( might want to use the)73 W
10 /Courier AF
41438 XM
(arrow-line)SH
11 /Times-Roman AF
47786 XM
(object \050with one)73 W
8280 40761 MT
(arrowhead\051 or)32 W
10 /Courier AF
14816 XM
(double-arrow-line)SH
11 /Times-Roman AF
25322 XM
(\050with arrow-heads optionally at either or both ends\051 supplied in the)31 W
8280 41957 MT
(Garnet Gadget Set [Mickish 89].)SH
14 /Times-Bold AF
8280 45775 MT
(6.5. Arcs)SH
8 /Courier AF
10200 47139 MT
(\050create-instance 'opal:Arc opal:graphical-object)SH
11160 48004 MT
(\050:maybe-constant '\050:left :top :width :height :line-style :filling-style)SH
20280 48869 MT
(:draw-function :angle1 :angle2 :visible\051\051)SH
11160 49734 MT
(\050:angle1 0\051)SH
11160 50599 MT
(\050:angle2 0\051\051)SH
11 /Times-Roman AF
8280 52897 MT
(The)SH
10 /Courier AF
10489 XM
(opal:arc)SH
11 /Times-Roman AF
15788 XM
(class provides objects that are arcs, which are pieces of ovals.  The arc segment is)223 W
8280 54093 MT
(parameterized by the values of the following slots:)160 W
10 /Courier AF
32539 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
36249 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
39359 XM
(:width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
43670 XM
(:height)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
48581 XM
(:angle1)SH
11 /Times-Roman AF
(, and)161 W
10 /Courier AF
8280 55289 MT
(:angle2)SH
11 /Times-Roman AF
(.)SH
8280 57587 MT
(The arc is a section of an oval)
111 W( centered about the point <\050)110 W
10 /Courier AF
(center-x)SH
/Times-Italic SF
40415 XM
(arc)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
42408 XM
(center-y)SH
/Times-Italic SF
47918 XM
(arc)SH
11 /Times-Roman AF
(\051> calculated)110 W
8280 58783 MT
(from the)
103 W( arc's)104 W
10 /Courier AF
15034 XM
(:left, :top, :width)104 W
11 /Times-Roman AF
27021 XM
(and)SH
10 /Courier AF
28988 XM
(:height)SH
11 /Times-Roman AF
(, with width)104 W
10 /Courier AF
39062 XM
(:width)SH
11 /Times-Roman AF
43041 XM
(and height)104 W
10 /Courier AF
48137 XM
(:height)SH
11 /Times-Roman AF
(. The)483 W
8280 59979 MT
(arc runs from)234 W
10 /Courier AF
15181 XM
(:angle1)SH
11 /Times-Roman AF
19890 XM
(counterclockwise for a distance of)234 W
10 /Courier AF
36421 XM
(:angle2)SH
11 /Times-Roman AF
41130 XM
(radians. That)
741 W( is,)233 W
10 /Courier AF
49638 XM
(:angle1)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 61175 MT
(measured from 0 at the center right of the oval, and)89 W
10 /Courier AF
32105 XM
(:angle2)SH
11 /Times-Roman AF
36669 XM
(is measured from)90 W
10 /Courier AF
44850 XM
(:angle1)SH
11 /Times-Roman AF
49415 XM
(\050)SH
10 /Courier AF
(:angle2)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 62371 MT
(relative to)SH
10 /Courier AF
12984 XM
(:angle1)SH
11 /Times-Roman AF
(\051.)SH
8280 64669 MT
(Arcs are filled as pie pieces to the center of the oval.)SH
ES
%%Page: 174 23
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 174)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
1 1 0 -1080 62948 GB 
%%BeginDocument: opal/arrow-illus.PS
%!PS-Adobe-1.0
%%Creator: BAM.MACH.CS.CMU.EDU:bam (Brad Myers)
%%Title: arrow-illus.bmt (xwdump)
%%CreationDate: Mon Jul 10 12:43:27 1989
%%EndComments
%%%Pages: 1
%%BoundingBox: 188 264 424 528
%%EndProlog
%%%Page: 1 1

/bitdump % stk: width, height, iscale
% dump a bit image with lower left corner at current origin,
% scaling by iscale (iscale=1 means 1/300 inch per pixel)
{
        % read arguments
        /iscale exch def
        /height exch def
        /width exch def

        % scale appropriately
        width iscale mul height iscale mul scale

        % allocate space for one scanline of input
        /picstr % picstr holds one scan line
                width 7 add 8 idiv % width of image in bytes = ceiling(width/8)
                string
                def

        % read and dump the image
        width height 1 [width 0 0 height neg 0 height]
        { currentfile picstr readhexstring pop }
        image
} def
72 300 div dup scale
783 1099 translate
328 367 3 bitdump
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffe7fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffe07fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffc007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffc0007fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffc00007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffc000007fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffc0000007fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffc0000000ffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffc00000000ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffc000000000ffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffc0000000000ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff800000000000ffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffff8000000000000ffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff80000000000000fde7ffff3fffff3ffff9fffbffff
fffffffffffffffffffffffffffffffffffffff800000000000000fbf7ffffbfffffbffffdfffdffff
ffffffffffffffffffffffffffffffffffffff8000000000000000fbf7ffffbfffffbffffdfffdffff
fffffffffffffffffffffffffffffffffffff80000000000002001f7b1e79e3fc9fd8f3cf1fcceffff
ffffffffffffffffffffffffffffffffffff80000000000003c001f7f6db6dbfebffb6db6dfedeffff
fffffffffffffffffffffffffffffffffff800000000000001f001f7f6c38db0f7ffb61c6d869effff
ffffffffffffffffffffffffffffffffff8000000000000003f001f7f6df6dbff7ffb6fb6dfebeffff
fffffffffffffffffffffffffffffffff00000000000000007c001f7f6cd6dbfebffb66b6dff3effff
ffffffffffffffffffffffffffffffff000000000000000001e001f7a263965fc97d131cb2ff7effff
fffffffffffffffffffffffffffffff0000000000000000003c001fbffffffffff7fffffffff7dffff
ffffffffffffffffffffffffffffff000000000000000000100001fbfffffffffefffffffffefdffff
fffffffffffffffffffffffffffff0000000000000000001f80001fdfffffffffffffffffffcfbffff
ffffffffffffffffffffffffffff00000000000000000006280003ffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000000000000000000480003ffffffffffffffffffffffffffff
ffffffffffffffffffffffffff0000000000000000000000500003ffffffffffffffffffffffffffff
fffffffffffffffffffffffff00000000000000000000000900003ffffffffffffffffffffffffffff
fffffffffffffffffffffffe000000000000000000000001100003ffffffffffffffffffffffffffff
ffffffffffffffffffffffe0000000000000000000000002100003ffffffffffffffffffffffffffff
fffffffffffffffffffffe00000000000000000000000004000003ffffffffffffffffffffffffffff
ffffffffffffffffffffe000000000000000000000000008000003ffffffffffffffffffffffffffff
fffffffffffffffffffe0000000000000000000000000010000003ffffffffffffffffffffffffffff
ffffffffffffffffffe00000000000000000000000000010000007ffffffffffffffffffffffffffff
fffffffffffffffffe000000000000000000000000000020000007ffffffffffffffffffffffffffff
ffffffffffffffffe0000000000000000000000000000040000007ffffffffffffffffffffffffffff
fffffffffffffffe00000000000000000000000000000080000007ffffffffffffffffffffffffffff
ffffffffffffffc000000000000000000000000000000100000007ffffffffffffffffffffffffffff
fffffffffffffc0000000000000000000000000000000400000007ffffffffffffffffffffffffffff
ffffffffffffc00000000000000000000000000000007a00000007ffffffffffffffffffffffffffff
ffffffffffff80000000000000000000000000000007f800000007ffffffffffffffffffffffffffff
ffffffffffff8000000000000000000000000000007ff400000007ffffffffffffffffffffffffffff
ffffffffffff800000000000000000000000000007ffec0000000fffffffffffffffffffffffffffff
ffffffffffff80000000000000000000000000007fffdc0000000fffffffffffffffffffffffffffff
ffffffffffffc000000000000000000000000007ffffbc0000000fffffffffffffffffffffffffffff
ffffffffffffc0000000000000000000000000ffffff7c0000000fffffffffffffffffffffffffffff
ffffffffffffc000000000000000000000000ffffffefc0000000fffffffffffffffffffffffffffff
ffffffffffffc00000000000000000000000fffffffdfc0000000fffffffffffffffffffffffffffff
ffffffffffffe0000000000000000000000ffffffffdfc0000000fffffffffffffffffffffffffffff
ffffffffffffe000000000000000000000fffffffffbf80000000fffffffffffffffffffffffffffff
ffffffffffffe00000000000000000000ffffffffff7f80000000fffffffffffffffffffffffffffff
ffffffffffffe0000000000000000000ffffffffffeff80000001fffffffffffffffffffffffffffff
fffffffffffff000000000000000000fffffffffffdff80000001fffffffffffffffffffffffffffff
fffffffffffff20000000000000000ffffffffffffbff80000001fffffffffffffffffffffffffffff
ffffffffffffcc000000000000001fffffffffffff7ff80000001fffffffffffffffffffffffffffff
ffffffffffffef00000000000001ffffffffffffff7ff80000001fffffffffffffffffffffffffffff
ffffffffffffcf0000000000001ffffffffffffffefff80000001fffffffffffffffffffffffffffff
ffffffffffff84000000000001fffffffffffffffdfff80000001fffffffffffffffffffffffffffff
ffffffffffffe670000000001ffffffffffffffffbfff00000001fffffffffffffffffffffffffffff
ffffffffffffc4cf00000001fffffffffffffffff7fff00000001fffffffffffffffffffffffffffff
fffffffffffff8600000001fffffffffffffffffeffff00000003fffffffffffffffffffffffffffff
fffffffffffffc50000001ffffffffffffffffffdffff00000003fffffffffffffffffffffffffffff
fffffffffffffc4c00001fffffffffffffffffffdffff00000003fffffffffffffffffffffffffffff
fffffffffffffc420003ffffffffffffffffffffbffff00000003fffffffffffffffffffffffffffff
fffffffffffffc21003fffffffffffffffffffff7ffff00000003fffffffffffffffffffffffffffff
fffffffffffffe2083fffffffffffffffffffffefffff00000003fffffffffffffffffffffffffffff
fffffffffffffe007ffffffffffff3fffff9fffdfffff00000003fffffffffffffffffffffffffffff
fffffffffffffe03dffffffffffffbfffffdfffbffffe00000003fffffffffffffffffffffffffffff
fffffffffffffe3feffffffffffffbffffddfff7ffffe00000003fffffffffffffffffffffffffffff
fffffffffffffffff3ffffffffffdb9a78047ff7ffffe00000007fffffffffffffffffffffffffffff
fffffffffffffffffdfffffffffffb6db6ddbfefffffe00000007fffffffffffffffffffffffffffff
fffffffffffffffffefffffffffffb0db6ddbfdfffffe00000007fffffffffffffffffffffffffffff
ffffffffffffffffff7ffffffffffb7db1ddbfbfffffe00000007fffffffffffffffffffffffffffff
ffffffffffffffffffbffffffffffb35bbddbf7fffffe00000007fffffffffffffffffffffffffffff
ffffffffffffffffffdfffffffffd18898e09effffffe00000007fffffffffffffffffffffffffffff
ffffffffffffffffffeffffffffffffff77ffdffffffe00000007fffffffffffffffffffffffffffff
fffffffffffffffffff3fffffffffffff77ffdffffffc00000007fffffffffffffffffffffffffffff
fffffffffffffffffffdfffffffffffff8fffbffffffc0000000ffffffffffffffffffffffffffffff
fffffffffffffffffffefffffffffffffffff7ffffffc0000000ffffffffffffffffffffffffffffff
ffffffffffffffffffff7fffffffffffffffefffffffc0000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffbfffffffffffffffdfffffffc0000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffdfffffffffffffffbfffffffc0000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffefffffffffffffff7fffffffc0000000ffffffffffffffffffffffffffffff
fffffffffffffffffffff3ffffffffffffff7fffffffc0000000ffffffffffffffffffffffffffffff
fffffffffffffffffffffdfffffffffffffeffffffffc0000000ffffffffffffffffffffffffffffff
fffffffffffffffffffffefffffffffffffdffffffff80000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffff7ffffffffffffbffffffff80000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffbffffffffffff7ffffffff80000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffdfffffffffffefffffffff80000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffefffffffffffdfffffffff80000001ffffffffffffffffffffffffffffff
fffffffffffffffffffffff3ffffffffffbfffffffff80000001ffffffffffffffffffffffffffffff
fffffffffffffffffffffffdffffffffffbfffffffff80000001ffffffffffffffffffffffffffffff
fffffffffffffffffffffffeffffffffff7fffffffff80000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffff7ffffffffeffffffffff80000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffbffffffffdffffffffff00000001ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffdffffffffbffffffffff00000003ffffffffffffffffffffffffffffff
fffffffdffffffffffffffffeffffffff7ffffffffff00000003ffffffffffffffffffffffffffffff
fffffffbfffffffffffffffff7ffffffefffffffffff00000003ffffffffffffffffffffffffffffff
fffffffbfffffffffdfffffff9ffffffefffffffffff00000003ffffffffffffffffffffffffffffff
fffffff7b9cd34f3c87f27fffeffffffdfffffffffff00000003ffffffffffffffffffffffffffffff
fffffff7f6b6db6db5ffafffff7fffffbfffffffffff00000003ffffffffffffffffffffffffffffff
fffffff7f7b6db61bdc3dfffffbfffef7fffffffffff00000003ffffffffffffffffffffffffffffff
fffffff7f7b6db6fbdffdfffffdfffeeffffffffffff00000003ffffffffffffffffffffffffffffff
fffffff7f6b6db66b5ffafffffefffedfffffffffffe00000003ffffffffffffffffffffffffffffff
fffffff7b9cc4131ce7f25fffff7ffebfffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffbfffffffffffffdfffff9ffdbfffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffbfffffffffffffbfffffeffd73ffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffdffffffffffffffffffff7fc0fffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffbffbfeffffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffffffffffffffffffffdffdf7ffffffffffffe00000007ffffffffffffffffffffffffffffff
fffffffffffffffffffffbfffdffe0fffffffffffffe00000007ffffffffffffffffffffffffffffff
ffffffffffff739a69e790fccefff03ffffffffffffe00000007ffffffffffffffffffffffffffffff
ffffffffffffed6db6db6bfedefff63ffffffffffffc00000007ffffffffffffffffffffffffffffff
ffffffffffffef6db6c37b869effe1fffffffffffffc0000000fffffffffffffffffffffffffffffff
ffffffffffffef6db6df7bfebefff8fffffffffffffc0000000fffffffffffffffffffffffffffffff
ffffffffffffed6db6cd6bff3efff0bffffffffffffc0000000fffffffffffffffffffffffffffffff
ffffffffffff739882639cff7effdfdffffffffffffc0000000fffffffffffffffffffffffffffffff
ffffffffffffffffffffffff7dffdfeffffffffffffc0000000fffffffffffffffffffffffffffffff
fffffffffffffffffffffffefdffbff7fffffffffffc0000000fffffffffffffffffffffffffffffff
fffffffffffffffffffffffcfbff7ff9fffffffffffc0000000fffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefffffffffff80000000fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff7ffffffffff80000000fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffbffffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffdffffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffefffffeffffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffeffffff7fffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffdffffff9fffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffbffffffefffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff7ffffffff80000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffbffffffff00000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffdffffffff00000001fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffeffffffff00000003fffffffffffffffffffffffffffffff
fffffffffffffffffffffffff7fffffffff7fffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffffffffffbfffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffeffffffffffcfffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffdfffffffffff7ffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffbffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffdffffff00000003fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffefffffe00000003fffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffff7ffffe00000003fffffffffffffffffffffffffffffff
fffffffffffffffffffffffbfffffffffffffbffffe00000007fffffffffffffffffffffffffffffff
fffffffffffffffffffffff7fffffffffffffcffffe00000007fffffffffffffffffffffffffffffff
fffffffffffffffffffffff7ffffffffffffff7fffe00000007fffffffffffffffffffffffffffffff
ffffffffffffffffffffffefffffffffffffffbfffe00000007fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffdfffe00000007fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffefffe00000007fffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffe6ffffffffff7ffe00000007fffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffff7ffffffffffbffc00000007fffffffffffffffffffffffffffffff
fffffffffffffffffffffdffffff7fffffeffffcffc00000007fffffffffffffffffffffffffffffff
fffffffffffffffffffffbffffdc4e693cc334ff7fc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffff7fffffb6db6db6ed9ffbfc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffff7fffffb6e36d86e1bffdfc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffb6db6dbeefbffefc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffb6db6d9ae6bfff7c0000000ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffdc86424c7311fffbc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffcc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffeffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffdffffffffffffffffffffffc0000000ffffffffffffffffffffffffffffffff
fffffffffffffffffffbffffffffffffffffffffffa0000001ffffffffffffffffffffffffffffffff
fffffffffffffffffffbffffffffffffffffffffff90400001ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff88400001ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff84200001ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff83200001ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff80a00001ffffffffffffffffffffffffffffffff
ffffffffffffffffff7fffffffffffffffffffffff80600001ffffffffffffffffffffffffffffffff
fffffffffffffffffeffffffffffffffffffffffff0f300001ffffffffffffffffffffffffffffffff
fffffffffffffffffdffffffffffffffffffffffff00e00001ffffffffffffffffffffffffffffffff
fffffffffffffffffbffffffffffffffffffffffff00004003ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff00078003ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffc03e003ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff9e003ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff07f03ffffffffffffffffffffffffffffffff
ffffffffffffffffbffffffffffffffffffffffffffffc3fffffffffffffffffffffffffffffffffff
ffffffffffffffff7ffffffffffffffffffffffffffdf87f7fffffffffffffffffffffffffffffffff
fffffffffffffffefffffffffffffffffffffffffffbffffbfffffffffffffffffffffffffffffffff
fffffffffffffffdfffffffffffffffffffffffffff7ffffcfffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffcffffff7ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffbffffffbffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff80000003ffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffbffffffbffffffffffffffffffffffffffffffff
ffffffffffffffdfffffffffffffffffffffffffffcffffff7ffffffffffffffffffffffffffffffff
ffffffffffffffbffffffffffffffffffffffffffff7ffffcfffffffffffffffffffffffffffffffff
ffffffffffffff7ffffffffffffffffffffffffffffbffffbfffffffffffffffffffffffffffffffff
fffffffffffffefffffffffffffffffffffffffffffdffff7fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff9f7e7fffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffdfff7fffffffffffffffffffffffffffffffffff
ffffffffffffeffffffffffffffffffffffffffffddfff7fffffffffffffffffffffffffffffffffff
ffffffffffffdfffffffffffffffffffffffffffe846736a79e38fffffffffffffffffffffffffffff
ffffffffffffbffffffffffffffffffffffffffffddb6d5db6db6fffffffffffffffffffffffffffff
ffffffffffff7ffffffffffffffffffffffffffffddb6f3db0cf3fffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffddb6f5db7f3cfffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffddb6d6db35b6fffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffee08336098c71fffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffc1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffe4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffc8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff83ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffe1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffc3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff7e7fffffffffcfffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffefdffffffffffbffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffefdffffffffffbffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffde84cd27fc9fd099a4ff33bffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfd9b6dbfebffb36db7fb7bffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfdbb6db0f7ffb76db61a7bffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfdbb6dbff7ffb76db7fafbffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfdbb6dbfebffb76db7fcfbffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffded1cc49fc97da39893fdfbffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffeffffffffff7ffffffffdf7ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffefffffffffefffffffffbf7ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff7ffffffffffffffffff3efffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffff7fffffffffffdffffffffffff7fffffffffffdffffffffffffffffffffffffffffffffff
ffffffffffbfffffffffffcffffffffffffbfffffffffffcfffffffffffeffffffffffffffffffffff
ffffffffffcfffffffffffd3fffffffffff8fffffffffffd3fffffffffffffffffffffffffffffffff
fffffffffff7ffffffffffddfffffffffffe7ffffffffffcdffffffffffeffffffffffffffffffffff
fffffffffffbffffffffffdefffffffffffbbffffffffffdafffffffffffbfffffffffffffffffffff
fffffffffffdffffffffffdf7ffffffffffedffffffffffce7fffffffffeefffffffffffffffffffff
fffffffffffe7fffffffffdf9ffffffffffba7fffffffffdb9ffffffffffbbffffffffffffffffffff
ffffffffffffbfffffffffdfeffffffffffeebfffffffffceefffffffffeeeffffffffffffffffffff
ffffffffffffdfffffffffdff7fffffffffbb9fffffffffdbb7fffffffffbbbfffffffffffffffffff
ffffffffffffbfffffffffdfeffffffffffeebfffffffffceefffffffffeeeffffffffffffffffffff
fffffffffffe7fffffffffdf9ffffffffffba7fffffffffdb9ffffffffffbbffffffffffffffffffff
fffffffffffdffffffffffdf7ffffffffffedffffffffffce7fffffffffeefffffffffffffffffffff
fffffffffffbffffffffffdefffffffffffbbffffffffffdafffffffffffbfffffffffffffffffffff
fffffffffff7ffffffffffddfffffffffffe7ffffffffffcdffffffffffeffffffffffffffffffffff
ffffffffffcfffffffffffd3fffffffffff8fffffffffffd3fffffffffffffffffffffffffffffffff
ffffffffffbfffffffffffcffffffffffffbfffffffffffcfffffffffffeffffffffffffffffffffff
ffffffffff7fffffffffffdffffffffffff7fffffffffffdffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

showpage
%%Trailer

%%EndDocument
 GE 10 /Courier AF
6120 38169 MT
(:open-p:)SH
20520 XM
(T)SH
24120 XM
(NIL)SH
27720 XM
(T)SH
31320 XM
(NIL)SH
34920 XM
(T)SH
6120 39365 MT
(:filling-style:)SH
20520 XM
(NIL)SH
24120 XM
(NIL)SH
27720 XM
(opal:light-gray-fill)SH
6120 40561 MT
(:line-style:)SH
20520 XM
(.... opal:line-0 ....)SH
34920 XM
(NIL)SH
11 /Times-Bold AF
6120 43716 MT
(Figure 6-3:)SH
/Times-Roman SF
11893 XM
(The slots that define an arrowhead. At the bottom are various)
186 W( arrowheads with different)187 W
11893 44912 MT
(styles. Note)
275 W( that a shaft for the arrow must be drawn by the user.)SH
46800 50 6120 46864 UL
6120 48615 MT
(For example:)SH
8 SS 
75 100 0 6570 81372 GB 
%%BeginDocument: opal/arcexample.PS
%!PS-Adobe-2.0
%%Title: Opal 5
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jun 3, 1992, 4:42 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 242 365 370 427
%%%Pages: 1
%%EndComments


/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
170 -293 translate
gsave
0 648 128 62 ClipToRectangle
0 0 translate
gsave
60.0 613.0 50.0 25.0 45 135 0 0 0 0 false 0 0 [] 2 0.75 0 0 0 false DrawArc
10 638 100 50 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: 
%%BoundingBox: 242 365 370 427

%%EndDocument
 GE /Courier SF
8040 55228 MT
(;; the rectangle is just for reference)SH
8040 56093 MT
(\050create-instance 'MYRECT opal:rectangle)SH
9000 56958 MT
(\050:left 10\051\050:top 10\051\050:width 100\051\050:height 50\051\051)SH
8040 57823 MT
(\050create-instance 'MYARC opal:arc)SH
9000 58688 MT
(\050:left 10\051\050:top 10\051)SH
9000 59553 MT
(\050:width 100\051\050:height 50\051)SH
9000 60418 MT
(\050:angle1 \050/ PI 4\051\051)SH
9000 61283 MT
(\050:angle2 \050/ PI 2\051\051)SH
9000 62148 MT
(\050:line-style opal:line-2\051)SH
9000 63013 MT
(\050:filling-style opal:light-gray-fill\051\051)SH
14 /Times-Bold AF
6120 66831 MT
(6.6. Ovals)SH
8 /Courier AF
8040 68195 MT
(\050create-instance 'opal:Oval opal:arc\051)SH
11 /Times-Roman AF
6120 70493 MT
(Instances of the)184 W
10 /Courier AF
13849 XM
(:oval)SH
11 /Times-Roman AF
17308 XM
(class are closed arcs parameterized by)
184 W( the slots)183 W
10 /Courier AF
39727 XM
(:left)SH
/Times-Roman SF
(,)SH
/Courier SF
43760 XM
(:top)SH
/Times-Roman SF
(,)SH
/Courier SF
47193 XM
(:width)SH
/Times-Roman SF
(, and)183 W
/Courier SF
6120 71689 MT
(:height)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 175 24
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.8)
SH( Fonts)
1800 W( and Text)SH
51386 XM
(Page 175)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(6.7. Circles)SH
8 /Courier AF
10200 9502 MT
(\050create-instance 'opal:Circle opal:arc\051)SH
11 /Times-Roman AF
8280 11800 MT
(The circle is positioned at the top, leftmost part of the bounding box described with the)117 W
10 /Courier AF
48737 XM
(:left)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
52405 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 12996 MT
(:width)SH
11 /Times-Roman AF
(, and)162 W
10 /Courier AF
14617 XM
(:height)SH
11 /Times-Roman AF
19253 XM
(slots. The)
597 W( circle drawn has diameter equal to the minimum of the width and)161 W
4280 50 42702 13196 UL
8280 14192 MT
(height, though the effective bounding box \050used by)31 W
10 /Courier AF
31287 XM
(point-in-gob)SH
11 /Times-Roman AF
(, for example\051 will still be)
31 W( defined by)32 W
8280 15388 MT
(the actual values in)SH
10 /Courier AF
17016 XM
(:width)SH
11 /Times-Roman AF
20891 XM
(and)SH
10 /Courier AF
22754 XM
(:height)SH
11 /Times-Roman AF
(. Both)275 W
10 /Courier AF
30194 XM
(:width)SH
11 /Times-Roman AF
34069 XM
(and)SH
10 /Courier AF
35932 XM
(:height)SH
11 /Times-Roman AF
40407 XM
(need to be specified.)SH
14 /Times-Bold AF
8280 19206 MT
(6.8. Fonts and Text)SH
12 SS 
8280 22890 MT
(6.8.1. Fonts)SH
11 /Times-Roman AF
8280 24086 MT
(There are)
130 W( two different ways to get fonts from Garnet.  One way is to explicitly create your own font)129 W
8280 25282 MT
(object, and supply the object with)
163 W( a description of the desired font, either with family, face, and size)164 W
8280 26478 MT
(descriptions, or with)
24 W( a font pathname.  The other way is to use the function)23 W
10 /Courier AF
41894 XM
(get-standard-font)SH
11 /Times-Roman AF
52392 XM
(which)SH
8280 27674 MT
(will create a new font object for)
61 W( you if necessary, or return a previously created font object that you can)62 W
8280 28870 MT
(use again.)SH
8280 31168 MT
(There are two different types of font objects)
21 W( -- one which handles the standard Garnet fonts \050described by)20 W
8280 32364 MT
(family, face, and size parameters\051, and)
389 W( one which handles fonts specified by a filename.  The)390 W
10 /Courier AF
8280 33560 MT
(get-standard-font)SH
11 /Times-Roman AF
18895 XM
(function only)
140 W( returns font objects that can be described with the three standard)139 W
8280 34756 MT
(parameters. Either)
275 W( kind of font object may be used anywhere a "font" is called for.)SH
12 /Times-Bold AF
8280 37720 MT
(6.8.1.1. Built in Fonts)SH
8 /Courier AF
10200 38885 MT
(\050create-instance 'opal:Font opal:graphic-quality)SH
11160 39750 MT
(\050:maybe-constant '\050:family :face :size\051\051)SH
11160 40615 MT
(\050:family :fixed\051)SH
11160 41480 MT
(\050:face :roman\051)SH
11160 42345 MT
(\050:size :medium\051)SH
11640 43210 MT
(...\051)SH
10200 44940 MT
(\050create-instance 'opal:Default-Font opal:font)SH
11640 45805 MT
(\050:constant T\051\051)SH
11 /Times-Roman AF
8280 48103 MT
(To use the standard Garnet fonts, create an instance of)188 W
10 /Courier AF
34317 XM
(opal:font)SH
11 /Times-Roman AF
40180 XM
(with your desired values for)
188 W( the)189 W
10 /Courier AF
8280 49299 MT
(:family)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13049 XM
(:face)SH
11 /Times-Roman AF
(, and)19 W
10 /Courier AF
18500 XM
(:size)SH
11 /Times-Roman AF
21794 XM
(slots. Opal)
312 W( will automatically find the corresponding font for your display.)18 W
8280 50495 MT
(The allowed values for each slot are as follows:)SH
8280 52793 MT
(Values for)SH
10 /Courier AF
13166 XM
(:family)SH
11 /Times-Roman AF
17641 XM
(can be:)SH
/Symbol SF
10249 54371 MT
(\267)SH
10 /Courier AF
11030 XM
(:fixed)SH
11 /Times-Roman AF
14905 XM
(- a fixed width font, such as Courier.  All characters are the same width.)SH
/Symbol SF
10249 55567 MT
(\267)SH
10 /Courier AF
11030 XM
(:serif)SH
11 /Times-Roman AF
14905 XM
(- a variable-width font, with ``serifs'' on the characters, such as Times.)SH
/Symbol SF
10249 56763 MT
(\267)SH
10 /Courier AF
11030 XM
(:sans-serif)SH
11 /Times-Roman AF
17905 XM
(- a variable-width font, with no serifs on the characters, such as Helvetica.)SH
8280 59061 MT
(Values for)SH
10 /Courier AF
13166 XM
(:face)SH
11 /Times-Roman AF
16441 XM
(can be a single keword or a list of the following:)SH
10180 61012 MT
(Faces available for both X windows and the Mac:)SH
/Symbol SF
15749 62590 MT
(\267)SH
10 /Courier AF
16530 XM
(:roman)SH
11 /Symbol AF
36399 XM
(\267)SH
10 /Courier AF
37180 XM
(:bold)SH
11 /Symbol AF
15749 63786 MT
(\267)SH
10 /Courier AF
16530 XM
(:italic)SH
11 /Symbol AF
36399 XM
(\267)SH
10 /Courier AF
37180 XM
(:bold-italic)SH
11 /Times-Roman AF
10180 65239 MT
(Faces available for the Mac only:)SH
/Symbol SF
15749 66817 MT
(\267)SH
10 /Courier AF
16530 XM
(:plain)SH
11 /Symbol AF
36399 XM
(\267)SH
10 /Courier AF
37180 XM
(:outline)SH
11 /Symbol AF
15749 68013 MT
(\267)SH
10 /Courier AF
16530 XM
(:condense)SH
11 /Symbol AF
36399 XM
(\267)SH
10 /Courier AF
37180 XM
(:shadow)SH
11 /Symbol AF
15749 69209 MT
(\267)SH
10 /Courier AF
16530 XM
(:extend)SH
11 /Symbol AF
36399 XM
(\267)SH
10 /Courier AF
37180 XM
(:underline)SH
ES
%%Page: 176 25
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 176)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(Values for)SH
10 /Courier AF
11006 XM
(:size)SH
11 /Times-Roman AF
14281 XM
(can be:)SH
/Symbol SF
8089 9533 MT
(\267)SH
10 /Courier AF
8870 XM
(:small)SH
11 /Times-Roman AF
12745 XM
(- a small size, such as 10 points.)SH
/Symbol SF
8089 10729 MT
(\267)SH
10 /Courier AF
8870 XM
(:medium)SH
11 /Times-Roman AF
13345 XM
(- a normal size, such as 12 points.)SH
/Symbol SF
8089 11925 MT
(\267)SH
10 /Courier AF
8870 XM
(:large)SH
11 /Times-Roman AF
12745 XM
(- a large size, such as 18 points.)SH
/Symbol SF
8089 13121 MT
(\267)SH
10 /Courier AF
8870 XM
(:very-large)SH
11 /Times-Roman AF
15745 XM
(- a larger size, such as 24 points.)SH
6120 14574 MT
(The exported)354 W
10 /Courier AF
12936 XM
(opal:default-font)SH
11 /Times-Roman AF
23765 XM
(object contains the font described by)354 W
10 /Courier AF
42323 XM
(:fixed)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
46827 XM
(:roman)SH
11 /Times-Roman AF
(, and)355 W
10 /Courier AF
6120 15770 MT
(:medium)SH
11 /Times-Roman AF
(. This)
513 W( object should be)
119 W( used when a font is required and you want to use the default values.)118 W
6120 16966 MT
(However, since this object's slots have been made constant for efficiency, do not create instances)
73 W( of the)74 W
10 /Courier AF
6120 18162 MT
(opal:default-font)SH
11 /Times-Roman AF
16847 XM
(object. Instead,)
778 W( create instances of the)251 W
10 /Courier AF
35860 XM
(opal:font)SH
11 /Times-Roman AF
41786 XM
(objects with customized)251 W
6120 19358 MT
(values for the parameters, or use)SH
10 /Courier AF
20687 XM
(get-standard-font)SH
11 /Times-Roman AF
31162 XM
(\050explained below\051.)SH
12 /Times-Bold AF
6120 22322 MT
(6.8.1.2. Reusing Fonts)SH
11 /Times-Roman AF
6120 23518 MT
(Instead of creating a new font object every time one is needed, you may)
164 W( use the same font object in)165 W
6120 24714 MT
(multiple applications.  The function)21 W
10 /Courier AF
22235 XM
(get-standard-font)SH
11 /Times-Roman AF
32731 XM
(remembers what fonts have been created, and)21 W
6120 25910 MT
(will return a previously created font)
208 W( object if a new font is needed that has a matching description.)209 W
6120 27106 MT
(Otherwise,)SH
10 /Courier AF
11190 XM
(get-standard-font)SH
11 /Times-Roman AF
21665 XM
(will allocate a new font object and return it, remembering it for later.)SH
8 /Courier AF
8040 29756 MT
(opal:Get-Standard-Font)SH
/Times-Italic SF
19080 XM
(family face size)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 31177 MT
(The parameters are all)
632 W( the keywords that are allowed for standard fonts.  For example:)631 W
10 /Courier AF
6120 32373 MT
(\050opal:get-standard-font :fixed :italic :medium\051)102 W
11 /Times-Roman AF
(. In)
481 W( addition, any of the parameters can)103 W
6120 33569 MT
(be)SH
9 SS 
7550 XM
(NIL)SH
11 SS 
(, which means to)
117 W( use the defaults \050)116 W
10 /Courier AF
(:fixed :roman :medium)116 W
11 /Times-Roman AF
(\051. It)
507 W( is more efficient to use this)116 W
6120 34765 MT
(procedure than to repeatedly allocate new font objects.)SH
6120 37063 MT
(Since all the font objects returned by)76 W
10 /Courier AF
23117 XM
(get-standard-font)SH
11 /Times-Roman AF
33668 XM
(have been declared constant)
76 W( for efficiency,)77 W
6120 38259 MT
(you may not change the font descriptions after the objects have been created.)SH
6120 40557 MT
(Note:)SH
10 /Courier AF
9190 XM
(get-standard-font)SH
11 /Times-Roman AF
19703 XM
(only remembers those fonts that were)
38 W( allocated by using)37 W
10 /Courier AF
45120 XM
(get-standard-)SH
6120 41753 MT
(font)SH
11 /Times-Roman AF
(. If)
277 W( a requested font)
1 W( matches an independently-generated font,)2 W
10 /Courier AF
36327 XM
(get-standard-font)SH
11 /Times-Roman AF
46804 XM
(will not know)2 W
6120 42949 MT
(about it and will allocate a new font.)SH
12 /Times-Bold AF
6120 45913 MT
(6.8.1.3. Fonts from Files)SH
8 /Courier AF
8040 47078 MT
(\050create-instance 'opal:Font-From-File opal:graphic-quality)SH
9000 47943 MT
(\050:font-path NIL\051)SH
9000 48808 MT
(\050:font-name ""\051)SH
9480 49673 MT
(...\051)SH
11 /Times-Roman AF
6120 51971 MT
(This allows you to specify a file name to load a font from.)SH
6120 54269 MT
(X/11 keeps a set of font directories,)
68 W( called the current "Font Path".  You can see what directories are on)67 W
6120 55465 MT
(the font path by typing)58 W
10 /Courier AF
16707 XM
(xset q)58 W
11 /Times-Roman AF
20698 XM
(to the Unix shell, and you can add)
58 W( and remove directories from the font)59 W
6120 56661 MT
(path by using the)SH
10 /Courier AF
13942 XM
(xset fp+)SH
11 /Times-Roman AF
19017 XM
(and)SH
10 /Courier AF
20880 XM
(xset fp-)SH
11 /Times-Roman AF
25955 XM
(commands.)SH
6120 58959 MT
(If the)230 W
10 /Courier AF
9205 XM
(:font-path)SH
11 /Times-Roman AF
15709 XM
(slot of a)229 W
10 /Courier AF
20215 XM
(:font-from-file)SH
11 /Times-Roman AF
29719 XM
(is a string which is a directory, Opal pushes that)229 W
6120 60155 MT
(directory onto the X font path and then looks up the font.  If the font name is somewhere)
125 W( on the path)126 W
6120 61351 MT
(already, you can let the)96 W
10 /Courier AF
17106 XM
(:font-path)SH
11 /Times-Roman AF
23477 XM
(slot be)96 W
9 SS 
26847 XM
(NIL)SH
11 SS 
(. You)
467 W( can usually access fonts in the standard system)96 W
6120 62547 MT
(font area \050often)SH
10 /Courier AF
13173 XM
(/usr/misc/.X11/lib/fonts/)SH
11 /Times-Roman AF
(\051 without specifying a path name.)SH
6120 64845 MT
(For example, for the font)SH
10 /Courier AF
17422 XM
(vgi-25.snf)SH
11 /Times-Roman AF
23697 XM
(in the default directory, use:)SH
8 /Courier AF
8040 66010 MT
(\050create-instance NIL opal:font-from-file)SH
9480 66875 MT
(\050:font-name "vgi-25"\051\051)SH
11 /Times-Roman AF
6120 68296 MT
(If the font was not in the default font path, then use something like:)SH
8 /Courier AF
8040 69461 MT
(\050create-instance NIL opal:font-from-file)SH
9480 70326 MT
(\050:font-path "/usr/misc/.X11/lib/fonts/75dpi/"\051)SH
9480 71191 MT
(\050:font-name "vgi-25"\051\051)SH
ES
%%Page: 177 26
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.8)
SH( Fonts)
1800 W( and Text)SH
51386 XM
(Page 177)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The font name)29 W
10 /Courier AF
15056 XM
("vgi-25")SH
11 /Times-Roman AF
20160 XM
(is looked up in a special file in the font directory called)29 W
10 /Courier AF
45068 XM
(fonts.dir)SH
11 /Times-Roman AF
(. This)
335 W( file)30 W
8280 9151 MT
(contains a long list of fonts with the file name of)
21 W( the font on the left and the name for the server to use on)20 W
8280 10347 MT
(the right.  For example, the entry corresponding to)SH
10 /Courier AF
30733 XM
(opal:default-font)SH
11 /Times-Roman AF
41208 XM
(may look like this:)SH
8 /Courier AF
10200 11512 MT
(courier12.pcf -adobe-courier-medium-r-normal--17-120-100-100-m-100-iso8859-1)4800 W
11 /Times-Roman AF
8280 13810 MT
(On some displays, this font lookup may not proceed smoothly,)
159 W( and you may have to supply the long)160 W
10 /Courier AF
8280 15006 MT
("-adobe-...")SH
11 /Times-Roman AF
16007 XM
(name as the value of)252 W
10 /Courier AF
26582 XM
(:font-name)SH
11 /Times-Roman AF
33109 XM
(instead of the more convenient)252 W
10 /Courier AF
48205 XM
("courier12")SH
11 /Times-Roman AF
(.)SH
8280 16202 MT
(Garnet internally builds these names for)
219 W( the standard fonts, so font name lookup should never be a)220 W
8280 17398 MT
(problem for them.)SH
12 /Times-Bold AF
8280 20362 MT
(6.8.1.4. Opal:Cursor-Font)SH
8 /Courier AF
10200 21527 MT
(\050create-instance 'opal:Cursor-Font opal:font-from-file)SH
11160 22392 MT
(\050:constant T\051)SH
11160 23257 MT
(\050:font-name "cursor"\051\051)SH
11 /Times-Roman AF
8280 25555 MT
(The)SH
10 /Courier AF
10453 XM
(opal:cursor-font)SH
11 /Times-Roman AF
20516 XM
(object accesses the font used by your window)
188 W( manager to display cursors.)187 W
8280 26751 MT
(This object is an instance of)274 W
10 /Courier AF
22511 XM
(opal:font-from-file)SH
11 /Times-Roman AF
(, and may not be fully portable on different)275 W
8280 27947 MT
(machines. Regular)
507 W( text strings)
116 W( may be printed in this font, but it is specifically intended for use when)115 W
8280 29143 MT
(changing the cursor of Garnet windows \050see section 10.3.1\051.)SH
12 /Times-Bold AF
8280 32107 MT
(6.8.1.5. Functions on Fonts)SH
8 /Courier AF
10200 33320 MT
(opal:String-Width)SH
/Times-Italic SF
18840 XM
(font-obj string)SH
/Courier SF
23918 XM
(&key \050)SH
/Times-Italic SF
(start)SH
/Courier SF
28744 XM
(0\051)SH
/Times-Italic SF
30184 XM
(end)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 35050 MT
(opal:String-Height)SH
/Times-Italic SF
19320 XM
(font-obj string)SH
/Courier SF
24398 XM
(&key \050)SH
/Times-Italic SF
(actual-heightp)SH
/Courier SF
32422 XM
(NIL\051)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 36471 MT
(The function)116 W
10 /Courier AF
14438 XM
(string-width)SH
11 /Times-Roman AF
22029 XM
(takes a font object \050which can)
116 W( be a)117 W
10 /Courier AF
38474 XM
(font)SH
11 /Times-Roman AF
41266 XM
(or a)117 W
10 /Courier AF
43454 XM
(font-from-file)SH
11 /Times-Roman AF
(\051 and a)117 W
8280 37667 MT
(Lisp string, and returns the width in pixels of that string written in that font.  The)6 W
/Times-Italic SF
44221 XM
(start)SH
/Times-Roman SF
46520 XM
(and)SH
/Times-Italic SF
48388 XM
(end)SH
/Times-Roman SF
50256 XM
(parameters)SH
8280 38863 MT
(allow you to specify the beginning and ending indices of the portion of)SH
/Times-Italic SF
39777 XM
(string)SH
/Times-Roman SF
42620 XM
(that you want to measure.)SH
8280 41161 MT
(The function)33 W
10 /Courier AF
14273 XM
(string-height)SH
11 /Times-Roman AF
22382 XM
(takes a font \050or font-from-file\051 and a Lisp string, and returns the height in)34 W
8280 42357 MT
(pixels of that string written in that font.  There is an optional keyword)
109 W( parameter)108 W
/Times-Italic SF
45593 XM
(actual-heightp)SH
/Times-Roman SF
52392 XM
(which)SH
8280 43553 MT
(defaults to)299 W
9 SS 
13766 XM
(NIL)SH
11 SS 
(, and has exactly the same effect on the return)
299 W( value of)300 W
10 /Courier AF
43136 XM
(string-height)SH
11 /Times-Roman AF
51511 XM
(that the)300 W
10 /Courier AF
8280 44749 MT
(:actual-heightp)SH
11 /Times-Roman AF
17898 XM
(slot of an)343 W
10 /Courier AF
23296 XM
(opal:text)SH
11 /Times-Roman AF
29314 XM
(object has on the value of the)342 W
10 /Courier AF
44873 XM
(:height)SH
11 /Times-Roman AF
49690 XM
(slot of that)342 W
10 /Courier AF
8280 45945 MT
(opal:text)SH
11 /Times-Roman AF
13955 XM
(object \050see section 6.8.2\051.)SH
12 /Times-Bold AF
8280 49629 MT
(6.8.2. Text)SH
8 /Courier AF
10200 50993 MT
(\050create-instance 'opal:Text opal:graphical-object)SH
11160 51858 MT
(\050:maybe-constant '\050:left :top :string :font :actual-heightp :line-style :visible\051\051)SH
11160 52723 MT
(\050:string ""\051)SH
11160 53588 MT
(\050:font opal:default-font\051)SH
11160 54453 MT
(\050:actual-heightp NIL\051)SH
11160 55318 MT
(\050:justification :left\051)SH
11160 56183 MT
(\050:fill-background-p NIL\051)SH
11160 57048 MT
(\050:line-style opal:default-line-style\051)SH
11160 57913 MT
(\050:cursor-index NIL\051\051)SH
11 /Times-Roman AF
8280 60211 MT
(Instances of the)28 W
10 /Courier AF
15541 XM
(opal:text)SH
11 /Times-Roman AF
21244 XM
(class appear)
28 W( as a horizontal string of glyphs in a certain font.  The)29 W
10 /Courier AF
50880 XM
(:string)SH
11 /Times-Roman AF
8280 61407 MT
(slot holds the string to be displayed, and can contain multiple lines.  The)159 W
10 /Courier AF
42648 XM
(:font)SH
11 /Times-Roman AF
46082 XM
(slot specifies)
159 W( a font)158 W
8280 62603 MT
(object as described in the previous section \050an instance of)SH
10 /Courier AF
33876 XM
(opal:font)SH
11 /Times-Roman AF
39551 XM
(or)SH
10 /Courier AF
40742 XM
(opal:font-from-file)SH
11 /Times-Roman AF
(\051.)SH
8280 64901 MT
(The)SH
10 /Courier AF
10806 XM
(:line-style)SH
11 /Times-Roman AF
18222 XM
(slot can control the color of the object, and can hold any instance of)542 W
10 /Courier AF
8280 66097 MT
(opal:line-style)SH
11 /Times-Roman AF
(, such as)201 W
10 /Courier AF
21915 XM
(opal:red-line)SH
11 /Times-Roman AF
(. The)677 W
10 /Courier AF
33128 XM
(:foreground-color)SH
11 /Times-Roman AF
43804 XM
(slot of)
201 W( the)200 W
10 /Courier AF
49080 XM
(line-style)SH
11 /Times-Roman AF
8280 67293 MT
(object determines the color of the text.  When the)39 W
10 /Courier AF
30693 XM
(:fill-background-p)SH
11 /Times-Roman AF
41807 XM
(slot is T, then)
39 W( the background)40 W
8280 68489 MT
(of each glyph of the text)
72 W( is drawn with the color in the)71 W
10 /Courier AF
33371 XM
(:background-color)SH
11 /Times-Roman AF
43917 XM
(slot of the)71 W
10 /Courier AF
48805 XM
(line-style)SH
11 /Times-Roman AF
(.)SH
8280 69685 MT
(If the)SH
10 /Courier AF
10906 XM
(:fill-background-p)SH
11 /Times-Roman AF
21981 XM
(slot is)SH
9 SS 
24855 XM
(NIL)SH
11 SS 
(, then the background is unaffected.)SH
8280 71983 MT
(The)SH
10 /Courier AF
10451 XM
(:justification)SH
11 /Times-Roman AF
19312 XM
(slot can take one of the)
186 W( three values)187 W
10 /Courier AF
36807 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
40544 XM
(:center)SH
11 /Times-Roman AF
(, or)187 W
10 /Courier AF
46859 XM
(:right)SH
11 /Times-Roman AF
(, and tells)187 W
ES
%%Page: 178 27
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 178)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(whether the multiple-line string is left-, center-, or right-justified.  The default value is)SH
10 /Courier AF
44335 XM
(:left)SH
11 /Times-Roman AF
(.)SH
6120 10253 MT
(A vertical bar cursor before the)84 W
10 /Courier AF
20670 XM
(:cursor-index)SH
11 /Times-Roman AF
(th character.  If)83 W
10 /Courier AF
35793 XM
(:cursor-index)SH
11 /Times-Roman AF
43951 XM
(is 0, the cursor is at)83 W
6120 11449 MT
(the left of the string, and if it is >= the length)
194 W( of the string, then it is at the right of the string.  If)195 W
10 /Courier AF
6120 12645 MT
(:cursor-index)SH
11 /Times-Roman AF
14539 XM
(is)SH
9 SS 
15892 XM
(NIL)SH
11 SS 
(, then the cursor is turned off.  The)344 W
10 /Courier AF
36035 XM
(:cursor-index)SH
11 /Times-Roman AF
44454 XM
(slot is set by the)344 W
10 /Courier AF
6120 13841 MT
(inter:text-interactor)SH
11 /Times-Roman AF
18995 XM
(during text editing.)SH
8 /Courier AF
8040 16491 MT
(opal:Get-Cursor-Index)SH
/Times-Italic SF
18600 XM
(string-obj x y)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 17912 MT
(This function returns the)
55 W( appropriate cursor-index for the \050x,y\051 location in the string.  It assumes that the)56 W
6120 19108 MT
(string is displayed on the screen.  This is useful for getting)
14 W( the position in the string when the user presses)13 W
6120 20304 MT
(over it with the mouse.)SH
6120 22602 MT
(The slot)228 W
10 /Courier AF
10426 XM
(:actual-heightp)SH
11 /Times-Roman AF
19930 XM
(determines whether the height of the string is the actual height of the)229 W
6120 23798 MT
(characters used, or the maximum height of the font.  This will)
57 W( make a difference in variable size fonts if)56 W
6120 24994 MT
(you have boxes around the characters or if you are using a cursor \050see section)
79 W( 6.8.2\051.  The default \050)80 W
9 SS 
(NIL)SH
11 SS 
(\051)SH
6120 26190 MT
(means that the height of the font is used so all strings that are drawn with the)
118 W( same font will have the)117 W
6120 27386 MT
(same height.)SH
6120 29684 MT
(The)SH
10 /Courier AF
8162 XM
(:width)SH
11 /Times-Roman AF
12094 XM
(and)SH
10 /Courier AF
14014 XM
(:height)SH
11 /Times-Roman AF
18546 XM
(slots reflect the correct width and height for the string,)
57 W( but cannot be used to)58 W
6120 30880 MT
(change the size \050i.e.,)SH
/Times-Bold SF
15373 XM
(do not set the)SH
10 /Courier AF
21911 XM
(:width)SH
11 /Times-Bold AF
25786 XM
(or)SH
10 /Courier AF
27099 XM
(:height)SH
11 /Times-Bold AF
31574 XM
(slots)SH
/Times-Roman SF
(\051.)SH
12 /Times-Bold AF
6120 34564 MT
(6.8.3. Scrolling Text Objects)SH
11 /Times-Roman AF
6120 35760 MT
(When an)99 W
10 /Courier AF
10532 XM
(opal:text)SH
11 /Times-Roman AF
16306 XM
(or)SH
10 /Courier AF
17596 XM
(opal:multifont-text)SH
11 /Times-Roman AF
29370 XM
(object is used inside a scrolling-window, there is)
99 W( an)98 W
6120 36956 MT
(option that allows the window to scroll automatically whenever the cursor is moved out of the top or)149 W
6120 38152 MT
(bottom of the visible region.  To use this feature, two things need to be done:)SH
8320 39605 MT
(1.)SH
9420 XM
(The)SH
10 /Courier AF
11428 XM
(:scrolling-window)SH
11 /Times-Roman AF
21926 XM
(slot of the text object must contain the)
23 W( scrolling window object.)22 W
8320 41499 MT
(2.)SH
9420 XM
(The text object must also have its)SH
10 /Courier AF
24421 XM
(:auto-scroll-p)SH
11 /Times-Roman AF
33096 XM
(slot set to T.)SH
6120 43797 MT
(NOTE: Auto scroll is NOT the same as word wrap.  If the cursor)
90 W( is moved out of the right edge of the)91 W
6120 44993 MT
(window, auto-scroll will not do anything.)SH
6120 47291 MT
(For an example of how)
18 W( the auto-scroll feature works, look at the code for Demo-Multifont.  Try the demo)17 W
6120 48487 MT
(with the)SH
10 /Courier AF
9970 XM
(:auto-scroll-p)SH
11 /Times-Roman AF
18645 XM
(slot of the object)SH
10 /Courier AF
26283 XM
(demo-multifont::text1)SH
11 /Times-Roman AF
39158 XM
(set to both T and NIL.)SH
6120 50785 MT
(Auto scroll does not keep track of changes in family, font, size, or when a segment)
45 W( is cut or pasted.  The)46 W
10 /Courier AF
6120 51981 MT
(:auto-scroll)SH
11 /Times-Roman AF
13595 XM
(method has to be invoked explicitly in such cases, using the following method:)SH
8 /Courier AF
8040 53194 MT
(gg:Auto-Scroll)SH
/Times-Italic SF
15240 XM
(text-obj)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 55492 MT
(For examples of calling)SH
10 /Courier AF
16812 XM
(gg:auto-scroll)SH
11 /Times-Roman AF
25487 XM
(explicitly, look at the menu functions in Demo-Multifont.)SH
14 /Times-Bold AF
6120 59310 MT
(6.9. Bitmaps)SH
8 /Courier AF
8520 60475 MT
(\050create-instance 'opal:Bitmap opal:graphical-object)SH
9000 61340 MT
(\050:maybe-constant '\050:left :top :image :filling-style :visible\051\051)SH
9000 62205 MT
(\050:image NIL\051)SH
9000 63070 MT
(\050:filling-style opal:default-filling-style\051)SH
9000 63935 MT
(...\051)SH
11 /Times-Roman AF
6120 65356 MT
(On the Mac, and in the usual case with X/11, the)119 W
10 /Courier AF
29148 XM
(:image)SH
11 /Times-Roman AF
33142 XM
(slot contains a)
119 W( machine-dependent structure)118 W
6120 66552 MT
(generated by the function)14 W
10 /Courier AF
17660 XM
(opal:read-image)SH
11 /Times-Roman AF
26950 XM
(\050see below\051.  Under X/11, there are a variety of other CLX)15 W
6120 67748 MT
(image objects that can be stored in this slot \050consult your CLX manual for details on images\051.)SH
6120 70046 MT
(Bitmaps can be any size.  Opal provides a function to read in a bitmap image from a file:)SH
8 /Courier AF
8040 71259 MT
(opal:Read-Image)SH
/Times-Italic SF
15720 XM
(file-name)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
ES
%%Page: 179 28
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.10)
SH( Pixmaps)1800 W
51386 XM
(Page 179)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10268 XM
(read-image)SH
11 /Times-Roman AF
16546 XM
(function reads a bitmap)
3 W( image from)2 W
/Times-Italic SF
32567 XM
(file-name)SH
/Times-Roman SF
36998 XM
(which is stored in the default X/11 ".bm")2 W
8280 9151 MT
(file format.)
909 W( Files)
2095 W( of this format may be generated by using the Unix program)910 W
10 /Courier AF
8280 10347 MT
(/usr/misc/.X11/bin/bitmap)SH
11 /Times-Roman AF
(.)SH
8280 12645 MT
(The)SH
10 /Courier AF
10364 XM
(:filling-style)SH
11 /Times-Roman AF
19137 XM
(slot can contain any instance of)98 W
10 /Courier AF
33837 XM
(opal:filling-style)SH
11 /Times-Roman AF
(. If)
471 W( the)98 W
10 /Courier AF
48480 XM
(:fill-style)SH
11 /Times-Roman AF
8280 13841 MT
(of the bitmap's)53 W
10 /Courier AF
15374 XM
(:filling-style)SH
11 /Times-Roman AF
24102 XM
(is)SH
10 /Courier AF
25165 XM
(:solid)SH
11 /Times-Roman AF
29094 XM
(or)SH
10 /Courier AF
30339 XM
(:opaque-stippled)SH
11 /Times-Roman AF
(, then the bitmap will appear with)54 W
8280 15037 MT
(that filling-style's foreground-color and background-color.)
34 W( If,)
342 W( however, the)33 W
10 /Courier AF
42240 XM
(:fill-style)SH
11 /Times-Roman AF
49148 XM
(of the filling-)33 W
8280 16233 MT
(style is)127 W
10 /Courier AF
11896 XM
(:stippled)SH
11 /Times-Roman AF
(, then the bitmap will appear with the filling-style's)127 W
10 /Courier AF
41353 XM
(:foreground-color)SH
11 /Times-Roman AF
(, but its)128 W
8280 17429 MT
(background will be transparent.  For example, the following)
81 W( code creates a bitmap which will be drawn)80 W
8280 18625 MT
(with a red and white)
845 W( stipple \050because white is the default)846 W
10 /Courier AF
42843 XM
(:background-color)SH
11 /Times-Roman AF
54164 XM
(of)SH
10 /Courier AF
8280 19821 MT
(opal:filling-style)SH
11 /Times-Roman AF
(\051:)SH
8 /Courier AF
10200 20986 MT
(\050create-instance 'RED-ARROW opal:arrow-cursor)SH
11640 21851 MT
(\050:filling-style \050create-instance NIL opal:filling-style)SH
20760 22716 MT
(\050:foreground-color opal:red\051)SH
20760 23581 MT
(\050:fill-style :stippled\051\051\051\051)SH
11 /Times-Roman AF
8280 25879 MT
(There are several functions supplied for generating halftone images, which can)
123 W( then be supplied to the)122 W
10 /Courier AF
8280 27075 MT
(:image)SH
11 /Times-Roman AF
12323 XM
(slot of a bitmap object.  These functions are used to)
168 W( create the filling styles returned by the)169 W
10 /Courier AF
8280 28271 MT
(halftone)SH
11 /Times-Roman AF
13355 XM
(function \050section 5.3.1\051.)SH
8 /Courier AF
10200 30921 MT
(opal:Halftone-Image)SH
/Times-Italic SF
19800 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 32342 MT
(The)SH
10 /Courier AF
10461 XM
(halftone-image)SH
11 /Times-Roman AF
19332 XM
(function returns)
196 W( a image for use in the)195 W
10 /Courier AF
37937 XM
(:image)SH
11 /Times-Roman AF
42007 XM
(slot of a bitmap object. The)195 W
/Times-Italic SF
8280 33538 MT
(percentage)SH
/Times-Roman SF
13457 XM
(argument is used to specify the shade of the halftone \0500 is white and 100)
16 W( black\051. This image is)17 W
8280 34734 MT
(as close as possible)
105 W( to the)104 W
/Times-Italic SF
20455 XM
(percentage)SH
/Times-Roman SF
25720 XM
(halftone value as can be generated.  Since a range of)104 W
/Times-Italic SF
50194 XM
(percentage)SH
/Times-Roman SF
8280 35930 MT
(values map onto each halftone image,)
248 W( two additional functions are provided to get images that are)249 W
8280 37126 MT
(guaranteed to be one shade different or one shade lighter than a specified value.)SH
8 /Courier AF
10200 39776 MT
(opal:Halftone-Image-Darker)SH
/Times-Italic SF
23160 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 41506 MT
(opal:Halftone-Image-Lighter)SH
/Times-Italic SF
23640 XM
(percentage)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 43804 MT
(The)SH
10 /Courier AF
10491 XM
(halftone-image-darker)SH
11 /Times-Roman AF
23592 XM
(and)SH
10 /Courier AF
25681 XM
(halftone-image-lighter)SH
11 /Times-Roman AF
39382 XM
(functions return a)
226 W( halftone that is)225 W
8280 45000 MT
(guaranteed to be exactly one shade darker than the halftone with the specified)143 W
/Times-Italic SF
44621 XM
(percentage)SH
/Times-Roman SF
(. With these)144 W
8280 46196 MT
(functions you are guaranteed to get a)
32 W( different darker \050or lighter\051 image.  Currently, there are 17 different)31 W
8280 47392 MT
(halftone shades.)SH
8280 49690 MT
(The)SH
10 /Courier AF
10269 XM
(:width)SH
/Times-Roman SF
(, and)4 W
/Courier SF
16421 XM
(:height)SH
11 /Times-Roman AF
20900 XM
(slots reflect the correct width and height for the bitmap, but cannot)
4 W( be used to)5 W
8280 50886 MT
(change the size \050i.e.,)SH
/Times-Bold SF
17533 XM
(do not set the)SH
10 /Courier AF
24071 XM
(:width)SH
11 /Times-Bold AF
27946 XM
(or)SH
10 /Courier AF
29259 XM
(:height)SH
11 /Times-Roman AF
33734 XM
(slots\051\051.)SH
14 /Times-Bold AF
8280 54704 MT
(6.10. Pixmaps)SH
8 /Courier AF
10680 55869 MT
(\050create-instance 'opal:pixmap opal:bitmap)SH
11160 56734 MT
(\050:image NIL\051)SH
11160 57599 MT
(\050:line-style opal:default-line-style\051)SH
11160 58464 MT
(\050:pixarray \050o-formula \050if \050gvl :image\051)SH
23640 59329 MT
(\050gem:image-to-array \050gv-local :self :window\051)SH
33240 60194 MT
(\050gvl :image\051\051\051\051\051\051)SH
11160 61059 MT
(...\051)SH
11 /Times-Roman AF
8280 64222 MT
(This object is similar to the)25 W
10 /Courier AF
20714 XM
(opal:bitmap)SH
11 /Times-Roman AF
27614 XM
(object, except that it handles images which use more than)
25 W( one)24 W
8280 65418 MT
(bit per pixel.)SH
8280 67716 MT
(The)SH
10 /Courier AF
10753 XM
(:image)SH
11 /Times-Roman AF
15116 XM
(slot works)
488 W( exactly like that of)489 W
10 /Courier AF
31369 XM
(opal:bitmap)SH
11 /Times-Roman AF
(, in conjunction with the function)489 W
10 /Courier AF
8280 68912 MT
(opal:read-xpm-file)SH
11 /Times-Roman AF
19355 XM
(\050see below\051.)SH
8280 71210 MT
(The)SH
10 /Courier AF
10358 XM
(:pixarray)SH
11 /Times-Roman AF
16125 XM
(slot contains an array of colormap indices.  This is useful if you want to manipulate a)92 W
ES
%%Page: 180 29
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 180)
SH( Opal)830 W
36429 XM
(Specific Graphical Objects)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(pixmap directly, as in the demo "demo-pixmap".)SH
6120 10253 MT
(The)SH
10 /Courier AF
8161 XM
(:width)SH
/Times-Roman SF
(, and)56 W
/Courier SF
14417 XM
(:height)SH
11 /Times-Roman AF
18948 XM
(slots reflect the correct)
56 W( width and height for the pixmap, but cannot be used)57 W
6120 11449 MT
(to change the size \050i.e.,)SH
/Times-Bold SF
16504 XM
(do not set the)SH
10 /Courier AF
23042 XM
(:width)SH
11 /Times-Bold AF
26917 XM
(or)SH
10 /Courier AF
28230 XM
(:height)SH
11 /Times-Bold AF
32705 XM
(slots)SH
/Times-Roman SF
(\051.)SH
12 /Times-Bold AF
6120 15133 MT
(6.10.1. Creating a pixmap)SH
11 /Times-Roman AF
6120 16329 MT
(The following routine can be used to create an image for a pixmap.)SH
8 /Courier AF
8040 17542 MT
(opal:Read-XPM-File)SH
/Times-Italic SF
17160 XM
(pathname)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 19840 MT
(The argument)107 W
/Times-Italic SF
12748 XM
(pathname)SH
/Times-Roman SF
17468 XM
(should be the)
107 W( name of a file containing a C pixmap image.)106 W
10 /Courier AF
45120 XM
(Read-xpm-file)SH
11 /Times-Roman AF
6120 21036 MT
(returns an X-specific or Mac-specific object, which then should be put in)
300 W( the)301 W
10 /Courier AF
44048 XM
(:image)SH
11 /Times-Roman AF
48224 XM
(slot of an)301 W
10 /Courier AF
6120 22232 MT
(opal:pixmap)SH
11 /Times-Roman AF
(. The)
395 W( file)59 W
/Times-Italic SF
17509 XM
(pathname)SH
/Times-Roman SF
22181 XM
(containing the C pixmap image should be in the)59 W
/Times-Italic SF
44069 XM
(xpm)SH
/Times-Roman SF
46235 XM
(format. Please)393 W
6120 23428 MT
(refer to the X Window System documentation for more details about that format.)SH
6120 25726 MT
(The function)67 W
10 /Courier AF
12180 XM
(read-xpm-file)SH
11 /Times-Roman AF
20322 XM
(will read pixmaps in the XPM1 or XPM2 format.  Files in these formats)68 W
6120 26922 MT
(are produced by the program)65 W
10 /Courier AF
19424 XM
(ppmtoxpm)SH
11 /Times-Roman AF
24564 XM
(and the OpenLook)64 W
10 /Courier AF
33217 XM
(IconEditor)SH
11 /Times-Roman AF
39556 XM
(utility. The)403 W
10 /Courier AF
45188 XM
(ppm)SH
11 /Times-Roman AF
47327 XM
(collection of)64 W
6120 28118 MT
(utilities are useful for)
109 W( converting one format into another.  If you do not have them, you can)110 W
9 SS 
48785 XM
(FTP)SH
11 SS 
50720 XM
(them)SH
6120 29314 MT
(from one of the standard sites that store Unix utilities.)SH
6120 31612 MT
(In Unix, to convert the contents of a color window into an)28 W
/Times-Italic SF
32269 XM
(xpm)SH
/Times-Roman SF
34404 XM
(format file,)
28 W( you can use programs such as)27 W
10 /Courier AF
6120 32808 MT
(xwd)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8470 XM
(xwdtopnm)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13820 XM
(ppmtoxpm)SH
11 /Times-Roman AF
(, etc.  For example, inside a Unix shell, type:)SH
8 /Courier AF
8040 33973 MT
(xwd > foo.xwd)SH
11 /Times-Roman AF
6120 36271 MT
(When the cursor changes to a plus, click on the window you want to dump.  Then type:)SH
8 /Courier AF
8040 37436 MT
(xwdtopnm foo.xwd > foo.ppm)SH
8040 38301 MT
(ppmtoxpm foo.ppm > foo.xpm)SH
11 /Times-Roman AF
6120 40599 MT
(This will create a file named "foo.xpm".  Finally, in Garnet, type:)SH
8 /Courier AF
8040 41764 MT
(\050create-instance 'FOO opal:pixmap)SH
9480 42629 MT
(\050:image \050opal:read-xpm-file "foo.xpm"\051\051\051)SH
11 /Times-Roman AF
6120 44927 MT
(Here are two more routines that can be used to create images for pixmaps.)SH
8 /Courier AF
8040 46140 MT
(opal:Create-Pixmap-Image)SH
/Times-Italic SF
20040 XM
(width height)SH
/Courier SF
24497 XM
(&optional)SH
/Times-Italic SF
29297 XM
(color)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 47561 MT
(This creates a solid color pixmap image.  If you wanted)
151 W( to create a pixmap whose image was, say, a)152 W
6120 48757 MT
(20x30 blue rectangle, you would say:)SH
8 /Courier AF
8040 49922 MT
(\050create-instance 'BLUE-PIXMAP opal:pixmap)SH
9480 50787 MT
(\050:image \050opal:create-pixmap-image 20 30 opal:blue\051\051\051)SH
11 /Times-Roman AF
6120 53085 MT
(If no color is given, the color defaults to white.)SH
8 /Courier AF
8040 54298 MT
(opal:Window-To-Pixmap-Image)SH
/Times-Italic SF
21480 XM
(window)SH
/Courier SF
24450 XM
(&key)SH
/Times-Italic SF
26850 XM
(left top width height)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 55719 MT
(This creates an image containing the contents of a Garnet window, within)
70 W( a rectangular region specified)69 W
6120 56915 MT
(by the values)9 W
/Times-Italic SF
12226 XM
(left)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
14191 XM
(top)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
16156 XM
(width)SH
/Times-Roman SF
(, and)9 W
/Times-Italic SF
21033 XM
(height)SH
/Times-Roman SF
(. Left)
293 W( and top)
9 W( default to 0.)10 W
/Times-Italic SF
36180 XM
(Width)SH
/Times-Roman SF
39093 XM
(and)SH
/Times-Italic SF
40966 XM
(height)SH
/Times-Roman SF
44001 XM
(default to the values)10 W
6120 58111 MT
(of the)SH
10 /Courier AF
8930 XM
(:width)SH
11 /Times-Roman AF
12805 XM
(and)SH
10 /Courier AF
14668 XM
(:height)SH
11 /Times-Roman AF
19143 XM
(slots of the window, respectively.)SH
12 /Times-Bold AF
6120 61795 MT
(6.10.2. Storing a pixmap)SH
8 /Courier AF
8040 64456 MT
(opal:Write-XPM-File)SH
/Times-Italic SF
17640 XM
(pixmap pathname)SH
/Courier SF
23830 XM
(&key)SH
/Times-Italic SF
26230 XM
(\050xpm-format :xpm1\051)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 66754 MT
(This function writes the)191 W
10 /Courier AF
17638 XM
(:image)SH
11 /Times-Roman AF
21704 XM
(of a pixmap object into a)
191 W( C pixmap file whose name is)190 W
/Times-Italic SF
48307 XM
(pathname)SH
/Times-Roman SF
(.)SH
10 /Courier AF
6120 67950 MT
(Write-xpm-file)SH
11 /Times-Roman AF
14890 XM
(will write pixmap files in either)
95 W( XPM1 or XPM2 format, depending on the value of)96 W
6120 69146 MT
(the)SH
/Times-Italic SF
7854 XM
(xpm-format)SH
/Times-Roman SF
13376 XM
(key, which may be either)115 W
10 /Courier AF
25313 XM
(:xpm1)SH
11 /Times-Roman AF
28703 XM
(or)SH
10 /Courier AF
30008 XM
(:xpm2)SH
11 /Times-Roman AF
(. By)
503 W( default, the function generates files in)114 W
6120 70342 MT
(XPM1 format, which can be read by the)SH
10 /Courier AF
24049 XM
(xpmtoppm)SH
11 /Times-Roman AF
29124 XM
(utility.)SH
ES
%%Page: 181 30
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 7)
SH( Multifont)1550 W
51386 XM
(Page 181)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(7. Multifont)SH
8 /Courier AF
10200 10493 MT
(\050create-instance 'opal:Multifont-Text opal:aggregate)SH
11640 11358 MT
(\050:left 0\051)SH
11640 12223 MT
(\050:top 0\051)SH
11640 13088 MT
(\050:initial-text ...\051)SH
11640 13953 MT
(\050:word-wrap-p NIL\051)SH
11640 14818 MT
(\050:text-width 300\051)SH
11640 15683 MT
(\050:current-font ...\051)SH
11640 16548 MT
(\050:current-fcolor ...\051)SH
11640 17413 MT
(\050:current-bcolor ...\051)SH
11640 18278 MT
(\050:fill-background-p T\051)SH
11640 19143 MT
(\050:draw-function :copy\051)SH
11640 20008 MT
(\050:show-marks NIL\051\051)SH
11 /Times-Roman AF
8280 22306 MT
(The)SH
10 /Courier AF
11221 XM
(multifont-text)SH
11 /Times-Roman AF
20852 XM
(object is loaded by default, since)
956 W( it is used by the new)957 W
10 /Courier AF
8280 23502 MT
(garnet-debug:Inspector)SH
11 /Times-Roman AF
(. If)
1321 W( you are not already)
523 W( loading the)522 W
10 /Courier AF
41944 XM
(Inspector)SH
11 /Times-Roman AF
(, you can load)522 W
10 /Courier AF
8280 24698 MT
(multifont-text)SH
11 /Times-Roman AF
16955 XM
(and all of its interactors with)SH
10 /Courier AF
29847 XM
(\050garnet-load "opal:multifont-loader"\051)SH
11 /Times-Roman AF
(.)SH
8280 27331 MT
(The)SH
10 /Courier AF
10542 XM
(opal:multifont-text)SH
11 /Times-Roman AF
22494 XM
(object is designed to allow users to create more)
277 W( complicated editing)278 W
8280 28527 MT
(applications. The)
549 W( object is similar to the)137 W
10 /Courier AF
27555 XM
(opal:text)SH
11 /Times-Roman AF
33367 XM
(object with many added abilities.)
137 W( As)
547 W( the name)136 W
8280 29723 MT
(implies, the)42 W
10 /Courier AF
13773 XM
(opal:multifont-text)SH
11 /Times-Roman AF
25490 XM
(object can accept text input in multiple fonts.  Also, the)
42 W( object has)43 W
8280 30919 MT
(a word wrap mode to permit word-processor-like editing as well as the ability to highlight)
233 W( text for)232 W
8280 32115 MT
(selection.)SH
8280 34413 MT
(Positioning the object is performed)
5 W( with)6 W
10 /Courier AF
26278 XM
(:left)SH
11 /Times-Roman AF
29559 XM
(and)SH
10 /Courier AF
31428 XM
(:top)SH
11 /Times-Roman AF
34109 XM
(as with most Garnet objects.  The slots)6 W
10 /Courier AF
51480 XM
(:width)SH
11 /Times-Roman AF
8280 35609 MT
(and)SH
10 /Courier AF
10147 XM
(:height)SH
11 /Times-Roman AF
14626 XM
(are read-only and can be used to see the size of the object, but should not be changed by the)4 W
8280 36805 MT
(user. The)417 W
10 /Courier AF
13136 XM
(:initial-text)SH
11 /Times-Roman AF
21283 XM
(slot is used to initialize the contents of the)72 W
10 /Courier AF
40722 XM
(multifont-text)SH
11 /Times-Roman AF
(. The)
419 W( format)72 W
8280 38001 MT
(of the)13 W
10 /Courier AF
11116 XM
(:initial-text)SH
11 /Times-Roman AF
19204 XM
(slot is complicated enough that the next section is devoted to)
13 W( discussing it.  If the)12 W
8280 39197 MT
(user is not particular)
362 W( about the font of the initial contents, a simple string is sufficient for the)363 W
10 /Courier AF
8280 40393 MT
(:initial-text)SH
11 /Times-Roman AF
16484 XM
(slot. The)
533 W( slots)129 W
10 /Courier AF
23693 XM
(:word-wrap-p)SH
11 /Times-Roman AF
31297 XM
(and)SH
10 /Courier AF
33289 XM
(:text-width)SH
11 /Times-Roman AF
40293 XM
(control the word wrap mode.  If)128 W
10 /Courier AF
8280 41589 MT
(:word-wrap-p)SH
11 /Times-Roman AF
16087 XM
(is T, the text will wrap)
332 W( at the pixel width given in the)333 W
10 /Courier AF
44059 XM
(:text-width)SH
11 /Times-Roman AF
51267 XM
(slot. If)941 W
10 /Courier AF
8280 42785 MT
(:word-wrap-p)SH
11 /Times-Roman AF
15820 XM
(is)SH
9 SS 
16894 XM
(NIL)SH
11 SS 
(, word wrap mode will not be activated and no wrapping will occur.  In this)
65 W( case,)64 W
8280 43981 MT
(your string should contain)154 W
10 /Courier AF
20690 XM
(#\134newline)SH
11 /Times-Roman AF
(s wherever required.  Both)154 W
10 /Courier AF
38832 XM
(:word-wrap-p)SH
11 /Times-Roman AF
46462 XM
(and)SH
10 /Courier AF
48480 XM
(:text-width)SH
11 /Times-Roman AF
8280 45177 MT
(can be modified at run time.)SH
8280 47475 MT
(The)SH
10 /Courier AF
10301 XM
(:current-font)SH
11 /Times-Roman AF
18412 XM
(slot can be used to control what font newly added characters)
36 W( will appear as.  Also,)35 W
8280 48671 MT
(the)SH
10 /Courier AF
9905 XM
(:current-font)SH
11 /Times-Roman AF
17986 XM
(slot can be polled to determine the last font of the character the cursor most recently)7 W
8280 49867 MT
(passed over.  The slots)35 W
10 /Courier AF
18719 XM
(:current-fcolor)SH
11 /Times-Roman AF
28029 XM
(and)SH
10 /Courier AF
29927 XM
(:current-bcolor)SH
11 /Times-Roman AF
39237 XM
(act similarly for the foreground)
35 W( and)34 W
8280 51063 MT
(background colors of the text.  The slot)363 W
10 /Courier AF
28749 XM
(:fill-background-p)SH
11 /Times-Roman AF
40187 XM
(controls the background of)
363 W( the)364 W
8280 52259 MT
(characters. If)837 W
10 /Courier AF
15411 XM
(:fill-background-p)SH
11 /Times-Roman AF
26767 XM
(is T, the background of the)
281 W( character will be drawn in the)280 W
10 /Courier AF
8280 53455 MT
(:current-bcolor)SH
11 /Times-Roman AF
(. If)417 W
10 /Courier AF
19325 XM
(:fill-background-p)SH
11 /Times-Roman AF
30471 XM
(is)SH
9 SS 
31551 XM
(NIL)SH
11 SS 
(, the background of)
71 W( the glyphs will not be drawn)72 W
8280 54651 MT
(at all \050allowing whatever is behind the multifont text object to show through\051.)
101 W( The)
476 W( slot)100 W
10 /Courier AF
48480 XM
(:show-marks)SH
11 /Times-Roman AF
8280 55847 MT
(turns on)
48 W( and off the visibility of text marks.  If)49 W
10 /Courier AF
29532 XM
(:show-marks)SH
11 /Times-Roman AF
36456 XM
(is T, text-marks will be visible, appearing)49 W
8280 57043 MT
(as little carats pointing to the character to which)
55 W( they are stuck.  When)54 W
10 /Courier AF
40291 XM
(:show-marks)SH
11 /Times-Roman AF
47220 XM
(is NIL, the marks)54 W
8280 58239 MT
(will be invisible.)SH
8280 60537 MT
(Along with the multi-font text)
30 W( object are a pair of special interactors that make them editable \050see section)31 W
8280 61733 MT
(7.3\051. The)
637 W( font object and the two interactors are combined into the)181 W
10 /Courier AF
40354 XM
(multifont-gadget)SH
11 /Times-Roman AF
50410 XM
(gadget for)181 W
8280 62929 MT
(convenience \050section 7.6\051.)SH
8280 65227 MT
(There are two demos that show off multifont capabilities.)393 W
10 /Courier AF
38025 XM
(Demo-text)SH
11 /Times-Roman AF
44094 XM
(shows how to use the)394 W
10 /Courier AF
8280 66423 MT
(multifont-text)SH
11 /Times-Roman AF
17040 XM
(object with the)85 W
10 /Courier AF
24108 XM
(multifont-text-interactor)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
40103 XM
(Demo-multifont)SH
11 /Times-Roman AF
48862 XM
(shows how to)84 W
8280 67619 MT
(use multiple text fields in a single window)
649 W( with the)650 W
10 /Courier AF
37567 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 68815 MT
(selection-interactor)SH
11 /Times-Roman AF
(, and demonstrates the indentation and paren-matching features of lisp mode.)SH
ES
%%Page: 182 31
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 182)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(7.1. Format of the :initial-text Slot)SH
11 /Times-Roman AF
6120 9334 MT
(The format used in the)319 W
10 /Courier AF
17948 XM
(:initial-text)SH
11 /Times-Roman AF
26342 XM
(slot of)319 W
10 /Courier AF
30036 XM
(multifont-text)SH
11 /Times-Roman AF
39030 XM
(is also used by many of the)319 W
6120 10530 MT
(procedures and functions that can be called using the multifont object.)SH
6120 12828 MT
(In its simplest form, the)17 W
10 /Courier AF
16961 XM
(:initial-text)SH
11 /Times-Roman AF
25053 XM
(format can be a single string.  In this form, the default font)
17 W( and)18 W
6120 14024 MT
(colors are used.  The simplest values for)SH
10 /Courier AF
24111 XM
(:initial-text)SH
11 /Times-Roman AF
32186 XM
(are:)SH
8 /Courier AF
8040 15189 MT
("Here is my example string.")SH
8040 16919 MT
("An example string)SH
8040 17784 MT
(with multiple lines.")SH
11 /Times-Roman AF
6120 20082 MT
(All other formats require a list structure.  The outermost list is the list of)
87 W( lines:)86 W
10 /Courier AF
42548 XM
(\050list line1 line2)86 W
6120 21278 MT
(... \051)31 W
11 /Times-Roman AF
(. A)
338 W( line can either be a string in which case the default font and colors are used, or a line can be a)32 W
6120 22474 MT
(list of fragments:)187 W
10 /Courier AF
14934 XM
(\050list frag1 frag2 ... \051)187 W
11 /Times-Roman AF
(. Each)
649 W( line acts as though it ends)
187 W( with a newline)186 W
6120 23670 MT
(character. If)
607 W( the)167 W
10 /Courier AF
14265 XM
(multifont-text)SH
11 /Times-Roman AF
23107 XM
(has word wrap activated, each line will also be broken at places)167 W
6120 24866 MT
(where the length of the text exceeds the)50 W
10 /Courier AF
24233 XM
(:text-width)SH
11 /Times-Roman AF
(, thus the user need not compute how to break up)49 W
6120 26062 MT
(the text to be placed)
31 W( in the window.  A fragment is the unit that allows the user to enter font data into the)32 W
10 /Courier AF
6120 27258 MT
(:initial-text)SH
11 /Times-Roman AF
14195 XM
(format. A)
275 W( fragment can be one of the following:)SH
/Symbol SF
8089 28836 MT
(\267)SH
/Times-Roman SF
8870 XM
(a string, in which case the defaults are used.)SH
/Symbol SF
8089 30032 MT
(\267)SH
/Times-Roman SF
8870 XM
(a "cons"ing of a string with a Garnet font:)SH
10 /Courier AF
27852 XM
(\050cons "string" garnet-font\051)SH
11 /Times-Roman AF
(.)SH
/Symbol SF
8089 31228 MT
(\267)SH
/Times-Roman SF
8870 XM
(a list of a)
127 W( string, font, foreground color, and background color:)126 W
10 /Courier AF
38518 XM
(\050list "string" font)126 W
8870 32424 MT
(f-color b-color\051)SH
11 /Times-Roman AF
(. If)275 W
/Times-Italic SF
20302 XM
(font)SH
/Times-Roman SF
22289 XM
(or)SH
/Times-Italic SF
23480 XM
(color)SH
/Times-Roman SF
26077 XM
(is NIL, the default will be used.)SH
/Symbol SF
8089 33620 MT
(\267)SH
/Times-Roman SF
8870 XM
(a)SH
10 /Courier AF
9633 XM
(view-object)SH
11 /Times-Roman AF
16508 XM
(\050see 7.2.6\051.)SH
/Symbol SF
8089 34816 MT
(\267)SH
/Times-Roman SF
8870 XM
(a mark, in the form)SH
10 /Courier AF
17606 XM
(\050list :mark sticky-left name info\051)SH
11 /Times-Roman AF
38281 XM
(\050see 7.2.7\051.)SH
6120 37114 MT
(Note that only the fragment level contains font or color information.  For instance, a single line)
88 W( in bold)89 W
6120 38310 MT
(font may look like this:)SH
8 /Courier AF
8520 39475 MT
(`\050\050\050"Here is my example string" . ,\050opal:get-standard-font :fixed :bold :medium\051\051\051\051)SH
11 /Times-Roman AF
6120 40896 MT
(Here is a set of sample values for the)156 W
10 /Courier AF
24047 XM
(:initial-text)SH
11 /Times-Roman AF
32278 XM
(slot. Each)
587 W( of these examples are pictured)
156 W( in)155 W
6120 42092 MT
(Figure 7-1.  Details on using fonts, colors, marks, and graphical objects are given in section 7.2.)SH
8 /Times-Italic AF
8040 43305 MT
(; Define some fonts for brevity, and a circle to use in a string.)SH
/Courier SF
8040 44170 MT
(\050setf ITALIC \050opal:get-standard-font :fixed :italic :medium\051\051)SH
8040 45035 MT
(\050setf BOLD)
SH( \050opal:get-standard-font)
960 W( :fixed :bold :medium\051\051)SH
8040 45900 MT
(\050create-instance 'MY-CIRCLE opal:circle\051)SH
/Times-Italic SF
8040 47630 MT
(; A pair of lines.  Both lines are strings.)SH
/Courier SF
8040 48495 MT
('\050"An example string" "with multiple lines"\051)SH
/Times-Italic SF
8040 50225 MT
(; Same pair of lines in italics.)SH
/Courier SF
8040 51090 MT
(`\050\050\050"An example string" . ,ITALIC\051\051)SH
9000 51955 MT
(\050\050"with multiple lines" . ,ITALIC\051\051\051)SH
/Times-Italic SF
8040 53685 MT
(; A single line with multiple fragments.  Note fragments can be strings)SH
8040 54550 MT
(; when default font is desired.)SH
/Courier SF
8040 55415 MT
(`\050\050"Here " \050"is" . ,ITALIC\051 " my " \050"example" . ,BOLD\051 " string."\051\051)SH
/Times-Italic SF
8040 57145 MT
(; A single line containing a graphical object)SH
/Courier SF
8040 58010 MT
(`\050\050"Here is a circle:" ,MY-CIRCLE\051\051)SH
/Times-Italic SF
8040 59740 MT
(; A single line with colored fragments)SH
/Courier SF
8040 60605 MT
(`\050\050"Here is " \050"yellow" ,BOLD ,opal:yellow\051 " and " \050"red" ,BOLD ,opal:red\051 " text"\051\051)SH
/Times-Italic SF
8040 62335 MT
(; A single line with marks.  Note: make marks visible by setting)SH
/Courier SF
28711 XM
(:show-marks)SH
/Times-Italic SF
34471 XM
(to)SH
/Courier SF
35573 XM
(T.)SH
8040 63200 MT
(`\050\050"The " \050:mark NIL\051 "\050parentheses\051" \050:mark T\051 " are marked"\051\051\051)SH
14 /Times-Bold AF
6120 67018 MT
(7.2. Functions on Multifont Text)SH
11 /Times-Roman AF
6120 68214 MT
(The)SH
10 /Courier AF
8239 XM
(opal:multifont-text)SH
11 /Times-Roman AF
20048 XM
(differs from most objects in that it has a great number of functions)
134 W( that)135 W
6120 69410 MT
(operate on it.  The functions range from)
208 W( mundane cursor movement to complicated operations upon)207 W
6120 70606 MT
(selected text.  Very few operations can be performed by manipulating the slots of a multifont object.)SH
ES
%%Page: 183 32
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 7.2)
SH( Functions)
1800 W( on Multifont Text)SH
51386 XM
(Page 183)SH
46800 50 8280 4486 UL
11 SS 
75 100 0 8730 45300 GB 
%%BeginDocument: opal/multifont-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Opal 1
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 23, 1993, 3:31 PM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 189 284 423 508
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
117 436 translate

%
% Begin new window
%
gsave
0 0 234 224 ClipToRectangle
gsave
0 0 234 224 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -2 translate
() 0 0 230 220 2 2 2 2 DrawGenericWindowFrame
0 0 230 220 ClipToRectangle
gsave
0 0 230 220 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
20 -20 -31 126 14 true [0 0 0] [1 1 1] (An example string ) 12 /Courier DrawText
20 -34 -45 140 14 true [0 0 0] [1 1 1] (with multiple lines ) 12 /Courier DrawText
20 -60 -71 126 14 true [0 0 0] [1 1 1] (An example string ) 12 /Courier-Oblique DrawText
20 -74 -85 140 14 true [0 0 0] [1 1 1] (with multiple lines ) 12 /Courier-Oblique DrawText
20 -100 -111 35 14 true [0 0 0] [1 1 1] (Here ) 12 /Courier DrawText
55 -100 -111 14 14 true [0 0 0] [1 1 1] (is) 12 /Courier-Oblique DrawText
69 -100 -111 28 14 true [0 0 0] [1 1 1] ( my ) 12 /Courier DrawText
97 -100 -111 49 14 true [0 0 0] [1 1 1] (example) 12 /Courier-Bold DrawText
146 -100 -111 63 14 true [0 0 0] [1 1 1] ( string. ) 12 /Courier DrawText
20 -130 -150 119 23 true [0 0 0] [1 1 1] (Here is a circle:) 12 /Courier DrawText
149.0 -140.0 10.0 10.0 0 360 [0 0 0] 0 0 [] 1 null DrawEllipse
159 -130 -150 7 23 true [0 0 0] [1 1 1] ( ) 12 /Courier DrawText
20 -160 -171 56 14 true [0 0 0] [1 1 1] (Here is ) 12 /Courier DrawText
76 -160 -171 42 14 true [1 1 0] [1 1 1] (yellow) 12 /Courier-Bold DrawText
118 -160 -171 35 14 true [0 0 0] [1 1 1] ( and ) 12 /Courier DrawText
153 -160 -171 21 14 true [1 0 0] [1 1 1] (red) 12 /Courier-Bold DrawText
174 -160 -171 42 14 true [0 0 0] [1 1 1] ( text ) 12 /Courier DrawText
20 -190 -201 28 14 true [0 0 0] [1 1 1] (The ) 12 /Courier DrawText
43 -194 -205 6 14 true [0 0 0] [1 1 1] (>) 10 /Courier-Bold DrawText
48 -190 -201 91 14 true [0 0 0] [1 1 1] (\050parentheses\051) 12 /Courier DrawText
136 -194 -205 6 14 true [0 0 0] [1 1 1] (<) 10 /Courier-Bold DrawText
139 -190 -201 84 14 true [0 0 0] [1 1 1] ( are marked ) 12 /Courier DrawText
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier-Oblique /Courier Helvetica-Bold 
%%BoundingBox: 189 284 423 508

%%EndDocument
 GE /Times-Bold SF
8280 25752 MT
(Figure 7-1:)SH
/Times-Roman SF
14053 XM
(Examples of the multifont-text object)SH
12 /Times-Bold AF
8280 29436 MT
(7.2.1. Functions that Manipulate the Cursor)SH
8 /Courier AF
10200 30649 MT
(opal:Set-Cursor-Visible)SH
/Times-Italic SF
21720 XM
(text-obj vis)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 32947 MT
(This makes the cursor of a)66 W
10 /Courier AF
20588 XM
(multifont-text)SH
11 /Times-Roman AF
29329 XM
(visible or invisible, depending on whether)66 W
/Times-Italic SF
48515 XM
(vis)SH
/Times-Roman SF
50079 XM
(is)SH
9 SS 
51155 XM
(T)SH
11 SS 
52047 XM
(or)SH
9 SS 
53305 XM
(NIL)SH
11 SS 
(.)SH
8280 34143 MT
(Having a visible cursor)
41 W( is not required for entering text, but is recommended for situations requiring user)40 W
8280 35339 MT
(feedback. This)
275 W( function does not return any useful value.)SH
8 /Courier AF
10200 36552 MT
(opal:Set-Cursor-To-X-Y-Position)SH
/Times-Italic SF
25560 XM
(text-obj x y)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 38282 MT
(opal:Set-Cursor-To-Line-Char-Position)SH
/Times-Italic SF
28440 XM
(text-obj line# char#)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 40580 MT
(These move the cursor to a specific location in the)731 W
10 /Courier AF
38010 XM
(multifont-text)SH
11 /Times-Roman AF
(. The)
1737 W( function)732 W
10 /Courier AF
8280 41776 MT
(set-cursor-to-x-y-position)SH
11 /Times-Roman AF
24231 XM
(sets the cursor to the position nearest the <x, y>)
76 W( pixel location.  The)75 W
8280 42972 MT
(function)SH
10 /Courier AF
12451 XM
(set-cursor-to-line-char-position)SH
11 /Times-Roman AF
32156 XM
(tries to place)
230 W( the cursor at the position indicated)231 W
8280 44168 MT
(\050zero-based\051. If)
311 W( the line or character position is not legal, it will try to find a reasonable approximation)
18 W( of)17 W
8280 45364 MT
(the location given.  Neither function returns any useful value.)SH
8 /Courier AF
10200 46577 MT
(opal:Go-To-Next-Char)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 48307 MT
(opal:Go-To-Prev-Char)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 50037 MT
(opal:Go-To-Next-Word)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 51767 MT
(opal:Go-To-Prev-Word)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 53497 MT
(opal:Go-To-Next-Line)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 55227 MT
(opal:Go-To-Prev-Line)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 57525 MT
(These functions move the cursor relative)
591 W( to where it is currently located.  The functions)592 W
10 /Courier AF
8280 58721 MT
(go-to-next-char)SH
11 /Times-Roman AF
17722 XM
(and)SH
10 /Courier AF
19752 XM
(go-to-prev-char)SH
11 /Times-Roman AF
29194 XM
(move the cursor one character at a time.)
167 W( The)
607 W( functions)166 W
10 /Courier AF
8280 59917 MT
(go-to-next-word)SH
11 /Times-Roman AF
17583 XM
(and)SH
10 /Courier AF
19474 XM
(go-to-prev-word)SH
11 /Times-Roman AF
28777 XM
(move the cursor one word at)
28 W( a time.  In this case, a word is)29 W
8280 61113 MT
(defined by non-whitespace characters separated by whitespace.  A whitespace)
65 W( character is either a space)64 W
8280 62309 MT
(or a newline.  These functions will skip over)
65 W( all non-whitespace until they reach a whitespace character.)66 W
8280 63505 MT
(They will then skip)
190 W( over the whitespace until they find the next non-white character.  The functions)189 W
10 /Courier AF
8280 64701 MT
(go-to-next-line)SH
11 /Times-Roman AF
17729 XM
(and)SH
10 /Courier AF
19766 XM
(go-to-prev-line)SH
11 /Times-Roman AF
29215 XM
(moves down and up one line at a time.  The)
174 W( horizontal)175 W
8280 65897 MT
(position of the cursor will be maintained)
145 W( as close as possible to its position on the original line.  The)144 W
8280 67093 MT
(functions)SH
10 /Courier AF
12906 XM
(go-to-next-char)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
22713 XM
(go-to-prev-char)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
32520 XM
(go-to-next-word)SH
11 /Times-Roman AF
(, and)257 W
10 /Courier AF
44447 XM
(go-to-prev-word)SH
11 /Times-Roman AF
53980 XM
(all)SH
8280 68289 MT
(return the characters that were passed over including newlines as)
55 W( a simple string.)54 W
9 SS 
45178 XM
(NIL)SH
11 SS 
47007 XM
(will be returned if)54 W
8280 69485 MT
(the cursor does not move as a consequence of being at the)
96 W( beginning or end of the text.  The functions)97 W
10 /Courier AF
8280 70681 MT
(go-to-next-line)SH
11 /Times-Roman AF
17555 XM
(and)SH
10 /Courier AF
19418 XM
(go-to-prev-line)SH
11 /Times-Roman AF
28693 XM
(do not return useful values.)SH
ES
%%Page: 184 33
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 184)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7747 MT
(opal:Go-To-Beginning-Of-Line)SH
/Times-Italic SF
21960 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 9477 MT
(opal:Go-To-End-Of-Line)SH
/Times-Italic SF
19080 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 11207 MT
(opal:Go-To-Beginning-Of-Text)SH
/Times-Italic SF
21960 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 12937 MT
(opal:Go-To-End-Of-Text)SH
/Times-Italic SF
19080 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 15235 MT
(These functions move the cursor to a position at the)
198 W( beginning or end of something.  The functions)197 W
10 /Courier AF
6120 16431 MT
(go-to-beginning-of-line)SH
11 /Times-Roman AF
20221 XM
(and)SH
10 /Courier AF
22110 XM
(go-to-end-of-line)SH
11 /Times-Roman AF
32611 XM
(move the cursor to the beginning)
26 W( or end of its)27 W
6120 17627 MT
(current line.  The)
109 W( functions)108 W
10 /Courier AF
18881 XM
(go-to-beginning-of-text)SH
11 /Times-Roman AF
33064 XM
(and)SH
10 /Courier AF
35035 XM
(go-to-end-of-text)SH
11 /Times-Roman AF
45618 XM
(move the cursor)108 W
6120 18823 MT
(to the beginning or end of the entire document.  None of these functions return a useful value.)SH
12 /Times-Bold AF
6120 22507 MT
(7.2.2. Functions for Text Selection)SH
8 /Courier AF
8040 23720 MT
(opal:Toggle-Selection)SH
/Times-Italic SF
18600 XM
(text-obj mode)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 26018 MT
(This will turn off and on the selection mode.  When selection mode is on, moving the)
18 W( cursor will drag the)19 W
6120 27214 MT
(selection highlight to include characters that it passes over.  Moving the)
117 W( cursor back over selected text)116 W
6120 28410 MT
(will unselect and unhighlight the text.  Setting)105 W
/Times-Italic SF
27525 XM
(mode)SH
/Times-Roman SF
30287 XM
(to)SH
9 SS 
31523 XM
(T)SH
11 SS 
32453 XM
(turns on selection mode, and setting it to)106 W
9 SS 
51420 XM
(NIL)SH
11 SS 
6120 29606 MT
(turns off selection mode.  Turning off selection mode will unhighlight all highlighted text.)SH
8 /Courier AF
8040 30819 MT
(opal:Set-Selection-To-X-Y-Position)SH
/Times-Italic SF
24840 XM
(text-obj x)
200 W( y)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 32549 MT
(opal:Set-Selection-To-Line-Char-Position)SH
/Times-Italic SF
27720 XM
(text-obj line#)
200 W( char#)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 34847 MT
(These functions are similar to the functions)1250 W
10 /Courier AF
34207 XM
(set-cursor-to-x-y-position)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 36043 MT
(set-cursor-to-line-char-position)SH
11 /Times-Roman AF
(. The)
389 W( selection highlight has two ends.  One)
57 W( end is bound by)58 W
6120 37239 MT
(the cursor; here, the other end is called the selection end.  To move the cursor end of the highlight, use the)6 W
6120 38435 MT
(cursor functions.  To move the selection end, use these two functions.)
709 W( The)
1695 W( function)710 W
10 /Courier AF
6120 39631 MT
(set-selection-to-x-y-position)SH
11 /Times-Roman AF
24057 XM
(sets the selection end based on pixel position.  The function)262 W
10 /Courier AF
6120 40827 MT
(set-selection-to-line-char-position)SH
11 /Times-Roman AF
27461 XM
(is based on line and character position.  Neither)
66 W( function)67 W
6120 42023 MT
(returns a useful value.)SH
8 /Courier AF
8040 43236 MT
(opal:Copy-Selected-Text)SH
/Times-Italic SF
19560 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 44966 MT
(opal:Delete-Selection)SH
/Times-Italic SF
18600 XM
(text-obj)SH
/Courier SF
21522 XM
(&optional)SH
/Times-Italic SF
26322 XM
(lisp-mode-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 47264 MT
(These functions are used to manipulate)
218 W( the selected text.  The)217 W
10 /Courier AF
35880 XM
(copy-selected-text)SH
11 /Times-Roman AF
47172 XM
(function just)217 W
6120 48460 MT
(returns the selected text)
271 W( without affecting the multifont object.  The function)272 W
10 /Courier AF
43320 XM
(delete-selection)SH
11 /Times-Roman AF
6120 49656 MT
(removes all selected text)
111 W( from the multifont object and returns it.  Both functions return the text in the)110 W
10 /Courier AF
6120 50852 MT
(text)SH
11 /Times-Roman AF
9090 XM
(format described above.  The function)296 W
10 /Courier AF
27939 XM
(delete-selection)SH
11 /Times-Roman AF
38110 XM
(will also automatically turn off)296 W
6120 52048 MT
(selection mode.  Since special bookkeeping is done)
102 W( to keep track of parentheses and function names in)101 W
6120 53244 MT
(lisp-mode, you must supply a value of T for)97 W
/Times-Italic SF
26607 XM
(lisp-mode-p)SH
/Times-Roman SF
32234 XM
(when the interactors currently working on the)98 W
/Times-Italic SF
6120 54440 MT
(text-obj)SH
/Times-Roman SF
9755 XM
(are in lisp-mode.)SH
8 /Courier AF
8040 55653 MT
(opal:Change-Font-Of-Selection)SH
/Times-Italic SF
22440 XM
(text-obj font)200 W
/Courier SF
27006 XM
(&key)SH
/Times-Italic SF
29406 XM
(family size italic bold)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 57951 MT
(The font of selected text can be updated using this function.  There are two options.  The new font can be)25 W
6120 59147 MT
(given explicitly using the)120 W
/Times-Italic SF
18028 XM
(font)SH
/Times-Roman SF
20135 XM
(parameter, or it can be updated by setting)120 W
/Times-Italic SF
39574 XM
(font)SH
/Times-Roman SF
41681 XM
(to)SH
9 SS 
42932 XM
(NIL)SH
11 SS 
44828 XM
(and using the key)121 W
6120 60343 MT
(parameters.)SH
6120 62641 MT
(Valid values for)SH
/Times-Italic SF
13481 XM
(family)SH
/Times-Roman SF
16506 XM
(are:)SH
/Symbol SF
8089 64219 MT
(\267)SH
10 /Courier AF
8870 XM
(:fixed)SH
11 /Times-Roman AF
12745 XM
(- makes font fixed width)SH
/Symbol SF
8089 65415 MT
(\267)SH
10 /Courier AF
8870 XM
(:serif)SH
11 /Times-Roman AF
12745 XM
(- makes font variable-width with "serifs" on the characters)SH
/Symbol SF
8089 66611 MT
(\267)SH
10 /Courier AF
8870 XM
(:sans-serif)SH
11 /Times-Roman AF
15745 XM
(- makes font variable-width with no serifs on the characters)SH
6120 68909 MT
(Values for)SH
/Times-Italic SF
11006 XM
(size)SH
/Times-Roman SF
12931 XM
(are:)SH
/Symbol SF
8089 70487 MT
(\267)SH
10 /Courier AF
8870 XM
(:small)SH
11 /Times-Roman AF
12745 XM
(- makes font smallest size)SH
/Symbol SF
8089 71683 MT
(\267)SH
10 /Courier AF
8870 XM
(:medium)SH
11 /Times-Roman AF
13345 XM
(- makes font medium size)SH
ES
%%Page: 185 34
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 7.2)
SH( Functions)
1800 W( on Multifont Text)SH
51386 XM
(Page 185)SH
46800 50 8280 4486 UL
11 /Symbol AF
10249 8080 MT
(\267)SH
10 /Courier AF
11030 XM
(:large)SH
11 /Times-Roman AF
14905 XM
(- makes font large size)SH
/Symbol SF
10249 9276 MT
(\267)SH
10 /Courier AF
11030 XM
(:very-large)SH
11 /Times-Roman AF
17905 XM
(- makes font the largest size)SH
/Symbol SF
10249 10472 MT
(\267)SH
10 /Courier AF
11030 XM
(:bigger)SH
11 /Times-Roman AF
15505 XM
(- makes font one size larger than it is)SH
/Symbol SF
10249 11668 MT
(\267)SH
10 /Courier AF
11030 XM
(:smaller)SH
11 /Times-Roman AF
16105 XM
(- makes font one size smaller than it is)SH
8280 13966 MT
(Values for)SH
/Times-Italic SF
13166 XM
(italic)SH
/Times-Roman SF
15703 XM
(and)SH
/Times-Italic SF
17566 XM
(bold)SH
/Times-Roman SF
19797 XM
(are:)SH
/Symbol SF
10249 15544 MT
(\267)SH
10 /Courier AF
11030 XM
(T)SH
11 /Times-Roman AF
11905 XM
(- makes font italic or bold)SH
/Symbol SF
10249 16740 MT
(\267)SH
10 /Courier AF
11030 XM
(NIL)SH
11 /Times-Roman AF
13105 XM
(- undoes italic or bold)SH
/Symbol SF
10249 17936 MT
(\267)SH
10 /Courier AF
11030 XM
(:toggle)SH
11 /Times-Roman AF
15505 XM
(- toggles italic or bold throughout the selected region.)SH
/Symbol SF
10249 19132 MT
(\267)SH
10 /Courier AF
11030 XM
(:toggle-first)SH
11 /Times-Roman AF
19158 XM
(- looks at the first character of the selection, and changes the entire region)52 W
11030 20328 MT
(by toggling based on the bold or italic of that character)SH
8280 22626 MT
(The function)638 W
10 /Courier AF
15482 XM
(change-font-of-selection)SH
11 /Times-Roman AF
30795 XM
(is also used to change the value of the slot)638 W
10 /Courier AF
8280 23822 MT
(:current-font)SH
11 /Times-Roman AF
16355 XM
(even if there is no text selected.)SH
8 /Courier AF
10200 25035 MT
(opal:Change-Color-Of-Selection)SH
/Times-Italic SF
25080 XM
(text-obj foreground-color)
200 W( background-color)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 27333 MT
(This function will change)
30 W( the color of the selected text.  If only one of foreground-color and background-)29 W
8280 28529 MT
(color needs to be changed, the other should be sent as NIL.  This function also changes the values)
49 W( of the)50 W
8280 29725 MT
(slots)SH
10 /Courier AF
10573 XM
(:current-fcolor)SH
11 /Times-Roman AF
19848 XM
(and)SH
10 /Courier AF
21711 XM
(:current-bcolor)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 33409 MT
(7.2.3. Functions that Access the Text or Cursor)SH
8 /Courier AF
10200 34622 MT
(opal:Get-String)SH
/Times-Italic SF
17880 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 36352 MT
(opal:Get-Text)SH
/Times-Italic SF
16920 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 38650 MT
(These functions)
106 W( return the entire contents of the)105 W
10 /Courier AF
30441 XM
(multifont-text)SH
11 /Times-Roman AF
39221 XM
(object. The)
485 W( function)105 W
10 /Courier AF
49080 XM
(get-string)SH
11 /Times-Roman AF
8280 39846 MT
(returns the contents as a single string with)12 W
10 /Courier AF
27134 XM
(#\134newline)SH
11 /Times-Roman AF
(s separating)
12 W( lines.  The function)13 W
10 /Courier AF
46938 XM
(get-text)SH
11 /Times-Roman AF
52026 XM
(returns)SH
8280 41042 MT
(the contents in the)SH
10 /Courier AF
16590 XM
(:initial-text)SH
11 /Times-Roman AF
24665 XM
(slot format.)SH
8 /Courier AF
10200 42255 MT
(opal:Get-Cursor-Line-Char-Position)SH
/Times-Italic SF
27000 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 43985 MT
(opal:Get-Selection-Line-Char-Position)SH
/Times-Italic SF
28440 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 46283 MT
(These return the)
59 W( position of the cursor or the selection end of a highlight.  The values are returned using)58 W
8280 47479 MT
(multiple return values: \050)SH
/Times-Italic SF
(values line char)SH
/Times-Roman SF
(\051.)SH
8 /Courier AF
10200 48692 MT
(opal:Fetch-Next-Char)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 50422 MT
(opal:Fetch-Prev-Char)SH
/Times-Italic SF
20280 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 52720 MT
(These return the character before or after the cursor.  The function)246 W
10 /Courier AF
40638 XM
(fetch-next-char)SH
11 /Times-Roman AF
50160 XM
(returns the)247 W
8280 53916 MT
(character after)
257 W( the cursor, and)256 W
10 /Courier AF
22933 XM
(fetch-prev-char)SH
11 /Times-Roman AF
32464 XM
(returns the character before the cursor.  Neither)256 W
8280 55112 MT
(function affects the text of the object.  The functions will return)1 W
9 SS 
36547 XM
(NIL)SH
11 SS 
38324 XM
(if the cursor is at the beginning or end)2 W
8280 56308 MT
(of the text where there is no character before or after the cursor.)SH
12 /Times-Bold AF
8280 59992 MT
(7.2.4. Adding and Editing Text)SH
8 /Courier AF
10200 61205 MT
(opal:Add-Char)SH
/Times-Italic SF
16920 XM
(text-obj char)200 W
/Courier SF
21708 XM
(&optional)SH
/Times-Italic SF
26508 XM
(font foreground-color background-color)
200 W( lisp-mode-p)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 62935 MT
(opal:Insert-String)SH
/Times-Italic SF
19320 XM
(text-obj string)200 W
/Courier SF
24508 XM
(&optional)SH
/Times-Italic SF
29308 XM
(font foreground-color background-color)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 64665 MT
(opal:Insert-Text)SH
/Times-Italic SF
18360 XM
(text-obj text)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 66963 MT
(These functions are used to add text to a multifont)
250 W( object.  The function)249 W
10 /Courier AF
43576 XM
(add-char)SH
11 /Times-Roman AF
48900 XM
(adds a single)249 W
8280 68159 MT
(character, the function)526 W
10 /Courier AF
19997 XM
(insert-string)SH
11 /Times-Roman AF
28599 XM
(adds a whole string possibly including newline, and)527 W
10 /Courier AF
8280 69355 MT
(insert-text)SH
11 /Times-Roman AF
15155 XM
(adds text that is in)SH
10 /Courier AF
23436 XM
(:initial-text)SH
11 /Times-Roman AF
31511 XM
(slot format.)SH
8280 71653 MT
(The optional)203 W
/Times-Italic SF
14552 XM
(font)SH
/Times-Roman SF
16742 XM
(and)SH
/Times-Italic SF
18808 XM
(color)SH
/Times-Roman SF
21608 XM
(parameters indicate the font and color of the new text.  If)
203 W( any of these)202 W
ES
%%Page: 186 35
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 186)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(parameters are NIL, the newly added text will)
723 W( use the value of the)724 W
10 /Courier AF
44845 XM
(:current-font)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
6120 9151 MT
(:current-fcolor)SH
11 /Times-Roman AF
(, and/or)85 W
10 /Courier AF
18924 XM
(:current-bcolor)SH
11 /Times-Roman AF
28283 XM
(slots, which can be set manually or allowed to take on)84 W
6120 10347 MT
(the font and colors of the character over which the cursor last passed.)SH
6120 12645 MT
(The optional)96 W
/Times-Italic SF
12178 XM
(lisp-mode-p)SH
/Times-Roman SF
17804 XM
(argument indicates whether the interactors currently working on the multifont)97 W
6120 13841 MT
(object are in lisp-mode.  Extra operations are performed on)
116 W( the string to keep track of parentheses and)115 W
6120 15037 MT
(function names when in lisp-mode, and this parameter is required to keep the bookkeeping straight.)SH
8 /Courier AF
8040 16250 MT
(opal:Delete-Char)SH
/Times-Italic SF
16200 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 17980 MT
(opal:Delete-Prev-Char)SH
/Times-Italic SF
18600 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 19710 MT
(opal:Delete-Word)SH
/Times-Italic SF
16200 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 21440 MT
(opal:Delete-Prev-Word)SH
/Times-Italic SF
18600 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 23738 MT
(These functions are used to delete text from)
252 W( a multifont object.  The functions)253 W
10 /Courier AF
44204 XM
(delete-char)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 24934 MT
(delete-prev-char)SH
11 /Times-Roman AF
16099 XM
(delete a single character after or before)
104 W( the cursor.  The functions)103 W
10 /Courier AF
46320 XM
(delete-word)SH
11 /Times-Roman AF
6120 26130 MT
(and)SH
10 /Courier AF
8155 XM
(delete-prev-word)SH
11 /Times-Roman AF
18202 XM
(delete a single word.  A word is defined the same way)
172 W( as in the functions)173 W
10 /Courier AF
6120 27326 MT
(go-to-next-word)SH
11 /Times-Roman AF
15803 XM
(and)SH
10 /Courier AF
18074 XM
(go-to-prev-word)SH
11 /Times-Roman AF
(. The)
1091 W( word will be deleted by)
408 W( deleting whitespace)407 W
6120 28522 MT
(characters up to the first non-whitespace character and then deleting all non-whitespace up to the next)133 W
6120 29718 MT
(whitespace character.  The value returned by these functions is the characters deleted.)69 W
9 SS 
45320 XM
(NIL)SH
11 SS 
47164 XM
(is returned if)68 W
6120 30914 MT
(no characters are deleted.)SH
8 /Courier AF
8040 32127 MT
(opal:Delete-Substring)SH
/Times-Italic SF
18600 XM
(text-obj start-line# start-char# end-line# end-char#)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 33857 MT
(opal:Kill-Rest-Of-Line)SH
/Times-Italic SF
19080 XM
(text-obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 36155 MT
(These functions are used to delete larger portions of text.  The function)20 W
10 /Courier AF
37902 XM
(delete-substring)SH
11 /Times-Roman AF
47798 XM
(removes all)21 W
6120 37351 MT
(characters within the given range.  If the start position is after the end position, nothing will happen.)
29 W( The)332 W
6120 38547 MT
(function)SH
10 /Courier AF
10286 XM
(kill-rest-of-line)SH
11 /Times-Roman AF
20986 XM
(deletes all characters from the cursor)
225 W( to the end of the current line.)226 W
6120 39743 MT
(When word wrap is on,)
102 W( the end of a wrapped line is where the wrap occurs.  Both functions return the)101 W
6120 40939 MT
(deleted text as a string.)SH
8 /Courier AF
8040 42152 MT
(opal:Set-Text)SH
/Times-Italic SF
14760 XM
(text-obj text)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 44450 MT
(This function is used to reset everything in the)
41 W( multifont object.  All previous text is deleted and the new)42 W
/Times-Italic SF
6120 45646 MT
(text)SH
/Times-Roman SF
8195 XM
(is put in its place.  The)212 W
/Times-Italic SF
19945 XM
(text)SH
/Times-Roman SF
22020 XM
(parameter uses the)212 W
10 /Courier AF
31115 XM
(:initial-text)SH
11 /Times-Roman AF
39402 XM
(slot format.)
212 W( The)
697 W( new cursor)211 W
6120 46842 MT
(position will be at the beginning of the text.  This function does not return a useful value.)SH
12 /Times-Bold AF
6120 50526 MT
(7.2.5. Operations on :initial-text Format Lists)SH
8 /Courier AF
8040 51739 MT
(opal:Text-To-Pure-List)SH
/Times-Italic SF
19080 XM
(text)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 53469 MT
(opal:Pure-List-To-Text)SH
/Times-Italic SF
19080 XM
(list)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 55767 MT
(These functions converts text in the)67 W
10 /Courier AF
22468 XM
(:initial-text)SH
11 /Times-Roman AF
30610 XM
(slot format into)
67 W( a format that is similar but uses a)68 W
6120 56963 MT
(list representation for fonts, colors, marks, and view-objects.)
23 W( Converting)
319 W( the fonts from Garnet objects to)22 W
6120 58159 MT
(lists makes operations such as reading or writing)
368 W( text objects to files easier.  To convert from)369 W
10 /Courier AF
6120 59355 MT
(:initial-text)SH
11 /Times-Roman AF
15212 XM
(format to list use)1017 W
10 /Courier AF
26980 XM
(text-to-pure-list)SH
11 /Times-Roman AF
38472 XM
(and to convert back use)1016 W
10 /Courier AF
6120 60551 MT
(pure-list-to-text)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 61764 MT
(opal:Text-To-String)SH
/Times-Italic SF
17640 XM
(text)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 64062 MT
(This function converts text in the)52 W
10 /Courier AF
21280 XM
(:initial-text)SH
11 /Times-Roman AF
29407 XM
(format into a regular)
52 W( character string, losing all font,)53 W
6120 65258 MT
(color, and mark information.)SH
8 /Courier AF
8040 66471 MT
(opal:Concatenate-Text)SH
/Times-Italic SF
18600 XM
(text1 text2)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 68769 MT
(This function is like)
412 W( the lisp function)411 W
10 /Courier AF
25531 XM
(concatenate)SH
11 /Times-Roman AF
32817 XM
(for arrays.  The function will return the)411 W
6120 69965 MT
(concatenation of)SH
/Times-Italic SF
13694 XM
(text2)SH
/Times-Roman SF
16107 XM
(onto the end of)SH
/Times-Italic SF
23011 XM
(text1)SH
/Times-Roman SF
(. The)
275 W( function will not affect)SH
/Times-Italic SF
38345 XM
(text1)SH
/Times-Roman SF
40758 XM
(or)SH
/Times-Italic SF
41949 XM
(text2)SH
/Times-Roman SF
(.)SH
ES
%%Page: 187 36
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 7.3)
SH( Interactors)
1800 W( for Multifont Text)SH
51386 XM
(Page 187)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(7.2.6. Using View-Objects as Text)SH
8 /Courier AF
10200 9217 MT
(opal:Add-Object)SH
/Times-Italic SF
17880 XM
(gob object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 10947 MT
(opal:Get-Objects)SH
/Times-Italic SF
18360 XM
(gob)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 12677 MT
(opal:Notice-Resize-Object)SH
/Times-Italic SF
22680 XM
(object)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 14098 MT
(These functions are useful when you want to include a shape or other view-object in the multifont text.)90 W
8280 15294 MT
(The function)2 W
10 /Courier AF
14210 XM
(add-object)SH
11 /Times-Roman AF
20487 XM
(will insert a)
2 W( view-object at the cursor.  The object will act just like a character;)1 W
8280 16490 MT
(the cursor can move over)
14 W( it, and it can be selected, deleted, etc.  The function)15 W
10 /Courier AF
42784 XM
(get-objects)SH
11 /Times-Roman AF
49674 XM
(will return a)15 W
8280 17686 MT
(list of all the objects currently in the text.  When)
95 W( the size of an object which is in the text changes, the)94 W
8280 18882 MT
(function)SH
10 /Courier AF
12221 XM
(notice-resize-objects)SH
11 /Times-Roman AF
25096 XM
(should be used to notify multifont of the change.)SH
12 /Times-Bold AF
8280 22566 MT
(7.2.7. Using Marks)SH
11 /Times-Roman AF
8280 23762 MT
(Another feature of the multifont object is the ability to use text-marks.)
51 W( The)
379 W( function)52 W
10 /Courier AF
46441 XM
(insert-mark)SH
11 /Times-Roman AF
53368 XM
(will)SH
8280 24958 MT
(insert a mark at the cursor.  Marks are invisible to the cursor)
40 W( as you are typing, and are primarily used as)39 W
8280 26154 MT
(place-holders in the text.  The lisp-mode)
201 W( feature uses marks to keep track of parentheses when it is)202 W
8280 27350 MT
(paren-matching. To)
523 W( make all of the marks in a multifont object visible \050so you can see)
124 W( them\051, set the)123 W
10 /Courier AF
8280 28546 MT
(:show-marks)SH
11 /Times-Roman AF
15155 XM
(slot to)SH
10 /Courier AF
18151 XM
(T)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 29759 MT
(opal:Insert-Mark)SH
/Times-Italic SF
18360 XM
(gob sticky-left)SH
/Courier SF
23347 XM
(&key)SH
/Times-Italic SF
25747 XM
(name info)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 32057 MT
(The)SH
/Times-Italic SF
10373 XM
(sticky-left)SH
/Times-Roman SF
15032 XM
(parameter should be T if the)
108 W( mark should stick to the character on its left, and NIL if it)109 W
8280 33253 MT
(should stick to the one on its right.  When a mark "sticks" to a character, the cursor cannot)
102 W( be inserted)101 W
8280 34449 MT
(between the character and the mark.  This makes the position of the mark equivalent to)
16 W( the position of the)17 W
8280 35645 MT
(character, so it is easy to determine whether the cursor is on the left or right side of the mark.)SH
8280 37943 MT
(One implication of "stickiness" is that a)
49 W( mark moves through the string along with the character that it is)48 W
8280 39139 MT
(stuck to \050i.e., if you are typing with the cursor in front of the)
7 W( mark, the mark will be pushed forward along)8 W
8280 40335 MT
(with the character in front of it\051.  Another implication is)
140 W( that when a character is deleted, the mark\050s\051)139 W
8280 41531 MT
(stuck to it will be deleted as well.)SH
8280 43829 MT
(The)SH
/Times-Italic SF
10320 XM
(name)SH
/Times-Roman SF
13032 XM
(parameter is a useful way to differentiate between marks, and)55 W
/Times-Italic SF
40915 XM
(info)SH
/Times-Roman SF
42957 XM
(can be used to)
55 W( let the mark)56 W
8280 45025 MT
(carry any additional information that might be useful.)SH
8 /Courier AF
10200 46238 MT
(opal:Search-For-Mark)SH
/Times-Italic SF
20280 XM
(gob)SH
/Courier SF
21960 XM
(&key)SH
/Times-Italic SF
24360 XM
(name info)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 47968 MT
(opal:Search-Backwards-For-Mark)SH
/Times-Italic SF
25080 XM
(gob)SH
/Courier SF
26760 XM
(&key)SH
/Times-Italic SF
29160 XM
(name info)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 49698 MT
(opal:Between-Marks-P)SH
/Times-Italic SF
20280 XM
(gob)SH
/Courier SF
21960 XM
(&key)SH
/Times-Italic SF
24360 XM
(name info)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 51996 MT
(The functions)130 W
10 /Courier AF
14894 XM
(search-for-mark)SH
11 /Times-Roman AF
24299 XM
(and)SH
10 /Courier AF
26292 XM
(search-backwards-for-mark)SH
11 /Times-Roman AF
41696 XM
(will return the mark which is)129 W
8280 53192 MT
(nearest to the cursor.  Leaving out the keywords will search for any mark, or include a)95 W
/Times-Italic SF
48104 XM
(name)SH
/Times-Roman SF
50856 XM
(or)SH
/Times-Italic SF
52142 XM
(info)SH
/Times-Roman SF
54224 XM
(to)SH
8280 54388 MT
(search for a specific type of mark.  The function)64 W
10 /Courier AF
30389 XM
(between-marks-p)SH
11 /Times-Roman AF
39728 XM
(can help to use marks)
64 W( as a type of)63 W
8280 55584 MT
(region. It)
441 W( will search right and left, and will return T if the mark)
83 W( found to the left is sticky-left and the)84 W
8280 56780 MT
(one on the right is sticky-right.)SH
14 /Times-Bold AF
8280 60598 MT
(7.3. Interactors for Multifont Text)SH
11 /Times-Roman AF
8280 61794 MT
(It may)
301 W( seem strange to find a section about interactors in the Opal chapter, Since the interactors)300 W
8280 62990 MT
(mentioned here are integral to using the)65 W
10 /Courier AF
26482 XM
(opal:multifont-text)SH
11 /Times-Roman AF
38222 XM
(object, it was decided)
65 W( to include their)66 W
8280 64186 MT
(description here, near)
133 W( the description of the)132 W
10 /Courier AF
28570 XM
(multifont-text)SH
11 /Times-Roman AF
(. If)
539 W( you are not familiar with the basic)132 W
8280 65382 MT
(principles of interactors, you will be best served if)
80 W( you read the interactors manual first, particularly the)81 W
8280 66578 MT
(parts about the)SH
10 /Courier AF
15031 XM
(inter:text-interactor)SH
11 /Times-Roman AF
27906 XM
(and the slots of all interactors.)SH
8280 68876 MT
(There are)
52 W( three interactors for multifont-text objects.  The)51 W
10 /Courier AF
34456 XM
(multifont-text-interactor)SH
11 /Times-Roman AF
49782 XM
(is similar to)51 W
8280 70072 MT
(the standard)296 W
10 /Courier AF
14492 XM
(text-interactor)SH
11 /Times-Roman AF
(, and is used in much the same way.)
296 W( Two)
868 W( other interactors, the)297 W
10 /Courier AF
8280 71268 MT
(focus-multifont-textinter)SH
11 /Times-Roman AF
23628 XM
(and)SH
10 /Courier AF
25563 XM
(selection-interactor)SH
11 /Times-Roman AF
37910 XM
(are designed to work together in more)72 W
ES
%%Page: 188 37
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 188)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(complicated situations, like when there are two or more multifont objects being)
240 W( edited in the same)241 W
6120 9151 MT
(window.)SH
6120 11449 MT
(The convenient)137 W
10 /Courier AF
13480 XM
(multifont-gadget)SH
11 /Times-Roman AF
23492 XM
(\050section 7.6\051 combines)
137 W( the)136 W
10 /Courier AF
35921 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 12645 MT
(selection-interactor)SH
11 /Times-Roman AF
18515 XM
(with a)120 W
10 /Courier AF
21749 XM
(multifont-text)SH
11 /Times-Roman AF
30544 XM
(object, so you might be able)
120 W( to use it rather than)121 W
6120 13841 MT
(explicitly creating the interactors below.  However, the gadget)
20 W( is only useable when you have exactly one)19 W
10 /Courier AF
6120 15037 MT
(multifont-text)SH
11 /Times-Roman AF
14810 XM
(object in a window.  If you want more than)
15 W( one text object, then you should create the)16 W
6120 16233 MT
(interactors explicitly)
106 W( because there should still be only one pair of)105 W
/Times-Italic SF
36571 XM
(interactors)SH
/Times-Roman SF
41779 XM
(in each window, and the)105 W
6120 17429 MT
(interactors should be set up so the)68 W
10 /Courier AF
21779 XM
(:start-where)SH
11 /Times-Roman AF
29322 XM
(will return one of the multifont objects.  So,)
68 W( it could)69 W
6120 18625 MT
(be an)116 W
10 /Courier AF
8978 XM
(:element-of...)SH
11 /Times-Roman AF
17769 XM
(type specification or a)115 W
10 /Courier AF
28247 XM
(:list-of...)SH
11 /Times-Roman AF
35237 XM
(or whatever that will return multifonts,)115 W
6120 19821 MT
(just so long that it doesn't return other types of objects.)SH
12 /Times-Bold AF
6120 23505 MT
(7.3.1. Multifont Text Interactor)SH
8 /Courier AF
8040 24869 MT
(\050create-instance 'inter:Multifont-Text-Interactor inter:text-interactor)SH
9480 25734 MT
(\050:window NIL\051)SH
9480 26599 MT
(\050:edit-func #'inter::MultiFont-Text-Edit-String\051)SH
9480 27464 MT
(\050:lisp-mode-p NIL\051)SH
/Times-Italic SF
24360 XM
(; See section 7.3.4)SH
/Courier SF
9480 28329 MT
(\050:match-parens-p NIL\051)SH
/Times-Italic SF
24360 XM
(; ")
200 W( ")
1400 W( ")1800 W
/Courier SF
9480 29194 MT
(\050:match-obj ...\051)SH
/Times-Italic SF
24360 XM
(; ")
200 W( ")
1400 W( ")1800 W
/Courier SF
9480 30059 MT
(\050:drag-through-selection? T\051)SH
/Times-Italic SF
24360 XM
(; See below)SH
/Courier SF
9480 30924 MT
(\050:button-outside-stop? T\051)1440 W
/Times-Italic SF
24360 XM
(; See the)SH
/Courier SF
27593 XM
(text-interactor)SH
/Times-Italic SF
35273 XM
(section of the Interactors Manual)SH
/Courier SF
9480 31789 MT
(\050:stop-action #'inter::MultiFont-Text-Int-Stop-Action\051)SH
9480 32654 MT
(\050:after-cursor-moves-func NIL\051)SH
/Times-Italic SF
24360 XM
(; \050lambda \050inter text-obj\051\051)SH
/Courier SF
9480 33519 MT
(\051)SH
11 /Times-Roman AF
6120 35817 MT
(This interactor was designed to appeal to people)
196 W( familiar with the)197 W
10 /Courier AF
37391 XM
(inter:text-interactor)SH
11 /Times-Roman AF
(. The)669 W
6120 37013 MT
(interactor is started when you click the)
28 W( mouse on a text object, and it stops when you type the stop-event,)27 W
6120 38209 MT
(like #\134RETURN.  The)
182 W( editing commands \050listed below\051 are similar to)183 W
10 /Courier AF
38926 XM
(inter:text-interactors)SH
11 /Times-Roman AF
('s)SH
6120 39405 MT
(commands, with many additional ones.)SH
6120 41703 MT
(The new slot)244 W
10 /Courier AF
12808 XM
(:drag-through-selection?)SH
11 /Times-Roman AF
27726 XM
(controls whether dragging through the string with the)243 W
6120 42899 MT
(mouse will cause the indicated region to become selected.  You can)
185 W( apply all the standard multifont)186 W
6120 44095 MT
(commands to)
47 W( a region that is selected this way.  Note: since we use "pending-delete" like the Macintosh,)46 W
6120 45291 MT
(if you type anything when something is selected, the selected text is deleted.)SH
6120 47589 MT
(The words in upper case are labelings of the keys \050on the Sun keyboard\051.  If your)
145 W( keyboard has keys)146 W
6120 48785 MT
(labeled differently, let us know and we will insert them into the code.)SH
10 /Courier AF
7220 50537 MT
(^f ^b ^d ^h)SH
11 /Times-Roman AF
14095 XM
(= forward, backwards, delete forwards, delete backwards char)SH
10 /Courier AF
7220 51733 MT
(leftarrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13170 XM
(rightarrow)SH
11 /Times-Roman AF
19445 XM
(= backwards,)
275 W( forwards)SH
10 /Courier AF
7220 52929 MT
(META-f, META-b, META-d, META-h)SH
11 /Times-Roman AF
25770 XM
(= same but by words)SH
10 /Courier AF
7220 54125 MT
(^p)SH
11 /Times-Roman AF
8695 XM
(= previous line,)SH
10 /Courier AF
15853 XM
(^n)SH
11 /Times-Roman AF
17328 XM
(= next line)SH
10 /Courier AF
7220 55321 MT
(uparrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11970 XM
(downarrow)SH
11 /Times-Roman AF
17645 XM
(= previous line, next line)SH
10 /Courier AF
7220 56517 MT
(^,)SH
11 /Times-Roman AF
8695 XM
(or)SH
10 /Courier AF
9886 XM
(HOME)SH
11 /Times-Roman AF
12561 XM
(= beginning of document)SH
10 /Courier AF
7220 57713 MT
(^.)SH
11 /Times-Roman AF
8695 XM
(or)SH
10 /Courier AF
9886 XM
(END)SH
11 /Times-Roman AF
11961 XM
(= end of document)SH
10 /Courier AF
7220 58909 MT
(^a)SH
11 /Times-Roman AF
8695 XM
(= beginning of line)SH
10 /Courier AF
7220 60105 MT
(^e)SH
11 /Times-Roman AF
8695 XM
(= end of line)SH
10 /Courier AF
7220 62497 MT
(^k)SH
11 /Times-Roman AF
8695 XM
(= kill line,)SH
10 /Courier AF
13533 XM
(^u)SH
11 /Times-Roman AF
15008 XM
(= delete entire string,)SH
10 /Courier AF
24639 XM
(^w)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
26389 XM
(CUT)SH
11 /Times-Roman AF
28464 XM
(= delete selection)SH
10 /Courier AF
7220 63693 MT
(META-w)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11370 XM
(COPY)SH
11 /Times-Roman AF
14045 XM
(= copy selection to interactor cut buffer)SH
10 /Courier AF
7220 64889 MT
(^c)SH
11 /Times-Roman AF
8695 XM
(= copy entire string to X cut buffer)SH
10 /Courier AF
7220 66085 MT
(^y)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8970 XM
(PASTE)SH
11 /Times-Roman AF
12245 XM
(= yank interactor cut buffer or X cut buffer into string)SH
10 /Courier AF
7220 67281 MT
(^Y)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8970 XM
(^PASTE)SH
11 /Times-Roman AF
12845 XM
(= yank X buffer)SH
10 /Courier AF
7220 68477 MT
(META-y)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11370 XM
(META-PASTE)SH
11 /Times-Roman AF
17645 XM
(= yank interactor cut buffer)SH
ES
%%Page: 189 38
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 7.3)
SH( Interactors)
1800 W( for Multifont Text)SH
51386 XM
(Page 189)SH
46800 50 8280 4486 UL
11 SS 
9105 7955 MT
(The following ones extend the selection while moving:)SH
10 /Courier AF
10205 9151 MT
(^leftarrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16755 XM
(^rightarrow)SH
11 /Times-Roman AF
23630 XM
(= prev, next char selecting)SH
10 /Courier AF
10205 10347 MT
(META-leftarrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
19155 XM
(META-rightarrow)SH
11 /Times-Roman AF
28430 XM
(= prev, next word selecting)SH
10 /Courier AF
10205 11543 MT
(^uparrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15555 XM
(^downarrow)SH
11 /Times-Roman AF
21830 XM
(= up-line, down-line selecting)SH
10 /Courier AF
10205 12739 MT
(^HOME)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13755 XM
(^END)SH
11 /Times-Roman AF
16430 XM
(= beginning, end of string selecting)SH
10 /Courier AF
10205 13935 MT
(^*)SH
11 /Times-Roman AF
11680 XM
(= select all)SH
10 /Courier AF
9105 16327 MT
(CONTROL-META)SH
11 /Times-Roman AF
16580 XM
(is Lisp stuff if you have lisp mode on \050see below\051:)SH
10 /Courier AF
10205 17523 MT
(^-META-b)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15555 XM
(^-META-leftarrow)SH
11 /Times-Roman AF
25430 XM
(= prev lisp expression)SH
10 /Courier AF
10205 18719 MT
(^-META-f)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15555 XM
(^-META-rightarrow)SH
11 /Times-Roman AF
26030 XM
(= next)
275 W( lisp expression)SH
10 /Courier AF
10205 19915 MT
(^-META-h)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15555 XM
(^-META-backspace)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
25705 XM
(^-META-delete)SH
11 /Times-Roman AF
33780 XM
(= delete prev s-expr)SH
10 /Courier AF
10205 21111 MT
(^-META-d)SH
11 /Times-Roman AF
15555 XM
(= delete next s-expr)SH
10 /Courier AF
9105 23503 MT
(^-shift-)SH
11 /Times-Roman AF
14180 XM
(is for font stuff:)SH
10 /Courier AF
10205 24699 MT
(^-shift-B)SH
11 /Times-Roman AF
15880 XM
(= toggle bold)SH
10 /Courier AF
10205 25895 MT
(^-shift-I)SH
11 /Times-Roman AF
15880 XM
(= toggle italic)SH
10 /Courier AF
10205 27091 MT
(^-shift-F)SH
11 /Times-Roman AF
15880 XM
(= fixed font \050courier\051)SH
10 /Courier AF
10205 28287 MT
(^-shift-T)SH
11 /Times-Roman AF
15880 XM
(= times font \050serif\051)SH
10 /Courier AF
10205 29483 MT
(^-shift-H)SH
11 /Times-Roman AF
15880 XM
(= helvetica font \050sans-serif\051)SH
10 /Courier AF
10205 30679 MT
(^-shift-<)SH
11 /Times-Roman AF
15880 XM
(= smaller font)SH
10 /Courier AF
10205 31875 MT
(^-shift->)SH
11 /Times-Roman AF
15880 XM
(= bigger font)SH
10 /Courier AF
10205 33071 MT
(^1 ^2 ^3 ^4)SH
11 /Times-Roman AF
17355 XM
(= small, medium, large, and very-large fonts)SH
8280 35369 MT
(Of course, you)
191 W( can change the mapping of all these functions, using the standard)190 W
10 /Courier AF
46680 XM
(inter:bind-key)SH
11 /Times-Roman AF
8280 36565 MT
(mechanism described with the regular)SH
10 /Courier AF
25293 XM
(text-interactor)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 40249 MT
(7.3.2. Focus Multifont Text Interactor)SH
8 /Courier AF
10200 41613 MT
(\050create-instance 'inter:Focus-Multifont-Textinter inter:interactor)SH
11640 42478 MT
(\050:window NIL\051)SH
11640 43343 MT
(\050:obj-to-change NIL\051)SH
11640 44208 MT
(\050:stop-event NIL\051)SH
11640 45073 MT
(\050:lisp-mode-p NIL\051)SH
11640 45938 MT
(\050:match-parens-p NIL\051)SH
11640 46803 MT
(\050:match-obj ...\051)SH
11640 47668 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
27000 XM
(; \050lambda \050inter obj final-event final-string x y\051\051)SH
/Courier SF
11640 48533 MT
(\050:after-cursor-moves-func NIL\051)SH
/Times-Italic SF
27000 XM
(; \050lambda \050inter text-obj\051\051)SH
/Courier SF
11640 49398 MT
(\051)SH
11 /Times-Roman AF
8280 51696 MT
(For applications where one wants the user to be able to type text into a multifont)
43 W( text object without first)44 W
8280 52892 MT
(having to click on the object,)
29 W( the)28 W
10 /Courier AF
23145 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
38448 XM
(was created.  This interactor provides)28 W
8280 54088 MT
(a feel more like a text editor.  The demo)919 W
10 /Courier AF
35399 XM
(demo-text)SH
11 /Times-Roman AF
41993 XM
(shows how to use)
919 W( the)920 W
10 /Courier AF
8280 55284 MT
(focus-multifont-textinter)SH
11 /Times-Roman AF
23634 XM
(to create and edit)79 W
10 /Courier AF
31767 XM
(multifont-text)SH
11 /Times-Roman AF
40520 XM
(objects. The)431 W
10 /Courier AF
46680 XM
(demo-multifont)SH
11 /Times-Roman AF
8280 56480 MT
(text editor shows how to use this interactor along with the)129 W
10 /Courier AF
35454 XM
(selection-interactor)SH
11 /Times-Roman AF
47858 XM
(described in the)129 W
8280 57676 MT
(next section.)SH
8280 59974 MT
(Unlike other interactors, this interactor)
212 W( never goes into the "running" state.  The interactor can only)211 W
8280 61170 MT
("start." This)
935 W( means that aborting this interactor, or)
330 W( setting the)331 W
10 /Courier AF
39360 XM
(:continuous)SH
11 /Times-Roman AF
46566 XM
(slot to non-)331 W
9 SS 
(NIL)SH
11 SS 
54346 XM
(is)SH
8280 62366 MT
(meaningless. The)
309 W( only way)
17 W( to stop the interactor is either to deactivate it \050set the)16 W
10 /Courier AF
44495 XM
(:active-p)SH
11 /Times-Roman AF
50186 XM
(slot to)16 W
9 SS 
53214 XM
(NIL)SH
11 SS 
(\051)SH
8280 63562 MT
(or to destroy it.  If two or more of these interactors are in the same window, all of the)
115 W( interactors will)116 W
8280 64758 MT
(fetch the keyboard events and send them to their corresponding)
10 W( multifont text objects.  Extreme caution is)9 W
8280 65954 MT
(urged when having two or more focus interactors in)
84 W( the same window to avoid having keystrokes go to)85 W
8280 67150 MT
(multiple objects.  Ways to avoid having keystrokes go to)
330 W( multiple destinations are to have non-)329 W
8280 68346 MT
(overlapping)SH
10 /Courier AF
13949 XM
(:start-where)SH
11 /Times-Roman AF
21564 XM
(positions for all the interactors or to)
140 W( make certain that all idle interactors)141 W
8280 69542 MT
(have their)SH
10 /Courier AF
12922 XM
(:obj-to-change)SH
11 /Times-Roman AF
21597 XM
(slot set to)SH
9 SS 
26090 XM
(NIL)SH
11 SS 
(.)SH
8280 71840 MT
(Usually this interactor will continue running until it is destroyed, but you may)
133 W( want to execute a final)132 W
ES
%%Page: 190 39
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 190)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(function whenever a particular)
227 W( key is pressed.  Whenever the user issues the event specified in the)228 W
10 /Courier AF
6120 9151 MT
(:stop-event)SH
11 /Times-Roman AF
13085 XM
(slot \050like #\134RETURN\051, the function in)90 W
10 /Courier AF
30644 XM
(:final-function)SH
11 /Times-Roman AF
40009 XM
(is executed.  The parameters)90 W
6120 10347 MT
(to the final-function are the same as for the standard)SH
10 /Courier AF
29332 XM
(text-interactor)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
8040 11512 MT
(\050lambda \050an-interactor obj-being-edited final-event final-string x y\051\051)SH
11 /Times-Roman AF
6120 13810 MT
(When a)42 W
10 /Courier AF
9868 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
25185 XM
(is in a)
42 W( window, all keyboard input will be fed directly into the)43 W
6120 15006 MT
(multifont text object that is in its)93 W
10 /Courier AF
21410 XM
(:obj-to-change)SH
11 /Times-Roman AF
30178 XM
(slot. If)
461 W( the)93 W
10 /Courier AF
35591 XM
(:obj-to-change)SH
11 /Times-Roman AF
44359 XM
(slot is)92 W
9 SS 
47417 XM
(NIL)SH
11 SS 
(, then no)92 W
6120 16202 MT
(multifont text object has the focus.)SH
6120 18500 MT
(The)SH
10 /Courier AF
8294 XM
(inter:focus-multifont-textinter)SH
11 /Times-Roman AF
27358 XM
(has the)
189 W( same key bindings as the)190 W
10 /Courier AF
43320 XM
(inter:multifont-)SH
6120 19696 MT
(text-interactor)SH
11 /Times-Roman AF
(.)SH
6120 21994 MT
(The)SH
10 /Courier AF
8231 XM
(inter:focus-multifont-textinter)SH
11 /Times-Roman AF
27231 XM
(also has several functions that can be used on it.  These)125 W
6120 23190 MT
(functions are used mainly to manipulate the multifont text that the interactor is focused upon.)SH
8 /Courier AF
8040 24403 MT
(inter:Set-Focus)SH
/Times-Italic SF
15720 XM
(interactor multifont-text)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 26701 MT
(This function changes the focus of)
110 W( a)111 W
10 /Courier AF
23111 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
38497 XM
(from one text object to another.)111 W
6120 27897 MT
(The cursor of the newly activately text object will become visible indicating that it)
19 W( is ready to accept text.)18 W
6120 29093 MT
(The cursor of the previous text object will)
13 W( become invisible and any selected text will become unselected.)14 W
6120 30289 MT
(If the)66 W
/Times-Italic SF
8878 XM
(multifont-text)SH
/Times-Roman SF
15147 XM
(parameter is NIL, then the currently selected)
66 W( text object will become unselected and)65 W
6120 31485 MT
(no object will have the focus.  This function does not return any useful value.)SH
8 /Courier AF
8040 32698 MT
(inter:Copy-Selection)SH
/Times-Italic SF
18120 XM
(interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 34428 MT
(inter:Cut-Selection)SH
/Times-Italic SF
17640 XM
(interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 36158 MT
(inter:Paste-Selection)SH
/Times-Italic SF
18600 XM
(interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 38456 MT
(These functions perform cut, copy, and paste operations upon the text object that currently)
44 W( has the focus.)45 W
6120 39652 MT
(The)SH
10 /Courier AF
8405 XM
(cut-selection)SH
11 /Times-Roman AF
16780 XM
(and)SH
10 /Courier AF
18943 XM
(copy-selection)SH
11 /Times-Roman AF
27918 XM
(operations copy)
300 W( the selected text into the cut-buffer.)299 W
10 /Courier AF
6120 40848 MT
(Cut-selection)SH
11 /Times-Roman AF
14691 XM
(will delete the selected text, but)496 W
10 /Courier AF
31873 XM
(copy-selection)SH
11 /Times-Roman AF
41045 XM
(will leave it unaffected.)497 W
10 /Courier AF
6120 42044 MT
(Paste-selection)SH
11 /Times-Roman AF
15395 XM
(inserts the cut buffer at the position of the cursor.)SH
12 /Times-Bold AF
6120 45728 MT
(7.3.3. Selection Interactor)SH
8 /Courier AF
8040 47092 MT
(\050create-instance 'inter:Selection-Interactor inter:interactor)SH
9480 47957 MT
(\050:focus-interactor ...\051)SH
9480 48822 MT
(\050:match-parens-p NIL\051)SH
9480 49687 MT
(\050:match-obj ...\051\051)SH
11 /Times-Roman AF
6120 51985 MT
(The)SH
10 /Courier AF
8248 XM
(selection-interactor)SH
11 /Times-Roman AF
20665 XM
(is a complementary interactor to the)142 W
10 /Courier AF
37645 XM
(focus-multifont-textinter)SH
11 /Times-Roman AF
(.)SH
6120 53181 MT
(The)SH
10 /Courier AF
8227 XM
(selection-interactor)SH
11 /Times-Roman AF
20624 XM
(controls mouse input so that the user)
122 W( may click and drag the mouse in)123 W
6120 54377 MT
(order to select text and choose a new multifont object)
94 W( to edit.  The)93 W
10 /Courier AF
36848 XM
(:focus-interactor)SH
11 /Times-Roman AF
47416 XM
(slot must be)93 W
6120 55573 MT
(filled with a valid)13 W
10 /Courier AF
14238 XM
(inter:focus-multifont-textinter)SH
11 /Times-Roman AF
33126 XM
(interactor. It)
301 W( is the interactor in)
13 W( that slot that)14 W
6120 56769 MT
(will be)
72 W( used to reset the focus if a new multifont object is clicked upon.  The)71 W
10 /Courier AF
41298 XM
(:start-where)SH
11 /Times-Roman AF
48844 XM
(slot must)71 W
6120 57965 MT
(include all possible multifont)
298 W( objects that the)299 W
10 /Courier AF
28285 XM
(selection-interactor)SH
11 /Times-Roman AF
40859 XM
(operates upon.  If a new)299 W
6120 59161 MT
(multifont object is clicked upon the)41 W
10 /Courier AF
22254 XM
(selection-interactor)SH
11 /Times-Roman AF
34570 XM
(will reset the focus to the new object and)41 W
6120 60357 MT
(place the cursor at the point where the mouse was clicked.  If the mouse is clicked in)
29 W( the multifont object)30 W
6120 61553 MT
(that contains the cursor, the cursor will be)
73 W( moved to position of the click.  Dragging the mouse across a)72 W
6120 62749 MT
(multifont object will select the text that was passed over)
11 W( by the mouse.  Clicking the mouse while holding)12 W
6120 63945 MT
(the shift key \050or clicking the mouse with the right button)
24 W( instead of the left\051 causes the selection highlight)23 W
6120 65141 MT
(to extend to the newly clicked position.)SH
6120 67439 MT
(The)SH
10 /Courier AF
8480 XM
(selection-interactor)SH
11 /Times-Roman AF
21130 XM
(uses a key translation table to decode different types of clicking)375 W
6120 68635 MT
(operations. The)
603 W( current)
164 W( table translates)163 W
10 /Courier AF
24724 XM
(:leftdown)SH
11 /Times-Roman AF
30562 XM
(to)SH
10 /Courier AF
31856 XM
(:start-selection)SH
11 /Times-Roman AF
41894 XM
(and)SH
10 /Courier AF
43920 XM
(:shift-leftdown)SH
11 /Times-Roman AF
6120 69831 MT
(and)SH
10 /Courier AF
8112 XM
(:rightdown)SH
11 /Times-Roman AF
14516 XM
(to)SH
10 /Courier AF
15776 XM
(:start-selection-continue)SH
11 /Times-Roman AF
(. These)
534 W( combinations can be changed and other)130 W
6120 71027 MT
(combinations added by using the)SH
10 /Courier AF
20877 XM
(inter:bind-key)SH
11 /Times-Roman AF
29552 XM
(function.)SH
ES
%%Page: 191 40
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 7.3)
SH( Interactors)
1800 W( for Multifont Text)SH
51386 XM
(Page 191)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(7.3.4. Lisp Mode)SH
11 /Times-Roman AF
8280 9200 MT
(Multifont supports a special text-entry mode which is useful for typing Lisp functions or)
40 W( programs.  This)39 W
8280 10396 MT
(mode can be used by setting the)344 W
10 /Courier AF
25015 XM
(:lisp-mode-p)SH
11 /Times-Roman AF
32834 XM
(slot of the)345 W
10 /Courier AF
38544 XM
(multifont-text-interactor)SH
11 /Times-Roman AF
54164 XM
(or)SH
10 /Courier AF
8280 11592 MT
(focus-multifont-textinter)SH
11 /Times-Roman AF
23626 XM
(to T. When in lisp mode, lines of text will tab to the appropriate)
71 W( spot,)70 W
8280 12788 MT
(and semicolon comments will appear in italics.)
70 W( It)
416 W( is important that the fonts of the text are not changed)71 W
8280 13984 MT
(during lisp-mode, since certain fonts hold special meaning for tabs and parenthesis-matching.)SH
8 /Courier AF
10200 16634 MT
(inter:Indent)SH
/Times-Italic SF
16440 XM
(string how-many how-far)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 18932 MT
(This function can be used to)
50 W( define a special indent amount for your own function.  The argument)49 W
/Times-Italic SF
52512 XM
(string)SH
/Times-Roman SF
8280 20128 MT
(is the name of the function,)52 W
/Times-Italic SF
20903 XM
(how-many)SH
/Times-Roman SF
25812 XM
(is the number)
52 W( of arguments \050starting with the first\051 that should be)53 W
8280 21324 MT
(indented the special amount, and)69 W
/Times-Italic SF
23348 XM
(how-far)SH
/Times-Roman SF
27175 XM
(is an integer signifying how many spaces from the start of the)68 W
8280 22520 MT
(function name these special arguments should be placed.  If)122 W
/Times-Italic SF
36043 XM
(how-far)SH
/Times-Roman SF
39924 XM
(is -1, then the indent will)
122 W( line up)123 W
8280 23716 MT
(with the first argument on the line above it.  The argument)
114 W( following the last special argument will be)113 W
8280 24912 MT
(placed one)
28 W( space in from the start of the function name, and all following arguments will line up with the)29 W
8280 26108 MT
(first argument on the line above it.  Here are some examples of the default indentations:)SH
8 /Courier AF
11160 28044 MT
(\050indent "defun" 2 4\051)SH
35748 XM
(\050indent "do" 2 -1\051)SH
11160 29240 MT
(\050indent "create-instance" 2 4\051)SH
35748 XM
(\050indent "cond" 0\051)SH
11160 30436 MT
(\050indent "let" 1 4\051)SH
35748 XM
(\050indent "define-method" 3 4\051)SH
11 /Times-Roman AF
8280 32994 MT
(There are several keys which are bound specially during lisp mode:)SH
10 /Courier AF
10780 34945 MT
(^-META-f)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16130 XM
(^-META-rightarrow)SH
11 /Times-Roman AF
26605 XM
(= skip forward lisp expression)SH
10 /Courier AF
10780 36640 MT
(^-META-b)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16130 XM
(^-META-leftarrow)SH
11 /Times-Roman AF
26005 XM
(= skip backward lisp expression)SH
10 /Courier AF
10780 38335 MT
(^-META-d)SH
11 /Times-Roman AF
15855 XM
(= delete lisp expression)SH
10 /Courier AF
10780 40030 MT
(^-META-h)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16130 XM
(^-META-backspace)SH
11 /Times-Roman AF
26005 XM
(= delete previous lisp expression)SH
8280 42328 MT
(Also helpful in)
111 W( lisp mode is setting the)110 W
10 /Courier AF
26458 XM
(:match-parens-p)SH
11 /Times-Roman AF
35843 XM
(of the interactors to T. When the cursor is)110 W
8280 43524 MT
(next to a close parenthesis, the corresponding open parenthesis will be highlighted)
78 W( in boldface.  Also, if)79 W
8280 44720 MT
(the interactors')45 W
10 /Courier AF
15272 XM
(:match-obj)SH
11 /Times-Roman AF
21592 XM
(is set to another multifont object, that object's text will be set to the text)
45 W( of)44 W
8280 45916 MT
(the line that the matching open parenthesis is on.)SH
8 /Courier AF
10200 47129 MT
(inter:Turn-Off-Match)SH
/Times-Italic SF
20280 XM
(interactor)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 49427 MT
(This function can be used to externally turn off a matched parenthesis, since it will only be automatically)36 W
8280 50623 MT
(turned off when the cursor is moved away from the close parenthesis.)SH
8 /Courier AF
10200 51836 MT
(inter:Add-Lisp-Char)SH
/Times-Italic SF
19800 XM
(text-obj char)SH
/Courier SF
24388 XM
(&optional)SH
/Times-Italic SF
29188 XM
(new-font new-foreground-color new-background-color)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 53566 MT
(inter:Delete-Lisp-Region)SH
/Times-Italic SF
22200 XM
(text-obj)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 55864 MT
(Because lisp mode)
127 W( does some extra things during addition and deleting of text, these special functions)126 W
8280 57060 MT
(should be used when in lisp mode)
65 W( in the place of)66 W
10 /Courier AF
30721 XM
(opal:add-char)SH
11 /Times-Roman AF
38862 XM
(and)SH
10 /Courier AF
40791 XM
(opal:delete-selection)SH
11 /Times-Roman AF
(. If)407 W
8280 58256 MT
(changes are made externally without using these functions, future tabs and parenthesis-matching)
38 W( may not)37 W
8280 59452 MT
(work properly.  Note: you)
523 W( can also use the)524 W
/Times-Italic SF
31930 XM
(lisp-mode-p)SH
/Times-Roman SF
37983 XM
(parameter of)524 W
10 /Courier AF
44893 XM
(opal:add-char)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 60648 MT
(opal:delete-selection)SH
11 /Times-Roman AF
21155 XM
(to indicate that the operation is taking place while lisp-mode is active.)SH
8 /Courier AF
10200 63298 MT
(inter:Lispify)SH
/Times-Italic SF
16920 XM
(string)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 65596 MT
(This function takes a plain string)
54 W( and will return text which will work in lisp mode.  The returned text is)53 W
8280 66792 MT
(in)SH
10 /Courier AF
9451 XM
(:initial-text)SH
11 /Times-Roman AF
17566 XM
(format, and can be used)
40 W( with functions such as)41 W
10 /Courier AF
38763 XM
(set-text)SH
11 /Times-Roman AF
(. The)
357 W( text will already be)41 W
8280 67988 MT
(indented and italicized properly.)SH
ES
%%Page: 192 41
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 192)
SH( Opal)830 W
43370 XM
(Multifont Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(7.4. Auto-Scrolling Multifont Text Objects)SH
11 /Times-Roman AF
6120 9334 MT
(A companion to the word-wrap feature is the)
91 W( vertical auto scroll feature.  The auto scroll option can be)90 W
6120 10530 MT
(utilized when a multifont-text object)
194 W( is used inside a scrolling-window along with a focus-multifont-)195 W
6120 11726 MT
(textinter, multifont-text-interactor, or selection-interactor.)SH
6120 14024 MT
(The interface for auto-scrolling)294 W
10 /Courier AF
21343 XM
(opal:multifont-text)SH
11 /Times-Roman AF
33311 XM
(is the same as for)293 W
10 /Courier AF
42687 XM
(opal:text)SH
11 /Times-Roman AF
(, which is)293 W
6120 15220 MT
(described in section 6.8.3)SH
14 /Times-Bold AF
6120 19038 MT
(7.5. After Cursor Moves)SH
11 /Times-Roman AF
6120 20234 MT
(To support lisp-mode, there is a slot of the three multifont interactors \050)338 W
10 /Courier AF
(multifont-textinter)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
6120 21430 MT
(focus-multifont-textinter)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
22015 XM
(selection-interactor)SH
11 /Times-Roman AF
(\051 called)344 W
10 /Courier AF
38245 XM
(:after-cursor-moves-func)SH
11 /Times-Roman AF
(.)SH
6120 22626 MT
(If non-NIL, it should be a function called as)275 W
10 /Courier AF
28205 XM
(\050lambda \050inter text-obj\051\051)275 W
11 /Times-Roman AF
44305 XM
(and will be)
275 W( called)276 W
6120 23822 MT
(whenever the cursor moves, or the text to the left of the cursor changes.)SH
6120 26120 MT
(If the function in this slot is overridden with a user-supplied function, the)
187 W( new function should do a)186 W
10 /Courier AF
6120 27316 MT
(\050call-prototype-method ...\051)13 W
11 /Times-Roman AF
22621 XM
(to ensure that the default lisp-mode indentation function is executed,)13 W
6120 28512 MT
(also.)SH
14 /Times-Bold AF
6120 32330 MT
(7.6. A Multifont Text Gadget)SH
11 /Times-Roman AF
6120 33526 MT
(Putting a gadget description into the Opal section is)
14 W( fairly strange.  Just as the interactors section above, it)13 W
6120 34722 MT
(was decided that the)SH
10 /Courier AF
15344 XM
(multifont-gadget)SH
11 /Times-Roman AF
25219 XM
(should be described in the)SH
10 /Courier AF
36980 XM
(multifont-text)SH
11 /Times-Roman AF
45655 XM
(section.)SH
8 /Courier AF
8040 36086 MT
(\050create-instance 'gg:Multifont-Gadget opal:aggregadget)SH
9480 36951 MT
(\050:left 0\051)SH
9480 37816 MT
(\050:top 0\051)SH
9480 38681 MT
(\050:initial-text \050list ""\051\051)SH
9480 39546 MT
(\050:fill-background-p NIL\051)SH
9480 40411 MT
(\050:word-wrap-p NIL\051)SH
9480 41276 MT
(\050:text-width 300\051)SH
9480 42141 MT
(\050:stop-event NIL\051)SH
9480 43006 MT
(\050:selection-function NIL\051\051)SH
11 /Times-Roman AF
6120 45304 MT
(This gadget is)
386 W( not automatically loaded by the)387 W
10 /Courier AF
29806 XM
(multifont-loader)SH
11 /Times-Roman AF
(. Instead,)
1049 W( you should load)387 W
1406 50 13726 45504 UL
10 /Courier AF
6120 46500 MT
(multifont-gadget-loader)SH
11 /Times-Roman AF
20424 XM
(from the gadgets directory to load the gadget and all of)
229 W( the required)228 W
6120 47696 MT
(multifont files.)SH
6120 49994 MT
(The)SH
10 /Courier AF
8629 XM
(multifont-gadget)SH
11 /Times-Roman AF
19028 XM
(is a)
524 W( conglomeration of a)525 W
10 /Courier AF
32557 XM
(multifont-text)SH
11 /Times-Roman AF
(, a)525 W
10 /Courier AF
43320 XM
(focus-multifont-)SH
6120 51190 MT
(textinter)SH
11 /Times-Roman AF
(, and a)32 W
10 /Courier AF
14792 XM
(selection-interactor)SH
11 /Times-Roman AF
(. These)
339 W( are all put)
32 W( together to take some of the trouble out)31 W
6120 52386 MT
(of assembling the pieces by hand.  The slots of the gadget are the same as the)17 W
10 /Courier AF
40681 XM
(multifont-text)SH
11 /Times-Roman AF
(. To)
309 W( use)17 W
6120 53582 MT
(the gadget just create it and go.  The keyboard and mouse handling are built in.  The trouble with this)113 W
6120 54778 MT
(gadget is that you cannot have more than one)57 W
10 /Courier AF
26824 XM
(multifont-gadget)SH
11 /Times-Roman AF
36756 XM
(per window.)
57 W( If)
390 W( you have more than)58 W
6120 55974 MT
(one, all the gadgets will)
28 W( receive the same keystrokes; thus, all the gadgets will respond to the keyboard at)27 W
6120 57170 MT
(the same time.)SH
6120 59468 MT
(Usually the gadget will continue running until it is destroyed, but you may want to)
111 W( execute a selection)112 W
6120 60664 MT
(function whenever a particular key is pressed.  Whenever the user issues the event)
228 W( specified in the)227 W
10 /Courier AF
6120 61860 MT
(:stop-event)SH
11 /Times-Roman AF
13338 XM
(slot \050like #\134RETURN\051, the function)
343 W( in)344 W
10 /Courier AF
32417 XM
(:selection-function)SH
11 /Times-Roman AF
44436 XM
(is executed.  The)344 W
6120 63056 MT
(selection function)
84 W( takes the usual parameters \050the gadget and its value\051, where the value is the pure text)83 W
6120 64252 MT
(representation of the gadget's current string.)SH
6120 66550 MT
(There is a small demo of how to use the multifont text gadget in the)
164 W( gadget file.  To run it, execute)165 W
10 /Courier AF
6120 67746 MT
(\050garnet-gadgets:multifont-gadget-go\051)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 193 42
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.2)
SH( Insertion)
1800 W( and Removal of Graphical Objects)SH
51386 XM
(Page 193)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(8. Aggregate objects)SH
11 /Times-Roman AF
8280 10524 MT
(Aggregate objects hold a collection of other graphical objects \050possibly including other)
42 W( aggregates\051.  The)41 W
8280 11720 MT
(objects in an aggregate are called its)39 W
/Times-Italic SF
24770 XM
(components)SH
/Times-Roman SF
30338 XM
(and the)
39 W( aggregate is the)40 W
/Times-Italic SF
41196 XM
(parent)SH
/Times-Roman SF
44383 XM
(of each component.  An)40 W
8280 12916 MT
(aggregate itself has no filling or border, although it does have a left, top, width and height.)SH
8280 15214 MT
(Note: When you create an aggregate)
156 W( and add components to it, creating an instance of that aggregate)155 W
8280 16410 MT
(afterwards does)113 W
/Times-Italic SF
15712 XM
(not)SH
/Times-Roman SF
17506 XM
(create instances of)
113 W( the children.  If you use Aggregadgets instead, then you)114 W
/Times-Italic SF
52247 XM
(do)SH
/Times-Roman SF
53736 XM
(get)SH
8280 17606 MT
(copies of all the components.  Aggregadgets also provide a convenient syntax)
391 W( for defining the)390 W
8280 18802 MT
(components. Therefore,)
723 W( it is often more appropriate)
224 W( to use Aggregadgets than aggregates.  See the)225 W
8280 19998 MT
(Aggregadgets manual [Marchal 89].)SH
14 /Times-Bold AF
8280 23816 MT
(8.1. Class Description)SH
8 /Courier AF
10200 25180 MT
(\050create-instance 'opal:Aggregate opal:view-object)SH
11160 26045 MT
(\050:components NIL\051)SH
11160 26910 MT
(\050:hit-threshold 0\051)SH
11160 27775 MT
(\050:overlapping T\051\051)SH
11 /Times-Roman AF
8280 30073 MT
(The)SH
10 /Courier AF
10355 XM
(:components)SH
11 /Times-Roman AF
17320 XM
(slot holds a list of the graphical objects that are components of)
90 W( the aggregate.)89 W
/Times-Italic SF
53184 XM
(This)SH
8280 31269 MT
(slot should not be set directly but)
219 W( rather changed using)220 W
10 /Courier AF
35040 XM
(add-component)SH
11 /Times-Italic AF
43335 XM
(and)SH
10 /Courier AF
45480 XM
(remove-component)SH
11 /Times-Italic AF
8280 32465 MT
(\050section 8.2\051.)39 W
/Times-Roman SF
14718 XM
(The covering \050which is the ordering among children\051 in the aggregate is determined by the)38 W
8280 33661 MT
(order of components in)
138 W( the)139 W
10 /Courier AF
21099 XM
(:components)SH
11 /Times-Roman AF
28113 XM
(slot. The)
553 W( list of components is stored from bottommost to)139 W
1710 50 30806 33861 UL
1346 50 32930 33861 UL
916 50 34690 33861 UL
5316 50 36020 33861 UL
734 50 41750 33861 UL
2688 50 42898 33861 UL
2138 50 46000 33861 UL
5258 50 48552 33861 UL
856 50 54224 33861 UL
8280 34857 MT
(topmost. This)
275 W( slot cannot be set directly.)SH
3821 50 8280 35057 UL
8 /Courier AF
10200 37009 MT
(opal:Set-Aggregate-Hit-Threshold)SH
/Times-Italic SF
26040 XM
(agg)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 39569 MT
(As is the case with graphical)
72 W( objects, the)71 W
10 /Courier AF
27028 XM
(:hit-threshold)SH
11 /Times-Roman AF
35774 XM
(slot of an aggregate controls the sensitivity)71 W
8280 40765 MT
(of the)529 W
10 /Courier AF
12148 XM
(point-in-gob)SH
11 /Times-Roman AF
20152 XM
(methods to hits)
529 W( that are near to that aggregate.  The value of the)530 W
10 /Courier AF
8280 41961 MT
(:hit-threshold)SH
11 /Times-Roman AF
17575 XM
(slot defaults to 0, but calling)620 W
10 /Courier AF
34098 XM
(set-aggregate-hit-threshold)SH
11 /Times-Roman AF
51192 XM
(sets the)619 W
10 /Courier AF
8280 43157 MT
(:hit-threshold)SH
11 /Times-Roman AF
16955 XM
(of an aggregate to be the maximum of all its components.)SH
8280 45455 MT
(The)SH
10 /Courier AF
10365 XM
(:overlapping)SH
11 /Times-Roman AF
17940 XM
(slot is used as a hint)
100 W( to the aggregate as to whether its components overlap.  This)101 W
8280 46651 MT
(property allows the aggregate to redraw it's components)
505 W( more efficiently.  You can set the)504 W
10 /Courier AF
8280 47847 MT
(:overlapping)SH
11 /Times-Roman AF
15963 XM
(slot to)208 W
9 SS 
19375 XM
(NIL)SH
11 SS 
21358 XM
(when you know that the)
208 W( first level children of this aggregate will never)209 W
8280 49043 MT
(overlap each other on the screen.)SH
/Times-Italic SF
23304 XM
(Currently, this slot is not used, but it may be in the future.)SH
/Times-Roman SF
8280 51341 MT
(Aggregates have)
98 W( a bounding box, which, by default, is calculated from the sizes and positions of all its)97 W
8280 52537 MT
(children. If)
633 W( you want to have the position or size of the children depend on that of the parent, it is)179 W
8280 53733 MT
(important to provide an explicit value for the position)
33 W( or size of the aggregate, and then provide formulas)32 W
8280 54929 MT
(in the components that)
158 W( depend on the aggregate's values.  Be careful to avoid circularities: either the)159 W
8280 56125 MT
(aggregate should depend on the sizes)
71 W( and positions of the children \050which is the default\051)70 W
/Times-Bold SF
48404 XM
(or)SH
/Times-Roman SF
49787 XM
(the children)70 W
8280 57321 MT
(should depend on the parent.  These cannot be)
30 W( easily mixed in a single aggregate.  It is important that the)31 W
8280 58517 MT
(size and position of)
134 W( the aggregate correctly reflect the bounding box of all its components, or else the)133 W
8280 59713 MT
(redisplay and selection routines will not work correctly.)SH
14 /Times-Bold AF
8280 63531 MT
(8.2. Insertion and Removal of Graphical Objects)SH
8 /Courier AF
10200 66234 MT
(opal:Add-Component)SH
/Times-Italic SF
19320 XM
(aggregate graphical-object)SH
/Courier SF
28573 XM
([[:where])SH
/Times-Italic SF
33373 XM
(position)SH
/Courier SF
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(]])SH
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 68532 MT
(The method)95 W
10 /Courier AF
14030 XM
(add-component)SH
11 /Times-Roman AF
22200 XM
(adds)SH
/Times-Italic SF
24586 XM
(graphical-object)SH
/Times-Roman SF
32288 XM
(to)SH
/Times-Italic SF
33515 XM
(aggregate)SH
/Times-Roman SF
(. The)467 W
/Times-Italic SF
41073 XM
(position)SH
/Times-Roman SF
44990 XM
(and)SH
/Times-Italic SF
46949 XM
(locator)SH
/Times-Roman SF
50498 XM
(arguments)SH
8280 69728 MT
(can be used to adjust the placement/covering of)349 W
/Times-Italic SF
32269 XM
(graphical-object)SH
/Times-Roman SF
40224 XM
(with respect to the rest of the)348 W
8280 70924 MT
(components of)SH
/Times-Italic SF
15062 XM
(aggregate)SH
/Times-Roman SF
(.)SH
ES
%%Page: 194 43
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 194)
SH( Opal)830 W
39956 XM
(Aggregate objects)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
11 SS 
6120 9592 MT
(There are five legal values for)170 W
/Times-Italic SF
20636 XM
(position)SH
/Times-Roman SF
(; these are:)170 W
10 /Courier AF
29731 XM
(:front)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
34051 XM
(:back)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37771 XM
(:behind)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
42691 XM
(:in-front)SH
11 /Times-Roman AF
(, and)170 W
10 /Courier AF
50845 XM
(:at)SH
11 /Times-Roman AF
(.)SH
6120 10788 MT
(Putting an object at)
27 W( the)26 W
10 /Courier AF
16672 XM
(:front)SH
11 /Times-Roman AF
20573 XM
(means that it is not covered by any other objects in this aggregate, and at)26 W
6120 11984 MT
(the)SH
10 /Courier AF
7910 XM
(:back)SH
11 /Times-Roman AF
(, it is covered by all other objects in this aggregate.)
171 W( Positioning)618 W
/Times-Italic SF
41396 XM
(graphical-object)SH
/Times-Roman SF
49175 XM
(at either)172 W
10 /Courier AF
6120 13180 MT
(:front)SH
11 /Times-Roman AF
10206 XM
(or)SH
10 /Courier AF
11608 XM
(:back)SH
11 /Times-Roman AF
15094 XM
(requires no value)
211 W( for)210 W
/Times-Italic SF
25342 XM
(locator)SH
/Times-Roman SF
(, as these are unique locations.  If position is either)210 W
10 /Courier AF
6120 14376 MT
(:behind)SH
11 /Times-Roman AF
10632 XM
(or)SH
10 /Courier AF
11860 XM
(:in-front)SH
11 /Times-Roman AF
17573 XM
(then the value of)38 W
/Times-Italic SF
25361 XM
(locator)SH
/Times-Roman SF
28852 XM
(should be a graphical object already in the component)38 W
6120 15572 MT
(list of the aggregate, in which case)84 W
/Times-Italic SF
22224 XM
(graphical-object)SH
/Times-Roman SF
29914 XM
(is placed with respect to)83 W
/Times-Italic SF
41234 XM
(locator)SH
/Times-Roman SF
(. In)
441 W( the final case,)83 W
6120 16768 MT
(with)SH
/Times-Italic SF
8391 XM
(position)SH
/Times-Roman SF
12252 XM
(being)SH
10 /Courier AF
15011 XM
(:at)SH
11 /Times-Roman AF
(,)SH
/Times-Italic SF
17401 XM
(graphical-object)SH
/Times-Roman SF
25048 XM
(is placed at the)40 W
/Times-Italic SF
32050 XM
(locator)SH
/Times-Roman SF
(th position)
40 W( in the component list, where)41 W
6120 17964 MT
(0 means at the head of the list \050the back of the screen\051.)SH
6120 20262 MT
(If none are supplied, then the new object is in front of all previous)
147 W( objects.  The)146 W
10 /Courier AF
43896 XM
(:where)SH
11 /Times-Roman AF
47917 XM
(keyword is)146 W
6120 21458 MT
(optional before the locators, so all of the following are legal calls:)SH
8 /Courier AF
8040 22623 MT
(\050opal:add-component agg newobj :where :back\051)SH
8040 23488 MT
(\050opal:add-component agg newobj :back\051)SH
8040 24353 MT
(\050opal:add-component agg newobj\051)SH
/Times-Italic SF
26280 XM
(; adds newobj at the :front)SH
/Courier SF
8040 25218 MT
(\050opal:add-component agg newobj :behind otherobj\051)SH
8040 26083 MT
(\050opal:add-component agg newobj :at 4\051)SH
11 /Times-Roman AF
6120 28381 MT
(Objects cannot belong to more than)
25 W( one aggregate.  Attempting to add a component of one aggregate to a)26 W
6120 29577 MT
(second aggregate will cause Opal to signal an error.  If the)71 W
/Times-Italic SF
32901 XM
(locator)SH
/Times-Roman SF
36424 XM
(for)SH
10 /Courier AF
38051 XM
(:behind)SH
11 /Times-Roman AF
42596 XM
(or)SH
10 /Courier AF
43857 XM
(:in-front)SH
11 /Times-Roman AF
49602 XM
(is not a)70 W
6120 30773 MT
(component of the aggregate Opal will also signal an error.)SH
8 /Courier AF
8040 33423 MT
(opal:Add-Components)SH
/Times-Italic SF
17640 XM
(aggregate)SH
/Courier SF
21363 XM
(&rest)SH
/Times-Italic SF
24243 XM
(graphical-objects)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 35721 MT
(This function adds multiple components to an aggregate.  Calling this function is equivalent to:)SH
6 /Courier AF
23450 36761 MT
(*)SH
8 SS 
8040 37061 MT
(\050dolist \050gob \050list {)SH
/Times-Italic SF
(graphical-object)SH
/Courier SF
(})SH
23810 XM
(\051\051)SH
9480 37926 MT
(\050add-component)SH
/Times-Italic SF
16680 XM
(aggregate)SH
/Courier SF
20403 XM
(gob\051\051)SH
11 /Times-Roman AF
6120 40224 MT
(An example of using)SH
10 /Courier AF
15590 XM
(add-components)SH
11 /Times-Roman AF
24265 XM
(is:)SH
8 /Courier AF
8040 41389 MT
(\050opal:add-components agg obj1 obj2 myrect myarc\051)SH
11 /Times-Roman AF
6120 43687 MT
(Note that this has the effect of placing the list of graphical objects from back)
12 W( to front in)13 W
/Times-Italic SF
45012 XM
(aggregate)SH
/Times-Roman SF
49760 XM
(since it)13 W
6120 44883 MT
(inserts each new object with the default)SH
10 /Courier AF
23805 XM
(:where :front)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 46096 MT
(opal:Remove-Component)SH
/Times-Italic SF
18600 XM
(aggregate graphical-object)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 48394 MT
(The)SH
10 /Courier AF
8466 XM
(remove-component)SH
11 /Times-Roman AF
18702 XM
(method removes the)361 W
/Times-Italic SF
28979 XM
(graphical-object)SH
/Times-Roman SF
36946 XM
(from)SH
/Times-Italic SF
39719 XM
(aggregate)SH
/Times-Roman SF
(. If)995 W
/Times-Italic SF
47091 XM
(aggregate)SH
/Times-Roman SF
52186 XM
(is)SH
6120 49590 MT
(connected to a window, then)244 W
/Times-Italic SF
20230 XM
(graphical-object)SH
/Times-Roman SF
28082 XM
(will be erased when the window next has an update)245 W
6120 50786 MT
(message \050section 10.6\051 sent to it.)SH
8 /Courier AF
8040 51999 MT
(opal:Remove-Components)SH
/Times-Italic SF
19080 XM
(aggregate)SH
/Courier SF
22803 XM
(&rest)SH
/Times-Italic SF
25683 XM
(graphical-object)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 54297 MT
(Removes all the listed components from)SH
/Times-Italic SF
24146 XM
(aggregate)SH
/Times-Roman SF
(.)SH
8 /Courier AF
8040 55510 MT
(opal:Move-Component)SH
/Times-Italic SF
17640 XM
(aggregate graphical-object)SH
/Courier SF
26893 XM
([[:where])SH
/Times-Italic SF
31693 XM
(position)SH
/Courier SF
([)SH
/Times-Italic SF
(locator)SH
/Courier SF
(]])SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
10 SS 
6120 57808 MT
(Move-component)SH
11 /Times-Roman AF
14872 XM
(is used)
77 W( to change the drawing order of objects in an aggregate, and therefore change)76 W
6120 59004 MT
(their covering \050since the order of objects in an aggregate determines)
69 W( their drawing order\051.  For example,)70 W
6120 60200 MT
(this function)
132 W( can be used to move an object to the front or back.  The object should already be in the)131 W
6120 61396 MT
(aggregate, and it is moved to be at the position specified.  It)
4 W( is like a)5 W
10 /Courier AF
36432 XM
(remove-component)SH
11 /Times-Roman AF
46312 XM
(followed by an)5 W
10 /Courier AF
6120 62592 MT
(add-component)SH
11 /Times-Roman AF
14195 XM
(except that it is more efficient.  The parameters are the same as)SH
10 /Courier AF
42231 XM
(add-component)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
6120 66410 MT
(8.3. Application of functions to components)SH
11 /Times-Roman AF
6120 67606 MT
(There are two methods defined on aggregates to apply functions to some)
243 W( subset of the aggregate's)242 W
6120 68802 MT
(components. The)
440 W( methods work on either the direct components of the aggregate or all objects that are)83 W
6120 69998 MT
(either direct or indirect components of the aggregate.)SH
8 /Courier AF
8040 71211 MT
(opal:Do-Components)SH
/Times-Italic SF
17160 XM
(aggregate function)SH
/Courier SF
23704 XM
(&key)SH
/Times-Italic SF
26104 XM
(type self)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
ES
%%Page: 195 44
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.5)
SH( Finding)
1800 W( objects inside rectangular regions)SH
51386 XM
(Page 195)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10438 XM
(do-components)SH
11 /Times-Roman AF
18686 XM
(method applies)173 W
/Times-Italic SF
25997 XM
(function)SH
/Times-Roman SF
30050 XM
(to all components of)172 W
/Times-Italic SF
40026 XM
(aggregate)SH
/Times-Roman SF
44933 XM
(in back-to-front order.)172 W
8280 9151 MT
(The)SH
/Times-Italic SF
10278 XM
(function)SH
/Times-Roman SF
14172 XM
(should take one argument which will be)
13 W( the component. If a type is specified, the function is)14 W
8280 10347 MT
(only applied to components that are of that type.  If the call specifies)64 W
10 /Courier AF
39631 XM
(:self)SH
11 /Times-Roman AF
42969 XM
(to be)63 W
9 SS 
45539 XM
(T)SH
11 SS 
46427 XM
(\050the default is)63 W
9 SS 
52939 XM
(NIL)SH
11 SS 
(\051,)SH
8280 11543 MT
(and the aggregate is of the specified type,)
42 W( then the function is applied to)43 W
/Times-Italic SF
40796 XM
(aggregate)SH
/Times-Roman SF
45574 XM
(after being applied to)43 W
8280 12739 MT
(all of the components.)SH
8280 15037 MT
(The)SH
/Times-Italic SF
10272 XM
(function)SH
/Times-Roman SF
14160 XM
(must be non-destructive, since it will be)
7 W( applied to the components list of)6 W
/Times-Italic SF
46752 XM
(aggregate)SH
/Times-Roman SF
(, not to a)6 W
8280 16233 MT
(copy of the components list.  For instance,)21 W
/Times-Italic SF
27390 XM
(function)SH
/Times-Roman SF
31292 XM
(cannot call)21 W
/Times-Italic SF
36404 XM
(remove-component)SH
/Times-Roman SF
45128 XM
(on the components.)
21 W( If)318 W
8280 17429 MT
(you want to use a)14 W
/Times-Italic SF
16323 XM
(function)SH
/Times-Roman SF
20218 XM
(that is destructive, you)
14 W( must make a copy of the components list and call dolist)13 W
8280 18625 MT
(yourself.)SH
8 /Courier AF
10200 21275 MT
(opal:Do-All-Components)SH
/Times-Italic SF
21240 XM
(aggregate function)SH
/Courier SF
27784 XM
(&key)SH
/Times-Italic SF
30184 XM
(type self)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 23573 MT
(The)SH
10 /Courier AF
10398 XM
(do-all-components)SH
11 /Times-Roman AF
21006 XM
(method works similarly to)133 W
10 /Courier AF
33394 XM
(do-components)SH
11 /Times-Roman AF
(, except that)
133 W( in the case that a)134 W
8280 24769 MT
(component is an aggregate,)39 W
10 /Courier AF
20745 XM
(do-all-components)SH
11 /Times-Roman AF
31259 XM
(is first called recursively on the component)
39 W( aggregate)38 W
8280 25965 MT
(and then applied to the component aggregate itself.)53 W
10 /Courier AF
31789 XM
(Self)SH
11 /Times-Roman AF
34517 XM
(determines whether to call the function on)
53 W( the)54 W
8280 27161 MT
(top level aggregate \050default=)SH
9 SS 
(NIL)SH
11 SS 
(\051 after all components.)SH
14 /Times-Bold AF
8280 30979 MT
(8.4. Finding objects under a given point)SH
8 /Courier AF
10200 33682 MT
(opal:Point-To-Component)SH
/Times-Italic SF
21720 XM
(aggregate x y)SH
/Courier SF
26553 XM
(&key)SH
/Times-Italic SF
28953 XM
(type)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
10200 35412 MT
(opal:Point-To-Leaf)SH
/Times-Italic SF
19320 XM
(aggregate x y)SH
/Courier SF
24153 XM
(&key)SH
/Times-Italic SF
26553 XM
(type)SH
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
10 SS 
8280 37710 MT
(Point-to-component)SH
11 /Times-Roman AF
19363 XM
(queries the aggregate for the first generation children at point)
8 W( \050)7 W
/Times-Italic SF
(x)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
(y)SH
/Times-Roman SF
(\051. The)
289 W( value of)7 W
/Times-Italic SF
8280 38906 MT
(type)SH
/Times-Roman SF
10439 XM
(can limit the search to)
52 W( graphical objects of a specific type.  This function returns the topmost object)53 W
8280 40102 MT
(at the specified point \050)SH
/Times-Italic SF
(x)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
(y)SH
/Times-Roman SF
(\051.)SH
10 /Courier AF
8280 42400 MT
(Point-to-leaf)SH
11 /Times-Roman AF
16584 XM
(is similar except that the query continues to)
229 W( the deepest children in the aggregate)228 W
8280 43596 MT
(hierarchy \050the leaves of the tree\051.)
102 W( Sometimes)
481 W( you will want an aggregate to be treated as a leaf in this)103 W
8280 44792 MT
(search, like a button)
186 W( aggregate in a collection of button aggregates.  In this case, you should set the)185 W
10 /Courier AF
8280 45988 MT
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
20073 XM
(slot of each aggregate that should be treated like)
118 W( a leaf.  The search will not)119 W
8280 47184 MT
(proceed through the components of such an aggregate, but will return the aggregate itself.)SH
8280 49482 MT
(The)SH
/Times-Italic SF
10327 XM
(type)SH
/Times-Roman SF
12496 XM
(slot can be either)62 W
9 SS 
20502 XM
(T)SH
11 SS 
21389 XM
(\050the default\051,)
62 W( a type, or a list of types.  If)61 W
/Times-Italic SF
40143 XM
(type)SH
/Times-Roman SF
42311 XM
(is specified as an atom, only)61 W
8280 50678 MT
(objects that are)
13 W( of that)14 W
/Times-Italic SF
18397 XM
(type)SH
/Times-Roman SF
20518 XM
(will be tested.  If)14 W
/Times-Italic SF
28286 XM
(type)SH
/Times-Roman SF
30407 XM
(is specified as a list, only objects whose type belongs to)14 W
8280 51874 MT
(that list will be tested.  The value)234 W
9 SS 
25031 XM
(T)SH
11 SS 
26089 XM
(for)SH
/Times-Italic SF
27879 XM
(type)SH
/Times-Roman SF
30219 XM
(will match all objects.  If the)233 W
/Times-Italic SF
44742 XM
(type)SH
/Times-Roman SF
47082 XM
(is specified for a)233 W
10 /Courier AF
8280 53070 MT
(point-to-leaf)SH
11 /Times-Roman AF
16355 XM
(call, and the)SH
10 /Courier AF
21975 XM
(type)SH
11 /Times-Roman AF
24650 XM
(is a kind of)
SH( aggregate, then the search will stop when an aggregate of)1 W
8280 54266 MT
(that type \050or types\051 is found at the specified \050x,y\051 location, rather than going all the way to the)
9 W( leaves.  For)8 W
8280 55462 MT
(example:)SH
8 /Courier AF
10200 56627 MT
(\050create-instance 'MYAGGTYPE opal:aggregate\051)SH
10200 57492 MT
(\050create-instance 'MYAGG MYAGGTYPE\051)SH
10200 58357 MT
(\050create-instance TOP-AGG opal:aggregate\051)SH
10200 59222 MT
(\050opal:add-component TOP-AGG MYAGG\051)SH
10200 60952 MT
(\050create-instance OBJ1 ...\051)SH
10200 61817 MT
(\050create-instance OBJ2 ...\051)SH
10200 62682 MT
(\050opal:add-components MYAGG OBJ1 OBJ2\051)SH
10200 64412 MT
(\050opal:point-to-leaf TOP-AGG x y\051 ;)SH
/Times-Italic SF
(will return obj1, obj2, or NIL)SH
/Courier SF
10200 65277 MT
(\050opal:point-to-leaf TOP-AGG x y :type MYAGGTYPE\051 ;)SH
/Times-Italic SF
(will return MYAGG or NIL)SH
10 /Courier AF
8280 67575 MT
(Point-to-leaf)SH
11 /Times-Roman AF
16906 XM
(and)SH
10 /Courier AF
19320 XM
(point-to-component)SH
11 /Times-Roman AF
30946 XM
(always use the)
551 W( function)552 W
10 /Courier AF
43782 XM
(point-in-gob)SH
11 /Times-Roman AF
51809 XM
(on the)552 W
8280 68771 MT
(components.)SH
ES
%%Page: 196 45
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 196)
SH( Opal)830 W
39956 XM
(Aggregate objects)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(8.5. Finding objects inside rectangular regions)SH
8 /Courier AF
8040 10841 MT
(opal:Components-In-Rectangle)SH
/Times-Italic SF
21960 XM
(aggregate top left bottom right)200 W
/Courier SF
33103 XM
(&key)SH
/Times-Italic SF
35503 XM
(type intersect)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 12054 MT
(opal:Leaf-Objects-In-Rectangle)SH
/Times-Italic SF
22920 XM
(aggregate top left bottom right)200 W
/Courier SF
34063 XM
(&key)SH
/Times-Italic SF
36463 XM
(type intersect)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 13267 MT
(opal:Obj-In-Rectangle)SH
/Times-Italic SF
18600 XM
(object top left bottom right)200 W
/Courier SF
28454 XM
(&key)SH
/Times-Italic SF
30854 XM
(type intersect)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 15565 MT
(The routine)188 W
10 /Courier AF
11872 XM
(components-in-rectangle)SH
11 /Times-Roman AF
26135 XM
(queries the)
188 W( aggregate for the first generation children that)187 W
6120 16761 MT
(intersect the rectangle bounded by)109 W
/Times-Italic SF
22028 XM
(top)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
24093 XM
(left)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
26158 XM
(bottom)SH
/Times-Roman SF
(, and)109 W
/Times-Italic SF
31845 XM
(right)SH
/Times-Roman SF
(. If)493 W
/Times-Italic SF
36144 XM
(intersect)SH
/Times-Roman SF
40317 XM
(is)SH
9 SS 
41436 XM
(NIL)SH
11 SS 
(, then the components)110 W
6120 17957 MT
(which are returned must be completely inside)
62 W( the rectangle, whereas if)61 W
/Times-Italic SF
38133 XM
(intersect)SH
/Times-Roman SF
42257 XM
(is non-)61 W
9 SS 
(NIL)SH
11 SS 
47179 XM
(\050the default\051,)61 W
6120 19153 MT
(then the components need only intersect the rectangle.  The value of)19 W
/Times-Italic SF
36617 XM
(type)SH
/Times-Roman SF
38743 XM
(can limit the search to)
19 W( graphical)20 W
6120 20349 MT
(objects of a specific type.)SH
10 /Courier AF
6120 22982 MT
(Leaf-objects-in-rectangle)SH
11 /Times-Roman AF
21438 XM
(is similar except)
43 W( that the query continues to the deepest children in the)42 W
6120 24178 MT
(aggregate hierarchy \050the leaves of the tree\051.  Sometimes you will want)
26 W( an aggregate to be treated as a leaf)27 W
6120 25374 MT
(in this search, like a button aggregate in an aggregate of buttons.)
232 W( In)
737 W( this case, you should set the)231 W
10 /Courier AF
6120 26570 MT
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
17913 XM
(slot of each aggregate that should be treated like)
118 W( a leaf.  The search will not)119 W
6120 27766 MT
(proceed through the components of such an aggregate, but will return the aggregate itself.)SH
10 /Courier AF
6120 30064 MT
(Obj-in-rectangle)SH
11 /Times-Roman AF
16103 XM
(tells whether the bounding box of)108 W
/Times-Italic SF
31843 XM
(object)SH
/Times-Roman SF
34913 XM
(intersects the rectangle bounded by)107 W
/Times-Italic SF
51239 XM
(top)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
6120 31260 MT
(left)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
8164 XM
(width)SH
/Times-Roman SF
10973 XM
(and)SH
/Times-Italic SF
12924 XM
(height)SH
/Times-Roman SF
(. If)451 W
/Times-Italic SF
17770 XM
(intersect)SH
/Times-Roman SF
21921 XM
(is non-)88 W
9 SS 
(NIL)SH
11 SS 
26897 XM
(\050the default\051 then)88 W
/Times-Italic SF
35010 XM
(object)SH
/Times-Roman SF
38061 XM
(need only intersect the rectangle,)88 W
6120 32456 MT
(whereas if)176 W
/Times-Italic SF
11296 XM
(intersect)SH
/Times-Roman SF
15535 XM
(is)SH
9 SS 
16719 XM
(NIL)SH
11 SS 
18669 XM
(then)SH
/Times-Italic SF
21013 XM
(object)SH
/Times-Roman SF
24151 XM
(must lie completely inside the rectangle.  If)175 W
/Times-Italic SF
44888 XM
(type)SH
/Times-Roman SF
47170 XM
(is not)175 W
9 SS 
50210 XM
(T)SH
11 SS 
51210 XM
(\050the)SH
6120 33652 MT
(default\051 then)SH
/Times-Italic SF
11984 XM
(object)SH
/Times-Roman SF
14947 XM
(must be of type)SH
/Times-Italic SF
22035 XM
(type)SH
/Times-Roman SF
(.)SH
ES
%%Page: 197 46
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 9.1)
SH( Virtual-Aggregates)
1800 W( Slots)SH
51386 XM
(Page 197)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(9. Virtual-Aggregates)SH
11 /Times-Italic AF
8280 10524 MT
(Virtual-aggregates)SH
/Times-Roman SF
17060 XM
(are used when you are going to create a very)
133 W( large number of objects \050e.g., 300 to)134 W
8280 11720 MT
(50,000\051 all of which are fairly similar.  For example, they)
19 W( are useful for points in a scatter plot, squares in)18 W
8280 12916 MT
(a "fat-bits" bitmap editor,)
2 W( line segments in a map, etc.  The virtual aggregate)3 W
/Times-Italic SF
42238 XM
(pretends)SH
/Times-Roman SF
46304 XM
(to provide an object)3 W
8280 14112 MT
(for each element, but actually doesn't.  This can save an enormous amount of memory)
101 W( and time, while)100 W
8280 15308 MT
(still providing an interface consistent with the rest of Garnet.)SH
8280 17606 MT
(The primary restriction is that there cannot be references)
84 W( or constraints from external objects)85 W
/Times-Italic SF
50510 XM
(to)SH
/Times-Roman SF
51726 XM
(or)SH
/Times-Italic SF
53002 XM
(from)SH
/Times-Roman SF
8280 18802 MT
(any of the elements of the virtual-aggregate.  Typically, all the constraints will be internal to each)
56 W( object)55 W
8280 19998 MT
(displayed, and all the properties will be determined by the values in the)SH
10 /Courier AF
39928 XM
(:items)SH
11 /Times-Roman AF
43803 XM
(array.)SH
8280 22296 MT
(The interface is similar to)222 W
/Times-Italic SF
20967 XM
(aggrelists)SH
/Times-Roman SF
(. The)
719 W( programmer provides an item-prototype, used for all)
222 W( the)223 W
8280 23492 MT
(elements, and an \050optional\051 items list to form the initial value.  To be more efficient, the)
151 W( items list is)150 W
8280 24688 MT
(actually an array for virtual-aggregates.  The item-prototype can be an arbitrary)
147 W( object or aggregadget)148 W
8280 25884 MT
(structure, and can use whatever formulas are desired)
152 W( to calculate the appropriate display based on the)151 W
8280 27080 MT
(corresponding value of the items list and the object's rank in the item's list.)SH
8280 29378 MT
(We have implemented two styles of virtual-aggregates, with a third style in planning.)
3 W( The)
283 W( first style is for)4 W
8280 30574 MT
(arbitrary overlapping objects, and is described below.  The second style is)
15 W( for non-overlapping 2-D arrays)14 W
8280 31770 MT
(of objects, such as bitmap-editor tiles.)SH
8280 34068 MT
(The third style)
33 W( is like the first, for arbitrary overlapping objects.  However, unlike the first style, it would)34 W
8280 35264 MT
(use more sophisticated techniques for)
217 W( computing the overlapping of objects, rather than using linear)216 W
8280 36460 MT
(search like the first style.  For example, it might use quad trees or whatever.)SH
8280 38758 MT
(So far, we have implemented the first and second style only.  Examples of using these virtual-aggregates)46 W
8280 39954 MT
(are in demo-circle for the first style and demo-array for the second.)SH
14 /Times-Bold AF
8280 43772 MT
(9.1. Virtual-Aggregates Slots)SH
11 /Times-Roman AF
8280 44968 MT
(A virtual-aggregate is a graphical object,)
153 W( with its own)152 W
10 /Courier AF
33601 XM
(:draw)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37303 XM
(:point-to-component)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
49405 XM
(:add-item)SH
11 /Times-Roman AF
(,)SH
8280 46164 MT
(and)SH
10 /Courier AF
10143 XM
(:remove-item)SH
11 /Times-Roman AF
17618 XM
(methods. It)
275 W( is defined as:)SH
8 /Courier AF
10200 47329 MT
(\050create-instance 'opal:virtual-aggregate opal:graphical-object)SH
12120 48194 MT
(...)SH
11640 49059 MT
(\050:item-prototype ...\051)SH
/Times-Italic SF
22680 XM
(;; you must provide this)SH
/Courier SF
11640 49924 MT
(\050:point-in-item ...\051)SH
/Times-Italic SF
22680 XM
(;; you must provide this)SH
/Courier SF
11640 50789 MT
(\050:item-array ...\051)SH
/Times-Italic SF
22680 XM
(;; you may provide this)SH
/Courier SF
11640 51654 MT
(\050:dummy-item ...\051)SH
11640 52519 MT
(\051)SH
11 /Times-Roman AF
8280 54817 MT
(For example, in demo-circle the virtual-aggregate is:)SH
8 /Courier AF
12120 55982 MT
(\050create-instance NIL opal:virtual-aggregate)SH
13560 56847 MT
(\050:item-prototype MY-CIRCLE\051)SH
13560 57712 MT
(\050:point-in-item #'My-Point-In-Circle\051\051)SH
11 /Times-Roman AF
8280 60010 MT
(Here are the slots you must provide for a virtual-aggregate.)SH
/Times-Bold SF
8280 62308 MT
(:ITEM-PROTOTYPE)SH
/Times-Roman SF
8280 63504 MT
(In the :item-prototype slot, you put the Garnet object of your)
120 W( choice \050primitive object or aggregadget\051.)121 W
8280 64700 MT
(You must, however, have formulas in your :item-prototype object that depend on)
177 W( its)176 W
10 /Courier AF
47880 XM
(:item-values)SH
11 /Times-Roman AF
8280 65896 MT
(and/or)SH
10 /Courier AF
11392 XM
(:rank)SH
11 /Times-Roman AF
14694 XM
(slot. The)329 W
10 /Courier AF
19175 XM
(:rank)SH
11 /Times-Roman AF
22477 XM
(is set with the object's rank)
27 W( in the)28 W
10 /Courier AF
37788 XM
(:items)SH
11 /Times-Roman AF
41691 XM
(array. The)331 W
10 /Courier AF
46843 XM
(:item-values)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 67092 MT
(set with the appropriate data from the)SH
10 /Courier AF
25049 XM
(:item-array)SH
11 /Times-Roman AF
(. For)
275 W( instance, in demo-circle, the item-prototype is:)SH
ES
%%Page: 198 47
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 198)
SH( Opal)830 W
39484 XM
(Virtual-Aggregates Chapter)
1550 W( 9)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'MY-CIRCLE opal:circle)SH
9480 8564 MT
(\050:filling-style \050o-formula \050fourth \050gvl :item-values\051\051\051\051)SH
9480 9429 MT
(\050:radius \050o-formula \050third \050gvl :item-values\051\051\051\051)SH
9480 10294 MT
(\050:left \050o-formula \050- \050first \050gvl :item-values\051\051 \050gvl :radius\051\051\051\051)SH
9480 11159 MT
(\050:top \050o-formula \050- \050second \050gvl :item-values\051\051 \050gvl :radius\051\051\051\051)SH
9480 12024 MT
(\050:width \050o-formula \050* 2 \050gvl :radius\051\051\051\051)SH
9480 12889 MT
(\050:height \050o-formula \050gvl :width\051\051\051\051)SH
11 /Times-Roman AF
6120 15187 MT
(In this case the)19 W
10 /Courier AF
13038 XM
(:item-values)SH
11 /Times-Roman AF
20532 XM
(slot contains a list of four numbers:  the x and y coordinates of)
19 W( the center)18 W
6120 16383 MT
(of the circle, the radius of the circle, and an)
159 W( Opal color.  For your item-prototype, the format for the)160 W
6120 17579 MT
(item-values data can be anything you like, and you don't)
106 W( have to set the)105 W
10 /Courier AF
39460 XM
(:item-values)SH
11 /Times-Roman AF
47040 XM
(slot yourself:)105 W
6120 18775 MT
(Opal will do that for you.)SH
/Times-Bold SF
6120 21408 MT
(:POINT-IN-ITEM)SH
/Times-Roman SF
6120 22604 MT
(This slot contains a function of the form)SH
8 /Courier AF
8040 23769 MT
(\050lambda \050virtual-aggregate item-values x y\051 ...\051)SH
11 /Times-Roman AF
6120 25190 MT
(which returns)97 W
9 SS 
12606 XM
(T)SH
11 SS 
13528 XM
(or)SH
9 SS 
14816 XM
(NIL)SH
11 SS 
16688 XM
(depending on whether the point <x,y> lies within an)97 W
10 /Courier AF
40859 XM
(:item-prototype)SH
11 /Times-Roman AF
50232 XM
(object)SH
6120 26386 MT
(with)SH
10 /Courier AF
8404 XM
(:item-values)SH
11 /Times-Roman AF
15932 XM
(item-values. Typically,)
381 W( you will be able to compute this function)
53 W( efficiently based)52 W
6120 27582 MT
(on your)
22 W( knowledge of the how the objects will look.  For instance, in demo-circle, the)23 W
10 /Courier AF
44520 XM
(:point-in-item)SH
11 /Times-Roman AF
6120 28778 MT
(slots contains:)SH
8 /Courier AF
8040 29943 MT
(\050lambda \050virtual-aggregate item-values x y\051)SH
9000 30808 MT
(\050<= \050+ \050expt \050- x \050first item-values\051\051 2\051)SH
12360 31673 MT
(\050expt \050- y \050second item-values\051\051 2\051\051)SH
10920 32538 MT
(\050expt \050third item-values\051 2\051\051\051)SH
11 /Times-Bold AF
6120 34836 MT
(:ITEM-ARRAY)SH
/Times-Roman SF
6120 36032 MT
(This is a slot)
22 W( you)21 W
/Times-Italic SF
14021 XM
(may)SH
/Times-Roman SF
(, but need not provide.  If you don't provide one, then all of the items will be added)21 W
6120 37228 MT
(using the add-item function, below.)42 W
10 /Courier AF
22564 XM
(:item-array)SH
11 /Times-Roman AF
29481 XM
(contains either a)
42 W( 1-dimensional array of item-values,)43 W
6120 38424 MT
(ordered from back to)
47 W( front on your display, or a 2-dimensional array.  So for the demo-circle example, it)46 W
6120 39620 MT
(will look something like:)SH
8 /Courier AF
8040 40785 MT
(#\050\050304 212 12 #k<RED-FILL>\051)SH
9000 41650 MT
(\05088 64 11 #k<GREEN-FILL>\051)SH
9000 42515 MT
(...\051)SH
11 /Times-Roman AF
6120 43936 MT
(The array may have)SH
9 SS 
15158 XM
(NIL)SH
11 SS 
(s in it.  Each)SH
9 SS 
22402 XM
(NIL)SH
11 SS 
24177 XM
(represents a gap in this items list.)SH
14 /Times-Bold AF
6120 47754 MT
(9.2. Two-dimensional virtual-aggregates)SH
11 /Times-Roman AF
6120 48950 MT
(You can create a virtual-aggregate whose)25 W
10 /Courier AF
24774 XM
(:item-array)SH
11 /Times-Roman AF
31674 XM
(is a)25 W
/Times-Italic SF
33496 XM
(two)SH
/Times-Roman SF
35386 XM
(dimensional array.  The)
25 W( formulas in the)26 W
10 /Courier AF
6120 50146 MT
(:dummy-item)SH
11 /Times-Roman AF
13045 XM
(of the aggregate must depend on two slots)50 W
10 /Courier AF
32263 XM
(:rank1)SH
11 /Times-Roman AF
36188 XM
(and)SH
10 /Courier AF
38101 XM
(:rank2)SH
11 /Times-Roman AF
42026 XM
(instead of the single slot)50 W
10 /Courier AF
6120 51342 MT
(:rank)SH
11 /Times-Roman AF
(. This)
308 W( is useful for non-overlapping tables, such as bitmap editors \050fat-bits\051, spreadsheets, etc.  See)17 W
6120 52538 MT
(the example in demo-array.)SH
14 /Times-Bold AF
6120 56356 MT
(9.3. Manipulating the Virtual-Aggregate)SH
11 /Times-Roman AF
6120 57552 MT
(These are the routines exported by Opal that you can use to manipulate the item array:)SH
8 /Courier AF
8040 58765 MT
(opal:Add-Item)SH
/Times-Italic SF
14760 XM
(a-virtual-aggregate item-values)200 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 61063 MT
(This adds a new item to the)113 W
10 /Courier AF
19284 XM
(:item-array)SH
11 /Times-Roman AF
26271 XM
(of)SH
/Times-Italic SF
27574 XM
(a-virtual-aggregate)SH
/Times-Roman SF
(.)SH
/Times-Italic SF
37299 XM
(Item-values)SH
/Times-Roman SF
42816 XM
(is a list containing the)112 W
6120 62259 MT
(values for an)410 W
10 /Courier AF
13305 XM
(:item-values)SH
11 /Times-Roman AF
21190 XM
(slot of)
410 W( the item-prototype.)411 W
10 /Courier AF
35282 XM
(Add-item)SH
11 /Times-Roman AF
40768 XM
(returns the rank into the)411 W
10 /Courier AF
6120 63455 MT
(:item-array)SH
11 /Times-Roman AF
12995 XM
(where the new item was inserted.  The)SH
10 /Courier AF
30190 XM
(:item-array)SH
11 /Times-Roman AF
37065 XM
(must be one-dimensional.)SH
8 /Courier AF
8040 64668 MT
(opal:Remove-Item)SH
/Times-Italic SF
16200 XM
(a-virtual-aggregate rank)200 W
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 66089 MT
(This removes an item from the)193 W
10 /Courier AF
21086 XM
(:item-array)SH
11 /Times-Roman AF
28153 XM
(of)SH
/Times-Italic SF
29536 XM
(a-virtual-aggregate)SH
/Times-Roman SF
(. Actually,)
659 W( it puts a)192 W
9 SS 
48286 XM
(NIL)SH
11 SS 
50253 XM
(in the)192 W
10 /Courier AF
6120 67285 MT
(:item-array)SH
11 /Times-Roman AF
12995 XM
(\050it does not compress the array\051.  The)SH
10 /Courier AF
29702 XM
(:item-array)SH
11 /Times-Roman AF
36577 XM
(must be one-dimensional.)SH
8 /Courier AF
8040 68498 MT
(opal:Change-Item)SH
/Times-Italic SF
16200 XM
(a-virtual-aggregate new-item rank)200 W
/Courier SF
28185 XM
(&optional)SH
/Times-Italic SF
32985 XM
(rank2)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 69919 MT
(This changes the)151 W
/Times-Italic SF
14240 XM
(rank)SH
/Times-Roman SF
('th entry of the)151 W
10 /Courier AF
23702 XM
(:item-array)SH
11 /Times-Roman AF
30728 XM
(of the virtual-aggregate to be)151 W
/Times-Italic SF
44524 XM
(new-item)SH
/Times-Roman SF
(. \050It)
577 W( also)152 W
6120 71115 MT
(marks that item to be redrawn at the next update\051.  To manipulate a two-dimensional)
48 W( array, use)47 W
/Times-Italic SF
48994 XM
(rank)SH
/Times-Roman SF
51332 XM
(and)SH
ES
%%Page: 199 48
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 9.3)
SH( Manipulating)
1800 W( the Virtual-Aggregate)SH
51386 XM
(Page 199)SH
46800 50 8280 4486 UL
11 /Times-Italic AF
8280 7955 MT
(rank2)SH
/Times-Roman SF
11169 XM
(as the two indices.  Note: you have to use this function and cannot directly)
48 W( modify the items array)49 W
8280 9151 MT
(after the virtual-aggregate has been displayed.)SH
8 /Courier AF
10200 10364 MT
(opal:Point-To-Rank)SH
/Times-Italic SF
19320 XM
(a-virtual-aggregate x y)200 W
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 12662 MT
(Returns the rank of the)
84 W( front-most item in the virtual-aggregate that contains point <x,y>.  \050This is why)83 W
8280 13858 MT
(you had to supply)SH
10 /Courier AF
16408 XM
(:point-in-item)SH
11 /Times-Roman AF
(.\051 The)
275 W( virtual-aggregate must be one-dimensional.)SH
8 /Courier AF
10200 15071 MT
(opal:Point-To-Component)SH
/Times-Italic SF
21720 XM
(a-virtual-aggregate x y)200 W
/Courier SF
49757 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 16492 MT
(This is like)166 W
10 /Courier AF
13943 XM
(point-to-rank)SH
11 /Times-Roman AF
(, but it returns an)
166 W( actual Opal object.  However, the object is actually a)167 W
8280 17688 MT
(dummy object with the appropriate value placed in its)67 W
10 /Courier AF
32864 XM
(:item-values)SH
11 /Times-Roman AF
40406 XM
(and)SH
10 /Courier AF
42336 XM
(:rank)SH
11 /Times-Roman AF
45678 XM
(slots. So)
408 W( you cannot)66 W
8280 18884 MT
(call Point-to-component twice and hope to)
93 W( hold on the first value.  \050The virtual-aggregate must be one-)94 W
8280 20080 MT
(dimensional.\051)SH
8 /Courier AF
10200 21293 MT
(opal:Recalulate-Virtual-Aggregate-Bboxes)SH
/Times-Italic SF
29880 XM
(a-virtual-aggregate)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 22714 MT
(The purpose of this routine is to re-initialize all the bounding boxes of)
47 W( the items of the virtual-aggregate.)46 W
8280 23910 MT
(This would come in handy if, for instance, you created a virtual-aggregate whose items depended)
8 W( for their)9 W
8280 25106 MT
(position on the position of the virtual-aggregate itself.  After you changed the)164 W
10 /Courier AF
44748 XM
(:left)SH
11 /Times-Roman AF
48187 XM
(or)SH
10 /Courier AF
49542 XM
(:top)SH
11 /Times-Roman AF
52381 XM
(of the)164 W
8280 26302 MT
(virtual-aggregate, you would call)310 W
10 /Courier AF
24395 XM
(recalculate-virtual-aggregate-bboxes)SH
11 /Times-Roman AF
46580 XM
(to re-calculate the)311 W
8280 27498 MT
(bounding boxes of the items.)SH
8280 29796 MT
(There is a macro for performing operations iteratively on elements of a 2-dimensional virtual-aggregate:)SH
8 /Courier AF
10200 31009 MT
(opal:Do-In-Clip-Rect \050)SH
/Times-Italic SF
(var1 var2 a-virtual-aggregate clip-rect)200 W
/Courier SF
(\051 &body)SH
/Times-Italic SF
37747 XM
(body)SH
/Courier SF
50068 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 32430 MT
(The variables)114 W
/Times-Italic SF
14738 XM
(var1)SH
/Times-Roman SF
17143 XM
(and)SH
/Times-Italic SF
19120 XM
(var2)SH
/Times-Roman SF
21525 XM
(take on all values for which the item with)114 W
10 /Courier AF
41094 XM
(:rank1)SH
11 /Times-Roman AF
45083 XM
(=)SH
/Times-Italic SF
46092 XM
(var1)SH
/Times-Roman SF
48496 XM
(and)SH
10 /Courier AF
50472 XM
(:rank2)SH
11 /Times-Roman AF
54460 XM
(=)SH
/Times-Italic SF
8280 33626 MT
(var2)SH
/Times-Roman SF
10620 XM
(intersect the clip-rectangle)50 W
/Times-Italic SF
22711 XM
(clip-rect)SH
/Times-Roman SF
(. The)375 W
/Times-Italic SF
29397 XM
(clip-rect)SH
/Times-Roman SF
33448 XM
(is a list of left, top, width, and height -- the kind)50 W
8280 34822 MT
(of argument that is returned from a two-point-interactor.)SH
8280 37120 MT
(As an example, consider the following code borrowed from demo-array:)SH
8 /Courier AF
10200 38285 MT
(\050defun Whiten-Rectangle \050dum clip-rect\051)SH
11160 39150 MT
(\050declare \050ignore dum\051\051)SH
11160 40015 MT
(\050do-in-clip-rect \050index-1 index-2 the-array clip-rect\051)SH
12120 40880 MT
(\050change-item the-array 1 index-1 index-2\051\051\051)SH
10200 42610 MT
(\050create-instance 'WHITER inter:two-point-interactor)SH
11640 43475 MT
(\050:start-event :leftdown\051)SH
11640 44340 MT
(\050:continuous T\051)SH
11640 45205 MT
(\050:start-where `\050:in ,The-Array\051\051)SH
11640 46070 MT
(\050:window w\051)SH
11640 46935 MT
(\050:feedback-obj FEED-RECT\051)SH
11640 47800 MT
(\050:final-function #'Whiten-Rectangle\051\051)SH
11 /Times-Roman AF
8280 49221 MT
(The-array is)
700 W( a 2-dimensional virtual-aggregate.  The routine)699 W
10 /Courier AF
40536 XM
(Whiten-Rectangle)SH
11 /Times-Roman AF
51110 XM
(performs)SH
10 /Courier AF
8280 50417 MT
(opal:change-item)SH
11 /Times-Roman AF
18156 XM
(on every element of the-array that is inside the clip-rect \050the second argument to the)2 W
10 /Courier AF
8280 51613 MT
(:final-function)SH
11 /Times-Roman AF
17555 XM
(of a two-point interactor is always a rectangle\051.)SH
8280 53911 MT
(This is a macro for performing operations iteratively on elements of a)
118 W( 2-dimensional virtual-aggregate.)117 W
8280 55107 MT
(The variables)113 W
/Times-Italic SF
14736 XM
(var1)SH
/Times-Roman SF
17140 XM
(and)SH
/Times-Italic SF
19117 XM
(var2)SH
/Times-Roman SF
21522 XM
(take on all values for which the item with)114 W
10 /Courier AF
41091 XM
(:rank1)SH
11 /Times-Roman AF
45080 XM
(=)SH
/Times-Italic SF
46089 XM
(var1)SH
/Times-Roman SF
48494 XM
(and)SH
10 /Courier AF
50471 XM
(:rank2)SH
11 /Times-Roman AF
54460 XM
(=)SH
/Times-Italic SF
8280 56303 MT
(var2)SH
/Times-Roman SF
10628 XM
(intersect the clip-rectangle clip-rect.  The clip-rect is a)
57 W( list of left, top, width, and height -- the kind)56 W
8280 57499 MT
(of argument that is returned from a two-point-interactor.)SH
ES
%%Page: 200 49
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 200)
SH( Opal)830 W
42871 XM
(Windows Chapter)
1550 W( 10)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(10. Windows)SH
11 /Times-Roman AF
6120 10524 MT
(Graphical objects can only display themselves in a)SH
/Times-Italic SF
28664 XM
(window)SH
/Times-Roman SF
(.)SH
8 /Courier AF
8040 11689 MT
(\050create-instance 'inter:Interactor-Window opal::window)SH
9000 12554 MT
(\050:maybe-constant '\050:left :top :width :height :visible\051\051)SH
9000 13419 MT
(\050:left 0\051)SH
9000 14284 MT
(\050:top 0\051)SH
9000 15149 MT
(\050:width 355\051)SH
9000 16014 MT
(\050:height 277\051)SH
9000 16879 MT
(\050:border-width 2\051)SH
9000 17744 MT
(\050:left-border-width ...\051 \050:top-border-width ...\051)SH
/Times-Italic SF
34440 XM
(;; Read-only slots -- Do not set!)SH
/Courier SF
9000 18609 MT
(\050:right-border-width ...\051 \050:bottom-border-width ...\051)SH
/Times-Italic SF
34440 XM
(;; See section 10.2.)SH
/Courier SF
9000 19474 MT
(\050:max-width NIL\051 \050:max-height NIL\051)SH
9000 20339 MT
(\050:min-width NIL\051 \050:min-height NIL\051)SH
9000 21204 MT
(\050:cursor opal:Arrow-Pair\051)SH
/Times-Italic SF
22920 XM
(;; Shape of the pointer in this window.  \050See section 10.3\051.)SH
/Courier SF
9000 22069 MT
(\050:position-by-hand NIL\051)SH
9000 22934 MT
(\050:title "Opal)SH
/Times-Italic SF
15720 XM
(N)SH
/Courier SF
("\051)SH
9000 23799 MT
(\050:omit-title-bar-p NIL\051)SH
9000 24664 MT
(\050:icon-title "Opal)SH
/Times-Italic SF
18120 XM
(N)SH
/Courier SF
("\051)SH
9000 25529 MT
(\050:icon-bitmap NIL\051)SH
9000 26394 MT
(\050:draw-on-children NIL\051)SH
9000 27259 MT
(\050:background-color NIL\051)SH
9000 28124 MT
(\050:double-buffered-p NIL\051)SH
9000 28989 MT
(\050:save-under NIL\051)SH
9000 29854 MT
(\050:aggregate NIL\051)SH
9000 30719 MT
(\050:parent NIL\051)SH
9000 31584 MT
(\050:visible ...\051)SH
9000 32449 MT
(\050:modal-p NIL\051)SH
/Times-Italic SF
22920 XM
(;; Whether to suspend input while visible.  See the Interactors Manual.)SH
/Courier SF
9000 33314 MT
(\050:in-progress NIL\051)SH
/Times-Italic SF
22920 XM
(;; Read by)SH
/Courier SF
26451 XM
(opal:update-all)SH
/Times-Italic SF
(. See)
200 W( section 10.4.)SH
/Courier SF
9000 34179 MT
(...\051)SH
11 /Times-Bold AF
6120 36477 MT
(Caveats:)SH
/Symbol SF
8089 38055 MT
(\267)SH
/Times-Roman SF
8870 XM
(Garnet windows will not appear on the screen)
24 W( until they are updated, by calling the functions)25 W
10 /Courier AF
8870 39251 MT
(opal:update)SH
11 /Times-Roman AF
15772 XM
(or)SH
10 /Courier AF
16990 XM
(opal:update-all)SH
11 /Times-Roman AF
(. These)
329 W( functions will also cause)
27 W( all of the graphics in)26 W
8870 40447 MT
(the window to be brought up-to-date.)SH
/Symbol SF
8089 42341 MT
(\267)SH
/Times-Roman SF
8870 XM
(Windows are not usually)
47 W( used as prototypes for other windows.  If a window is created with)48 W
8870 43537 MT
(its)SH
10 /Courier AF
10399 XM
(:visible)SH
11 /Times-Roman AF
15688 XM
(slot set to T, then it should be expected to)
214 W( appear on the screen \050even if)213 W
10 /Courier AF
8870 44733 MT
(opal:update)SH
11 /Times-Roman AF
15779 XM
(is not explicitly called on it\051.  When similar windows)
34 W( need to be generated, it)35 W
8870 45929 MT
(is recommended that a function be written \050like at the end of the Tutorial\051 that will return the)27 W
8870 47125 MT
(window instances.)SH
6120 49423 MT
(The)SH
10 /Courier AF
8108 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11661 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
14614 XM
(:width)SH
11 /Times-Roman AF
(, and)3 W
10 /Courier AF
20633 XM
(:height)SH
11 /Times-Roman AF
25111 XM
(slots of the window control its position)
3 W( and dimensions.  These)4 W
6120 50619 MT
(slots can be set using)29 W
10 /Courier AF
15827 XM
(s-value)SH
11 /Times-Roman AF
20330 XM
(to change the window's size and position \050which will take affect after the)28 W
6120 51815 MT
(next)SH
10 /Courier AF
8323 XM
(update)SH
11 /Times-Roman AF
12232 XM
(call\051. If)
343 W( the user changes the size or position of a window)
34 W( using the window manager \050e.g.,)35 W
9 SS 
42234 52673 MT
(2)SH
11 SS 
6120 53036 MT
(using the mouse\051, this will)238 W
/Times-Italic SF
19228 XM
(usually)SH
/Times-Roman SF
22919 XM
(be reflected in)
238 W( the values for these slots.)237 W
43708 XM
(Some special issues)237 W
6120 54232 MT
(involving the position and dimensions of Garnet windows when)
43 W( adorned with window manager title bars)44 W
6120 55428 MT
(are discussed in section 10.2.)SH
6120 57726 MT
(If you create a window with values in)
566 W( its)565 W
10 /Courier AF
29387 XM
(:max-width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
36502 XM
(:max-height)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
44217 XM
(:min-width)SH
11 /Times-Roman AF
(, and)565 W
10 /Courier AF
6120 58922 MT
(:min-height)SH
11 /Times-Roman AF
(, then the window manager will make sure)
13 W( the user doesn't change the window's size to be)14 W
6120 60118 MT
(outside of those ranges.  However, you can still)113 W
10 /Courier AF
28306 XM
(s-value)SH
11 /Times-Roman AF
32894 XM
(the)SH
10 /Courier AF
34625 XM
(:width)SH
11 /Times-Roman AF
38612 XM
(and)SH
10 /Courier AF
40587 XM
(:height)SH
11 /Times-Roman AF
45174 XM
(of)SH
10 /Courier AF
46477 XM
(win)SH
11 /Times-Roman AF
48664 XM
(to be any)112 W
6120 61314 MT
(value. The)
395 W( slots)60 W
10 /Courier AF
13845 XM
(:max-width)SH
11 /Times-Roman AF
20180 XM
(and)SH
10 /Courier AF
22103 XM
(:max-height)SH
11 /Times-Roman AF
29038 XM
(can only be set at)
60 W( creation time.  Furthermore, due to)61 W
6120 62510 MT
(peculiarities in X windows, you must)
34 W( set)33 W
/Times-Italic SF
24566 XM
(both)SH
10 /Courier AF
26830 XM
(:max-width)SH
11 /Times-Roman AF
33138 XM
(and)SH
10 /Courier AF
35034 XM
(:max-height)SH
11 /Times-Roman AF
41942 XM
(to be non-)33 W
9 SS 
(NIL)SH
11 SS 
48276 XM
(at creation)33 W
6120 63706 MT
(time to have any effect.  The slots)SH
10 /Courier AF
21301 XM
(:min-width)SH
11 /Times-Roman AF
27576 XM
(and)SH
10 /Courier AF
29439 XM
(:min-height)SH
11 /Times-Roman AF
36314 XM
(behave in the analogous manner.)SH
6120 66004 MT
(The)SH
10 /Courier AF
8107 XM
(:title)SH
11 /Times-Roman AF
11984 XM
(slot contains a string specifying)
2 W( the title of the Garnet window.  The default title is "Opal)3 W
/Times-Italic SF
51462 XM
(N)SH
/Times-Roman SF
(",)SH
6120 67200 MT
(where)SH
/Times-Italic SF
9081 XM
(N)SH
/Times-Roman SF
10090 XM
(starts at 1, and increments each time a new window is created in that Lisp.)SH
10800 50 6120 70172 UL
7 SS 
7020 71673 MT
(2)SH
9 SS 
7370 72000 MT
(There are bugs in some window managers that make this difficult or impossible.)SH
ES
%%Page: 201 50
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 10)
SH( Windows)1550 W
51386 XM
(Page 201)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10278 XM
(:omit-title-bar-p)SH
11 /Times-Roman AF
20765 XM
(slot tells whether or not the Garnet window should have a title bar.  If the slot)12 W
8280 9151 MT
(has value)120 W
9 SS 
12918 XM
(NIL)SH
11 SS 
14813 XM
(\050the default\051, and the window manager permits it,)
120 W( then the window will have a title bar;)121 W
8280 10347 MT
(otherwise the window will not have a title bar.)SH
8280 12645 MT
(The)SH
10 /Courier AF
10297 XM
(:icon-title)SH
11 /Times-Roman AF
17204 XM
(slot contains a string specifying the icon title of the window.  The default icon title)
32 W( is)31 W
8280 13841 MT
(the same as the)SH
10 /Courier AF
15244 XM
(:title.)SH
11 /Times-Roman AF
19994 XM
(This is the string that gets displayed when a window is iconified.)SH
8280 16139 MT
(You may)
4 W( set the icon of a window to be an arbitrary bitmap by setting its)5 W
10 /Courier AF
40803 XM
(:icon-bitmap)SH
11 /Times-Roman AF
48283 XM
(slot. The)
285 W( value)5 W
8280 17335 MT
(should be a filename which specifies the location of a bitmap file.)SH
8280 19633 MT
(In the rare case when you want to have graphics drawn)
137 W( on a parent window appear over the enclosed)136 W
8280 20829 MT
(\050child\051 windows, you can set the)101 W
10 /Courier AF
23457 XM
(:draw-on-children)SH
11 /Times-Roman AF
34033 XM
(of the parent to)
101 W( be non-)102 W
9 SS 
(NIL)SH
11 SS 
(. Then)
479 W( any objects)102 W
8280 22025 MT
(that belong to that window will appear on)
49 W( top of the window's subwindows \050rather than being hidden by)48 W
8280 23221 MT
(the subwindows\051.  Note:  Because of the inability to redraw the graphics in the)
291 W( window and the)292 W
8280 24417 MT
(subwindows simultaneously, objects that will appear over the subwindows must)
130 W( be fast-redraw objects)129 W
8280 25613 MT
(drawn with)SH
10 /Courier AF
13534 XM
(:xor)SH
11 /Times-Roman AF
16209 XM
(\050see section 5.4\051.)SH
8280 27911 MT
(The)SH
10 /Courier AF
10323 XM
(:background-color)SH
11 /Times-Roman AF
20856 XM
(slot of an)58 W
10 /Courier AF
25399 XM
(inter:interactor-window)SH
11 /Times-Roman AF
39533 XM
(can be set to be any)59 W
10 /Courier AF
48805 XM
(opal:color)SH
11 /Times-Roman AF
(.)SH
8280 29107 MT
(The window will then appear with that as its background color.)
148 W( This)
570 W( is more efficient than putting a)147 W
8280 30303 MT
(rectangle behind all the objects.)SH
8280 32601 MT
(When the)253 W
10 /Courier AF
13306 XM
(:double-buffered-p)SH
11 /Times-Roman AF
24634 XM
(slot is T, then an exact)
253 W( copy of the window will be maintained)254 W
8280 33797 MT
(internally by Garnet.)
25 W( Then,)
323 W( when the graphics in the window change, the change occurs first in the copy,)24 W
8280 34993 MT
(and then the changed region is transferred as a pixmap to the original window.  This has)
61 W( the potential to)62 W
8280 36189 MT
(reduce flicker in the redrawing)
6 W( of the window.  By default, windows do not use this feature because of the)5 W
8280 37385 MT
(extra memory required by the internal buffer.)SH
8280 39683 MT
(When the)185 W
10 /Courier AF
13170 XM
(:save-under)SH
11 /Times-Roman AF
20230 XM
(slot is T, then Garnet internally stores the contents)
185 W( of the screen under the)186 W
8280 40879 MT
(window. If)
589 W( the window is made invisible, then Garnet)
157 W( does not have to redraw any Garnet windows)156 W
8280 42075 MT
(under it, because the image can simply be redrawn from the saved contents.  This option is)
98 W( used in the)99 W
10 /Courier AF
8280 43271 MT
(menubar)SH
11 /Times-Roman AF
12755 XM
(and)SH
10 /Courier AF
14618 XM
(option-button)SH
11 /Times-Roman AF
22693 XM
(gadgets.)SH
8280 45569 MT
(The)SH
10 /Courier AF
10293 XM
(:aggregate)SH
11 /Times-Roman AF
16596 XM
(slot specifies an aggregate object to hold all the objects to be displayed in the window.)28 W
8280 46765 MT
(Each window must contain exactly one aggregate in this slot, and all objects in)
25 W( the window should be put)26 W
8280 47961 MT
(into this aggregate.  This slot should be set after the window is created, not)
569 W( during the)568 W
10 /Courier AF
8280 49157 MT
(create-instance)SH
11 /Times-Roman AF
17767 XM
(call. This)
699 W( will ensure that)
212 W( the proper demons are running when the slot is set.)213 W
/Times-Bold SF
8280 50353 MT
(Performance hint: specify the top, left, width and height of this aggregate to be formulas)
18 W( depending)17 W
8280 51549 MT
(on the window, rather than using the default)
119 W( formulas, which depend on all of the objects in the)120 W
8280 52745 MT
(aggregate)SH
/Times-Roman SF
(.)SH
8280 55043 MT
(The)SH
10 /Courier AF
10348 XM
(:visible)SH
11 /Times-Roman AF
15506 XM
(slot specifies if the window is currently visible on the screen or not.  In)
83 W( X terminology,)82 W
8280 56239 MT
(this determines if)
9 W( the window is mapped or not.  You can set the)10 W
10 /Courier AF
37043 XM
(:visible)SH
11 /Times-Roman AF
42128 XM
(slot at any time to change the)10 W
8280 57435 MT
(visibility \050which will take effect after an)SH
10 /Courier AF
26271 XM
(update)SH
11 /Times-Roman AF
30146 XM
(call\051.)SH
8280 59733 MT
(If you)
12 W( create a window and set the)11 W
10 /Courier AF
23761 XM
(:position-by-hand)SH
11 /Times-Roman AF
34247 XM
(slot to be T, then when you call)11 W
10 /Courier AF
48480 XM
(opal:update)SH
11 /Times-Roman AF
8280 60929 MT
(the first time, the cursor)
4 W( on your screen will change to a prompt asking you where to position the window,)5 W
8280 62125 MT
(and the initial values of)SH
10 /Courier AF
18881 XM
(:left)SH
11 /Times-Roman AF
22156 XM
(and)SH
10 /Courier AF
24019 XM
(:top)SH
11 /Times-Roman AF
26694 XM
(will be ignored.)SH
8280 64423 MT
(If a window is created with)
113 W( a window object in its)112 W
10 /Courier AF
31786 XM
(:parent)SH
11 /Times-Roman AF
36373 XM
(slot, then the new window will be a sub-)112 W
8280 65619 MT
(window of the parent window.)
42 W( Each)
361 W( window sets up its own coordinate system, so the)43 W
10 /Courier AF
47456 XM
(:left)SH
11 /Times-Roman AF
50774 XM
(and)SH
10 /Courier AF
52680 XM
(:top)SH
11 /Times-Roman AF
8280 66815 MT
(of the subwindow)
137 W( will be with respect to the parent window.)136 W
/Times-Bold SF
37133 XM
(The parent window must be updated)136 W
8280 68011 MT
(before the subwindow is created.)107 W
/Times-Roman SF
24839 XM
(Using)SH
9 SS 
27849 XM
(NIL)SH
11 SS 
29731 XM
(for the)108 W
10 /Courier AF
33123 XM
(:parent)SH
11 /Times-Roman AF
37706 XM
(makes the window be at the top level.)108 W
8280 69207 MT
(Only top-level windows can be manipulated by the window manager \050i.e, by using the mouse\051.)SH
ES
%%Page: 202 51
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 202)
SH( Opal)830 W
42871 XM
(Windows Chapter)
1550 W( 10)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(10.1. Window Positioning)SH
11 /Times-Roman AF
6120 9334 MT
(When top-level windows first)
52 W( become visible, their)51 W
10 /Courier AF
29330 XM
(:left)SH
11 /Times-Roman AF
32656 XM
(and)SH
10 /Courier AF
34570 XM
(:top)SH
11 /Times-Roman AF
37296 XM
(slots may change values slightly to)51 W
6120 10530 MT
(accomodate the title bars)
101 W( added by the window manager.  When you create a regular top-level window)102 W
6120 11726 MT
(with a)4 W
10 /Courier AF
9122 XM
(:top)SH
11 /Times-Roman AF
11801 XM
(of 100, for example, the inside edge of the window will appear at 100.  The window)
4 W( manager)3 W
6120 12922 MT
(frame of the window \050the outside edge\051 will appear a little higher, depending on)
9 W( the window manager, but)10 W
6120 14118 MT
(somewhere around 25 pixels higher.  The window manager then)
60 W( notifies Garnet that this frame has been)59 W
6120 15314 MT
(added by changing the)SH
10 /Courier AF
16322 XM
(:top)SH
11 /Times-Roman AF
18997 XM
(of the window to 75.  The drawable region of the window remains at 100.)SH
6120 17612 MT
(When the)56 W
10 /Courier AF
10752 XM
(:top)SH
11 /Times-Roman AF
13483 XM
(of the window is changed \050via)56 W
10 /Courier AF
27381 XM
(s-value)SH
11 /Times-Roman AF
(\051 after it)
56 W( is visible, then it is the outside edge of)57 W
6120 18808 MT
(the window that is being changed, which is the top of the frame.)
25 W( You)
323 W( can always determine the height of)24 W
6120 20004 MT
(the window's title bar in the)14 W
10 /Courier AF
18852 XM
(:top-border-width)SH
11 /Times-Roman AF
29342 XM
(slot \050see section 10.2\051.  There are corresponding slots)15 W
6120 21200 MT
(for)SH
10 /Courier AF
7777 XM
(:left-)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
12027 XM
(:right-)SH
11 /Times-Roman AF
(, and)100 W
10 /Courier AF
18840 XM
(:bottom-border-width)SH
11 /Times-Roman AF
(. All)
475 W( of these slots are read-only, and)
100 W( are set by)99 W
6120 22396 MT
(Garnet according to your window manager.)SH
6120 24694 MT
(When stacking windows in a cascading arrangement, it is sufficient to be consistent in setting their)224 W
6120 25890 MT
(positions either before or after updating them.)
94 W( If)
462 W( the two kinds of position-setting strategies need to be)93 W
6120 27086 MT
(mixed, then the)137 W
10 /Courier AF
13619 XM
(:top-border-width)SH
11 /Times-Roman AF
24232 XM
(of the windows that have already been made visible should be)138 W
6120 28282 MT
(taken into account, versus those that have never been updated.)SH
14 /Times-Bold AF
6120 32100 MT
(10.2. Border Widths)SH
11 /Times-Roman AF
6120 33296 MT
(There are two different meanings of "border widths" in windows.)
301 W( One)
875 W( involves the user-settable)300 W
6120 34492 MT
(thickness of)
263 W( subwindows, and the other kind involves)264 W
/Times-Italic SF
32092 XM
(read-only)SH
/Times-Roman SF
36907 XM
(widths that are determined by the)264 W
6120 35688 MT
(window manager:)SH
/Symbol SF
8089 37266 MT
(\267)SH
/Times-Bold SF
8870 XM
(Subwindow Border Width)45 W
/Times-Roman SF
21690 XM
(- The)45 W
10 /Courier AF
24406 XM
(:border-width)SH
11 /Times-Roman AF
32526 XM
(slot affects the width of)
45 W( the border on a)44 W
8870 38462 MT
(subwindow. Setting)
1442 W( the)584 W
10 /Courier AF
22114 XM
(:border-width)SH
11 /Times-Roman AF
30773 XM
(slot of a subwindow to 0 during its)584 W
10 /Courier AF
8870 39658 MT
(create-instance)SH
11 /Times-Roman AF
18264 XM
(call will cause the window to have no border at all, but setting it to)
119 W( a)118 W
8870 40854 MT
(value larger than the default usually has no effect.  Currently, the border width cannot be)149 W
8870 42050 MT
(changed after the window is created.)SH
/Symbol SF
8089 43944 MT
(\267)SH
/Times-Bold SF
8870 XM
(Window Manager Frame Widths)30 W
/Times-Roman SF
24878 XM
(- After a window has been created, the)30 W
10 /Courier AF
42370 XM
(:left-border-)SH
8870 45140 MT
(width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
12716 XM
(:right-border-width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
24963 XM
(:top-border-width)SH
11 /Times-Roman AF
(, and)297 W
10 /Courier AF
38170 XM
(:bottom-border-width)SH
11 /Times-Roman AF
8870 46336 MT
(slots tell what thicknesses the left, right, top, and bottom borders of)
146 W( the windows actually)145 W
8870 47532 MT
(have. These)
275 W( slots are set by the window manager, and should not be set by Garnet users.)SH
1406 50 36300 47732 UL
14 /Times-Bold AF
6120 51350 MT
(10.3. Window Cursors)SH
11 /Times-Roman AF
6120 52546 MT
(The default cursor shape for Garnet windows is an arrow pointing to the)
8 W( upper left.  However, it would be)9 W
6120 53742 MT
(nice to change this shape sometimes,)
77 W( particularly when an application is performing a long computation)76 W
6120 54938 MT
(and you would like to display an hourglass cursor.  Several functions and objects)
49 W( make it easy to change)50 W
6120 56134 MT
(the cursors of Garnet windows.)SH
6120 58432 MT
(The following sections discuss how to change window cursors, starting)
177 W( with some background at the)176 W
6120 59628 MT
(lowest level)
268 W( of the cursor interface.  The later sections, particularly 10.3.3, describe the high-level)269 W
6120 60824 MT
(functions that allow you to change the cursor with a single function call.)SH
ES
%%Page: 203 52
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 10.3)
SH( Window)
1800 W( Cursors)SH
51386 XM
(Page 203)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(10.3.1. The :cursor Slot)SH
11 /Times-Roman AF
8280 9200 MT
(At the lowest level, the cursor of a Garnet window is governed by the value of its)108 W
10 /Courier AF
46159 XM
(:cursor)SH
11 /Times-Roman AF
50741 XM
(slot. The)489 W
8280 10396 MT
(default value for an)569 W
10 /Courier AF
19412 XM
(inter:interactor-window)SH
11 /Times-Roman AF
('s)SH
10 /Courier AF
34850 XM
(:cursor)SH
11 /Times-Roman AF
39895 XM
(slot is a list of two objects,)570 W
10 /Courier AF
8280 11592 MT
(\050#k<OPAL:ARROW-CURSOR> . #k<OPAL:ARROW-CURSOR-MASK>\051)274 W
11 /Times-Roman AF
(, which are pre-defined)
274 W( bitmaps)273 W
8280 12788 MT
(whose images)
80 W( are read from the)81 W
10 /Courier AF
23057 XM
(garnet/lib/bitmaps/)SH
11 /Times-Roman AF
34813 XM
(directory. The)437 W
10 /Courier AF
41836 XM
(opal:arrow-cursor)SH
11 /Times-Roman AF
52392 XM
(object)SH
9 SS 
51356 13646 MT
(3)SH
11 SS 
8280 14009 MT
(is the black part of the pointer, and the)SH
10 /Courier AF
25508 XM
(opal:arrow-cursor-mask)SH
11 /Times-Roman AF
38983 XM
(is the underlying white part.)SH
8280 16642 MT
(The)SH
10 /Courier AF
10307 XM
(:cursor)SH
11 /Times-Roman AF
14824 XM
(slot permits three different syntaxes which all describe a cursor/mask pair for)
42 W( the window.)43 W
8280 17838 MT
(The most basic syntax is used for the default value:)SH
8 /Courier AF
10200 19051 MT
(\050list)SH
/Times-Italic SF
13080 XM
(bitmap-1 bitmap-2)SH
/Courier SF
(\051)SH
11 /Times-Roman AF
8280 21349 MT
(The second syntax allows you to use a font)
123 W( as the source for your cursor, with the primary image and)122 W
8280 22545 MT
(mask specified by indices into the font:)SH
8 /Courier AF
10200 23758 MT
(\050list)SH
/Times-Italic SF
13080 XM
(my-font index-1 index-2)200 W
/Courier SF
(\051)SH
11 /Times-Roman AF
8280 26056 MT
(Most machines come with a font specifically for the window manager cursors, and this)
212 W( font can be)213 W
8280 27252 MT
(accessed with the)473 W
10 /Courier AF
17670 XM
(opal:cursor-font)SH
11 /Times-Roman AF
28018 XM
(object. So)
1221 W( you could try the syntax above with)
473 W( the)472 W
10 /Courier AF
8280 28448 MT
(opal:cursor-font)SH
11 /Times-Roman AF
18155 XM
(object and two consecutive indices, like this:)SH
8 /Courier AF
10200 29613 MT
(\050s-value WIN :cursor \050list opal:cursor-font 50 51\051\051)SH
11 /Times-Roman AF
8280 31911 MT
(You have to update the)
88 W( window to make the cursor change take effect.  It appears that sequential pairs,)89 W
8280 33107 MT
(like 50 and 51, reliably yield primary cursors and)
132 W( their masks.  It is easy to experiment to find a nice)131 W
8280 34303 MT
(cursor.)SH
8280 36601 MT
(Since so many cursors are created from the cursor font, a third syntax is)
32 W( provided that is analogous to the)33 W
8280 37797 MT
(previous one:)SH
8 /Courier AF
10200 39010 MT
(\050list :cursor)SH
/Times-Italic SF
16920 XM
(index-1 index-2)SH
/Courier SF
(\051)SH
11 /Times-Roman AF
8280 41308 MT
(Any of these three syntaxes can be used to)177 W
10 /Courier AF
28840 XM
(s-value)SH
11 /Times-Roman AF
33492 XM
(the)SH
10 /Courier AF
35288 XM
(:cursor)SH
11 /Times-Roman AF
39939 XM
(slot of a window.  Changing the)176 W
10 /Courier AF
8280 42504 MT
(:cursor)SH
11 /Times-Roman AF
12755 XM
(slot of a window changes it permanently, until you)SH
10 /Courier AF
35363 XM
(s-value)SH
11 /Times-Roman AF
39838 XM
(the)SH
10 /Courier AF
41457 XM
(:cursor)SH
11 /Times-Roman AF
45932 XM
(slot again.)SH
12 /Times-Bold AF
8280 46188 MT
(10.3.2. Garnet Cursor Objects)SH
8 /Courier AF
10200 47353 MT
(\050create-instance 'opal:ARROW-CURSOR opal:bitmap)SH
11160 48218 MT
(\050:image \050opal:Get-Garnet-Bitmap "garnet.cursor"\051\051\051)SH
10200 49948 MT
(\050create-instance 'opal:ARROW-CURSOR-MASK opal:bitmap)SH
11160 50813 MT
(\050:image \050opal:Get-Garnet-Bitmap "garnet.mask"\051\051\051)SH
10200 52543 MT
(\050defparameter opal:Arrow-Pair)SH
16920 53408 MT
(\050cons opal:ARROW-CURSOR opal:ARROW-CURSOR-MASK\051\051)SH
10200 56868 MT
(\050create-instance 'opal:HOURGLASS-CURSOR opal:bitmap)SH
11160 57733 MT
(\050:image \050opal:Get-Garnet-Bitmap "hourglass.cursor"\051\051\051)SH
10200 59463 MT
(\050create-instance 'opal:HOURGLASS-CURSOR-MASK opal:bitmap)SH
11160 60328 MT
(\050:image \050opal:Get-Garnet-Bitmap "hourglass.mask"\051\051\051)SH
10200 62058 MT
(\050defparameter opal:HourGlass-Pair)SH
16920 62923 MT
(\050cons opal:HOURGLASS-CURSOR opal:HOURGLASS-CURSOR-MASK\051\051)SH
11 /Times-Roman AF
8280 65981 MT
(The arrow-cursors are used for the default value of the)195 W
10 /Courier AF
34476 XM
(:cursor)SH
11 /Times-Roman AF
39147 XM
(slot in Garnet windows.  The Gilt)196 W
10800 50 8280 69158 UL
7 SS 
9180 70659 MT
(3)SH
9 SS 
9530 70986 MT
(Whenever you)
39 W( change the cursor of a window, it is a good idea to have a contrasting mask beneath the primary image.  This)38 W
8280 72000 MT
(will keep the cursor visible even when it is over an object of the same color.)SH
ES
%%Page: 204 53
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 204)
SH( Opal)830 W
42871 XM
(Windows Chapter)
1550 W( 10)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(interface builder)
97 W( and the)96 W
10 /Courier AF
17499 XM
(save-gadget)SH
11 /Times-Roman AF
24470 XM
(use the hourglass-cursors when they are busy with file I/O and)96 W
6120 9151 MT
(performing long calculations.  Users are free to use these objects in their own applications.)SH
6120 11449 MT
(The variables)181 W
10 /Courier AF
12712 XM
(opal:Arrow-Pair)SH
11 /Times-Roman AF
22168 XM
(and)SH
10 /Courier AF
24212 XM
(opal:HourGlass-Pair)SH
11 /Times-Roman AF
36068 XM
(are provided so that users can avoid)182 W
6120 12645 MT
(cons'ing up the same list repeatedly.  Setting the)726 W
10 /Courier AF
34284 XM
(:cursor)SH
11 /Times-Roman AF
39485 XM
(slot of a window)
726 W( to be)725 W
10 /Courier AF
6120 13841 MT
(opal:HourGlass-Pair)SH
11 /Times-Roman AF
17795 XM
(and then updating the window will change the cursor in the window.)SH
12 /Times-Bold AF
6120 17525 MT
(10.3.3. Temporarily Changing the Cursor)SH
11 /Times-Roman AF
6120 18721 MT
(Often when the)
104 W( cursor needs to be changed, we will be changing it back to the default very soon \050e.g.,)105 W
6120 19917 MT
(when the application has finished its computation\051.  Also, usually we want to change)
63 W( all of the windows)62 W
6120 21113 MT
(in an application, rather)
29 W( than just one window.  For this situation, the functions)30 W
10 /Courier AF
41520 XM
(opal:change-cursors)SH
11 /Times-Roman AF
6120 22309 MT
(and)SH
10 /Courier AF
8002 XM
(opal:restore-cursors)SH
11 /Times-Roman AF
20296 XM
(were written to)
19 W( change the cursors of multiple windows without changing)18 W
3362 50 45233 22509 UL
6120 23505 MT
(the)SH
10 /Courier AF
7739 XM
(:cursor)SH
11 /Times-Roman AF
12214 XM
(slots.)SH
8 /Courier AF
8040 24718 MT
(opal:Change-Cursors)SH
/Times-Italic SF
17640 XM
(cursor-list)SH
/Courier SF
21451 XM
(&optional)SH
/Times-Italic SF
26251 XM
(window-list)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 27016 MT
(The)SH
/Times-Italic SF
8165 XM
(cursor-list)SH
/Times-Roman SF
13084 XM
(argument is a pair or triplet that adheres to the syntax for the)60 W
10 /Courier AF
40775 XM
(:cursor)SH
11 /Times-Roman AF
45311 XM
(slot, discussed in)61 W
6120 28212 MT
(the previous section.)
60 W( When)393 W
/Times-Italic SF
18941 XM
(window-list)SH
/Times-Roman SF
24411 XM
(is supplied, the cursor of each window is temporarily set with a)59 W
6120 29408 MT
(cursor constructed out of the)149 W
/Times-Italic SF
19724 XM
(cursor-list)SH
/Times-Roman SF
24732 XM
(spec. When)573 W
/Times-Italic SF
30859 XM
(window-list)SH
/Times-Roman SF
36419 XM
(is NIL \050the default\051, then all Garnet)149 W
1100 50 48404 29608 UL
6120 30604 MT
(windows are set with the temporary cursor.  The value of the)156 W
10 /Courier AF
35023 XM
(:cursor)SH
11 /Times-Roman AF
39654 XM
(slot of each window remains)155 W
6120 31800 MT
(unchanged, allowing the window's normal cursor to be restored with)SH
10 /Courier AF
36697 XM
(opal:restore-cursors)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 33013 MT
(opal:Restore-Cursors &optional)SH
/Times-Italic SF
22920 XM
(window-list)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 35311 MT
(This function undoes the work of)305 W
10 /Courier AF
22858 XM
(opal:change-cursors)SH
11 /Times-Roman AF
(. Each)
885 W( window is set with the)
305 W( cursor)306 W
6120 36507 MT
(described by the value of its)SH
10 /Courier AF
18766 XM
(:cursor)SH
11 /Times-Roman AF
23241 XM
(slot \050which was not changed by)SH
10 /Courier AF
37415 XM
(opal:change-cursors)SH
11 /Times-Roman AF
(\051.)SH
6120 38805 MT
(Even the work of calling)132 W
10 /Courier AF
17929 XM
(opal:change-cursors)SH
11 /Times-Roman AF
29736 XM
(and)SH
10 /Courier AF
31731 XM
(opal:restore-cursors)SH
11 /Times-Roman AF
44138 XM
(can be)
132 W( abbreviated,)131 W
6120 40001 MT
(by using the following macros instead:)SH
8 /Courier AF
8040 41214 MT
(opal:With-Cursor)SH
/Times-Italic SF
16200 XM
(cursor)SH
/Courier SF
18768 XM
(&body)SH
/Times-Italic SF
21648 XM
(body)SH
/Courier SF
47908 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
8040 42427 MT
(opal:With-HourGlass-Cursor &body)SH
/Times-Italic SF
23880 XM
(body)SH
/Courier SF
47908 XM
([)SH
/Times-Italic SF
(Macro)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 44725 MT
(The)SH
/Times-Italic SF
8121 XM
(cursor)SH
/Times-Roman SF
11284 XM
(parameter must be a pair or triplet adhering)
16 W( to the)17 W
10 /Courier AF
33561 XM
(:cursor)SH
11 /Times-Roman AF
38053 XM
(syntax. These)
309 W( macros change the)17 W
6120 45921 MT
(cursor of all)
93 W( Garnet windows while executing the)92 W
/Times-Italic SF
28850 XM
(body)SH
/Times-Roman SF
(, and then restore the old cursors.  These are the)92 W
6120 47117 MT
(highest level functions for)
214 W( changing window cursors.  To test the)215 W
10 /Courier AF
37320 XM
(opal:with-hourglass-cursor)SH
11 /Times-Roman AF
6120 48313 MT
(macro, bring up any Garnet window \050demos are fine\051 and execute the following instruction:)SH
8 /Courier AF
8040 49478 MT
(\050opal:with-hourglass-cursor \050sleep 5\051\051)SH
11 /Times-Roman AF
6120 51776 MT
(While lisp)
89 W( is sleeping, the cursors of all the Garnet windows will change to hourglass cursors, and then)88 W
6120 52972 MT
(they will change back to normal.)SH
14 /Times-Bold AF
6120 56790 MT
(10.4. Update Quarantine Slot)SH
11 /Times-Roman AF
6120 57986 MT
(A "quarantine slot" named)41 W
10 /Courier AF
18240 XM
(:in-progress)SH
11 /Times-Roman AF
25756 XM
(exists in all Garnet windows.)
41 W( If)
358 W( there was a crash during the)42 W
6120 59182 MT
(last update of the window, then the window will stop being updated automatically along with the)
101 W( other)100 W
6120 60378 MT
(Garnet windows, until you can fix the problem and update the window successfully.)SH
6120 62676 MT
(Usually when there is)
204 W( an update failure, it is while the main-event-loop process is running and it is)205 W
6120 63872 MT
(repeatedly calling)157 W
10 /Courier AF
14558 XM
(opal:update-all)SH
11 /Times-Roman AF
(. Without)
589 W( a quarantine slot, these)
157 W( repeated updates would keep)156 W
6120 65068 MT
(throwing Garnet into the debugger, even as you tried to figure out what)
237 W( the problem was with the)238 W
6120 66264 MT
(offending window.  With the quarantine slot,)542 W
10 /Courier AF
29984 XM
(opal:update-all)SH
11 /Times-Roman AF
39800 XM
(first checks to see if the)541 W
10 /Courier AF
6120 67460 MT
(:in-progress)SH
11 /Times-Roman AF
13702 XM
(slot of the next window is T. If so, then the last update to that window must not have)108 W
6120 68656 MT
(terminated successfully, and the window is skipped.  After you fix the problem in)
277 W( the window, a)276 W
6120 69852 MT
(successful call to)SH
10 /Courier AF
13909 XM
(opal:update)SH
11 /Times-Roman AF
20784 XM
(will clear the slot, and it will resume being updated automatically.)SH
ES
%%Page: 205 54
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 10.5)
SH( Windows)
1800 W( on other Displays)SH
51386 XM
(Page 205)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Here is an example of a typical interaction involving the quarantine slot.)SH
10480 9408 MT
(1.)SH
11580 XM
(Execute)SH
10 /Courier AF
15397 XM
(\050garnet-load "demos:demo-multiwin"\051)SH
11 /Times-Roman AF
36672 XM
(and)SH
10 /Courier AF
38535 XM
(\050demo-multiwin:do-go\051)SH
11 /Times-Roman AF
(.)SH
10480 11302 MT
(2.)SH
11580 XM
(Artificially create an error situation by executing)SH
8 /Courier AF
13500 12467 MT
(\050kr:with-types-disabled)SH
13980 13332 MT
(\050kr:s-value demo-multiwin::OBJ1 :left 'x\051\051)SH
11 /Times-Roman AF
10480 15226 MT
(3.)SH
11580 XM
(Try to move an object in the demo by clicking on it)
54 W( and dragging with the mouse.  Even if)55 W
11580 16422 MT
(you did not click on OBJ1 \050the rectangle\051,)
57 W( the main-event-loop called)56 W
10 /Courier AF
43055 XM
(opal:update-all)SH
11 /Times-Roman AF
(,)SH
11580 17618 MT
(which caused OBJ1's window to update.  This caused)
103 W( a crash into the debugger when)104 W
10 /Courier AF
51130 XM
('x)SH
11 /Times-Roman AF
11580 18814 MT
(was found in the)60 W
10 /Courier AF
19396 XM
(:left)SH
11 /Times-Roman AF
22731 XM
(slot. Get)
395 W( out of the debugger with)60 W
10 /Courier AF
38578 XM
(:reset)SH
11 /Times-Roman AF
42513 XM
(or)SH
10 /Courier AF
43764 XM
(q)SH
11 /Times-Roman AF
44699 XM
(or whatever)
60 W( your)59 W
11580 20010 MT
(lisp requires.)SH
10480 21904 MT
(4.)SH
11580 XM
(Now move)
82 W( objects again.  As long as your first mouse click is not in the same window as)83 W
11580 23100 MT
(OBJ1, you)
17 W( will not get the crash again.  You can even drag objects into and through OBJ1's)16 W
11580 24296 MT
(window, but that window will not be updated.)SH
10480 26190 MT
(5.)SH
11580 XM
(After you give OBJ1's)15 W
10 /Courier AF
21905 XM
(:left)SH
11 /Times-Roman AF
25196 XM
(slot a reasonable value and do a total update on its window --)16 W
1956 50 39571 26390 UL
10 /Courier AF
11580 27386 MT
(\050opal:update demo-multiwin::WIN1 T\051)277 W
11 /Times-Roman AF
33686 XM
(-- the window will be)
277 W( treated normally)276 W
11580 28582 MT
(again. Note:)
477 W( the total update is)
101 W( sometimes required because the bad)102 W
10 /Courier AF
42947 XM
(:left)SH
11 /Times-Roman AF
46324 XM
(value can get)102 W
11580 29778 MT
(stored in an internal Opal data structure.  A total update clears these data structures.)SH
8280 32076 MT
(We have found that this feature makes it much easier to find the source of a problem in a window that)98 W
8280 33272 MT
(cannot update successfully.  Without this feature,)
78 W( useful tools like the)79 W
10 /Courier AF
40028 XM
(Inspector)SH
11 /Times-Roman AF
45782 XM
(would not be able to)79 W
8280 34468 MT
(run while there was one broken window, since interacting with)
40 W( the)39 W
10 /Courier AF
38286 XM
(Inspector)SH
11 /Times-Roman AF
44000 XM
(requires repeated calls to)39 W
10 /Courier AF
8280 35664 MT
(opal:update-all)SH
11 /Times-Roman AF
(.)SH
14 /Times-Bold AF
8280 39482 MT
(10.5. Windows on other Displays)SH
11 /Times-Roman AF
8280 40678 MT
(An important feature of the X window)
30 W( manager is that it allows you to run a process on one machine and)31 W
8280 41874 MT
(have its window)
168 W( appear on another machine.  Opal provides a simple way to do this, although many)167 W
8280 43070 MT
(commands have to be given to the Unix Shell.)SH
8280 45368 MT
(Let's suppose that you want to run Opal on a machine named)58 W
10 /Courier AF
36224 XM
(OpalMachine.cs.edu)SH
11 /Times-Roman AF
47358 XM
(and you want the)59 W
8280 46564 MT
(windows to appear on a)
114 W( machine named)113 W
10 /Courier AF
27004 XM
(WindowMachine.cs.edu)SH
11 /Times-Roman AF
39392 XM
(\050of course you will substitute your)113 W
8280 47760 MT
(own full machine names\051.  Assuming you are sitting)
14 W( at)15 W
10 /Courier AF
32771 XM
(WindowMachine.cs.edu)SH
11 /Times-Roman AF
(, perform the following)15 W
8280 48956 MT
(steps before starting Garnet:)SH
/Symbol SF
10249 50534 MT
(\267)SH
/Times-Roman SF
11030 XM
(Create an extra Xterm \050shell\051 window and)
6 W( use it to telnet to)5 W
10 /Courier AF
37488 XM
(OpalMachine.cs.edu)SH
11 /Times-Roman AF
48568 XM
(and then)5 W
11030 51730 MT
(log in.)SH
/Symbol SF
10249 53624 MT
(\267)SH
/Times-Roman SF
11030 XM
(Type the following to)SH
10 /Courier AF
20868 XM
(OpalMachine.cs.edu)SH
11 /Times-Roman AF
31943 XM
(to tell Opal where the windows should go:)SH
8 /Courier AF
12950 54789 MT
(setenv DISPLAY WindowMachine.cs.edu:0.0)SH
11 /Symbol AF
10249 56683 MT
(\267)SH
/Times-Roman SF
11030 XM
(Now go to)
344 W( another Xterm \050shell\051 window on)345 W
10 /Courier AF
33644 XM
(WindowMachine.cs.edu)SH
11 /Times-Roman AF
46264 XM
(and type the)345 W
11030 57879 MT
(following to allow)SH
10 /Courier AF
19433 XM
(OpalMachine.cs.edu)SH
11 /Times-Roman AF
30508 XM
(to talk to X:)SH
8 /Courier AF
12950 59044 MT
(xhost + OpalMachine.cs.edu)SH
11 /Symbol AF
10249 60938 MT
(\267)SH
/Times-Roman SF
11030 XM
(Now go back to the)
114 W( telnet window, and start Lisp and load Garnet and any programs.  All)113 W
11030 62134 MT
(windows will now appear on)SH
10 /Courier AF
24013 XM
(WindowMachine.cs.edu)SH
11 /Times-Roman AF
(.)SH
8280 64432 MT
(The exported)
125 W( variables)126 W
10 /Courier AF
19010 XM
(opal:*screen-width*)SH
11 /Times-Roman AF
30811 XM
(and)SH
10 /Courier AF
32800 XM
(opal:*screen-height*)SH
11 /Times-Roman AF
45201 XM
(contain the width and)126 W
8280 65628 MT
(height of the screen of the machine you are using.  Do not set these variables yourself.)SH
ES
%%Page: 206 55
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 206)
SH( Opal)830 W
42871 XM
(Windows Chapter)
1550 W( 10)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(10.6. Methods and Functions on Window objects)SH
11 /Times-Roman AF
6120 9334 MT
(There are)
6 W( a number of functions that work on window objects, in addition to the methods described in this)5 W
6120 10530 MT
(section. All)
459 W( of the extended accessor functions \050)92 W
10 /Courier AF
(bottom)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
32509 XM
(left-side)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
38551 XM
(set-center)SH
11 /Times-Roman AF
(, etc.\051 described in)92 W
6120 11726 MT
(section 4.2 also work on windows.)SH
8 /Courier AF
8040 12939 MT
(opal:Update)SH
/Times-Italic SF
13800 XM
(window)SH
/Courier SF
16770 XM
(&optional)SH
/Times-Italic SF
21570 XM
(total-p)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 15237 MT
(The)SH
10 /Courier AF
8209 XM
(update)SH
11 /Times-Roman AF
12188 XM
(method updates the)
104 W( image in)103 W
/Times-Italic SF
25628 XM
(window)SH
/Times-Roman SF
29430 XM
(to reflect changes to the objects contained inside its)103 W
6120 16433 MT
(aggregate. If)723 W
/Times-Italic SF
12898 XM
(total-p)SH
/Times-Roman SF
16331 XM
(is a non-)224 W
9 SS 
(NIL)SH
11 SS 
22566 XM
(value, then the window is erased, and all the components of)
224 W( the)225 W
6120 17629 MT
(window's aggregate are redrawn.  This is useful for when the window is exposed or when something)
83 W( is)82 W
6120 18825 MT
(messed up in the window \050e.g., after a bug\051.  The default for)70 W
/Times-Italic SF
33755 XM
(total-p)SH
/Times-Roman SF
37034 XM
(is)SH
9 SS 
38113 XM
(NIL)SH
11 SS 
(, so the window only redraws)71 W
6120 20021 MT
(the changed portions.)211 W
10 /Courier AF
16953 XM
(Update)SH
11 /Times-Roman AF
21039 XM
(must be called on)
211 W( a newly-created window before it will be visible.)210 W
6120 21217 MT
(Updating a window also causes its subwindows to be updated.)SH
6120 23515 MT
(If)SH
10 /Courier AF
7325 XM
(update)SH
11 /Times-Roman AF
11398 XM
(crashes into the debugger, this is usually because there is an object with an)
198 W( illegal value)199 W
6120 24711 MT
(attached to the window.)
72 W( In)
418 W( this case, the debugging function)71 W
10 /Courier AF
33940 XM
(garnet-debug:fix-up-window)SH
11 /Times-Roman AF
49886 XM
(is very)71 W
6120 25907 MT
(useful\320see the Debugging Manual.)SH
8 /Courier AF
8040 27120 MT
(opal:Destroy)SH
/Times-Italic SF
14280 XM
(window)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 29418 MT
(The)SH
10 /Courier AF
8144 XM
(destroy)SH
11 /Times-Roman AF
12658 XM
(method unmaps and destroys the X)
39 W( window, destroys the)40 W
/Times-Italic SF
38431 XM
(window)SH
/Times-Roman SF
42170 XM
(object, and calls destroy)40 W
6120 30614 MT
(on the window's aggregate and the window's subwindows.)SH
8 /Courier AF
8040 31827 MT
(opal:Update-All &optional)SH
/Times-Italic SF
20520 XM
(total-p)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 34125 MT
(been created but never)570 W
10 /Courier AF
18598 XM
(update)SH
11 /Times-Roman AF
(d \050so they are not)
570 W( yet visible\051.  When)569 W
/Times-Italic SF
43879 XM
(total-p)SH
/Times-Roman SF
47657 XM
(is T, then)569 W
10 /Courier AF
6120 35321 MT
(opal:update-all)SH
11 /Times-Roman AF
15430 XM
(will redraw the entire contents of all existing Garnet windows.  Since this procedure)36 W
6120 36517 MT
(is expensive, it should only be used in special situations, like during debugging.)SH
8 /Courier AF
8040 37730 MT
(opal:Clean-Up [)SH
/Times-Italic SF
(how-to)SH
/Courier SF
(])SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 40028 MT
(This function)
213 W( is useful when debugging for deleting the windows created using Opal.  It can delete)212 W
6120 41224 MT
(windows in various ways:)SH
10 /Courier AF
12789 43375 MT
(How-to)SH
11 /Times-Roman AF
34513 XM
(Result)SH
42660 50 8190 44015 LH BX1
-1794 50 20988 44015 LV BX1
21387 45169 MT
(Destroy all orphaned garnet windows.  Orphans are)SH
10 /Courier AF
8589 46365 MT
(:orphans-only)SH
11 /Times-Roman AF
21387 XM
(described below.)SH
21387 48222 MT
(Destroy all garnet windows by calling)SH
10 /Courier AF
38433 XM
(xlib:destroy-window)SH
11 /Times-Roman AF
21387 49418 MT
(or)SH
10 /Courier AF
22578 XM
(ccl:window-close)SH
11 /Times-Roman AF
32453 XM
(on orphaned CLX "drawables" and)SH
10 /Courier AF
8589 50614 MT
(:opal)SH
11 /Times-Roman AF
21387 XM
(Mac "views", and)SH
10 /Courier AF
29493 XM
(opal:destroy)SH
11 /Times-Roman AF
36968 XM
(on non-orphaned windows.)SH
21387 52471 MT
(Same as above, but before calling)SH
10 /Courier AF
36506 XM
(opal:destroy)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8589 53667 MT
(:opal-set-agg-to-nil)SH
11 /Times-Roman AF
21387 XM
(set the aggregate to)SH
9 SS 
30183 XM
(NIL)SH
11 SS 
31958 XM
(so it won't get destroyed as well.)SH
21387 55524 MT
(Destroy all Garnet windows by calling)SH
10 /Courier AF
38677 XM
(xlib:destroy-window)SH
11 /Times-Roman AF
21387 56720 MT
(or)SH
10 /Courier AF
22578 XM
(ccl:window-close)SH
11 /Times-Roman AF
(. Does)
275 W( not call the)SH
10 /Courier AF
40701 XM
(:destroy)SH
11 /Times-Roman AF
45776 XM
(method on)SH
10 /Courier AF
8589 57916 MT
(:clx)SH
11 /Times-Roman AF
21387 XM
(the window or its aggregate.)SH
42660 16335 50 8190 58556 BX BX1
6120 60854 MT
(A window is "orphaned" when the Opal name is no)
84 W( longer attached to the CLX drawable or Mac view.)85 W
6120 62050 MT
(This can happen, for example, if you create an instance of a window object, update)
28 W( it, then create another)27 W
6120 63246 MT
(instance of a window with the same name, and update it as well.)
7 W( Then)
290 W( the first window will not be erased)8 W
6120 64442 MT
(and will be orphaned.)SH
6120 66740 MT
(The default is)153 W
10 /Courier AF
12902 XM
(orphans-only)SH
11 /Times-Roman AF
(. Another)
581 W( useful value is)153 W
10 /Courier AF
32353 XM
(:opal)SH
11 /Times-Roman AF
(. The)
581 W( other options are mainly useful)153 W
6120 67936 MT
(when attempts to use these fail due to bugs.  See also the function)224 W
10 /Courier AF
38431 XM
(Fix-Up-Window)SH
11 /Times-Roman AF
46730 XM
(in the Garnet)224 W
6120 69132 MT
(Debugging Manual [Dannenberg 89].)SH
8 /Courier AF
8040 70345 MT
(opal:Convert-Coordinates)SH
/Times-Italic SF
20040 XM
(win1 x1 y1)SH
/Courier SF
23986 XM
(&optional)SH
/Times-Italic SF
28786 XM
(win2)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
9000 71210 MT
(\050declare \050values)SH
/Times-Italic SF
17160 XM
(x2 y2)SH
/Courier SF
(\051\051)SH
ES
%%Page: 207 56
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 10.6)
SH( Methods)
1800 W( and Functions on Window objects)SH
51386 XM
(Page 207)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(This function converts the coordinates)18 W
10 /Courier AF
25507 XM
(x1)SH
11 /Times-Roman AF
27000 XM
(and)SH
10 /Courier AF
28881 XM
(y1)SH
11 /Times-Roman AF
30374 XM
(which are in window)18 W
10 /Courier AF
39976 XM
(win1)SH
11 /Times-Roman AF
('s coordinate system)
18 W( to be in)17 W
10 /Courier AF
8280 9151 MT
(win2)SH
11 /Times-Roman AF
('s. Either)
275 W( window can be)SH
9 SS 
22195 XM
(NIL)SH
11 SS 
(, in which case the screen is used.)SH
8 /Courier AF
10200 10364 MT
(opal:Get-X-Cut-Buffer)SH
/Times-Italic SF
20760 XM
(window)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 11229 MT
(opal:Set-X-Cut-Buffer)SH
/Times-Italic SF
20760 XM
(window newstring)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 12650 MT
(These manipulate the window manager's cut buffer.)20 W
10 /Courier AF
31927 XM
(get-x-cut-buffer)SH
11 /Times-Roman AF
41822 XM
(returns the string that is in the)20 W
8280 13846 MT
(X cut buffer, and)SH
10 /Courier AF
16067 XM
(set-x-cut-buffer)SH
11 /Times-Roman AF
25942 XM
(sets the string in the X cut buffer.)SH
8 /Courier AF
10200 15059 MT
(opal:Raise-Window)SH
/Times-Italic SF
18840 XM
(window)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 15924 MT
(opal:Lower-Window)SH
/Times-Italic SF
18840 XM
(window)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 16789 MT
(opal:Iconify-Window)SH
/Times-Italic SF
19800 XM
(window)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 17654 MT
(opal:Deiconify-Window)SH
/Times-Italic SF
20760 XM
(window)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
8280 19075 MT
(Raise-window)SH
11 /Times-Roman AF
15764 XM
(moves a window to the front of the screen, so that)
9 W( it is not covered by any other window.)8 W
10 /Courier AF
8280 20271 MT
(Lower-window)SH
11 /Times-Roman AF
15782 XM
(moves a window to the back of the screen.)27 W
10 /Courier AF
35326 XM
(Iconify-window)SH
11 /Times-Roman AF
44029 XM
(changes the window into)28 W
8280 21467 MT
(an icon, and)SH
10 /Courier AF
13900 XM
(deiconify-window)SH
11 /Times-Roman AF
23775 XM
(changes it back to a window.)SH
ES
%%Page: 208 57
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 208)
SH( Opal)830 W
36427 XM
(Printing Garnet Windows)
SH( Chapter)
1550 W( 11)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(11. Printing Garnet Windows)SH
11 /Times-Roman AF
6120 10524 MT
(The function)23 W
10 /Courier AF
12092 XM
(make-ps-file)SH
11 /Times-Roman AF
19590 XM
(is used)
23 W( to generate a PostScript file for Garnet windows.  This file can then)22 W
6120 11720 MT
(be sent directly to any PostScript printer.  The file is in "Encapsulated PostScript" format,)
82 W( so that it can)83 W
6120 12916 MT
(also be)
7 W( included in other documents, such as Scribe, LaTeX and FrameMaker on Unix, and Pagemaker on)6 W
6120 14112 MT
(Macintoshes.)SH
6120 16410 MT
(The PostScript files generated by this function will produce pictures that)
65 W( are prettier, have much smaller)66 W
6120 17606 MT
(file sizes, and work better)
240 W( in color than those produced by the window utilities like)239 W
10 /Courier AF
46429 XM
(xwd)SH
11 /Times-Roman AF
48743 XM
(and)SH
10 /Courier AF
50845 XM
(xpr)SH
11 /Times-Roman AF
(.)SH
6120 18802 MT
(However, a limitation of PostScript is that it is)
75 W( not possible to print with XOR.  It is usually possible to)76 W
6120 19998 MT
(change the implementation of Garnet objects or hand-edit the generated PostScript)
140 W( file to simulate the)139 W
6120 21194 MT
(XOR draw function.)SH
6120 23492 MT
(By default, the contents of the window and all subwindows are reproduced exactly as on the screen,)
38 W( with)39 W
6120 24688 MT
(the image scaled and centered on the output page.  Other options \050see the)69 W
10 /Courier AF
39493 XM
(clip-p)SH
11 /Times-Roman AF
43437 XM
(parameter\051 allow)
69 W( this)68 W
6120 25884 MT
(function to be used to output the entire)
34 W( contents of a window \050not just what is on the screen\051, so it can be)35 W
6120 27080 MT
(used to do the printing for application data that might be in a scrolling-window, for example.)
8 W( This)
290 W( is used)7 W
6120 28276 MT
(in the demo)SH
10 /Courier AF
11589 XM
(demo-arith)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
8040 30926 MT
(opal:Make-PS-File)SH
/Times-Italic SF
16680 XM
(window-or-window-list filename)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
16680 31791 MT
(&key)SH
/Times-Italic SF
19080 XM
(position-x position-y left-margin right-margin top-margin bottom-margin left top)200 W
16680 32656 MT
(scale-x scale-y landscape-p borders-p clip-p subwindows-p color-p background-color)200 W
16680 33521 MT
(paper-size title creator for comment)200 W
11 /Times-Roman AF
6120 35819 MT
(The only two required parameters to)62 W
10 /Courier AF
22802 XM
(make-ps-file)SH
11 /Times-Roman AF
30339 XM
(are the Garnet window to be printed and)
62 W( the name)63 W
6120 37015 MT
(of the file in which to store the PostScript output.  The)36 W
/Times-Italic SF
30780 XM
(window-or-window-list)SH
/Times-Roman SF
41360 XM
(parameter may be either a)35 W
6120 38211 MT
(single window or a list of windows.  When multiple windows are printed, the space)
16 W( between the windows)17 W
6120 39407 MT
(is filled with the color specified by)SH
/Times-Italic SF
21731 XM
(background-color)SH
/Times-Roman SF
(.)SH
6120 41705 MT
(The optional arguments affect the position and appearance of the picture:)SH
/Times-Italic SF
6120 43656 MT
(position-x)SH
/Times-Roman SF
10959 XM
(- Either)164 W
10 /Courier AF
14891 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18604 XM
(:center)SH
11 /Times-Roman AF
(, or)163 W
10 /Courier AF
24871 XM
(:right)SH
11 /Times-Roman AF
(. Determines)
601 W( the position of the picture on the page)163 W
9720 44852 MT
(horizontally. Ignored)
275 W( if a value is supplied for)SH
/Times-Italic SF
30492 XM
(left)SH
/Times-Roman SF
(. Default)
275 W( is)SH
10 /Courier AF
37305 XM
(:center)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
6120 46547 MT
(position-y)SH
/Times-Roman SF
10958 XM
(- Either)163 W
10 /Courier AF
14888 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18001 XM
(:center)SH
11 /Times-Roman AF
(, or)163 W
10 /Courier AF
24268 XM
(:bottom)SH
11 /Times-Roman AF
(. Determines)
601 W( the position of the picture)
163 W( on the page)164 W
9720 47743 MT
(vertically. Ignored)
275 W( if a value is supplied for)SH
/Times-Italic SF
29330 XM
(top)SH
/Times-Roman SF
(. Default)
275 W( is)SH
10 /Courier AF
36143 XM
(:center)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
6120 49438 MT
(left-margin, right-margin,)
83 W( top-margin, bottom-margin)82 W
/Times-Roman SF
30558 XM
(- These parameters specify the minimum distance)82 W
9720 50634 MT
(\050in points\051)
204 W( from the corresponding edge of the page to the rendered image.  All four values)205 W
9720 51830 MT
(default to 72, which is one inch in PostScript.)SH
/Times-Italic SF
6120 53525 MT
(left, top)18 W
/Times-Roman SF
9793 XM
(- The distance \050in points\051 from the left and top margins \050offsets from)18 W
/Times-Italic SF
40482 XM
(left-margin)SH
/Times-Roman SF
45724 XM
(and)SH
/Times-Italic SF
47604 XM
(top-margin)SH
/Times-Roman SF
(\051)SH
9720 54721 MT
(to the rendered image.  The defaults are)18 W
9 SS 
27607 XM
(NIL)SH
11 SS 
(, in which)
18 W( case the values of)19 W
/Times-Italic SF
41944 XM
(position-x)SH
/Times-Roman SF
46638 XM
(and)SH
/Times-Italic SF
48520 XM
(position-y)SH
/Times-Roman SF
9720 55917 MT
(are used instead.)SH
/Times-Italic SF
6120 57612 MT
(scale-x, scale-y)28 W
/Times-Roman SF
13229 XM
(- Horizontal and vertical scaling for)
28 W( the image.  The default is)27 W
9 SS 
41017 XM
(NIL)SH
11 SS 
(, which will ensure that)27 W
9720 58808 MT
(the image)
307 W( fits within the specified margins \050the scaling will be the same for vertical and)308 W
9720 60004 MT
(horizontal\051.)SH
/Times-Italic SF
6120 61699 MT
(landscape-p)SH
/Times-Roman SF
11838 XM
(- If)67 W
9 SS 
13620 XM
(NIL)SH
11 SS 
15462 XM
(\050the default\051 then the top of the picture will be parallel to the short side of the page)67 W
9720 62895 MT
(\050portrait\051. If)
385 W( T, then the picture will be rotated 90 degrees, with the top of the)
55 W( picture parallel to)56 W
9720 64091 MT
(the long side of the page.)SH
/Times-Italic SF
6120 65786 MT
(subwindows-p)SH
/Times-Roman SF
12691 XM
(- Whether to include the subwindows of the specified window in the image.  Default is T.)SH
/Times-Italic SF
6120 67481 MT
(borders-p)SH
/Times-Roman SF
10741 XM
(- Whether)
8 W( to draw the outline of the window \050and subwindows, if any\051.  The allowed values are)7 W
10 /Courier AF
9720 68677 MT
(T)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
11012 XM
(NIL)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13504 XM
(:generic)SH
11 /Times-Roman AF
(, and)142 W
10 /Courier AF
21001 XM
(:motif)SH
11 /Times-Roman AF
(. The)
559 W( default value of)142 W
10 /Courier AF
35440 XM
(:motif)SH
11 /Times-Roman AF
39457 XM
(gives your)
142 W( image a simulated)143 W
9720 69873 MT
(Motif window manager frame,)
195 W( like the picutres in the Gilt Reference Manual.  The value of)194 W
10 /Courier AF
9720 71069 MT
(:generic)SH
11 /Times-Roman AF
14984 XM
(puts a plain black frame around your printed)
189 W( image, with the title of the window)190 W
ES
%%Page: 209 58
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 11)
SH( Printing)
1550 W( Garnet Windows)SH
51386 XM
(Page 209)SH
46800 50 8280 4486 UL
11 SS 
11880 7955 MT
(centered in the title bar.  The value)146 W
10 /Courier AF
28655 XM
(T)SH
11 /Times-Roman AF
29676 XM
(gives the image a thin black border, and)146 W
10 /Courier AF
48712 XM
(NIL)SH
11 /Times-Roman AF
50932 XM
(yields no)145 W
11880 9151 MT
(border at all.)SH
/Times-Italic SF
8280 10846 MT
(clip-p)SH
/Times-Roman SF
11121 XM
(- How to clip the objects in the window.  Allowed values are:)SH
/Symbol SF
13849 12424 MT
(\267)SH
10 /Courier AF
14630 XM
(T)SH
11 /Times-Roman AF
15557 XM
(- This is the default, which means that the)
52 W( printed picture will look like the screen)53 W
14630 13620 MT
(image. If)
381 W( the graphics inside the window extend outside the)
53 W( borders of the window,)52 W
14630 14816 MT
(then they will be clipped in the printed image.)SH
/Symbol SF
13849 16710 MT
(\267)SH
10 /Courier AF
14630 XM
(NIL)SH
11 /Times-Roman AF
16780 XM
(- This value causes the window in the printed image to be the same size as the)76 W
14630 17906 MT
(top-level aggregate, whether it is larger or smaller than the actual)
9 W( window.  That is, if)8 W
14630 19102 MT
(the window is too small to)
89 W( show all of the objects in its aggregate, then the printed)90 W
14630 20298 MT
(window will be enlarged to show all of the objects.  Conversely, if)
188 W( the top-level)187 W
14630 21494 MT
(aggregate is smaller than the dimensions of the window)
235 W( on the screen, then the)236 W
14630 22690 MT
(printed window will be "shrink wrapped" around the objects.)SH
/Symbol SF
13849 24584 MT
(\267)SH
10 /Courier AF
14630 XM
(\050)SH
/Times-Italic SF
(left top width height)171 W
/Courier SF
(\051)SH
11 /Times-Roman AF
24818 XM
(- A list of screen-relative coordinates that describe absolute)171 W
14630 25780 MT
(pixel positions for the printed window.  This makes it)
146 W( possible to clip to a region)147 W
14630 26976 MT
(when you are printing)11 W
/Times-Italic SF
24632 XM
(multiple)SH
/Times-Roman SF
28524 XM
(windows. Clip)
297 W( regions can be used to make)
11 W( multiple-)10 W
14630 28172 MT
(page PostScript files -- you have to)
138 W( manually divide the image into its component)139 W
14630 29368 MT
(regions, and generate one PostScript file for each region.  In the future, we)
195 W( may)194 W
14630 30564 MT
(attempt to automate the process of multiple-page printing.)SH
/Times-Italic SF
8280 32259 MT
(color-p)SH
/Times-Roman SF
11941 XM
(- Whether to generate a file that will print out the real colors of the)
148 W( window's objects \050T\051, or)149 W
11880 33455 MT
(pretend that all the colors are black \050)351 W
9 SS 
(NIL)SH
11 SS 
(\051. Default)
975 W( is T. \050Many PostScript printers will)350 W
11880 34651 MT
(automatically produce half-tones for colors, so usually T)
11 W( will work even for color pictures printed)12 W
11880 35847 MT
(on black and white printers.\051)1 W
/Times-Bold SF
25051 XM
(Note:)SH
/Times-Roman SF
28440 XM
(Pixmaps print in full color when they are being displayed on)SH
11880 37043 MT
(a color)
283 W( screen and the)284 W
/Times-Italic SF
23162 XM
(color-p)SH
/Times-Roman SF
26959 XM
(parameter is T. However, older printers may not know the)284 W
11880 38239 MT
(PostScript command)28 W
10 /Courier AF
21348 XM
(colorimage)SH
11 /Times-Roman AF
27651 XM
(which is required to render a color)
28 W( pixmap.  This command is)27 W
11880 39435 MT
(only defined on Level 2 printers. If your printer cannot print your)
193 W( pixmap \050it crashes with a)194 W
11880 40631 MT
("colorimage undefined" error\051, then try using a)SH
/Times-Italic SF
32814 XM
(color-p)SH
/Times-Roman SF
36327 XM
(argument of)SH
9 SS 
41947 XM
(NIL)SH
11 SS 
(.)SH
/Times-Italic SF
8280 42326 MT
(background-color)SH
/Times-Roman SF
16615 XM
(- When)118 W
/Times-Italic SF
20393 XM
(window-or-window-list)SH
/Times-Roman SF
31055 XM
(is a list of windows, the space between the windows)117 W
11880 43522 MT
(will be filled with this color.  The value of this parameter may be any Opal color.  The)
43 W( default is)44 W
10 /Courier AF
11880 44718 MT
(opal:white)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
8280 46413 MT
(paper-size)SH
/Times-Roman SF
13281 XM
(- This parameter is provided)
144 W( mainly for users in the United Kingdom.  Allowed values are)143 W
10 /Courier AF
11880 47609 MT
(:letter)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16689 XM
(:a4)SH
11 /Times-Roman AF
(, or a list of)
59 W( \050)60 W
/Times-Italic SF
(width height)60 W
/Times-Roman SF
(\051. The)
395 W( default value of)60 W
10 /Courier AF
40711 XM
(:letter)SH
11 /Times-Roman AF
45246 XM
(generates a PostScript)60 W
11880 48805 MT
(image for 612x792 point size paper.  The)89 W
10 /Courier AF
31011 XM
(:a4)SH
11 /Times-Roman AF
33175 XM
(value generates an image for 594x842 point size)88 W
11880 50001 MT
(paper, which is commonly used in the UK.)SH
/Times-Italic SF
8280 51696 MT
(title, creator, for)170 W
/Times-Roman SF
16399 XM
(- These)
170 W( parameters should take strings to be printed in the header comments of the)171 W
11880 52892 MT
(PostScript file.  These comments are)
182 W( sometimes used to print user information on the header)181 W
11880 54088 MT
(sheets of printer output.  The default)78 W
/Times-Italic SF
28738 XM
(title)SH
/Times-Roman SF
30803 XM
(is based on the window's title.)
78 W( The)
432 W( default)79 W
/Times-Italic SF
50754 XM
(creator)SH
/Times-Roman SF
54346 XM
(is)SH
11880 55284 MT
(Garnet, and the default)SH
/Times-Italic SF
22233 XM
(for)SH
/Times-Roman SF
23792 XM
(is "".)SH
/Times-Italic SF
8280 56979 MT
(comment)SH
/Times-Roman SF
12568 XM
(- This parameter allows you to put a single line of text at the top of your PostScript file.  In)
43 W( the)42 W
11880 58175 MT
(generated file, the characters)298 W
10 /Courier AF
25987 XM
("%%")SH
11 /Times-Roman AF
28960 XM
(are concatenated to the front of)
298 W( your comment, telling)299 W
11880 59371 MT
(PostScript to ignore the text in the line.  If you wish to use multiple lines in the comment, you)101 W
11880 60567 MT
(will have to add the)SH
10 /Courier AF
20831 XM
("%%")SH
11 /Times-Roman AF
23506 XM
(to the second line of the string and every line thereafter.)SH
ES
%%Page: 210 59
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 210)
SH( Opal)830 W
38093 XM
(Saving and Restoring)
SH( Chapter)
1550 W( 12)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(12. Saving and Restoring)SH
11 /Times-Roman AF
6120 10524 MT
(Opal includes the ability to save and restore Garnet core images.  The function)191 W
10 /Courier AF
43645 XM
(opal:make-image)SH
11 /Times-Roman AF
(,)SH
6120 11720 MT
(described below, can be used)
55 W( to automate the process of closing the connection to the display server and)54 W
6120 12916 MT
(generating a core file.  Low-level details are provided below also, in case you need more control)
31 W( over the)32 W
6120 14112 MT
(saving process.)SH
14 /Times-Bold AF
6120 17930 MT
(12.1. Saving Lisp Images)SH
8 /Courier AF
8040 20633 MT
(opal:Make-Image)SH
/Times-Italic SF
15720 XM
(filename)SH
/Courier SF
18954 XM
(&key)SH
/Times-Italic SF
21354 XM
(quit)SH
/Courier SF
23078 XM
(\050)SH
/Times-Italic SF
(verbose)SH
/Courier SF
26525 XM
(T\051 \050)SH
/Times-Italic SF
(gc)SH
/Courier SF
29680 XM
(T\051 &rest)SH
/Times-Italic SF
34000 XM
(other-args)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 22931 MT
(The function)288 W
10 /Courier AF
12622 XM
(opal:make-image)SH
11 /Times-Roman AF
22185 XM
(is used to save an image of your current lisp session.)
288 W( Without)849 W
10 /Courier AF
6120 24127 MT
(make-image)SH
11 /Times-Roman AF
(, you would have to call)42 W
10 /Courier AF
23217 XM
(opal:disconnect-garnet)SH
11 /Times-Roman AF
(, use your implementation-dependent)43 W
6120 25323 MT
(function to save your lisp image, and then call)32 W
10 /Courier AF
26998 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
39904 XM
(if you wanted to continue the)31 W
6120 26519 MT
(session.)SH
10 /Courier AF
10246 XM
(Opal:make-image)SH
11 /Times-Roman AF
19583 XM
(does all of this for you, and also does a total garbage collection before the)62 W
6120 27715 MT
(save if the)40 W
/Times-Italic SF
11035 XM
(gc)SH
/Times-Roman SF
12388 XM
(parameter is T. If the)40 W
/Times-Italic SF
22116 XM
(quit)SH
/Times-Roman SF
24143 XM
(parameter is T, then your lisp image will automatically)
40 W( exit after)39 W
6120 28911 MT
(saving itself.  The)147 W
/Times-Italic SF
14865 XM
(verbose)SH
/Times-Roman SF
18707 XM
(parameter controls whether the function should announce when it)
147 W( is in the)148 W
6120 30107 MT
(stages of garbage collection, disconnection, saving, and reconnection.)SH
6120 32405 MT
(The)SH
/Times-Italic SF
8193 XM
(other-args)SH
/Times-Roman SF
13200 XM
(parameter is supplied to accomodate)
88 W( the miscellaneous parameters of each lisp vendor's)87 W
6120 33601 MT
(image-saving function.  For example, with Allegro's)44 W
10 /Courier AF
29859 XM
(dumplisp)SH
11 /Times-Roman AF
34978 XM
(command, you)
44 W( can supply the keywords)45 W
10 /Courier AF
6120 34797 MT
(:libfile)SH
11 /Times-Roman AF
11311 XM
(and)SH
10 /Courier AF
13290 XM
(:flush-source-info?)SH
11 /Times-Roman AF
(. Since)507 W
10 /Courier AF
28582 XM
(opal:make-image)SH
11 /Times-Roman AF
37973 XM
(calls)SH
10 /Courier AF
40380 XM
(dumplisp)SH
11 /Times-Roman AF
45571 XM
(for Allegro, you)116 W
6120 35993 MT
(can supply)
290 W( the extra parameters to)291 W
10 /Courier AF
23197 XM
(opal:make-image)SH
11 /Times-Roman AF
32763 XM
(and they will be passed on to)291 W
10 /Courier AF
47845 XM
(dumplisp)SH
11 /Times-Roman AF
(.)SH
6120 37189 MT
(Therefore, it is not necessary to call your lisp's image-saving function manually; you can)
29 W( always pass the)28 W
6120 38385 MT
(additional desired parameters to)SH
10 /Courier AF
20476 XM
(opal:make-image)SH
11 /Times-Roman AF
(.)SH
6120 40683 MT
(When you restart the saved image, it will print a banner indicating the time at which the)
8 W( image was saved,)9 W
6120 41879 MT
(and will automatically)
117 W( call)116 W
10 /Courier AF
18562 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
(. Some)
507 W( lisps \050like Allegro\051 allow you to restart)116 W
6120 43075 MT
(the saved image just by executing the binary file, while others \050like CMUCL\051 require that the binary file)54 W
6120 44271 MT
(is passed as an argument when the standard lisp image is)
33 W( executed.  Consult your lisp's reference manual)32 W
6120 45467 MT
(for instructions on restarting your saved image.)SH
14 /Times-Bold AF
6120 49285 MT
(12.2. Saving Lisp Images Manually in X/11)SH
11 /Times-Roman AF
6120 50481 MT
(It recommended that you use)1 W
10 /Courier AF
19168 XM
(opal:make-image)SH
11 /Times-Roman AF
28444 XM
(whenever possible to save images of lisp.  In particular,)1 W
6120 51677 MT
(restarted images of MCL containing)
162 W( Garnet that were created by other means will probably not work)161 W
6120 52873 MT
(right, due to the skipping of initialization steps that would have)
195 W( been performed automatically if the)196 W
6120 54069 MT
(image had been saved with)SH
10 /Courier AF
18307 XM
(opal:make-image)SH
11 /Times-Roman AF
(.)SH
6120 56367 MT
(When you do not want to use the function)43 W
10 /Courier AF
25234 XM
(opal:make-image)SH
11 /Times-Roman AF
34552 XM
(to generate an executable lisp image,)
43 W( and)42 W
6120 57563 MT
(instead want)
898 W( to perform the saving procedure manually, you can use the functions)899 W
10 /Courier AF
6120 58759 MT
(opal:disconnect-garnet)SH
11 /Times-Roman AF
20229 XM
(and)SH
10 /Courier AF
22725 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
(, along with your implementation-)633 W
6120 59955 MT
(dependent function for saving lisp images.)SH
8 /Courier AF
8040 62107 MT
(opal:Disconnect-Garnet)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 63837 MT
(opal:Reconnect-Garnet &optional)SH
/Times-Italic SF
23400 XM
(display-name)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 66135 MT
(Before saving a core image of)
154 W( Garnet, you must first close all connections to the X server by calling)155 W
10 /Courier AF
6120 67331 MT
(opal:disconnect-garnet)SH
11 /Times-Roman AF
(. All)
363 W( windows)
44 W( which are currently visible will disappear \050but will reappear)43 W
6120 68527 MT
(when)SH
10 /Courier AF
8777 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
21652 XM
(is executed\051.)SH
6120 70825 MT
(While the connection to the X server is closed, you may save a core image of Garnet by calling the)174 W
ES
%%Page: 211 60
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 12.2)
SH( Saving)
1800 W( Lisp Images Manually in X/11)SH
51386 XM
(Page 211)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(appropriate Lisp command.  In Lucid Lisp)
364 W( the command is)363 W
10 /Courier AF
38097 XM
(\050disksave\051)SH
11 /Times-Roman AF
(, in Allegro Lisp it is)363 W
10 /Courier AF
8280 9151 MT
(\050excl:dumplisp\051)SH
11 /Times-Roman AF
(, and in CMU Common Lisp it is)64 W
10 /Courier AF
32615 XM
(\050ext:save-lisp\051)SH
11 /Times-Roman AF
(. Consult)
403 W( your Common Lisp)65 W
8280 10347 MT
(manual to find the disk save command for)
112 W( your version of Common Lisp, as well as how to start up a)111 W
8280 11543 MT
(saved Lisp core.)SH
8280 13841 MT
(It is)
19 W( usually convenient to specify)20 W
10 /Courier AF
23491 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
36386 XM
(as the)20 W
/Times-Italic SF
39236 XM
(restart-function)SH
/Times-Roman SF
46437 XM
(during your save of)20 W
8280 15037 MT
(lisp. For)
653 W( example, the following instruction will cause)189 W
10 /Courier AF
34332 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
47396 XM
(to be)
189 W( invoked in)188 W
8280 16233 MT
(Allegro lisp whenever the saved lisp is restarted:)SH
8 /Courier AF
10200 17398 MT
(\050excl:dumplisp :name "garnet-image" :restart-function #'opal:reconnect-garnet\051)SH
11 /Times-Roman AF
8280 19696 MT
(Otherwise, you will need to call)14 W
10 /Courier AF
22691 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
35580 XM
(manually when the lisp image)
14 W( is restarted in)15 W
8280 20892 MT
(order to restore the connection to the server and make all Garnet windows visible again.)SH
8280 23190 MT
(If the)172 W
/Times-Italic SF
11250 XM
(display-name)SH
/Times-Roman SF
17623 XM
(parameter to)172 W
10 /Courier AF
23769 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
36816 XM
(is specified, it should)
172 W( be the name of a)171 W
8280 24386 MT
(machine \050e.g., "ecp.garnet.cs.cmu.edu"\051.  If not specified,)SH
/Times-Italic SF
33854 XM
(display-name)SH
/Times-Roman SF
40055 XM
(defaults to the current machine.)SH
ES
%%Page: 212 61
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 212)
SH( Opal)830 W
39897 XM
(Utility Functions)
SH( Chapter)
1550 W( 13)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(13. Utility Functions)SH
14 SS 
6120 13146 MT
(13.1. Executing Unix Commands)SH
8 /Courier AF
8040 14359 MT
(opal:Shell-Exec)SH
/Times-Italic SF
15720 XM
(command)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 16657 MT
(The function)214 W
10 /Courier AF
12474 XM
(opal:shell-exec)SH
11 /Times-Roman AF
21963 XM
(is used to)
214 W( spawn a Unix shell and execute Unix commands.  The)215 W
/Times-Italic SF
6120 17853 MT
(command)SH
/Times-Roman SF
10687 XM
(parameter should be a string of the Unix command)
16 W( to be executed.  The spawned shell does not)15 W
6120 19049 MT
(read the)SH
10 /Courier AF
9906 XM
(.cshrc)SH
11 /Times-Roman AF
13781 XM
(file, in order to save time.  The function returns a string of the output from the shell.)SH
6120 21347 MT
(In Lucid, CMUCL, and LispWorks, the shell spawned by)100 W
10 /Courier AF
32560 XM
(opal:shell-exec)SH
11 /Times-Roman AF
41935 XM
(is)SH
10 /Courier AF
43044 XM
(/bin/sh)SH
11 /Times-Roman AF
(. In)
475 W( Allegro)100 W
6120 22543 MT
(and CLISP, the shell is the user's default.  Executing this function in other lisps, including)
59 W( MCL, causes)58 W
6120 23739 MT
(an error \050please let the Garnet group know how to enhance this function to run in your lisp\051.)SH
14 /Times-Bold AF
6120 27557 MT
(13.2. Testing Operating System Directories)SH
11 /Times-Roman AF
6120 28753 MT
(This function is used to determine whether a string describes an existing directory or not.)SH
8 /Courier AF
8040 29966 MT
(opal:Directory-P)SH
/Times-Italic SF
16200 XM
(string)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 32264 MT
(The)SH
/Times-Italic SF
8183 XM
(string)SH
/Times-Roman SF
11104 XM
(should name a potential directory, like)79 W
10 /Courier AF
28777 XM
("/usr/garnet/")SH
11 /Times-Roman AF
(. If)
433 W( your lisp is running on a Unix)79 W
6120 33460 MT
(system, this)
9 W( function spawns a shell and executes a Unix command to test the directory.  There is no other)8 W
6120 34656 MT
(standard way to test directories on different lisps and operating systems.)
164 W( On)
605 W( the Mac, a lisp-specific)165 W
6120 35852 MT
(directory command is executed.)SH
ES
%%Page: 213 62
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 14)
SH( Aggregadgets)
1550 W( and Interactors)SH
51386 XM
(Page 213)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(14. Aggregadgets and Interactors)SH
11 /Times-Roman AF
8280 10524 MT
(The)SH
/Times-Italic SF
10643 XM
(Aggregadgets)SH
/Times-Roman SF
17406 XM
(module makes it much easier to create instances of an aggregate and all its)377 W
8280 11720 MT
(components. With)
416 W( an aggregadget, you only have to define the aggregate and its components once, and)71 W
8280 12916 MT
(then when you create an instance, it)
1 W( creates all of the components automatically.  Aggregadgets also allow)SH
8280 14112 MT
(lists of items to be created by simply giving a single prototype for all)
54 W( the list elements, and a controlling)55 W
8280 15308 MT
(value that the list iterates through.  Aggregadgets are described in their own manual [Marchal 89].)SH
/Times-Italic SF
8280 17606 MT
(Interactors)SH
/Times-Roman SF
13451 XM
(are used to handle all input from)
8 W( the user.  Interactor objects control input and perform actions)7 W
8280 18802 MT
(on Opal graphical objects.  There are high-level interactor objects to handle all the)
151 W( common forms of)152 W
8280 19998 MT
(mouse and keyboard input.  Interactors are described in their own manual [Myers 89].)SH
8280 22296 MT
(Together Opal and Interactors should hide all details of X)
64 W( and QuickDraw from the programmer.  There)63 W
8280 23492 MT
(should never be a need to reference any symbols in)SH
10 /Courier AF
31064 XM
(xlib)SH
11 /Times-Roman AF
33739 XM
(or)SH
10 /Courier AF
34930 XM
(ccl)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 214 63
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 214)
SH( Opal)830 W
33624 XM
(Creating New Graphical Objects)
SH( Chapter)
1550 W( 15)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(15. Creating New Graphical Objects)SH
11 /Times-Roman AF
6120 10524 MT
(An interesting)
67 W( feature of object-oriented programming in Garnet is that users are expected to create new)68 W
6120 11720 MT
(objects only by combining existing)
151 W( objects, not by writing new methods.  Therefore, you should only)150 W
6120 12916 MT
(need to use Aggregadgets to create)
22 W( new kinds of graphical objects.  It should never be necessary to create)23 W
6120 14112 MT
(a new)SH
10 /Courier AF
8990 XM
(:draw)SH
11 /Times-Roman AF
12265 XM
(method, for example.)SH
6120 16410 MT
(If for some reason, a new kind of primitive object is desired \050for example, a spline or)
238 W( some other)237 W
6120 17606 MT
(primitive not currently supplied by X/11\051, then contact the Garnet group)
81 W( for information about how this)82 W
6120 18802 MT
(can be done.  Due to the)
55 W( complexities of X/11, Mac QuickDraw, and automatic update and redrawing of)54 W
6120 19998 MT
(objects in Opal, it is not particularly easy to create new primitives.)SH
ES
%%Page: 215 64
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(References)SH
51386 XM
(Page 215)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(References)SH
11 /Times-Roman AF
8280 11279 MT
([Dannenberg 89])SH
16530 XM
(Roger B. Dannenberg.)SH
16530 12475 MT
(Debugging Tools for Garnet; Reference Manual.)SH
/Times-Italic SF
16530 13671 MT
(The Garnet Toolkit Reference Manuals: Support for Highly-Interactive, Graphical)SH
18180 14867 MT
(User Interfaces in Lisp.)SH
/Times-Roman SF
16530 16063 MT
(Carnegie Mellon University Computer Science Department Technical Report CMU-)SH
18180 17259 MT
(CS-89-196, 1989, pages 223-238.)SH
8280 19210 MT
([Giuse 89])SH
16530 XM
(Dario Giuse.)SH
/Times-Italic SF
16530 20406 MT
(KR: Constraint-Based Knowledge Representation)SH
/Times-Roman SF
(.)SH
16530 21602 MT
(Technical Report CMU-CS-89-142, Carnegie Mellon University Computer Science)SH
18180 22798 MT
(Department, April, 1989.)SH
8280 24749 MT
([Marchal 89])SH
16530 XM
(Philippe Marchal and Andrew Mickish.)SH
16530 25945 MT
(Aggregadgets and AggreLists Reference Manual.)SH
/Times-Italic SF
16530 27141 MT
(The Garnet Toolkit Reference Manuals: Support for Highly-Interactive, Graphical)SH
18180 28337 MT
(User Interfaces in Lisp.)SH
/Times-Roman SF
16530 29533 MT
(Carnegie Mellon University Computer Science Department Technical Report CMU-)SH
18180 30729 MT
(CS-89-196, 1989, pages 179-200.)SH
8280 32680 MT
([Mickish 89])SH
16530 XM
(Andrew Mickish.)SH
16530 33876 MT
(Garnet Gadgets Reference Manual.)SH
/Times-Italic SF
16530 35072 MT
(The Garnet Toolkit Reference Manuals: Support for Highly-Interactive, Graphical)SH
18180 36268 MT
(User Interfaces in Lisp.)SH
/Times-Roman SF
16530 37464 MT
(Carnegie Mellon University Computer Science Department Technical Report CMU-)SH
18180 38660 MT
(CS-89-196, 1989, pages 201-222.)SH
8280 40611 MT
([Myers 88])SH
16530 XM
(Brad A. Myers.)SH
/Times-Italic SF
16530 41807 MT
(The Garnet User Interface Development Environment: A Proposal)SH
/Times-Roman SF
(.)SH
16530 43003 MT
(Technical Report CMU-CS-88-153, Carnegie Mellon University Computer Science)SH
18180 44199 MT
(Department, September, 1988.)SH
8280 46150 MT
([Myers 89])SH
16530 XM
(Brad A. Myers.)SH
16530 47346 MT
(Interactors Reference Manual: Encapsulating Mouse and Keyboard Behaviors.)SH
/Times-Italic SF
16530 48542 MT
(The Garnet Toolkit Reference Manuals: Support for Highly-Interactive, Graphical)SH
18180 49738 MT
(User Interfaces in Lisp.)SH
/Times-Roman SF
16530 50934 MT
(Carnegie Mellon University Computer Science Department Technical Report CMU-)SH
18180 52130 MT
(CS-89-196, 1989, pages 126-178.)SH
8280 54081 MT
([VanderZanden 89])SH
16530 55277 MT
(Brad Vander Zanden, Brad A. Myers, Dario Giuse, and John Kolojejchick.)SH
16530 56473 MT
(An Incremental Automatic Redisplay Algorithm for Graphic Object Systems.)SH
16530 57669 MT
(1989.)SH
16530 58865 MT
(Submitted for Publication.)SH
ES
%%Page: 216 65
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 216)
SH( Opal)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(Index)SH
8 /Times-Roman AF
6120 11525 MT
(*screen-height* 205)400 W
21720 XM
(Components-in-rectangle 195)400 W
37320 XM
(Fill-style 168)400 W
6120 12449 MT
(*screen-width* 205)400 W
21720 XM
(Concatenate-text 186)400 W
37320 XM
(Filling-style 158,)
400 W( 166, 170)SH
21720 13373 MT
(Condense 175)400 W
37320 XM
(Fix-up-window 206)400 W
6120 14297 MT
(Actual-heightp 177)400 W
21720 XM
(Connect-x 173)400 W
37320 XM
(Fixed 175)400 W
6120 15221 MT
(Add-char 185)400 W
21720 XM
(Connect-y 173)400 W
37320 XM
(Focus-multifont-textinter 189)400 W
6120 16145 MT
(Add-component 193)400 W
21720 XM
(Constant slots)
SH( 170)400 W
37320 XM
(Font changing keys)
SH( 188)400 W
6120 17069 MT
(Add-components 194)400 W
21720 XM
(Convert-coordinates 206)400 W
37320 XM
(Font-from-file 176)400 W
6120 17993 MT
(Add-item 198)400 W
21720 XM
(Copy 158)400 W
37320 XM
(Font-name 176)400 W
6120 18917 MT
(Add-lisp-char 191)400 W
21720 XM
(Copy-inverted 158)400 W
37320 XM
(Font-path 176)400 W
6120 19841 MT
(Add-object 186)400 W
21720 XM
(Copy-selected-text 184)400 W
37320 XM
(Fonts)SH
6120 20765 MT
(After-cursor-moves-func 192)400 W
21720 XM
(Copy-selection 190)400 W
38418 XM
(face 175)400 W
6120 21689 MT
(Aggregadgets 213)400 W
21720 XM
(Core image)
SH( 210)400 W
38418 XM
(family 175)400 W
6120 22613 MT
(Aggregate 193,)
400 W( 201)SH
21720 XM
(Create-pixmap-image 180)400 W
38418 XM
(font directories)
SH( 176)400 W
6120 23537 MT
(Allegro CommonLisp)
SH( 157)400 W
21720 XM
(Creating pixmaps)
SH( 180)400 W
38418 XM
(font-from-file 176)400 W
6120 24461 MT
(And 158)400 W
21720 XM
(Creating the image of a window)
SH( 180)400 W
38418 XM
(prototype 175)400 W
6120 25385 MT
(And-inverted 158)400 W
21720 XM
(Cursor \050pointer\051)
SH( 202)400 W
38418 XM
(size 175)400 W
6120 26309 MT
(And-reverse 158)400 W
21720 XM
(Cursor slot syntax)
SH( 202)400 W
37320 XM
(Fonts.dir 176)400 W
6120 27233 MT
(Arc 173)400 W
21720 XM
(Cursor-font 177)400 W
37320 XM
(Foreground-color 165)400 W
6120 28157 MT
(Arrow-cursor 203)400 W
21720 XM
(Cut buffer)
SH( 207)400 W
37320 XM
(From-x 173)400 W
6120 29081 MT
(Arrowhead 173)400 W
21720 XM
(Cut-selection 190)400 W
37320 XM
(From-y 173)400 W
6120 30005 MT
(At 194)400 W
21720 XM
(Cyan 163)400 W
37320 XM
(Front 194)400 W
6120 30929 MT
(Auto scroll)SH
21720 XM
(Cyan-fill 167)400 W
7218 31853 MT
(auto-scroll-p slot)
SH( 178)400 W
37320 XM
(Get-cursor-index 178)400 W
7218 32777 MT
(opal:multifont-text 192)400 W
21720 XM
(Dark-gray-fill 166)400 W
37320 XM
(Get-cursor-line-char-position 185)400 W
7218 33701 MT
(opal:text 178)400 W
21720 XM
(Dash-pattern 165)400 W
37320 XM
(Get-objects 186)400 W
7218 34625 MT
(scrolling-window slot)
SH( 178)400 W
21720 XM
(Dashed-line 164)400 W
37320 XM
(Get-selection-line-char-position 185)400 W
7218 35549 MT
(vs. word wrap)
SH( 178)400 W
21720 XM
(Default-filling-style 166)400 W
37320 XM
(Get-standard-font 176)400 W
21720 36473 MT
(Default-font 175)400 W
37320 XM
(Get-string 185)400 W
6120 37397 MT
(Back 194)400 W
21720 XM
(Default-line-style 164)400 W
37320 XM
(Get-text 185)400 W
6120 38321 MT
(Background-color 165,)
400 W( 201)SH
21720 XM
(Delete-char 186)400 W
37320 XM
(Get-x-cut-buffer 207)400 W
6120 39245 MT
(Behind 194)400 W
21720 XM
(Delete-lisp-region 191)400 W
37320 XM
(Go-to-beginning-of-line 183)400 W
6120 40169 MT
(Between-marks-p 187)400 W
21720 XM
(Delete-prev-char 186)400 W
37320 XM
(Go-to-beginning-of-text 183)400 W
6120 41093 MT
(Bevel 165)400 W
21720 XM
(Delete-prev-word 186)400 W
37320 XM
(Go-to-end-of-line 183)400 W
6120 42017 MT
(Bitmap 178)400 W
21720 XM
(Delete-selection 184)400 W
37320 XM
(Go-to-end-of-text 183)400 W
6120 42941 MT
(Black 163)400 W
21720 XM
(Delete-substring 186)400 W
37320 XM
(Go-to-next-char 183)400 W
6120 43865 MT
(Black-fill 166)400 W
21720 XM
(Delete-word 186)400 W
37320 XM
(Go-to-next-line 183)400 W
6120 44789 MT
(Blue 163)400 W
21720 XM
(Demo-multifont 178)400 W
37320 XM
(Go-to-next-word 183)400 W
6120 45713 MT
(Blue-fill 167)400 W
21720 XM
(Destroy 160,)
400 W( 206)SH
37320 XM
(Go-to-prev-char 183)400 W
6120 46637 MT
(Bold 175)400 W
21720 XM
(Diameter 173)400 W
37320 XM
(Go-to-prev-line 183)400 W
6120 47561 MT
(Bold-italic 175)400 W
21720 XM
(Diamond-fill 168)400 W
37320 XM
(Go-to-prev-word 183)400 W
6120 48485 MT
(Border-width 202)400 W
21720 XM
(Directory-p 212)400 W
37320 XM
(Graphic-quality 162)400 W
6120 49409 MT
(Bottom 160)400 W
21720 XM
(Disconnect-garnet 210)400 W
37320 XM
(Graphical-object 158)400 W
6120 50333 MT
(Bottom-border-width 202)400 W
21720 XM
(Displays 205)400 W
37320 XM
(Gray-fill 166)400 W
6120 51257 MT
(Bottom-side 161)400 W
21720 XM
(Do-all-components 195)400 W
37320 XM
(Green 163)400 W
6120 52181 MT
(Bounding-box 161)400 W
21720 XM
(Do-components 194)400 W
37320 XM
(Green-fill 167)400 W
6120 53105 MT
(Butt 165)400 W
21720 XM
(Do-in-clip-rect 199)400 W
37320 XM
(Gv-bottom 161)400 W
21720 54029 MT
(Dotted-line 164)400 W
37320 XM
(Gv-center-x 161)400 W
6120 54953 MT
(Cap-style 165)400 W
21720 XM
(Double-buffered-p 201)400 W
37320 XM
(Gv-center-x-is-center-of 161)400 W
6120 55877 MT
(Center \050justification\051)
SH( 177)400 W
21720 XM
(Double-dash 165)400 W
37320 XM
(Gv-center-y 161)400 W
6120 56801 MT
(Center 161)400 W
21720 XM
(Drag-through-selection? 188)400 W
37320 XM
(Gv-center-y-is-center-of 161)400 W
6120 57725 MT
(Center-x 160)400 W
21720 XM
(Draw-function 158,)
400 W( 170)SH
37320 XM
(Gv-right 161)400 W
6120 58649 MT
(Center-y 160)400 W
21720 XM
(Draw-on-children 201)400 W
6120 59573 MT
(Change-color-of-selection 185)400 W
37320 XM
(Halftone 167)400 W
6120 60497 MT
(Change-cursors 204)400 W
21720 XM
(Editing commands for multifont)
SH( 188)400 W
37320 XM
(Halftone-darker 167)400 W
6120 61421 MT
(Change-font-of-selection 184)400 W
21720 XM
(Equiv 158)400 W
37320 XM
(Halftone-image 179)400 W
6120 62345 MT
(Change-item 198)400 W
21720 XM
(Even-odd 168)400 W
37320 XM
(Halftone-image-darker 179)400 W
6120 63269 MT
(Circle 175)400 W
21720 XM
(Extend 175)400 W
37320 XM
(Halftone-image-lighter 179)400 W
6120 64193 MT
(Clean-up 206)400 W
37320 XM
(Halftone-lighter 167)400 W
6120 65117 MT
(Clear 158)400 W
21720 XM
(Face 175)400 W
37320 XM
(Head-x 173)400 W
6120 66041 MT
(Clx 206)400 W
21720 XM
(Family 175)400 W
37320 XM
(Head-y 173)400 W
6120 66965 MT
(CMU CommonLisp)
SH( 157)400 W
21720 XM
(Fast redraw objects)
SH( 169)400 W
37320 XM
(Height 156,)
400 W( 170, 200)SH
6120 67889 MT
(Color 163)400 W
21720 XM
(Fast-redraw-p 169)400 W
37320 XM
(Hello World)
SH( 154)400 W
6120 68813 MT
(Color-name 163)400 W
21720 XM
(Fetch-next-char 185)400 W
37320 XM
(Hit-threshold 158,)
400 W( 170, 193)SH
6120 69737 MT
(Color-p 163)400 W
21720 XM
(Fetch-prev-char 185)400 W
37320 XM
(Hourglass-cursor 203)400 W
6120 70661 MT
(Colorimage 209)400 W
21720 XM
(Fill-background-p 177)400 W
6120 71585 MT
(Components 154,)
400 W( 193)SH
21720 XM
(Fill-rule 168)400 W
37320 XM
(Icon-bitmap 201)400 W
ES
%%Page: 217 66
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Index)SH
51386 XM
(Page 217)SH
46800 50 8280 4486 UL
8 SS 
8280 7749 MT
(Icon-title 201)400 W
23880 XM
(Multipoint 171)400 W
39480 XM
(Round 165)400 W
8280 8673 MT
(Iconify-Window 207)400 W
39480 XM
(Roundtangle 171)400 W
8280 9597 MT
(Image 178,)
400 W( 179)SH
23880 XM
(Nand 158)400 W
8280 10521 MT
(In-front 194)400 W
23880 XM
(No-fill 166)400 W
39480 XM
(Sans-serif 175)400 W
8280 11445 MT
(In-progress 204)400 W
23880 XM
(No-line 164)400 W
39480 XM
(Save-under 201)400 W
8280 12369 MT
(Indent in lisp-mode)
SH( 191)400 W
23880 XM
(No-op 158)400 W
39480 XM
(Saving lisp images)
SH( 210)400 W
8280 13293 MT
(Insert-mark 187)400 W
23880 XM
(Nor 158)400 W
39480 XM
(Saving pixmaps)
SH( 180)400 W
8280 14217 MT
(Insert-string 185)400 W
23880 XM
(Not-last 165)400 W
39480 XM
(Scrolling-window slot)
SH( 178)400 W
8280 15141 MT
(Insert-text 185)400 W
23880 XM
(Notice-resize-object 186)400 W
39480 XM
(Search-backwards-for-mark 187)400 W
8280 16065 MT
(Interactors 213)400 W
39480 XM
(Search-for-mark 187)400 W
8280 16989 MT
(Invert 158)400 W
23880 XM
(Obj-in-rectangle 195)400 W
39480 XM
(Select-outline-only 158,)
400 W( 170)SH
8280 17913 MT
(Italic 175)400 W
23880 XM
(Omit-title-bar-p 200)400 W
39480 XM
(Selection-interactor 190)400 W
23880 18837 MT
(Opal Package)
SH( 154)400 W
39480 XM
(Serif 175)400 W
8280 19761 MT
(Join-style 165)400 W
23880 XM
(Opaque-stippled 168)400 W
39480 XM
(Set-aggregate-hit-threshold 193)400 W
8280 20685 MT
(Justification 177)400 W
23880 XM
(Open-p 173)400 W
39480 XM
(Set-bounding-box 161)400 W
23880 21609 MT
(Or 158)400 W
39480 XM
(Set-center 161)400 W
8280 22533 MT
(Key bindings)
SH( 188)400 W
23880 XM
(Or-inverted 158)400 W
39480 XM
(Set-cursor-to-line-char-position 183)400 W
8280 23457 MT
(Key descriptions)
SH( 191)400 W
23880 XM
(Or-reverse 158)400 W
39480 XM
(Set-cursor-to-x-y-position 183)400 W
8280 24381 MT
(Kill-rest-of-line 186)400 W
23880 XM
(Orange 163)400 W
39480 XM
(Set-cursor-visible 183)400 W
23880 25305 MT
(Orange-fill 167)400 W
39480 XM
(Set-focus 190)400 W
8280 26229 MT
(Large 171,)
400 W( 175)SH
23880 XM
(Orphans-only 206)400 W
39480 XM
(Set-position 161)400 W
8280 27153 MT
(Leaf-objects-in-rectangle 195)400 W
23880 XM
(Outline 175)400 W
39480 XM
(Set-selection-to-line-char-position 184)400 W
8280 28077 MT
(Left \050justification\051)
SH( 177)400 W
23880 XM
(Oval 174)400 W
39480 XM
(Set-selection-to-x-y-position 184)400 W
8280 29001 MT
(Left 156,)
400 W( 170, 200)SH
23880 XM
(Overlapping 193)400 W
39480 XM
(Set-size 161)400 W
8280 29925 MT
(Left-border-width 202)400 W
39480 XM
(Set-text 186)400 W
8280 30849 MT
(Left-side 161)400 W
23880 XM
(Parent \050slot\051)
SH( 157)400 W
39480 XM
(Set-x-cut-buffer 207)400 W
8280 31773 MT
(Length 173)400 W
23880 XM
(Parent 154,)
400 W( 201)SH
39480 XM
(Shadow 175)400 W
8280 32697 MT
(Light-gray-fill 166)400 W
23880 XM
(Parenthesis matching)
SH( 191)400 W
39480 XM
(Shell-exec 212)400 W
8280 33621 MT
(Line 171)400 W
23880 XM
(Paste-selection 190)400 W
39480 XM
(Show-marks 187)400 W
8280 34545 MT
(Line-0 164)400 W
23880 XM
(Pixarray 179)400 W
39480 XM
(Size 175)400 W
8280 35469 MT
(Line-1 164)400 W
23880 XM
(Pixmap 179,)
400 W( 209)SH
39480 XM
(Small 171,)
400 W( 175)SH
8280 36393 MT
(Line-2 164)400 W
23880 XM
(Plain 175)400 W
39480 XM
(Solid 168)400 W
8280 37317 MT
(Line-4 164)400 W
23880 XM
(Point-in-gob 160,)
400 W( 195)SH
39480 XM
(Stipple 166,)
400 W( 167)SH
8280 38241 MT
(Line-8 164)400 W
23880 XM
(Point-to-component 195,)
400 W( 199)SH
39480 XM
(Stippled 168,)
400 W( 179)SH
8280 39165 MT
(Line-style \050slot\051)
SH( 165)400 W
23880 XM
(Point-to-leaf 195)400 W
39480 XM
(String 177)400 W
8280 40089 MT
(Line-style 158,)
400 W( 164, 170, 177)SH
23880 XM
(Point-to-rank 199)400 W
39480 XM
(String-height 177)400 W
8280 41013 MT
(Line-thickness 164)400 W
23880 XM
(Pointer 202)400 W
39480 XM
(String-width 177)400 W
8280 41937 MT
(Lisp image)
SH( 210)400 W
23880 XM
(Polyline 171)400 W
8280 42861 MT
(Lisp mode in multifont)
SH( 191)400 W
23880 XM
(Position 194)400 W
39480 XM
(Text 177)400 W
8280 43785 MT
(Lispify 191)400 W
23880 XM
(Position-by-hand 201)400 W
39480 XM
(Text-to-pure-list 186)400 W
8280 44709 MT
(Lispworks 157)400 W
23880 XM
(PostScript 208)400 W
39480 XM
(Text-to-string 186)400 W
8280 45633 MT
(Lower-Window 207)400 W
23880 XM
(Ppm 180)400 W
39480 XM
(Thin-line 164)400 W
8280 46557 MT
(Lucid CommonLisp)
SH( 157)400 W
23880 XM
(Ppmtoxpm 180)400 W
39480 XM
(Title 200)400 W
23880 47481 MT
(Pretend-to-be-leaf 158,)
400 W( 195, 196)SH
39480 XM
(Toggle-selection 184)400 W
8280 48405 MT
(Machines 205)400 W
23880 XM
(Printing 208)400 W
39480 XM
(Top 156,)
400 W( 170, 200)SH
8280 49329 MT
(Main-Event-Loop 157)400 W
23880 XM
(Projecting 165)400 W
39480 XM
(Top-border-width 202)400 W
8280 50253 MT
(Make-filling-style 168)400 W
23880 XM
(Pure-list-to-text 186)400 W
39480 XM
(Top-side 161)400 W
8280 51177 MT
(Make-image 210)400 W
23880 XM
(Purple 163)400 W
39480 XM
(Turn-off-match 191)400 W
8280 52101 MT
(Make-ps-file 208)400 W
23880 XM
(Purple-fill 167)400 W
8280 53025 MT
(Marks 187)400 W
39480 XM
(Underline 175)400 W
8280 53949 MT
(Match-parens-p 191)400 W
23880 XM
(Quarantine slot)
SH( 204)400 W
39480 XM
(Unix 212)400 W
8280 54873 MT
(Max-height 200)400 W
39480 XM
(Update 157,)
400 W( 206)SH
8280 55797 MT
(Max-width 200)400 W
23880 XM
(Radius 171)400 W
39480 XM
(Update-all 206)400 W
8280 56721 MT
(Maybe-constant 170)400 W
23880 XM
(Raise-Window 207)400 W
39480 XM
(Use-package 154)400 W
8280 57645 MT
(Medium 171,)
400 W( 175)SH
23880 XM
(Read-image 178)400 W
8280 58569 MT
(Min-height 200)400 W
23880 XM
(Read-xpm-file 180)400 W
39480 XM
(Very-large 175)400 W
8280 59493 MT
(Min-width 200)400 W
23880 XM
(Recalculate-virtual-aggregate-bboxes 199)400 W
39480 XM
(View-object 156)400 W
8280 60417 MT
(Miter 165)400 W
23880 XM
(Rectangle 171)400 W
39480 XM
(Virtual-aggregates 197)400 W
8280 61341 MT
(Motif-\050light-\051blue-fill 167)400 W
23880 XM
(Red 163)400 W
39480 XM
(Visibility 156)400 W
8280 62265 MT
(Motif-\050light-\051gray-fill 167)400 W
23880 XM
(Red-fill 167)400 W
39480 XM
(Visible 156,)
400 W( 170, 201)SH
8280 63189 MT
(Motif-\050light-\051green-fill 167)400 W
23880 XM
(Remove-component 194)400 W
8280 64113 MT
(Motif-\050light-\051orange-fill 167)400 W
23880 XM
(Remove-components 194)400 W
39480 XM
(White 163)400 W
8280 65037 MT
(Motif-blue 163)400 W
23880 XM
(Remove-item 198)400 W
39480 XM
(White-fill 166)400 W
8280 65961 MT
(Motif-gray 163)400 W
23880 XM
(Restore-cursors 204)400 W
39480 XM
(Width 156,)
400 W( 170, 200)SH
8280 66885 MT
(Motif-green 163)400 W
23880 XM
(Right \050justification\051)
SH( 177)400 W
39480 XM
(Winding 168)400 W
8280 67809 MT
(Motif-orange 163)400 W
23880 XM
(Right 160)400 W
39480 XM
(Window \050slot\051)
SH( 157)400 W
8280 68733 MT
(Move-component 194)400 W
23880 XM
(Right-border-width 202)400 W
39480 XM
(Window 200)400 W
8280 69657 MT
(Multifont-gadget 192)400 W
23880 XM
(Right-side 161)400 W
39480 XM
(Window-to-pixmap-image 180)400 W
8280 70581 MT
(Multifont-text 181)400 W
23880 XM
(Roman 175)400 W
39480 XM
(Windows on other displays)
SH( 205)400 W
8280 71505 MT
(Multifont-text-interactor 188)400 W
23880 XM
(Rotate 160)400 W
39480 XM
(With-cursor 204)400 W
ES
%%Page: 218 67
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 218)
SH( Opal)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
8 SS 
6120 7749 MT
(With-hourglass-cursor 204)400 W
6120 8673 MT
(Word wrap \050in multifont-text\051)
SH( 178,)
400 W( 181)SH
6120 9597 MT
(Write-xpm-file 180)400 W
6120 11445 MT
(Xor 158)400 W
6120 12369 MT
(Xset 176)400 W
6120 13293 MT
(Xwd 180)400 W
6120 14217 MT
(Xwdtopnm 180)400 W
6120 16065 MT
(Yellow 163)400 W
6120 16989 MT
(Yellow-fill 167)400 W
ES
%%Page: i 68
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Opal)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
25591 8272 MT
(Table of Contents)SH
12 SS 
8280 9796 MT
(1. Introduction)SH
53280 XM
(153)SH
8280 11320 MT
(2. Overview of Opal)SH
53280 XM
(154)SH
10 SS 
9780 12710 MT
(2.1. Basic Concepts)SH
53580 XM
(154)SH
9780 13790 MT
(2.2. The Opal Package)SH
53580 XM
(154)SH
9780 14870 MT
(2.3. Simple Displays)SH
53580 XM
(154)SH
9780 15950 MT
(2.4. Object Visibility)SH
53580 XM
(156)SH
9780 17030 MT
(2.5. View Objects)SH
53580 XM
(157)SH
9780 18110 MT
(2.6. Read-Only Slots)SH
53580 XM
(157)SH
9780 19190 MT
(2.7. Different Common Lisps)SH
53580 XM
(157)SH
12 SS 
8280 20714 MT
(3. Slots of All Graphical objects)SH
53280 XM
(158)SH
10 SS 
9780 22104 MT
(3.1. Left, top, width and height)SH
53580 XM
(158)SH
9780 23184 MT
(3.2. Line style and filling style)SH
53580 XM
(158)SH
9780 24264 MT
(3.3. Drawing function)SH
53580 XM
(158)SH
9780 25344 MT
(3.4. Select-Outline-Only, Hit-Threshold, and Pretend-To-Be-Leaf)SH
53580 XM
(159)SH
12 SS 
8280 26868 MT
(4. Methods on All View-Objects)SH
53280 XM
(160)SH
10 SS 
9780 28258 MT
(4.1. Standard Functions)SH
53580 XM
(160)SH
9780 29338 MT
(4.2. Extended Accessor Functions)SH
53580 XM
(161)SH
12 SS 
8280 30862 MT
(5. Graphic Qualities)SH
53280 XM
(162)SH
10 SS 
9780 32252 MT
(5.1. Color)SH
53580 XM
(163)SH
9780 33332 MT
(5.2. Line-Style Class)SH
53580 XM
(164)SH
9780 34412 MT
(5.3. Filling-Styles)SH
53580 XM
(166)SH
11780 35492 MT
(5.3.1. Creating Your Own Stippled Filling-Styles)SH
53580 XM
(167)SH
11780 36572 MT
(5.3.2. Fancy Stipple Patterns)SH
53580 XM
(168)SH
11780 37652 MT
(5.3.3. Other Slots Affecting Stipple Patterns)SH
53580 XM
(168)SH
9780 38732 MT
(5.4. Fast Redraw Objects)SH
53580 XM
(169)SH
12 SS 
8280 40256 MT
(6. Specific Graphical Objects)SH
53280 XM
(170)SH
10 SS 
9780 41646 MT
(6.1. Line)SH
53580 XM
(171)SH
9780 42726 MT
(6.2. Rectangles)SH
53580 XM
(171)SH
11780 43806 MT
(6.2.1. Rounded-corner Rectangles)SH
53580 XM
(171)SH
9780 44886 MT
(6.3. Polyline and Multipoint)SH
53580 XM
(171)SH
9780 45966 MT
(6.4. Arrowheads)SH
53580 XM
(173)SH
9780 47046 MT
(6.5. Arcs)SH
53580 XM
(173)SH
9780 48126 MT
(6.6. Ovals)SH
53580 XM
(174)SH
9780 49206 MT
(6.7. Circles)SH
53580 XM
(175)SH
9780 50286 MT
(6.8. Fonts and Text)SH
53580 XM
(175)SH
11780 51366 MT
(6.8.1. Fonts)SH
53580 XM
(175)SH
13780 52446 MT
(6.8.1.1. Built in Fonts)SH
53580 XM
(175)SH
13780 53526 MT
(6.8.1.2. Reusing Fonts)SH
53580 XM
(176)SH
13780 54606 MT
(6.8.1.3. Fonts from Files)SH
53580 XM
(176)SH
13780 55686 MT
(6.8.1.4. Opal:Cursor-Font)SH
53580 XM
(177)SH
13780 56766 MT
(6.8.1.5. Functions on Fonts)SH
53580 XM
(177)SH
11780 57846 MT
(6.8.2. Text)SH
53580 XM
(177)SH
11780 58926 MT
(6.8.3. Scrolling Text Objects)SH
53580 XM
(178)SH
9780 60006 MT
(6.9. Bitmaps)SH
53580 XM
(178)SH
9780 61086 MT
(6.10. Pixmaps)SH
53580 XM
(179)SH
11780 62166 MT
(6.10.1. Creating a pixmap)SH
53580 XM
(180)SH
11780 63246 MT
(6.10.2. Storing a pixmap)SH
53580 XM
(180)SH
12 SS 
8280 64770 MT
(7. Multifont)SH
53280 XM
(181)SH
10 SS 
9780 66160 MT
(7.1. Format of the :initial-text Slot)SH
53580 XM
(182)SH
9780 67240 MT
(7.2. Functions on Multifont Text)SH
53580 XM
(182)SH
11780 68320 MT
(7.2.1. Functions that Manipulate the Cursor)SH
53580 XM
(183)SH
ES
%%Page: ii 69
BS
0 SI
10 /Times-Bold AF
9620 7870 MT
(7.2.2. Functions for Text Selection)SH
51420 XM
(184)SH
9620 8950 MT
(7.2.3. Functions that Access the Text or Cursor)SH
51420 XM
(185)SH
9620 10030 MT
(7.2.4. Adding and Editing Text)SH
51420 XM
(185)SH
9620 11110 MT
(7.2.5. Operations on :initial-text Format Lists)SH
51420 XM
(186)SH
9620 12190 MT
(7.2.6. Using View-Objects as Text)SH
51420 XM
(187)SH
9620 13270 MT
(7.2.7. Using Marks)SH
51420 XM
(187)SH
7620 14350 MT
(7.3. Interactors for Multifont Text)SH
51420 XM
(187)SH
9620 15430 MT
(7.3.1. Multifont Text Interactor)SH
51420 XM
(188)SH
9620 16510 MT
(7.3.2. Focus Multifont Text Interactor)SH
51420 XM
(189)SH
9620 17590 MT
(7.3.3. Selection Interactor)SH
51420 XM
(190)SH
9620 18670 MT
(7.3.4. Lisp Mode)SH
51420 XM
(191)SH
7620 19750 MT
(7.4. Auto-Scrolling Multifont Text Objects)SH
51420 XM
(192)SH
7620 20830 MT
(7.5. After Cursor Moves)SH
51420 XM
(192)SH
7620 21910 MT
(7.6. A Multifont Text Gadget)SH
51420 XM
(192)SH
12 SS 
6120 23434 MT
(8. Aggregate objects)SH
51120 XM
(193)SH
10 SS 
7620 24824 MT
(8.1. Class Description)SH
51420 XM
(193)SH
7620 25904 MT
(8.2. Insertion and Removal of Graphical Objects)SH
51420 XM
(193)SH
7620 26984 MT
(8.3. Application of functions to components)SH
51420 XM
(194)SH
7620 28064 MT
(8.4. Finding objects under a given point)SH
51420 XM
(195)SH
7620 29144 MT
(8.5. Finding objects inside rectangular regions)SH
51420 XM
(196)SH
12 SS 
6120 30668 MT
(9. Virtual-Aggregates)SH
51120 XM
(197)SH
10 SS 
7620 32058 MT
(9.1. Virtual-Aggregates Slots)SH
51420 XM
(197)SH
7620 33138 MT
(9.2. Two-dimensional virtual-aggregates)SH
51420 XM
(198)SH
7620 34218 MT
(9.3. Manipulating the Virtual-Aggregate)SH
51420 XM
(198)SH
12 SS 
6120 35742 MT
(10. Windows)SH
51120 XM
(200)SH
10 SS 
7620 37132 MT
(10.1. Window Positioning)SH
51420 XM
(202)SH
7620 38212 MT
(10.2. Border Widths)SH
51420 XM
(202)SH
7620 39292 MT
(10.3. Window Cursors)SH
51420 XM
(202)SH
9620 40372 MT
(10.3.1. The :cursor Slot)SH
51420 XM
(203)SH
9620 41452 MT
(10.3.2. Garnet Cursor Objects)SH
51420 XM
(203)SH
9620 42532 MT
(10.3.3. Temporarily Changing the Cursor)SH
51420 XM
(204)SH
7620 43612 MT
(10.4. Update Quarantine Slot)SH
51420 XM
(204)SH
7620 44692 MT
(10.5. Windows on other Displays)SH
51420 XM
(205)SH
7620 45772 MT
(10.6. Methods and Functions on Window objects)SH
51420 XM
(206)SH
12 SS 
6120 47296 MT
(11. Printing Garnet Windows)SH
51120 XM
(208)SH
6120 48820 MT
(12. Saving and Restoring)SH
51120 XM
(210)SH
10 SS 
7620 50210 MT
(12.1. Saving Lisp Images)SH
51420 XM
(210)SH
7620 51290 MT
(12.2. Saving Lisp Images Manually in X/11)SH
51420 XM
(210)SH
12 SS 
6120 52814 MT
(13. Utility Functions)SH
51120 XM
(212)SH
10 SS 
7620 54204 MT
(13.1. Executing Unix Commands)SH
51420 XM
(212)SH
7620 55284 MT
(13.2. Testing Operating System Directories)SH
51420 XM
(212)SH
12 SS 
6120 56808 MT
(14. Aggregadgets and Interactors)SH
51120 XM
(213)SH
6120 58332 MT
(15. Creating New Graphical Objects)SH
51120 XM
(214)SH
6120 59856 MT
(References)SH
51120 XM
(215)SH
6120 61380 MT
(Index)SH
51120 XM
(216)SH
ES
%%Trailer
%%Pages: 69
%%DocumentFonts: Times-Roman Times-Bold Symbol Times-Italic Courier
