%!PS-Adobe-2.0
%%Title: inter/inter-manual.mss
%%DocumentFonts: (atend)
%%Creator: Andrew Mickish and Scribe 7(1700)
%%CreationDate: 12 December 1994 15:27
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {showpage SV restore} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale
    /showpage {} def
    /letter {} def
    /lettersmall {} def
    /note {} def
    } bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
11 SS 
1 1 0 8280 7200 GB 
%%BeginDocument: single-sided.ps
%!PS-Adobe-2.0
%
%  This PostScript code turns off double-sided printing,
%  which is desirable since we want to be able to move the
%  Tables of Contents by hand after the manuals are printed.
%
statusdict begin
   false setduplexmode
end

%%EndDocument
 GE 16 /Times-Bold AF
21107 18976 MT
(Interactors Reference Manual:)SH
15588 20672 MT
(Encapsulating Mouse and Keyboard Behaviors)SH
11 SS 
28182 24260 MT
(Brad A. Myers)SH
27600 25456 MT
(James A. Landay)SH
27753 26652 MT
(Andrew Mickish)SH
/Times-Roman SF
28183 28578 MT
(December 1994)SH
/Times-Bold SF
29634 44214 MT
(Abstract)SH
/Times-Roman SF
8280 45966 MT
(This document describes a set of)
300 W( objects which encapsulate mouse and keyboard behaviors.  The)299 W
8280 47262 MT
(motivation is to separate the complexities of input device handling from the other)
225 W( parts of the user)226 W
8280 48558 MT
(interface. We)
280 W( have tried to identify some common mouse and keyboard behaviors and implement them in)2 W
8280 49854 MT
(a separate place.)
53 W( There)
382 W( are only a small number of interactor types, but they are parameterized in a way)54 W
8280 51150 MT
(that will support a wide range of different interaction techniques.  These interactors form the basis)
40 W( for all)39 W
8280 52446 MT
(interaction in the Garnet system.)SH
21010 58164 MT
(Copyright)SH
/Symbol SF
25747 XM
(\323)SH
/Times-Roman SF
26891 XM
(1994 - Carnegie Mellon University)SH
8280 64947 MT
(This research was sponsored by NCCOSC under Contract No.  N66001-94-C-6037, Arpa Order)
207 W( No.)208 W
8280 66243 MT
(B326. The)
381 W( views and conclusions contained in this document)
53 W( are those of the authors and should not be)52 W
8280 67539 MT
(interpreted as representing the official policies, either expressed or implied, of NCCOSC or)
192 W( the U.S.)193 W
8280 68835 MT
(Government.)SH
ES
%%Page: 221 2
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.1)
SH( Advantages)
1800 W( of Interactors)SH
51386 XM
(Page 221)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(1. Introduction)SH
11 /Times-Roman AF
8280 10524 MT
(This document is the reference manual)
213 W( for the)212 W
/Times-Italic SF
30505 XM
(Interactors)SH
/Times-Roman SF
35880 XM
(system, which is part of the Garnet User)212 W
8280 11720 MT
(Interface Development System)
17 W( [Myers)
SH( 89a].  The Interactors module is responsible for handling all of the)18 W
8280 12916 MT
(input from the user.  Currently, this includes handling the mouse and keyboard.)SH
8280 15214 MT
(The design of the Interactors is based)
38 W( on the observation that there are only a few kinds of behaviors that)37 W
8280 16410 MT
(are typically used in graphical user interfaces.  Examples of these behaviors are selecting one of a set)
43 W( \050as)44 W
8280 17606 MT
(in a menu\051, moving or growing with the mouse, accepting keyboard typing, etc.  Currently, in Garnet,)126 W
8280 18802 MT
(there are only nine types of interactive behavior, but these are all)
63 W( that is necessary for the interfaces that)64 W
8280 19998 MT
(Garnet supports.)
146 W( These)
566 W( behaviors are provided in Interactor objects.  When the programmer wants to)145 W
8280 21194 MT
(make a graphical)
343 W( object \050created using Opal\320the Garnet graphics package\051 respond to input, an)344 W
8280 22390 MT
(interactor object is created and attached to)
135 W( the graphical object.  In general, the graphics and behavior)134 W
8280 23586 MT
(objects are created and maintained separately, in order to make the code easier to create and maintain.)SH
8280 25884 MT
(This technique of having objects respond to inputs is quite novel,)
3 W( and different from the normal method in)4 W
8280 27080 MT
(other graphical object systems.  In others, each type of object is responsible for)
139 W( accepting a stream of)138 W
8280 28276 MT
(mouse and keyboard events and managing the)
336 W( behavior.  Here, the interactors handle the events)337 W
8280 29472 MT
(internally, and cause the graphical objects to behave in the desired way.)SH
8280 31770 MT
(The Interactors, like the rest of Garnet, are implemented in CommonLisp)
271 W( for X/11 and Macintosh)270 W
8280 32966 MT
(QuickDraw. Interactors)
713 W( are set)
219 W( up to work with the Opal graphics package and the KR object and)220 W
8280 34162 MT
(constraint systems, which are all part of Garnet.)SH
8280 36460 MT
(The motivation and)
9 W( an overview of the Interactors system is described in more detail in conference papers)8 W
8555 37656 MT
([Myers 89b, Myers 90].)SH
8280 39954 MT
(Often, interactors will be included in the definition of)
38 W( Aggregadgets.  See the Aggregadgets manual for a)39 W
8280 41150 MT
(description of how this works.)SH
14 /Times-Bold AF
8280 44968 MT
(1.1. Advantages of Interactors)SH
11 /Times-Roman AF
8280 46164 MT
(The design for interactors makes creating graphical interfaces)
43 W( easier.  Other advantages of the interactors)42 W
8280 47360 MT
(are that:)SH
/Symbol SF
10249 48938 MT
(\267)SH
/Times-Roman SF
11030 XM
(They are entirely ``look'' independent; any graphics can be attached to a particular ``feel.'')SH
/Symbol SF
10249 50832 MT
(\267)SH
/Times-Roman SF
11030 XM
(They allow the details of)
140 W( the behavior of objects to be separated from the application and)141 W
11030 52028 MT
(from the graphics, which has long been a goal of user interface software design.)SH
/Symbol SF
10249 53922 MT
(\267)SH
/Times-Roman SF
11030 XM
(They support multiple input devices operating in parallel.)SH
/Symbol SF
10249 55816 MT
(\267)SH
/Times-Roman SF
11030 XM
(They simulate multiple processing.)
334 W( Different)
941 W( applications can be running in different)333 W
11030 57012 MT
(windows, and the operations attached to)
6 W( objects in all the windows will execute whenever the)7 W
11030 58208 MT
(mouse is pressed over them.  The applications all exist in the same)
10 W( CommonLisp process, but)9 W
11030 59404 MT
(the interactors insure that the)
292 W( events go to the correct application and that the correct)293 W
11030 60600 MT
(procedures are called.  If the application is written correctly)
76 W( \050e.g., without global variables\051,)75 W
11030 61796 MT
(multiple instantiations of the)SH
/Times-Italic SF
23926 XM
(same)SH
/Times-Roman SF
26461 XM
(application can exist in the same process.)SH
/Symbol SF
10249 63690 MT
(\267)SH
/Times-Roman SF
11030 XM
(All of the complexities of X and)
22 W( QuickDraw graphics and event handling are hidden by Opal)23 W
11030 64886 MT
(and the Interactors package.  This makes Garnet)
105 W( much easier to use than X or QuickDraw,)104 W
11030 66082 MT
(and allows applications written in Garnet to be run on either Unix or Mac machines without)59 W
11030 67278 MT
(modification.)SH
ES
%%Page: 222 3
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 222)
SH( Interactors)830 W
42260 XM
(Introduction Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(1.2. Overview of Interactor Operation)SH
11 /Times-Roman AF
6120 9334 MT
(The interactors sub-system resides in the)108 W
10 /Courier AF
24974 XM
(Inter)SH
11 /Times-Roman AF
28357 XM
(package. We)
491 W( recommend that programmers explicitly)108 W
6120 10530 MT
(reference names from the)6 W
10 /Courier AF
17624 XM
(Inter)SH
11 /Times-Roman AF
20905 XM
(package, for example:)6 W
10 /Courier AF
30939 XM
(Inter:Menu-Interactor)SH
11 /Times-Roman AF
(, but you)
6 W( can also get)7 W
6120 11726 MT
(complete access to all exported symbols by doing a)196 W
10 /Courier AF
30765 XM
(\050use-package :INTER\051)196 W
11 /Times-Roman AF
(. All)
665 W( of the symbols)195 W
6120 12922 MT
(referenced in this document are exported.)SH
6120 15220 MT
(In a typical mouse-based operation, the end user will press down on a mouse button to start the operation,)17 W
6120 16416 MT
(move the mouse around with the button depressed, and then release to confirm the operation.)
237 W( For)747 W
6120 17612 MT
(example, in a menu, the)
41 W( user will press down over one menu item to start the operation, move the mouse)42 W
6120 18808 MT
(to the desired item, and then release.)SH
6120 21106 MT
(Consequently, the interactors have two modes: waiting and running.)
50 W( An)
373 W( interactor is waiting for its start)49 W
6120 22302 MT
(event \050like a mouse button down\051 and after that, it is waiting for its stop event,)
191 W( after which it stops)192 W
6120 23498 MT
(running and goes back to waiting.)SH
6120 25796 MT
(In fact, interactors are somewhat more complicated because)
53 W( they can be aborted at any time and because)52 W
6120 26992 MT
(there are often active)
144 W( regions of the screen outside of which the interactor does not operate.  The full)145 W
6120 28188 MT
(description of the operation is presented in section 3.6.)SH
9 SS 
40642 30123 MT
(1)SH
11 SS 
6120 30486 MT
(All the interactors operate by setting specific slots in the graphic objects.)228 W
42097 XM
(For example, the menu)227 W
6120 31682 MT
(interactor sets a slot called)233 W
10 /Courier AF
19228 XM
(:selected)SH
11 /Times-Roman AF
25136 XM
(to show which menu item is)
233 W( selected, and the moving and)234 W
6120 32878 MT
(growing interactor sets a slot called)290 W
10 /Courier AF
23744 XM
(:box)SH
11 /Times-Roman AF
(. Typically,)
855 W( the objects will contain constraints that)
290 W( tie)289 W
6120 34074 MT
(appropriate graphical properties to these special slots.)
39 W( For)
355 W( example, a movable rectangle would typically)40 W
6120 35270 MT
(contain the following constraints so it will follow the mouse:)SH
8 /Courier AF
8040 36435 MT
(\050create-instance 'MOVING-RECTANGLE opal:rectangle)SH
9480 37300 MT
(\050:box '\05080 20 100 150\051\051)SH
9480 38165 MT
(\050:left \050o-formula \050first \050gvl :box\051\051\051\051)SH
9480 39030 MT
(\050:top \050o-formula \050second \050gvl :box\051\051\051\051)SH
9480 39895 MT
(\050:width \050o-formula \050third \050gvl :box\051\051\051\051)SH
9480 40760 MT
(\050:height \050o-formula \050fourth \050gvl :box\051\051\051\051\051)SH
11 /Times-Roman AF
6120 42181 MT
(The initial size and position for the rectangle are in the)77 W
10 /Courier AF
31311 XM
(:box)SH
11 /Times-Roman AF
34062 XM
(slot. When)
427 W( an interactor changed the box)76 W
6120 43377 MT
(slot, the)SH
10 /Courier AF
9879 XM
(:left, :top, :width,)SH
11 /Times-Roman AF
22154 XM
(and)SH
10 /Courier AF
24017 XM
(:height)SH
11 /Times-Roman AF
28492 XM
(slots would change automatically based on constraints.)SH
6120 45675 MT
(If the constraints \050formulas\051 were)90 W
/Times-Italic SF
21565 XM
(not)SH
/Times-Roman SF
23336 XM
(there, the interactor would still change the)91 W
10 /Courier AF
42789 XM
(:box)SH
11 /Times-Roman AF
45555 XM
(slot,)SH
/Times-Italic SF
47786 XM
(but nothing)91 W
6120 46871 MT
(would change on the screen)19 W
/Times-Roman SF
(, since the rectangle's display is controlled by)19 W
10 /Courier AF
39003 XM
(:left, :top, :width,)18 W
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 48067 MT
(:height)SH
11 /Times-Roman AF
(, not by)9 W
10 /Courier AF
13953 XM
(:box)SH
11 /Times-Roman AF
(. The)
293 W( motivation for setting this extra slot, is to allow application-specific)
9 W( filtering)10 W
6120 49263 MT
(on the values.  For)
81 W( example, if you do not want the object to move vertically, you can simply eliminate)80 W
6120 50459 MT
(the formula in the)SH
10 /Courier AF
14246 XM
(:top)SH
11 /Times-Roman AF
16921 XM
(slot.)SH
14 /Times-Bold AF
6120 54277 MT
(1.3. Simple Interactor Creation)SH
11 /Times-Roman AF
6120 55473 MT
(To use interactors, you need to create)155 W
/Times-Italic SF
23941 XM
(interactor-windows)SH
/Times-Roman SF
32989 XM
(for the interactors to work in \050windows)
155 W( are)156 W
6120 56669 MT
(fully documented in the Opal Manual\051.  To create an interactor-window, you use the standard KR)259 W
10 /Courier AF
6120 57865 MT
(create-instance)SH
11 /Times-Roman AF
15395 XM
(function. For)
275 W( example:)SH
8 /Courier AF
8040 59030 MT
(\050create-instance 'MYWINDOW inter:interactor-window)SH
9480 59895 MT
(\050:left 100\051\050:top 10\051)SH
9480 60760 MT
(\050:width 400\051\050:height 500\051)SH
9480 61625 MT
(\050:title "My Window"\051\051)SH
8040 62490 MT
(\050opal:update MYWINDOW\051)SH
11 /Times-Roman AF
6120 64788 MT
(To create interactor objects, you also use the)99 W
10 /Courier AF
26795 XM
(create-instance)SH
11 /Times-Roman AF
36169 XM
(function. Each)
473 W( interactor has)
99 W( a large)100 W
6120 65984 MT
(number of optional parameters, which are described in detail in the rest of this manual.)
204 W( It)
681 W( must be)203 W
6120 67180 MT
(emphasized, however, that normally it is not necessary to)
84 W( supply very many of these.  For example, the)85 W
10800 50 6120 70172 UL
7 SS 
7020 71673 MT
(1)SH
9 SS 
7370 72000 MT
(``Slots'' are the ``instance variables'' of the objects.)SH
ES
%%Page: 223 4
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.4)
SH( Overview)
1800 W( of Manual)SH
51386 XM
(Page 223)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(following code creates)
134 W( an interactor that causes the MOVING-RECTANGLE \050defined above\051 to move)133 W
8280 9151 MT
(around inside MYWINDOW:)SH
8 /Courier AF
10200 10316 MT
(\050create-instance 'MYMOVER Inter:Move-Grow-Interactor)SH
11640 11181 MT
(\050:start-where \050list :in MOVING-RECTANGLE\051\051)SH
11640 12046 MT
(\050:window MYWINDOW\051\051)SH
11 /Times-Roman AF
8280 14344 MT
(This interactor will use the default)
113 W( start and stop events, which are the left mouse button down and up)114 W
8280 15540 MT
(respectively. All)
275 W( the other aspects of the behavior also will use their default values \050as described below\051.)SH
8280 17838 MT
(Several implementations of lisp)
167 W( allow interactors to run automatically \050see section 2\051.  If you are)166 W
/Times-Italic SF
53674 XM
(not)SH
/Times-Roman SF
8280 19034 MT
(running in CMU, LispWorks, Allegro, Lucid, or MCL Commonlisp, then)
272 W( you need to execute the)273 W
8280 20230 MT
(following function to make the interactor run:)SH
8 /Courier AF
10200 21395 MT
(\050inter:main-event-loop\051)SH
11 /Times-Roman AF
8280 22816 MT
(This function does not exit, so you have to type ^C \050or whatever your operating system)
4 W( break character is\051)3 W
8280 24012 MT
(to the Lisp window when you are finished \050or hit the)239 W
10 /Courier AF
34340 XM
(F1)SH
11 /Times-Roman AF
36054 XM
(key \050or whatever)
239 W( your Garnet break key)240 W
8280 25208 MT
(is\320section 2.1\051\051.)SH
8280 27506 MT
(As another example, here is a complete, minimal ``Goodbye)
5 W( World'' program, that creates a window with)4 W
8280 28702 MT
(a button that causes the window to go away \050created from scratch, without using any predefined gadgets\051.)SH
8 /Courier AF
10200 29915 MT
(;;;)SH
/Times-Italic SF
(using the KR package, but no others, is the "Garnet style")SH
/Courier SF
10200 30780 MT
(\050use-package "KR"\051)SH
10200 31645 MT
(;;;)SH
/Times-Italic SF
(first create the graphics; see the Opal manual for explanations)SH
/Courier SF
10200 32510 MT
(\050create-instance 'MYWINDOW inter:interactor-window)SH
11640 33375 MT
(\050:left 100\051\050:top 10\051)SH
11640 34240 MT
(\050:width 125\051\050:height 25\051)SH
11640 35105 MT
(\050:title "My Window"\051\051)SH
10200 35970 MT
(\050s-value MYWINDOW :aggregate \050create-instance 'MYAGG opal:aggregate\051\051)SH
10200 37700 MT
(\050create-instance 'MYTEXT opal:text)SH
11640 38565 MT
(\050:string "Goodbye World"\051)SH
11640 39430 MT
(\050:left 2\051\050:top 5\051\051)SH
10200 40295 MT
(\050opal:add-component MYAGG MYTEXT\051)SH
10200 41160 MT
(\050opal:update MYWINDOW\051)SH
10200 42890 MT
(;;;)SH
/Times-Italic SF
(now add the interactor)SH
/Courier SF
10200 43755 MT
(\050create-instance NIL Inter:Button-Interactor)SH
11640 44620 MT
(\050:window MYWINDOW\051)SH
11640 45485 MT
(\050:start-where \050list :in MYTEXT\051\051)SH
11640 46350 MT
(\050:continuous NIL\051 ;)SH
/Times-Italic SF
(happen immediately on the downpress)SH
/Courier SF
11640 47215 MT
(\050:final-function #'\050lambda \050inter final-obj-over\051)SH
21720 48080 MT
(\050opal:destroy MYWINDOW\051)SH
21720 48945 MT
(;;)SH
/Times-Italic SF
23160 XM
(the next line is needed unless you are running CMU Lisp)SH
/Courier SF
21720 49810 MT
(;;)SH
/Times-Italic SF
23160 XM
(or you are running the main-event-loop process in the)SH
/Courier SF
21720 50675 MT
(;;)SH
/Times-Italic SF
23160 XM
(background in Allegro, Lucid, or LispWorks)SH
/Courier SF
21720 51540 MT
(#-or cmu allegro lucid lispworks\051 \050inter:exit-main-event-loop\051\051\051)SH
10200 52405 MT
(;;;)SH
/Times-Italic SF
(If not CMU Lisp, or if not running the background main-event-loop process in)SH
/Courier SF
10200 53270 MT
(;;;)SH
/Times-Italic SF
(Allegro, LispWorks, or Lucid Lisp, then the following is needed to run the interactor:)SH
/Courier SF
10200 54135 MT
(#-\050or cmu allegro lucid lispworks\051 \050inter:main-event-loop\051)SH
14 /Times-Bold AF
8280 57953 MT
(1.4. Overview of Manual)SH
11 /Times-Roman AF
8280 59149 MT
(This manual is organized as follows.  Section 2 discusses the)86 W
10 /Courier AF
36294 XM
(main-event-loop)SH
11 /Times-Roman AF
(, which allows you)
86 W( to)87 W
8280 60345 MT
(run interactors while automatically updating the appearance of the windows.  Section)
138 W( 3 describes how)137 W
8280 61541 MT
(interactors work in)
7 W( detail.  Section 4 describes the definition and operation of global accelerators.  Section)8 W
8280 62737 MT
(5 lists all the slots that are common to all interactors.  Section 6 describes)
161 W( all the interactors that are)160 W
8280 63933 MT
(provided. Section)
659 W( 7)
192 W( describes how to make transcripts of events.  Finally, section 8 describes some)193 W
8280 65129 MT
(advanced features.)SH
8280 67427 MT
(Normally, you will not)
89 W( need most of the information in this manual.  To make an object respond to the)88 W
8280 68623 MT
(mouse, look in section 6 to find the interactor you need, then check its introduction to see how to set up)64 W
8280 69819 MT
(the constraints in your graphical objects so that they)
209 W( will respond to the interactor, and to see what)208 W
8280 71015 MT
(parameters of the interactor you need to set.  You can usually ignore the advanced customization sections.)SH
ES
%%Page: 224 5
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 224)
SH( Interactors)830 W
38344 XM
(The Main Event Loop)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(2. The Main Event Loop)SH
11 /Times-Roman AF
6120 10524 MT
(CMU CommonLisp)
305 W( [McDonald)
SH( 87] supports sending events to the appropriate windows internally.)305 W
6120 11720 MT
(Therefore, under CMU CommonLisp, the interactors begin to run immediately when they are created,)
7 W( and)6 W
6120 12916 MT
(run continuously until they are terminated.  While they are running, you can)
84 W( still type commands to the)85 W
6120 14112 MT
(Lisp listener \050the read-eval-print loop\051.)SH
6120 16410 MT
(To get the same effect on other Lisps, Garnet uses the multiple process mechanism of Lucid,)
132 W( Allegro,)131 W
6120 17606 MT
(LispWorks, and MCL CommonLisps.  You usually)
121 W( do not need to worry about the information in this)122 W
6120 18802 MT
(section if you are using CMU, Allegro, Lucid,)
81 W( or MCL CommonLisp, but you will probably need to go)80 W
6120 19998 MT
(through an initialization)
186 W( phase for multiprocessing in LispWorks \050see the section "LispWorks" in the)187 W
6120 21194 MT
(Overview Manual\051.)SH
6120 23492 MT
(Note:)SH
10 /Courier AF
8862 XM
(Main-Event-Loop)SH
11 /Times-Roman AF
18160 XM
(also handles Opal)
23 W( window refreshing, so graphical objects will not be redrawn)22 W
6120 24688 MT
(automatically in other lisps unless this function is executing.)SH
14 /Times-Bold AF
6120 28506 MT
(2.1. Main-Event-Loop)SH
11 /Times-Roman AF
6120 29702 MT
(Under other CommonLisps \050like AKCL and CLISP\051, you need to explicitly start and stop)
70 W( the main loop)71 W
6120 30898 MT
(that listens for X events.  It is always OK to call the)213 W
10 /Courier AF
31923 XM
(main-event-loop)SH
11 /Times-Roman AF
41410 XM
(function, because it does)212 W
6120 32094 MT
(nothing if it is not needed.  Therefore, after all the objects and interactors have been created,)
23 W( and after the)24 W
10 /Courier AF
6120 33290 MT
(opal:update)SH
11 /Times-Roman AF
13034 XM
(call has been made, you must call the)39 W
10 /Courier AF
30055 XM
(inter:main-event-loop)SH
11 /Times-Roman AF
42969 XM
(procedure. This)
352 W( loops)38 W
6120 34486 MT
(waiting and handling)
4 W( X events until explicitly stopped by typing)5 W
10 /Courier AF
34768 XM
(^C)SH
11 /Times-Roman AF
36248 XM
(\050or whatever is your operating system)5 W
6120 35682 MT
(break character\051)
21 W( to the Lisp listener window, or until you hit the Garnet break key while the mouse is in a)20 W
6120 36878 MT
(Garnet window.  This is defined by the global variable)58 W
10 /Courier AF
30985 XM
(inter:*Garnet-Break-Key*)SH
11 /Times-Roman AF
(, and is bound to)58 W
10 /Courier AF
6120 38074 MT
(:F1)SH
11 /Times-Roman AF
8203 XM
(by default.  You can simply setf)8 W
10 /Courier AF
22617 XM
(inter:*Garnet-Break-Key*)SH
11 /Times-Roman AF
37300 XM
(to some other)
8 W( character if you want)7 W
6120 39270 MT
(to use)SH
10 /Courier AF
8992 XM
(:F1)SH
11 /Times-Roman AF
11067 XM
(for something else.)SH
6120 41568 MT
(The other)
603 W( way for a program to exit)604 W
10 /Courier AF
26955 XM
(Main-Event-Loop)SH
11 /Times-Roman AF
36834 XM
(is for it to call the procedure)604 W
10 /Courier AF
6120 42764 MT
(inter:exit-main-event-loop)SH
11 /Times-Roman AF
(. Typically,)489 W
10 /Courier AF
27632 XM
(inter:main-event-loop)SH
11 /Times-Roman AF
40614 XM
(will be called)
107 W( at the end of)106 W
6120 43960 MT
(your set up routine, and)SH
10 /Courier AF
16812 XM
(inter:exit-main-event-loop)SH
11 /Times-Roman AF
32687 XM
(will be called from your quit routine, as in the)1 W
6120 45156 MT
(example of section 1.3.)SH
8 /Courier AF
8040 46369 MT
(inter:Main-Event-Loop &optional)SH
/Times-Italic SF
23400 XM
(inter-window)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 48099 MT
(inter:Exit-Main-Event-Loop)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 50397 MT
(The optional window to)57 W
10 /Courier AF
17164 XM
(Main-Event-Loop)SH
11 /Times-Roman AF
26495 XM
(is used to tell which display to use.  If not supplied, it uses)56 W
6120 51593 MT
(the default Opal display.  You only need to supply)
1 W( a parameter if you have a single Lisp process talking to)2 W
6120 52789 MT
(multiple displays.)SH
14 /Times-Bold AF
6120 56607 MT
(2.2. Main-Event-Loop Process)SH
11 /Times-Roman AF
6120 57803 MT
(By default,)
105 W( Garnet spawns a background process in Allegro, Lucid, and LispWorks, which will run the)104 W
6120 58999 MT
(interactor's main-event-loop while simultaneously allowing you to use the ordinary Lisp)
117 W( listener.  This)118 W
6120 60195 MT
(means that you can use the Lisp listener without having to hit the Garnet break key \050usually)SH
10 /Courier AF
46719 XM
(:F1)SH
11 /Times-Roman AF
(\051.)SH
6120 62493 MT
(Some programs seem to have trouble with this process.  If your system)
178 W( doesn't work, try killing the)177 W
6120 63689 MT
(main-event-loop process and executing)527 W
10 /Courier AF
25760 XM
(\050inter:main-event-loop\051)SH
11 /Times-Roman AF
40362 XM
(explicitly. In)
1329 W( MCL, the)527 W
6120 64885 MT
(background process is controlled by MCL itself, and)
112 W( cannot be killed.  However, you might be able to)111 W
6120 66081 MT
(break out of an infinite loop \050or otherwise get MCL's attention\051 by executing the abort command)275 W
6120 67277 MT
(\050Control-comma\051 or the reset command \050Control-period\051.)SH
ES
%%Page: 225 6
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.2)
SH( Main-Event-Loop)
1800 W( Process)SH
51386 XM
(Page 225)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(2.2.1. Launching and Killing the Main-Event-Loop-Process)SH
8 /Courier AF
10200 10665 MT
(opal:Launch-Main-Event-Loop-Process)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 12395 MT
(opal:Kill-Main-Event-Loop-Process)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 14693 MT
(These are the top-level functions used for starting and stopping the main-event-loop process.)
94 W( You)
462 W( may)93 W
8280 15889 MT
(need to call)135 W
10 /Courier AF
14030 XM
(launch-main-event-loop-process)SH
11 /Times-Roman AF
32441 XM
(if the process is killed explicitly or if the process)136 W
8280 17085 MT
(crashes due to a bug.)SH
8280 19718 MT
(While the main-event-loop background process is running,)
18 W( calling)17 W
10 /Courier AF
37839 XM
(\050inter:main-event-loop\051)SH
11 /Times-Roman AF
(, hitting)17 W
8280 20914 MT
(the Garnet break key, and calling)SH
10 /Courier AF
23153 XM
(launch-main-event-loop-process)SH
11 /Times-Roman AF
41428 XM
(all have no effect.)SH
8280 23212 MT
(You can kill the background main-event-loop process by executing)484 W
10 /Courier AF
42480 XM
(kill-main-event-loop-)SH
8280 24408 MT
(process)SH
11 /Times-Roman AF
(, but normally you should not have to, even if you encounter an error and are thrown in the)147 W
8280 25604 MT
(debugger. If)
275 W( you call it when the main-event-loop process is not running, there is no effect.)SH
10 /Courier AF
8280 27902 MT
(Launch-main-event-loop-process)SH
11 /Times-Roman AF
26793 XM
(and)SH
10 /Courier AF
28894 XM
(kill-main-event-loop-process)SH
11 /Times-Roman AF
46207 XM
(belong to)
238 W( the Opal)239 W
8280 29098 MT
(package because)SH
10 /Courier AF
15912 XM
(opal:reconnect-garnet)SH
11 /Times-Roman AF
28787 XM
(and)SH
10 /Courier AF
30650 XM
(opal:disconnect-garnet)SH
11 /Times-Roman AF
44125 XM
(need to call them.)SH
12 /Times-Bold AF
8280 32782 MT
(2.2.2. Launch-Process-P)SH
11 /Times-Roman AF
8280 33978 MT
(In the)30 W
10 /Courier AF
11150 XM
(garnet-loader)SH
11 /Times-Roman AF
(, there is a switch called)30 W
10 /Courier AF
29973 XM
(user::launch-process-p)SH
11 /Times-Roman AF
43478 XM
(which tells whether or not)29 W
8280 35174 MT
(Garnet should automatically call)55 W
10 /Courier AF
23102 XM
(launch-main-event-loop-process)SH
11 /Times-Roman AF
41432 XM
(at load time.)
55 W( You)
387 W( can edit the)56 W
10 /Courier AF
8280 36370 MT
(garnet-loader)SH
11 /Times-Roman AF
16358 XM
(to change the default value of this variable, or)
3 W( you can)2 W
10 /Courier AF
40578 XM
(setf)SH
11 /Times-Roman AF
43255 XM
(the variable before loading)2 W
10 /Courier AF
8280 37566 MT
(garnet-loader)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 41250 MT
(2.2.3. Main-Event-Loop-Process-Running-P)SH
8 /Courier AF
10200 42463 MT
(opal:Main-Event-Loop-Process-Running-P)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 44761 MT
(This function tells you whether the parallel main-event-loop process is running, and is)
297 W( not in the)298 W
8280 45957 MT
(debugger.)SH
ES
%%Page: 226 7
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 226)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(3. Operation)SH
14 SS 
6120 13146 MT
(3.1. Creating and Destroying)SH
11 /Times-Roman AF
6120 14342 MT
(For interactors to be used, they must operate on objects that appear in Garnet windows.)
386 W( The)1045 W
10 /Courier AF
6120 15538 MT
(inter:interactor-window)SH
11 /Times-Roman AF
20483 XM
(prototype is described)
288 W( in the Opal Manual.  To create an interactor)289 W
6120 16734 MT
(window, use:)SH
8 /Courier AF
8040 17947 MT
(\050create-instance)SH
/Times-Italic SF
16200 XM
(name)SH
/Courier SF
18413 XM
(inter:interactor-window)SH
/Times-Italic SF
29933 XM
(\050slot value\051\050slot value\051...)SH
/Courier SF
(\051)SH
11 /Times-Roman AF
6120 19368 MT
(This creates an interactor window named)54 W
/Times-Italic SF
24830 XM
(name)SH
/Times-Roman SF
27541 XM
(\050which will)
54 W( usually be a quoted symbol like)53 W
10 /Courier AF
47520 XM
('MYWINDOW)SH
11 /Times-Roman AF
6120 20564 MT
(or NIL\051.  If)165 W
/Times-Italic SF
12001 XM
(name)SH
/Times-Roman SF
14823 XM
(is NIL, then a system-supplied name is used.  This returns the new window.)
165 W( The)607 W
10 /Courier AF
6120 21760 MT
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
9744 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
12768 XM
(:width)SH
11 /Times-Roman AF
(, and)74 W
10 /Courier AF
18929 XM
(:height)SH
11 /Times-Roman AF
23478 XM
(\050and other parameters\051 are given just as for all objects.)
74 W( Note)
421 W( that)73 W
6120 22956 MT
(the window is not visible \050``mapped''\051 until an)SH
10 /Courier AF
27016 XM
(opal:update)SH
11 /Times-Roman AF
33891 XM
(call is made on it:)SH
8 /Courier AF
8040 24169 MT
(\050opal:update)SH
/Times-Italic SF
14280 XM
(an-interactor-window)SH
/Courier SF
(\051)SH
11 /Times-Roman AF
6120 26467 MT
(To create an interactor, use:)SH
8 /Courier AF
8040 27680 MT
(\050create-instance)SH
/Times-Italic SF
16200 XM
(name)SH
/Courier SF
18413 XM
(Inter:)SH
/Times-Italic SF
(InteractorType \050slot)
280 W( value\051 \050slot value\051...)SH
/Courier SF
(\051)SH
11 /Times-Roman AF
6120 29101 MT
(This creates an interactor named)24 W
/Times-Italic SF
20807 XM
(name)SH
/Times-Roman SF
23488 XM
(\050which can be NIL if a system-supplied name is)
24 W( desired\051 that is an)25 W
6120 30297 MT
(instance of)247 W
/Times-Italic SF
11684 XM
(InteractorType)SH
/Times-Roman SF
18804 XM
(\050which will be one of the specific)
247 W( types described in section 6, such as)246 W
10 /Courier AF
6120 31493 MT
(button-interactor, menu-interactor, etc.)108 W
11 /Times-Roman AF
31102 XM
(The slots and values are the other)
108 W( parameters to)109 W
6120 32689 MT
(the new interactor, as described in the rest of this manual.  The create-instance call returns the interactor.)SH
8 /Courier AF
8040 35339 MT
(opal:Destroy)SH
/Times-Italic SF
14280 XM
(an-interactor)SH
/Courier SF
19024 XM
(&optional \050)SH
/Times-Italic SF
(erase)SH
/Courier SF
26516 XM
(T\051)SH
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
8040 37069 MT
(opal:Destroy)SH
/Times-Italic SF
14280 XM
(an-interactor-window)SH
/Courier SF
47597 XM
([)SH
/Times-Italic SF
(Method)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 41229 MT
(Invoking this method destroys an interactor or window.  If)82 W
/Times-Italic SF
32937 XM
(erase)SH
/Times-Roman SF
35675 XM
(is T, then the interactor is aborted and)81 W
6120 42425 MT
(deallocated. If)379 W
/Times-Italic SF
13116 XM
(erase)SH
/Times-Roman SF
15825 XM
(is NIL, it is just destroyed.  Use NIL when)
52 W( the window the interactor is in is going)53 W
6120 43621 MT
(to be destroyed)
52 W( anyway.  Normally, it is not necessary to call this on interactors since they are destroyed)51 W
6120 44817 MT
(automatically when the window they are associated with is destroyed.)SH
6120 47115 MT
(Invoking this method on a window destroys the window,)
110 W( all objects in it, and all interactors associated)111 W
6120 48311 MT
(with it.)SH
14 /Times-Bold AF
6120 52129 MT
(3.2. Continuous)SH
11 /Times-Roman AF
6120 53325 MT
(Interactors can either be)140 W
/Times-Italic SF
17550 XM
(continuous)SH
/Times-Roman SF
22793 XM
(or not.  A continuous interactor operates between a)
140 W( start and stop)139 W
6120 54521 MT
(event. For)
511 W( example, a Move-Grow interactor might start)
118 W( the object following the mouse when the left)119 W
6120 55717 MT
(button goes down, and continue to move the object until the button is released.  When the button is)183 W
6120 56913 MT
(released, the interactor will stop, and the object will)
64 W( stay in the final place.  Similarly, a menu interactor)65 W
6120 58109 MT
(can be continuous to show the current selection while the)
180 W( mouse is moving, but only make the final)179 W
6120 59305 MT
(selection and do the associated action when the button is released.)SH
6120 61603 MT
(The programmer might want other interactors to operate)
122 W( only once at the time the start-event happens.)123 W
6120 62799 MT
(For example, a non-continuous)203 W
10 /Courier AF
20893 XM
(Button-Interactor)SH
11 /Times-Roman AF
31571 XM
(can be used to)
203 W( execute some action when the)202 W
10 /Courier AF
6120 63995 MT
(delete)SH
11 /Times-Roman AF
9995 XM
(key is hit on the keyboard.)SH
6120 66293 MT
(The)SH
10 /Courier AF
8152 XM
(:continuous)SH
11 /Times-Roman AF
15074 XM
(slot of)
47 W( an interactor controls whether the interactor is continuous or not.  The default)48 W
6120 67489 MT
(is T.)SH
6120 69787 MT
(Many interactors will do reasonable things for both values of)39 W
10 /Courier AF
33635 XM
(:continuous)SH
11 /Times-Roman AF
(. For)
351 W( example, a continuous)38 W
10 /Courier AF
6120 70983 MT
(button-interactor)SH
11 /Times-Roman AF
16631 XM
(would allow allow)
36 W( the user to press down on the graphical button, and then move)37 W
ES
%%Page: 227 8
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.4)
SH( Events)1800 W
51386 XM
(Page 227)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(the mouse around.  It would)
118 W( only execute the action if the mouse button is released over the graphical)117 W
8280 9151 MT
(button. This)
299 W( is the way Macintosh buttons work.  A non-continuous button would simply execute as)
12 W( soon)13 W
8280 10347 MT
(as the mouse-button was hit over the graphical button, and not wait for the release.)SH
14 /Times-Bold AF
8280 14165 MT
(3.3. Feedback)SH
11 /Times-Roman AF
8280 15361 MT
(When an interactor is continuous, there is usually some feedback to show the user what is happening.)
7 W( For)287 W
8280 16557 MT
(example, when an object is being moved with the mouse, the object usually moves around)
57 W( following the)58 W
8280 17753 MT
(mouse. Sometimes,)
279 W( it is desirable that the actual object not move, but rather)
2 W( that a special)1 W
/Times-Italic SF
48208 XM
(feedback object)1 W
/Times-Roman SF
8280 18949 MT
(follows the mouse, and then the real object moves only when the interaction is complete.)SH
8280 21247 MT
(The interactors support this through the use of the)15 W
10 /Courier AF
30625 XM
(:feedback-obj)SH
11 /Times-Roman AF
38716 XM
(slot. If)
307 W( a graphical object is supplied)16 W
8280 22443 MT
(as the value of this slot, then the interactor will modify this object while it)
6 W( is running, and only modify the)5 W
8280 23639 MT
(``real'' object when the interaction is complete \050section 3.5 discusses how)
41 W( the interactor finds the ``real'')42 W
8280 24835 MT
(object\051. If)
521 W( no value is supplied in this slot \050or if NIL is specified\051, then the interactor will modify the)122 W
8280 26031 MT
(actual object)
130 W( while it is running.  In either case, the operation can still be aborted, since the interactor)131 W
8280 27227 MT
(saves enough state to return the objects to their initial configuration if the user requests an abort.)SH
8280 29525 MT
(Typically, the feedback object will need the same kinds of constraints as the real object, in order to follow)7 W
8280 30721 MT
(the mouse.  For example, a)
53 W( feedback object for a)54 W
10 /Courier AF
30499 XM
(Move-Grow-Interactor)SH
11 /Times-Roman AF
42828 XM
(would need formulas to the)54 W
10 /Courier AF
8280 31917 MT
(:box)SH
11 /Times-Roman AF
11010 XM
(slot. The)
385 W( sections on the various specific interactors discuss the slots that the interactors set in)
55 W( the)54 W
8280 33113 MT
(feedback and real objects.)SH
14 /Times-Bold AF
8280 36931 MT
(3.4. Events)SH
11 /Times-Roman AF
8280 38127 MT
(An interactor will start)
62 W( running when its)63 W
/Times-Italic SF
26651 XM
(start event)63 W
/Times-Roman SF
31665 XM
(occurs and continue to run until a)63 W
/Times-Italic SF
47105 XM
(stop event)63 W
/Times-Roman SF
51935 XM
(occurs.)SH
8280 39323 MT
(There may also be an)75 W
/Times-Italic SF
18336 XM
(abort event)75 W
/Times-Roman SF
23740 XM
(that will prematurely cause it to exit and restore the status as if it had)74 W
8280 40519 MT
(not started.)SH
8280 42817 MT
(An ``event'' is usually a transition of a mouse button or keyboard)
195 W( key.  Interactors provide a lot of)196 W
8280 44013 MT
(flexibility as to the kinds of events that can be used for start, stop and abort.)SH
12 /Times-Bold AF
8280 47697 MT
(3.4.1. Keyboard and Mouse Events)SH
11 /Times-Roman AF
8280 48893 MT
(Events can be a mouse button down or)
131 W( up transition, or any keyboard key.  The names for the mouse)130 W
8280 50089 MT
(buttons are)165 W
10 /Courier AF
13742 XM
(:leftdown)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
19857 XM
(:middledown)SH
11 /Times-Roman AF
(, and)165 W
10 /Courier AF
29200 XM
(:rightdown)SH
11 /Times-Roman AF
35640 XM
(\050simulating multiple)
165 W( mouse buttons on the)166 W
8280 51285 MT
(Mac is discussed in section 3.4.2\051.)
104 W( Keyboard)
482 W( keys are named by their CommonLisp character, such as)103 W
10 /Courier AF
8280 52481 MT
(#\134g)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
10630 XM
(#\134a)SH
11 /Times-Roman AF
(, etc.  Note that)SH
10 /Courier AF
19425 XM
(#\134g)SH
11 /Times-Roman AF
21500 XM
(is lower-case "g" and)SH
10 /Courier AF
31132 XM
(#\134G)SH
11 /Times-Roman AF
33207 XM
(is upper case "G" \050shift-g\051.)SH
8280 54779 MT
(When specifying shift keys on keyboard events, it is important to be careful about the "\134".  For)
57 W( example,)58 W
10 /Courier AF
8280 55975 MT
(:control-g)SH
11 /Times-Roman AF
14611 XM
(is)SH
/Times-Italic SF
15675 XM
(upper)SH
/Times-Roman SF
18571 XM
(case "G" and)55 W
10 /Courier AF
24733 XM
(:control-\134g)SH
11 /Times-Roman AF
31663 XM
(is)SH
/Times-Italic SF
32727 XM
(lower)SH
/Times-Roman SF
35563 XM
(case "g" \050note the extra "\134"\051.  You may also)55 W
8280 57171 MT
(use the form)52 W
10 /Courier AF
14210 XM
(:|CONTROL-g|)SH
11 /Times-Roman AF
(, which is equivalent to)53 W
10 /Courier AF
32185 XM
(:control-\134g)SH
11 /Times-Roman AF
39113 XM
(\050when using vertical bars, you must)53 W
8280 58367 MT
(put the CONTROL in upper-case\051.  It is not legal to use the)SH
10 /Courier AF
34674 XM
(shift)SH
11 /Times-Roman AF
37949 XM
(modifier with keyboard keys.)SH
8280 60665 MT
(Events can also be specified in a more generic manner using)194 W
10 /Courier AF
37261 XM
(:any-leftdown)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
45805 XM
(:any-middledown)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 61861 MT
(:any-rightdown)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
18711 XM
(:any-leftup)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
27342 XM
(:any-middleup)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
37173 XM
(:any-rightup)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
46405 XM
(:any-mousedown)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 63057 MT
(:any-mouseup)SH
11 /Times-Roman AF
(, and)114 W
10 /Courier AF
18121 XM
(:any-keyboard)SH
11 /Times-Roman AF
(. For)
503 W( these, the event will be)
114 W( accepted no matter what modifier)113 W
8280 64253 MT
(keys are down.)SH
12 /Times-Bold AF
8280 67937 MT
(3.4.2. "Middledown" and "Rightdown" on the Mac)SH
11 /Times-Roman AF
8280 69133 MT
(To simulate the three-button mouse on the Macintosh, we use keyboard)
47 W( keys in place of the buttons.  By)48 W
8280 70329 MT
(default, the keys are)69 W
10 /Courier AF
17687 XM
(F13)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
20106 XM
(F14)SH
11 /Times-Roman AF
(, and)69 W
10 /Courier AF
24457 XM
(F15)SH
11 /Times-Roman AF
26600 XM
(for the left, middle, and right mouse buttons, respectively.  The)68 W
8280 71525 MT
(real mouse button is also mapped to)75 W
10 /Courier AF
24906 XM
(:leftdown)SH
11 /Times-Roman AF
(, so you can specify mouse events as usual on the)
75 W( Mac)76 W
ES
%%Page: 228 9
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 228)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(\050e.g.,)SH
10 /Courier AF
8798 XM
(:rightdown)SH
11 /Times-Roman AF
(\051. The)
623 W( Overview section at the beginning of this)
174 W( manual provides instructions for)173 W
6120 9151 MT
(customizing the keys that simulate the mouse)
125 W( buttons, and provides instructions for a small utility that)126 W
6120 10347 MT
(changes the keys to be used from function keys to arrow keys.)SH
12 /Times-Bold AF
6120 14031 MT
(3.4.3. Modifiers \050Shift, Control, Meta\051)SH
11 /Times-Roman AF
6120 15227 MT
(Various modifier keys can be specified for the event.  The valid)
13 W( prefixes are)12 W
10 /Courier AF
40046 XM
(shift)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
43608 XM
(control)SH
11 /Times-Roman AF
(, and)12 W
10 /Courier AF
50245 XM
(meta)SH
11 /Times-Roman AF
(.)SH
6120 16423 MT
(For example,)1 W
10 /Courier AF
12201 XM
(:control-meta-leftdown)SH
11 /Times-Roman AF
25677 XM
(will only be true when the left mouse button goes down while)2 W
6120 17619 MT
(both the Control and Meta keys are held down.  When using a)
481 W( conglomerate keyword like)480 W
10 /Courier AF
6120 18815 MT
(:shift-meta-middleup)SH
11 /Times-Roman AF
(, the order in)
49 W( which the prefixes are listed matters.  The required order for the)50 W
6120 20011 MT
(prefixes is:)536 W
10 /Courier AF
12324 XM
(shift, control, meta)536 W
11 /Times-Roman AF
(. For)
1347 W( instance,)536 W
10 /Courier AF
34322 XM
(:shift-control-leftdown)SH
11 /Times-Roman AF
48932 XM
(is legal;)535 W
10 /Courier AF
6120 21207 MT
(:control-shift-leftdown)SH
11 /Times-Roman AF
20195 XM
(is not.)SH
6120 23505 MT
(As with MCL itself, the Option key is the "Meta" modifier on the Mac.)
98 W( There)
472 W( is no way to access the)99 W
6120 24701 MT
(Mac's Command key through Garnet.)SH
12 /Times-Bold AF
6120 28385 MT
(3.4.4. Window Enter and Leave Events)SH
11 /Times-Roman AF
6120 29581 MT
(Sometimes it is useful to know when the cursor is inside the window.  Garnet has the ability to)
61 W( generate)60 W
6120 30777 MT
(events when the)
595 W( cursor enters and leaves a window.  To enable this, you must set the)596 W
10 /Courier AF
6120 31973 MT
(:want-enter-leave-events)SH
11 /Times-Roman AF
20817 XM
(slot of the)
22 W( window to T)21 W
/Times-Italic SF
31517 XM
(at window creation time)21 W
/Times-Roman SF
(. Changing)
317 W( the value of)21 W
6120 33169 MT
(this slot after the window has been created will not necessarily work.  If the window has)
119 W( this value as)120 W
6120 34365 MT
(non-NIL, then when the cursor enters the window, a special event called)255 W
10 /Courier AF
41310 XM
(:window-enter)SH
11 /Times-Roman AF
49640 XM
(will be)255 W
6120 35561 MT
(generated, and when the cursor exits,)124 W
10 /Courier AF
23478 XM
(:window-leave)SH
11 /Times-Roman AF
31677 XM
(will be generated.  For example, the following)124 W
6120 36757 MT
(will change the color of the window to red whenever the cursor is inside the window:)SH
8 /Courier AF
8040 37922 MT
(\050create-instance 'MY-WIN inter:interactor-window)SH
9000 38787 MT
(\050:want-enter-leave-events T\051)SH
9000 39652 MT
(\050:aggregate \050create-instance NIL opal:aggregate\051\051\051)SH
8040 40517 MT
(\050opal:update MY-WIN\051)SH
8040 42247 MT
(\050create-instance 'SHOW-ENTER-LEAVE inter:button-interactor)SH
9000 43112 MT
(\050:start-event '\050:window-enter :window-leave\051\051)SH
9000 43977 MT
(\050:window MY-WIN\051)SH
9000 44842 MT
(\050:continuous NIL\051)SH
9000 45707 MT
(\050:start-where T\051)SH
9000 46572 MT
(\050:final-function #'\050lambda\050inter obj\051)SH
19080 47437 MT
(\050declare \050ignore obj\051\051)SH
19080 48302 MT
(\050s-value \050gv inter :window\051)SH
23400 49167 MT
(:background-color)SH
/Times-Italic SF
23400 50032 MT
(; :start-char is described in section 8.5)SH
/Courier SF
23400 50897 MT
(\050if \050eq :window-enter \050gv inter :start-char\051\051)SH
25320 51762 MT
(opal:red)SH
25320 52627 MT
(opal:white\051\051\051\051\051)SH
12 /Times-Bold AF
6120 56311 MT
(3.4.5. Double-Clicking)SH
11 /Times-Roman AF
6120 57507 MT
(Garnet also supports double-clicking of the mouse buttons.  When the)
1111 W( variable)1110 W
10 /Courier AF
6120 58703 MT
(inter:*Double-Click-Time*)SH
11 /Times-Roman AF
21534 XM
(has a non-NIL value, then it is)
139 W( the time in milleseconds of how fast)140 W
6120 59899 MT
(clicks must be)
114 W( to be considered double-clicking.  By default, double clicking is enabled with a time of)113 W
6120 61095 MT
(250 milleseconds.  When the user double-clicks, Garnet first reports the first press and release, and then a)22 W
10 /Courier AF
6120 62291 MT
(:double-xxx)SH
11 /Times-Roman AF
13192 XM
(press and then a)196 W
/Times-Italic SF
21306 XM
(regular)SH
/Times-Roman SF
25077 XM
(release. For)
667 W( example, the events that will be reported on a)196 W
6120 63487 MT
(double-click of the)
114 W( left button are:)115 W
10 /Courier AF
22142 XM
(:leftdown :leftup :double-leftdown :leftup)115 W
11 /Times-Roman AF
(. Note)
505 W( that)115 W
6120 64683 MT
(the normal)29 W
10 /Courier AF
11188 XM
(-up)SH
11 /Times-Roman AF
13292 XM
(events are used.  You can use the normal)29 W
10 /Courier AF
31817 XM
(:shift, :control,)29 W
11 /Times-Roman AF
42350 XM
(and)SH
10 /Courier AF
44242 XM
(:meta)SH
11 /Times-Roman AF
47545 XM
(modifiers in)28 W
6120 65879 MT
(the usual order, before the)99 W
10 /Courier AF
18403 XM
(double-)SH
11 /Times-Roman AF
(. For)
475 W( example:)100 W
10 /Courier AF
29938 XM
(:shift-control-double-middledown)SH
11 /Times-Roman AF
(. If)
475 W( you)100 W
6120 67075 MT
(specify the start-event of a)
17 W( continuous interactor to use a)16 W
10 /Courier AF
31452 XM
(:double-)SH
11 /Times-Roman AF
36543 XM
(form, then the correct stop event will)16 W
6120 68271 MT
(be generated automatically.  If you have both single and double)
164 W( click interactors, then you should be)165 W
6120 69467 MT
(careful that it is OK for the single click one to run before the double-click one.)SH
6120 71765 MT
(If you want to handle triple-clicks, quadruple-clicks, etc.,)
180 W( then you have to count the clicks yourself.)179 W
ES
%%Page: 229 10
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.5)
SH( Values)
1800 W( for the ``Where'' slots)SH
51386 XM
(Page 229)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Garnet will continue to return)22 W
10 /Courier AF
21739 XM
(:double-xxx)SH
11 /Times-Roman AF
28636 XM
(as long as the clicks are fast enough.)
22 W( When)
321 W( the user pauses)23 W
8280 9151 MT
(too long, there will be a regular)124 W
10 /Courier AF
23260 XM
(:xxxdown)SH
11 /Times-Roman AF
28459 XM
(in between.  Therefore, for triple click, the events will be:)124 W
10 /Courier AF
8280 10347 MT
(:leftdown, :leftup, :double-leftdown, :leftup, :double-leftdown, :leftup)720 W
11 /Times-Roman AF
8280 11543 MT
(whereas for double-click-pause-click, the events will be:)456 W
10 /Courier AF
37369 XM
(:leftdown, :leftup,)
456 W( :double-)455 W
8280 12739 MT
(leftdown, :leftup, :leftdown, :leftup)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 16423 MT
(3.4.6. Function Keys, Arrows Keys, and Others)SH
11 /Times-Roman AF
8280 17619 MT
(The various special keys on the keyboard use special)
160 W( keywords.  For example,)161 W
10 /Courier AF
45094 XM
(:uparrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
50605 XM
(:delete)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 18815 MT
(:F9)SH
11 /Times-Roman AF
(, etc.  The prefixes are added in the same way as for mouse buttons \050e.g.,)20 W
10 /Courier AF
42683 XM
(:control-F3)SH
11 /Times-Roman AF
(\051. The)
313 W( arrow)19 W
8280 20011 MT
(keys are almost always named)23 W
10 /Courier AF
22048 XM
(:uparrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
27421 XM
(:downarrow)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
33994 XM
(:leftarrow)SH
11 /Times-Roman AF
(, and)23 W
10 /Courier AF
42453 XM
(:rightarrow)SH
11 /Times-Roman AF
49352 XM
(\050and so there)24 W
8280 21207 MT
(are no bindings for)94 W
10 /Courier AF
17270 XM
(:R8)SH
11 /Times-Roman AF
19439 XM
(\050uparrow\051,)SH
10 /Courier AF
24478 XM
(:R10)SH
11 /Times-Roman AF
27246 XM
(\050leftarrow\051,)SH
10 /Courier AF
32651 XM
(:R12)SH
11 /Times-Roman AF
35419 XM
(\050rightarrow\051, and)93 W
10 /Courier AF
43392 XM
(:R14)SH
11 /Times-Roman AF
46160 XM
(\050downarrow\051 on the)93 W
8280 22403 MT
(Sun keyboard\051.  On the Mac, some users prefer to change their arrow keys to generate mouse events \050see)38 W
8280 23599 MT
(section 3.4.2\051.  To see what the)
452 W( Lisp character is for an event, turn on event tracing using)451 W
10 /Courier AF
8280 24795 MT
(\050Inter:Trace-Inter :event\051)55 W
11 /Times-Roman AF
24265 XM
(and then type the key in some)
55 W( interactor window, as described in the)56 W
8280 25991 MT
(Garnet Debugging Manual.  If you have keys on your keyboard that are not handled)
44 W( by Garnet, it is easy)43 W
8280 27187 MT
(to add them.  See the section on ``Keyboard Keys'' in the Overview Manual, and then please send the)109 W
8280 28383 MT
(bindings to)SH
10 /Courier AF
13476 XM
(garnet@cs.cmu.edu)SH
11 /Times-Roman AF
23951 XM
(so we can add them to future versions of Garnet.)SH
8280 30681 MT
(You can)
78 W( control whether Garnet raises an error when an undefined keyboard key is hit.  The default for)77 W
10 /Courier AF
8280 31877 MT
(inter::*ignore-undefined-keys*)SH
11 /Times-Roman AF
26639 XM
(is T, which means that the)
84 W( keys are simply ignored.  If you set)85 W
8280 33073 MT
(this variable to NIL, then an error will be raised if you hit a key with no definition.)SH
12 /Times-Bold AF
8280 36757 MT
(3.4.7. Multiple Events)SH
11 /Times-Roman AF
8280 37953 MT
(The event specification can also be)
33 W( a set of events, with an optional exception list.  In this case, the event)32 W
8280 39149 MT
(descriptor is a list, rather than a single event.  If there are exceptions, these should be at the end of the)
21 W( list)22 W
8280 40345 MT
(after the keyword)29 W
10 /Courier AF
16398 XM
(:except)SH
11 /Times-Roman AF
(. For)
333 W( example,)
29 W( the following lists are legal values when an event is called for)28 W
8280 41541 MT
(\050as in the)SH
10 /Courier AF
12587 XM
(:start-event)SH
11 /Times-Roman AF
20062 XM
(slot\051:)SH
8 /Courier AF
11640 42706 MT
(\050:any-leftdown :any-rightdown\051)SH
11640 43571 MT
(\050:any-mousedown #\134RETURN\051)
SH( ;;)960 W
/Times-Italic SF
(any mouse button down or the RETURN key)SH
/Courier SF
11640 44436 MT
(\050:any-mousedown :except :leftdown :shift-leftdown\051)SH
11640 45301 MT
(\050:any-keyboard :any-rightdown :except #\134b #\134a #\134r\051)SH
12 /Times-Bold AF
8280 48985 MT
(3.4.8. Special Values T and NIL)SH
11 /Times-Roman AF
8280 50181 MT
(Finally, the event specification can be T or NIL.)
212 W( T)
700 W( matches any event and NIL matches no event.)213 W
8280 51377 MT
(Therefore, if NIL is used for the)46 W
10 /Courier AF
23016 XM
(:start-event)SH
11 /Times-Roman AF
(, then the interactor will never start by itself \050which)
46 W( can)45 W
8280 52573 MT
(be useful for interactors that are explicitly started by a programmer\051.  If T is used for)
11 W( the)12 W
10 /Courier AF
47605 XM
(:start-event)SH
11 /Times-Roman AF
(,)SH
8280 53769 MT
(the interactor will start immediately when it is)
148 W( created, rather than waiting for an event.  Similarly, if)147 W
10 /Courier AF
8280 54965 MT
(stop-event)SH
11 /Times-Roman AF
14555 XM
(is NIL, the interactor will never stop by itself.)SH
14 /Times-Bold AF
8280 58783 MT
(3.5. Values for the ``Where'' slots)SH
12 SS 
8280 62467 MT
(3.5.1. Introduction)SH
11 /Times-Roman AF
8280 63663 MT
(In addition to)
53 W( specifying what events cause interactors to start and stop, you must also specify)54 W
/Times-Italic SF
50719 XM
(where)SH
/Times-Roman SF
53736 XM
(the)SH
8280 64859 MT
(mouse should)
38 W( be when the interaction starts using the slot)37 W
10 /Courier AF
34315 XM
(:start-where)SH
11 /Times-Roman AF
(. The)
349 W( format for the ``where'')37 W
8280 66055 MT
(arguments is usually a list with a keyword at the front, and an object afterwards.  For example,)140 W
10 /Courier AF
52680 XM
(\050:in)SH
8280 67251 MT
(myrect\051)SH
11 /Times-Roman AF
(. These)
275 W( lists can be conveniently created either using)SH
10 /Courier AF
36213 XM
(list)SH
11 /Times-Roman AF
38888 XM
(or back-quote:)SH
8 /Courier AF
10200 68416 MT
(\050:start-where \050list :in MYRECT\051\051)SH
10200 69281 MT
(\050:start-where `\050:in ,MYRECT\051\051)SH
11 /Times-Roman AF
8280 70702 MT
(For the backquote version, be sure to put a comma before the object names.)SH
ES
%%Page: 230 11
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 230)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The ``where'' specification often serves two purposes:)
71 W( it specifies where the interaction should start and)70 W
6120 9151 MT
(what object the interaction should work on.)SH
6120 11449 MT
(Unlike some other systems, the Interactors in Garnet will work on any of a set of objects.  For example,)
23 W( a)24 W
6120 12645 MT
(single menu interactor will handle all the items of the menu, and a)
55 W( moving interactor will move any of a)54 W
6120 13841 MT
(set of objects.  Typically, the object to be operated on is chosen by the user when the)
26 W( start event happens.)27 W
6120 15037 MT
(For example, the move interactor may move the object that the mouse is pressed down over.)
102 W( This)
478 W( one)101 W
6120 16233 MT
(object continues to move until the mouse is released.)SH
6120 18531 MT
(Some of the interactors have an optional parameter called)114 W
10 /Courier AF
32771 XM
(:obj-to-change)SH
11 /Times-Roman AF
(, where you)
114 W( can specify a)115 W
6120 19727 MT
(different object to operate on than the one returned by the)SH
10 /Courier AF
31745 XM
(:start-where)SH
11 /Times-Roman AF
39220 XM
(specification.)SH
6120 22025 MT
(One thing to be careful about is that some)
89 W( slots of the)88 W
/Times-Italic SF
30952 XM
(graphical objects themselves)88 W
/Times-Roman SF
44199 XM
(affect how they are)88 W
6120 23221 MT
(picked, in particular,)
148 W( the)149 W
10 /Courier AF
17710 XM
(:hit-threshold)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
26809 XM
(:select-outline-only)SH
11 /Times-Roman AF
(, and)149 W
10 /Courier AF
41520 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
6120 24417 MT
(slots. See)
275 W( section 3.5.9.)SH
12 /Times-Bold AF
6120 28101 MT
(3.5.2. Running-where)SH
11 /Times-Roman AF
6120 29297 MT
(There are actually two ``where'' arguments to each interactor.  One is the)
55 W( place where the mouse should)54 W
6120 30493 MT
(be for the interaction to start \050)327 W
10 /Courier AF
(:start-where)SH
11 /Times-Roman AF
(\051. The)
930 W( other is the active area for the interaction)328 W
6120 31689 MT
(\050)SH
10 /Courier AF
(:running-where)SH
11 /Times-Roman AF
(\051. The)
371 W( default value for)
48 W( the running-where slot is usually the same as the start-where)47 W
6120 32885 MT
(slot. As)
487 W( an example)
106 W( of when you might want them to be different, with an object that moves with the)107 W
6120 34081 MT
(mouse, you might want to start moving when)
148 W( the press was over the object itself \050so)147 W
10 /Courier AF
45720 XM
(:start-where)SH
11 /Times-Roman AF
6120 35277 MT
(might be)114 W
10 /Courier AF
10504 XM
(\050:in MY-OBJ\051)114 W
11 /Times-Roman AF
(\051 but continue)
114 W( moving while the mouse is anywhere over the background \050so)115 W
10 /Courier AF
6120 36473 MT
(:running-where)SH
11 /Times-Roman AF
14795 XM
(might be)SH
10 /Courier AF
18951 XM
(\050:in MY-BACKGROUND-OBJ\051)SH
11 /Times-Roman AF
(\051.)SH
12 /Times-Bold AF
6120 40157 MT
(3.5.3. Kinds of ``where'')SH
11 /Times-Roman AF
6120 41353 MT
(There are a few basic kinds of ``where'' values.)SH
/Times-Bold SF
8620 43304 MT
(Single object)SH
/Times-Roman SF
(: These operate on a single object and check if the mouse is inside of it.)SH
/Times-Bold SF
8620 44999 MT
(Element of an aggregate)80 W
/Times-Roman SF
(: These check if the object is an element of an aggregate.  Aggregadgets)79 W
9720 46195 MT
(and Aggrelists will also work since they are subclasses of aggregate.)SH
/Times-Bold SF
8620 47890 MT
(Element of a list)SH
/Times-Roman SF
(: The list is stored as the value of a slot of some object.)SH
6120 50188 MT
(The last two kinds have a number of varieties:)SH
/Times-Bold SF
8620 52139 MT
(Immediate child vs. leaf)84 W
/Times-Roman SF
(: Sometimes it is)
84 W( convenient to ask if the mouse is over a ``leaf'' object.)85 W
9720 53335 MT
(This is one of the basic types \050rectangle, line, etc.\051.)
192 W( This)
658 W( is useful because aggregates often)191 W
9720 54531 MT
(contain extra white-space \050the bounding box of an aggregate includes all of)
90 W( its children, and all)91 W
9720 55727 MT
(the space in between\051.  Asking for the mouse to be over)
62 W( a leaf insures that the mouse is actually)61 W
9720 56923 MT
(over a visible object.)SH
/Times-Bold SF
8620 58618 MT
(Return immediate child or leaf)100 W
/Times-Roman SF
(: If you want the user to have to press on a leaf object,)
100 W( you may)101 W
9720 59814 MT
(still want the interactor)
98 W( to operate on the top level object.  Suppose that the movable objects in)97 W
9720 61010 MT
(your system are aggregates containing a line with an arrowhead and a label.  The user must)
33 W( press)34 W
9720 62206 MT
(on one of the objects directly)
236 W( \050so you want leaf\051, but the interactor should move the entire)235 W
9720 63402 MT
(aggregate, not just the line.  In this)
44 W( case, you would use one of the forms that checks the leaf but)45 W
9720 64598 MT
(returns the element.)SH
/Times-Bold SF
8620 66293 MT
(Or none)44 W
/Times-Roman SF
(. Sometimes,)
363 W( you might)
44 W( want to know when the user presses over no objects, for example)43 W
9720 67489 MT
(to turn off selection.  The ``or-none'' option returns the object normally if you press on it, but if)58 W
9720 68685 MT
(you press on no object, then it returns the special value)SH
10 /Courier AF
34158 XM
(:none)SH
11 /Times-Roman AF
(.)SH
6120 70983 MT
(Finally, there is a)SH
/Times-Bold SF
14033 XM
(custom)SH
/Times-Roman SF
17668 XM
(method that allows you to specify your own procedure to use.)SH
ES
%%Page: 231 12
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.5)
SH( Values)
1800 W( for the ``Where'' slots)SH
51386 XM
(Page 231)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.5.4. Type Parameter)SH
11 /Times-Roman AF
8280 9200 MT
(After the specification of the object, an optional)261 W
10 /Courier AF
31719 XM
(:type)SH
11 /Times-Roman AF
35255 XM
(parameter allows)
261 W( the objects to be further)260 W
8280 10396 MT
(discriminated by type.  For example, you can look)
407 W( for only the)408 W
10 /Courier AF
40968 XM
(line)SH
11 /Times-Roman AF
(s in an aggregate using)408 W
10 /Courier AF
8280 11592 MT
(`\050:element-of ,MYAGG :type ,opal:line\051)SH
11 /Times-Roman AF
(. Note)
275 W( the comma in front of)SH
10 /Courier AF
44185 XM
(opal:line)SH
11 /Times-Roman AF
(.)SH
8280 13890 MT
(The type parameter can either be a single type, as shown above, or a list)
34 W( of types.  In this case, the object)33 W
8280 15086 MT
(must be one of the types listed \050the ``or'' of the types\051.  For example)SH
8 /Courier AF
10200 16251 MT
(`\050:element-of ,MYAGG :type \050,opal:circle ,opal:rectangle\051\051)SH
11 /Times-Roman AF
8280 17672 MT
(will match any element of)SH
10 /Courier AF
20041 XM
(myagg)SH
11 /Times-Roman AF
23316 XM
(that is either a circle or a rectangle.)SH
8280 19970 MT
(Normally, the)104 W
10 /Courier AF
14874 XM
(leaf)SH
11 /Times-Roman AF
17654 XM
(versions of the functions below only return primitive \050leaf\051 elements.  However, if)105 W
8280 21166 MT
(the)SH
10 /Courier AF
9900 XM
(:type)SH
11 /Times-Roman AF
13176 XM
(parameter is given and it matches an interior \050aggregate\051 object, then that object is checked and)SH
8280 22362 MT
(returned instead of a leaf.  For example, if an object is defined as follows:)SH
8 /Courier AF
10200 23527 MT
(\050create-instance 'MYAGGTYPE opal:aggregate\051)SH
10200 25257 MT
(\050create-instance 'TOP-AGG opal:aggregate\051)SH
10200 26987 MT
(\050create-instance 'A1 MYAGGTYPE\051)SH
10200 27852 MT
(\050create-instance 'A2 MYAGGTYPE\051)SH
10200 28717 MT
(\050opal:add-components TOP-AGG A1 A2\051)SH
10200 30447 MT
(;;)SH
/Times-Italic SF
(now add some things to A1 and A2)SH
11 /Times-Roman AF
8280 31868 MT
(Then, the description)161 W
10 /Courier AF
18355 XM
(\050:leaf-element-of ,TOP-AGG :type ,MYAGGTYPE\051)162 W
11 /Times-Roman AF
45678 XM
(will return)162 W
10 /Courier AF
50890 XM
(A1)SH
11 /Times-Roman AF
52527 XM
(or)SH
10 /Courier AF
53880 XM
(A2)SH
11 /Times-Roman AF
8280 33064 MT
(rather than the leaf elements of)SH
10 /Courier AF
22206 XM
(A1)SH
11 /Times-Roman AF
23681 XM
(or)SH
10 /Courier AF
24872 XM
(A2)SH
11 /Times-Roman AF
(.)SH
8280 35362 MT
(Another way to prevent the search from going all the way to the actual leaf objects is to set)
272 W( the)271 W
10 /Courier AF
8280 36558 MT
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
20058 XM
(slot of an intermediate object.  Note that the)103 W
10 /Courier AF
40598 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
52377 XM
(slot is)104 W
8280 37754 MT
(set in the Opal objects, not in the interactor, and it is more fully explained in the Opal manual.)SH
12 /Times-Bold AF
8280 41438 MT
(3.5.5. Custom)SH
11 /Times-Roman AF
8280 42634 MT
(The)SH
10 /Courier AF
10350 XM
(:custom)SH
11 /Times-Roman AF
14910 XM
(option for the)85 W
10 /Courier AF
21428 XM
(:start-where)SH
11 /Times-Roman AF
28988 XM
(field can be used to set up your)
85 W( own search method.  The)84 W
8280 43830 MT
(format is:)SH
8 /Courier AF
13560 44995 MT
(\050list :custom obj #'function-name arg1 arg2 ...\051)SH
11 /Times-Roman AF
8280 46416 MT
(There can be any number of arguments supplied, even zero.)
7 W( The)
290 W( function specified is then called for each)8 W
8280 47612 MT
(event that passes the event test.  The calling sequence for the function is:)SH
8 /Courier AF
14040 48777 MT
(\050lambda \050obj an-interactor event arg1 arg2 ...\051\051)SH
11 /Times-Roman AF
8280 51075 MT
(The arguments are the values in the)179 W
10 /Courier AF
25446 XM
(-where)SH
11 /Times-Roman AF
29500 XM
(list, along with the)
179 W( interactor itself, and an event.  The)178 W
10 /Courier AF
8280 52271 MT
(event)SH
11 /Times-Roman AF
11654 XM
(is a Garnet event structure, defined in section 8.3.  This function should return NIL if the event)100 W
8280 53467 MT
(does not pass \050e.g., if)
10 W( it is outside the object\051, or else the object that the interactor should start over \050which)9 W
8280 54663 MT
(will usually be obj itself or some child)
362 W( of obj\051.  The implementor of this function should call)363 W
10 /Courier AF
8280 55859 MT
(opal:point-to-leaf)SH
11 /Times-Roman AF
(, or whatever other method is desired.)
159 W( The)
591 W( function is also required to check)158 W
8280 57055 MT
(whether the event occurred in the same window as the object.)SH
8280 59353 MT
(For example, if the interactor is in an aggregadget,)
52 W( and we need a custom checking function which takes)53 W
8280 60549 MT
(the aggregadget and a special parameter accessed from the aggregadget, the following could be used:)SH
ES
%%Page: 232 13
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 232)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(;;; First define the testing function)SH
8040 8564 MT
(\050defun Check-If-Mouse-In-Obj \050obj inter event param\051)SH
9000 9429 MT
(\050if \050and \050eq \050gv obj :window\051\050inter:event-window event\051\051)SH
/Times-Italic SF
37320 XM
(; have to check window)SH
/Courier SF
13320 10294 MT
(\050> \050inter:event-x event\051 \050gv obj :left\051\051)SH
13320 11159 MT
(.....\051)SH
10920 12024 MT
(obj ;)480 W
/Times-Italic SF
(then return object)SH
/Courier SF
10920 12889 MT
(NIL\051\051 ;)480 W
/Times-Italic SF
(else return NIL)SH
/Courier SF
8040 14619 MT
(\050create-instance NIL opal:aggregadget)SH
9480 15484 MT
(... ;)SH
/Times-Italic SF
(various fields)SH
/Courier SF
9000 16349 MT
(\050:parameter-val 34\051)SH
9000 17214 MT
(\050:parts `\050\050....\051\051\051)SH
9000 18079 MT
(\050:interactors)SH
9480 18944 MT
(`\050\050:start-it ,Inter:Button-Interactor)SH
12360 19809 MT
(... ;)SH
/Times-Italic SF
(all the usual fields)SH
/Courier SF
12360 20674 MT
(\050:start-where)SH
12840 21539 MT
(,\050o-formula \050list :custom \050gvl :operates-on\051)SH
21480 22404 MT
(#'Check-If-Mouse-In-Obj)SH
21480 23269 MT
(\050gvl :operates-on :parameter-val\051\051\051\051\051\051\051\051)SH
12 /Times-Bold AF
6120 26953 MT
(3.5.6. Full List of Options for Where)SH
11 /Times-Roman AF
6120 28149 MT
(All of the options for the where fields are concatenated together to form long keyword names as follows:)SH
10 /Courier AF
6120 30100 MT
(T)SH
11 /Times-Roman AF
7160 XM
(- anywhere.)
165 W( This)
603 W( always succeeds.  \050The T is not in a list.\051  T for the)164 W
10 /Courier AF
40688 XM
(:start-where)SH
11 /Times-Roman AF
48327 XM
(means the)164 W
9720 31296 MT
(interactor starts whenever the)
148 W( start-event happens, and T for the)149 W
10 /Courier AF
39518 XM
(:running-where)SH
11 /Times-Roman AF
48342 XM
(means the)149 W
9720 32492 MT
(interactor runs until the stop event no matter where the mouse goes.)SH
10 /Courier AF
6120 34187 MT
(NIL)SH
11 /Times-Roman AF
8249 XM
(- nowhere.  This never passes the test.  This is useful)
54 W( for interactors that you want to start explicitly)53 W
9720 35383 MT
(using)SH
10 /Courier AF
12379 XM
(Start-Interactor)SH
11 /Times-Roman AF
22254 XM
(\050section 8.4\051.)SH
10 /Courier AF
6120 37078 MT
(\050:in <obj>\051)67 W
11 /Times-Roman AF
13129 XM
(- inside <obj>.  Sends the)67 W
10 /Courier AF
25068 XM
(point-in-gob)SH
11 /Times-Roman AF
32610 XM
(message to the object to ask if it)
67 W( contains the)68 W
9720 38274 MT
(mouse position.)SH
10 /Courier AF
6120 39969 MT
(\050:in-box <obj>\051)96 W
11 /Times-Roman AF
15587 XM
(- inside the rectangle of <obj>.  This might be different from)95 W
10 /Courier AF
43718 XM
(:in)SH
11 /Times-Roman AF
45888 XM
(the object since)95 W
9720 41165 MT
(some objects have special tests for inside.  For example, lines test for)
61 W( the position to be near the)62 W
9720 42361 MT
(line.)SH
10 /Courier AF
12195 XM
(:In-box)SH
11 /Times-Roman AF
16670 XM
(may also be more efficient than)SH
10 /Courier AF
30842 XM
(:in)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 44056 MT
(\050:in-but-not-on <agg>\051)119 W
11 /Times-Roman AF
19833 XM
(- checks if point is inside the bounding rectangle of)
119 W( <agg>, but not over)118 W
9720 45252 MT
(any of the children of <agg>.)SH
10 /Courier AF
6120 46947 MT
(\050:element-of <agg> [:type <objtype>]\051)176 W
11 /Times-Roman AF
29299 XM
(- over any)
176 W( element of the aggregate <agg>.  If the)177 W
10 /Courier AF
9720 48143 MT
(:type)SH
11 /Times-Roman AF
13166 XM
(keyword is)
171 W( specified, then it searches the components of <agg> for an element of the)170 W
9720 49339 MT
(specified type under the mouse.  This)
189 W( uses the Opal message)190 W
10 /Courier AF
38746 XM
(point-to-component)SH
11 /Times-Roman AF
50011 XM
(on the)190 W
9720 50535 MT
(aggregate.)SH
10 /Courier AF
6120 52230 MT
(\050:leaf-element-of <agg> [:type <objtype>]\051)104 W
11 /Times-Roman AF
32011 XM
(- over any leaf object)
104 W( of the aggregate <agg>.)103 W
9720 53426 MT
(If the)247 W
10 /Courier AF
12840 XM
(:type)SH
11 /Times-Roman AF
16362 XM
(keyword is)
247 W( specified, then it searches down the hierarchy from <agg> for an)248 W
9720 54622 MT
(element of the specified type under the)
35 W( mouse.  This uses the Opal message)34 W
10 /Courier AF
43711 XM
(point-to-leaf)SH
11 /Times-Roman AF
51820 XM
(on)SH
9720 55818 MT
(the aggregate.)SH
10 /Courier AF
6120 57513 MT
(\050:element-of-or-none <agg> [:type <objtype>]\051)150 W
11 /Times-Roman AF
33996 XM
(- This returns a non-NIL value whenever)151 W
9720 58709 MT
(the mouse)
263 W( is over)262 W
10 /Courier AF
18773 XM
(<agg>)SH
11 /Times-Roman AF
(. If)
799 W( there is an object at the mouse, then it is returned \050as with)262 W
10 /Courier AF
9720 59905 MT
(:element-of)SH
11 /Times-Roman AF
(\051. If)
413 W( there is no object, then)
69 W( the special value)70 W
10 /Courier AF
37150 XM
(:none)SH
11 /Times-Roman AF
40495 XM
(is returned.  If the mouse is)70 W
9720 61101 MT
(not over the aggregate, then NIL is returned.)
840 W( This)
1954 W( uses the Opal message)839 W
10 /Courier AF
9720 62297 MT
(point-to-component)SH
11 /Times-Roman AF
20795 XM
(on the aggregate.)SH
10 /Courier AF
6120 63992 MT
(\050:leaf-element-of-or-none <agg> [:type)
234 W( <objtype>]\051)235 W
11 /Times-Roman AF
37843 XM
(- Like)235 W
10 /Courier AF
41245 XM
(:element-of-or-none)SH
11 /Times-Roman AF
(,)SH
9720 65188 MT
(except it returns leaf children like)2 W
10 /Courier AF
24820 XM
(:leaf-element-of)SH
11 /Times-Roman AF
(. If)
279 W( there is an object at the)
2 W( mouse, then it)1 W
9720 66384 MT
(is returned.  If there is no object, then the special value)93 W
10 /Courier AF
35210 XM
(:none)SH
11 /Times-Roman AF
38578 XM
(is returned.)
93 W( If)
462 W( the mouse is not)94 W
9720 67580 MT
(over the aggregate, then NIL is returned.  This uses the Opal message)102 W
10 /Courier AF
41924 XM
(point-to-leaf)SH
11 /Times-Roman AF
50100 XM
(on the)101 W
9720 68776 MT
(aggregate.)SH
10 /Courier AF
6120 70471 MT
(\050:list-element-of <obj> <slot> [:type <objtype>]\051)4 W
11 /Times-Roman AF
35815 XM
(- the contents of the)4 W
10 /Courier AF
44846 XM
(<slot>)SH
11 /Times-Roman AF
48725 XM
(of)SH
10 /Courier AF
49920 XM
(<obj>)SH
11 /Times-Roman AF
9720 71667 MT
(should be a list.  Goes through the list to find the)
25 W( object under the mouse.  Uses)24 W
10 /Courier AF
45359 XM
(gv)SH
11 /Times-Roman AF
46858 XM
(to get the list,)24 W
ES
%%Page: 233 14
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.5)
SH( Values)
1800 W( for the ``Where'' slots)SH
51386 XM
(Page 233)SH
46800 50 8280 4486 UL
11 SS 
11880 7955 MT
(so the contents)
163 W( of the slot can be a formula that computes the list.  If the)164 W
10 /Courier AF
46620 XM
(:type)SH
11 /Times-Roman AF
50059 XM
(keyword is)164 W
11880 9151 MT
(specified, then it)
226 W( searches the list for an element of the specified type.  This uses the Opal)225 W
11880 10347 MT
(message)SH
10 /Courier AF
15881 XM
(point-in-gob)SH
11 /Times-Roman AF
23356 XM
(on each element of the list.)SH
10 /Courier AF
8280 12042 MT
(\050:list-leaf-element-of <obj> <slot> [:type)
240 W( <objtype>]\051)241 W
11 /Times-Roman AF
42157 XM
(- like)241 W
10 /Courier AF
45205 XM
(:list-element-of)SH
11 /Times-Roman AF
(,)SH
11880 13238 MT
(except if one of the objects is an aggregate, then returns its leaf element.  The contents of the)133 W
10 /Courier AF
11880 14434 MT
(<slot>)SH
11 /Times-Roman AF
15900 XM
(of)SH
10 /Courier AF
17236 XM
(<obj>)SH
11 /Times-Roman AF
20657 XM
(should be a list.  Goes through the list to find the object under the mouse.)146 W
11880 15630 MT
(Uses)SH
10 /Courier AF
14491 XM
(point-in-gob)SH
11 /Times-Roman AF
22164 XM
(if the object is)198 W
/Times-Italic SF
29494 XM
(not)SH
/Times-Roman SF
31373 XM
(an aggregate, and uses)198 W
10 /Courier AF
42334 XM
(point-to-leaf)SH
11 /Times-Roman AF
50607 XM
(if it)
198 W( is an)197 W
11880 16826 MT
(aggregate.)SH
10 /Courier AF
8280 18521 MT
(\050:list-element-of-or-none <obj> <slot> [:type <objtype>]\051)1672 W
11 /Times-Roman AF
51116 XM
(- like)1673 W
10 /Courier AF
11880 19717 MT
(:list-element-of)SH
11 /Times-Roman AF
(, except if the event isn't over an object, then)
219 W( returns the special value)218 W
10 /Courier AF
11880 20913 MT
(:none)SH
11 /Times-Roman AF
(. Note)
275 W( that this never returns NIL.)SH
10 /Courier AF
8280 22608 MT
(\050:list-leaf-element-of-or-none <obj> <slot> [:type <objtype>]\051)1172 W
11 /Times-Roman AF
51616 XM
(- like)1173 W
10 /Courier AF
11880 23804 MT
(:list-leaf-element-of)SH
11 /Times-Roman AF
(, except if the event)
209 W( isn't over an object, then returns the special)208 W
11880 25000 MT
(value)SH
10 /Courier AF
14537 XM
(:none)SH
11 /Times-Roman AF
(. Note)
275 W( that this never returns NIL.)SH
10 /Courier AF
8280 26695 MT
(\050:check-leaf-but-return-element <agg> [:type <objtype>]\051)1056 W
11 /Times-Roman AF
46379 XM
(- This)
1056 W( is like)1057 W
10 /Courier AF
11880 27891 MT
(:leaf-element-of)SH
11 /Times-Roman AF
21941 XM
(except when an object is found, the immediate component of)185 W
10 /Courier AF
50886 XM
(<agg>)SH
11 /Times-Roman AF
54346 XM
(is)SH
11880 29087 MT
(returned instead)
73 W( of the leaf element.  If the)74 W
10 /Courier AF
31541 XM
(:type)SH
11 /Times-Roman AF
34890 XM
(keyword is specified, then it searches the list)74 W
11880 30283 MT
(for an)
192 W( element of the specified type.  This choice is useful, for example, when the top level)191 W
11880 31479 MT
(aggregate contains aggregates \050or aggregadgets\051 that mostly contain)
134 W( lines, and the programmer)135 W
11880 32675 MT
(wants the user to have to select on the lines, but still have the interactor affect the aggregate.)SH
10 /Courier AF
8280 34370 MT
(\050:list-check-leaf-but-return-element <obj> <slot>)
573 W( [:type <objtype>]\051)572 W
11 /Times-Roman AF
52217 XM
(- like)572 W
10 /Courier AF
11880 35566 MT
(:list-leaf-element-of)SH
11 /Times-Roman AF
(, except that it returns the element from the list)
10 W( itself if a leaf element)11 W
11880 36762 MT
(is hit.)SH
10 /Courier AF
8280 38457 MT
(\050:check-leaf-but-return-element-or-none <agg> [:type <objtype>]\051)371 W
11 /Times-Roman AF
48439 XM
(- This is like)370 W
10 /Courier AF
11880 39653 MT
(:check-leaf-but-return-element)SH
11 /Times-Roman AF
30157 XM
(except that if no child is under the event, but the)
2 W( event is)3 W
11880 40849 MT
(inside the aggregate, then)SH
10 /Courier AF
23395 XM
(:none)SH
11 /Times-Roman AF
26670 XM
(is returned.)SH
10 /Courier AF
8280 42544 MT
(\050:list-check-leaf-but-return-element-or-none <agg>)
254 W( [:type <objtype>]\051)253 W
11 /Times-Roman AF
50968 XM
(- This is)253 W
11880 43740 MT
(like)SH
10 /Courier AF
14050 XM
(:list-check-leaf-but-return-element)SH
11 /Times-Roman AF
35570 XM
(except that if nothing is found,)246 W
10 /Courier AF
50825 XM
(:none)SH
11 /Times-Roman AF
54346 XM
(is)SH
11880 44936 MT
(returned instead of NIL.)SH
10 /Courier AF
8280 46631 MT
(\050:custom <obj> 'function-name arg1 arg2 ....\051)212 W
11 /Times-Roman AF
36827 XM
(- Use a programmer-defined)
212 W( method to)211 W
11880 47827 MT
(search for the object.  See section 3.5.5.)SH
12 /Times-Bold AF
8280 51511 MT
(3.5.7. Same Object)SH
11 /Times-Roman AF
8280 52707 MT
(A special value for the object)
30 W( can be used when the specification is in the)31 W
10 /Courier AF
41269 XM
(:running-where)SH
11 /Times-Roman AF
49975 XM
(slot. Using)337 W
10 /Courier AF
8280 53903 MT
(*)SH
11 /Times-Roman AF
9596 XM
(means ``in the object)
441 W( that the interactor started over.''  For example, if the start-where is)440 W
10 /Courier AF
8280 55099 MT
(\050:element-of <agg>\051)106 W
11 /Times-Roman AF
(, a running-where of)106 W
10 /Courier AF
29463 XM
('\050:in *\051)106 W
11 /Times-Roman AF
34750 XM
(would refer to)
106 W( whatever object of the)107 W
10 /Courier AF
52080 XM
(<agg>)SH
11 /Times-Roman AF
8280 56295 MT
(the interactor started over.  This)SH
10 /Courier AF
22605 XM
(*)SH
11 /Times-Roman AF
23480 XM
(form cannot be used for the)SH
10 /Courier AF
35880 XM
(:start-where)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 59979 MT
(3.5.8. Outside while running)SH
11 /Times-Roman AF
8280 61175 MT
(While the interactor is running, the mouse might be moved outside the)
428 W( area specified by the)427 W
10 /Courier AF
8280 62371 MT
(:running-where)SH
11 /Times-Roman AF
16973 XM
(slot. The)
311 W( value of the interactor slot)18 W
10 /Courier AF
33338 XM
(:outside)SH
11 /Times-Roman AF
38431 XM
(determines what happens)
18 W( in this case.)19 W
8280 63567 MT
(When)SH
10 /Courier AF
11294 XM
(:outside)SH
11 /Times-Roman AF
16482 XM
(is NIL, which is the)
113 W( default, the interaction is temporarily turned off until the mouse)112 W
8280 64763 MT
(moves back inside.  This typically will make the feedback be invisible.  In)
47 W( this case, if the user gives the)48 W
8280 65959 MT
(stop event while outside, the)
41 W( interactor will be aborted.  For example, for a menu, the)40 W
10 /Courier AF
46680 XM
(:running-where)SH
11 /Times-Roman AF
8280 67155 MT
(will usually be)14 W
10 /Courier AF
15075 XM
(\050:element-of MENU-AGG\051)14 W
11 /Times-Roman AF
28579 XM
(\050same as the)15 W
10 /Courier AF
34335 XM
(:start-where)SH
11 /Times-Roman AF
(\051. If)
305 W( the user moves outside of)15 W
8280 68351 MT
(the menu while the mouse button is depressed, the feedback will go off, and the mouse button is released)34 W
8280 69547 MT
(outside, then no menu operation is executed.)
165 W( This)
606 W( is a convenient way to allow the user to abort an)166 W
8280 70743 MT
(interaction once it has started.)SH
ES
%%Page: 234 15
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 234)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(On the other hand, if you want the interactor to just save)
18 W( the last legal, inside value, specify)17 W
10 /Courier AF
46912 XM
(:outside)SH
11 /Times-Roman AF
52004 XM
(as)SH
10 /Courier AF
6120 9151 MT
(:last)SH
11 /Times-Roman AF
(. In)
275 W( this case, if the user stops while outside, the last legal value is used.)SH
6120 11449 MT
(If you want there to be)
293 W( no area that is outside \050so moving everywhere is legal\051, then simply set)294 W
10 /Courier AF
6120 12645 MT
(:running-where)SH
11 /Times-Roman AF
14795 XM
(to T, in which case the)SH
10 /Courier AF
25028 XM
(:outside)SH
11 /Times-Roman AF
30103 XM
(slot is ignored.)SH
12 /Times-Bold AF
6120 16329 MT
(3.5.9. Thresholds, Outlines, and Leaves)SH
11 /Times-Roman AF
6120 17525 MT
(Three slots of)
409 W( Opal objects are useful for controlling the ``where'' for interactors.  These are)408 W
10 /Courier AF
6120 18721 MT
(:hit-threshold)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
15749 XM
(:select-outline-only)SH
11 /Times-Roman AF
(, and)680 W
10 /Courier AF
31522 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
(. If)
1635 W( you set the)680 W
10 /Courier AF
6120 19917 MT
(:select-outline-only)SH
11 /Times-Roman AF
18457 XM
(slot of an Opal object \050note:)62 W
/Times-Italic SF
31415 XM
(not)SH
/Times-Roman SF
33158 XM
(in the interactor\051 to)
62 W( T, then all the ``where'')61 W
6120 21113 MT
(forms \050except)137 W
10 /Courier AF
12746 XM
(:in-box)SH
11 /Times-Roman AF
(\051 will only notice the object when)
137 W( the mouse is directly over the outline.  The)138 W
10 /Courier AF
6120 22309 MT
(:hit-threshold)SH
11 /Times-Roman AF
14820 XM
(slot of Opal objects determines how close to the line or outline you must be \050note that)25 W
6120 23505 MT
(you usually have to set the)41 W
10 /Courier AF
18342 XM
(:hit-threshold)SH
11 /Times-Roman AF
27058 XM
(slot of the aggregate)
41 W( as well as for the individual objects.\051)42 W
6120 24701 MT
(See the Opal manual for more information on these slots.)SH
6120 26999 MT
(An important thing to note is that if you are using one of the)270 W
10 /Courier AF
36664 XM
(-leaf)SH
11 /Times-Roman AF
40209 XM
(forms, you need)
270 W( to set the)269 W
10 /Courier AF
6120 28195 MT
(:hit-threshold)SH
11 /Times-Roman AF
14868 XM
(slot of)73 W
/Times-Italic SF
18070 XM
(all the aggregates)73 W
/Times-Roman SF
26508 XM
(all the way down to the leaf from the aggregate you put in)73 W
6120 29391 MT
(the)SH
10 /Courier AF
7813 XM
(-where)SH
11 /Times-Roman AF
11762 XM
(slot. This)
423 W( is needed if the object happens to be at the edge of)
74 W( the aggregate \050otherwise, the)73 W
6120 30587 MT
(press will not be considered inside the aggregate\051.)SH
6120 32885 MT
(The)SH
10 /Courier AF
8252 XM
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
20074 XM
(slot is used when you want an interactor to treat an aggregate as)
147 W( a leaf)148 W
6120 34081 MT
(\050without it,)
269 W( only the components of an aggregate are candidates to be leaves\051.  When you set the)268 W
10 /Courier AF
6120 35277 MT
(:pretend-to-be-leaf)SH
11 /Times-Roman AF
17847 XM
(slot of an aggregate to T \050note: not in the interactor\051, then the)
52 W( search for a leaf)53 W
6120 36473 MT
(will terminate when the aggregate is reached, and the aggregate will be returned as the current object.)SH
14 /Times-Bold AF
6120 40291 MT
(3.6. Details of the Operation)SH
11 /Times-Roman AF
6120 41487 MT
(Each interactor runs through a standard set of states as it is running.  First, it starts off)119 W
/Times-Italic SF
46204 XM
(waiting)SH
/Times-Roman SF
49900 XM
(for the)119 W
6120 42683 MT
(start-event to happen over the start-where.  Once this occurs, the interactor is)27 W
/Times-Italic SF
40586 XM
(running)SH
/Times-Roman SF
44372 XM
(until the stop-event)27 W
6120 43879 MT
(or abort-event happens, when it goes back to waiting.  While it is running, the mouse)
22 W( might move)21 W
/Times-Italic SF
49742 XM
(outside)SH
/Times-Roman SF
6120 45075 MT
(the active area \050determined)
18 W( by)19 W
10 /Courier AF
19801 XM
(:running-where)SH
11 /Times-Roman AF
(\051, and later move)19 W
/Times-Italic SF
36004 XM
(back inside)19 W
/Times-Roman SF
(. Alternatively,)
313 W( the stop or)19 W
6120 46271 MT
(abort events might happen while the mouse is still outside.  These state changes)
126 W( are implemented as a)125 W
6120 47467 MT
(simple state machine inside each interactor.)SH
6120 49765 MT
(At each state transition, as well as continuously while the interactor is running,)
35 W( special interactor-specific)36 W
6120 50961 MT
(routines are called to do the actual work of the interactor.  These routines are)
263 W( supplied with each)262 W
6120 52157 MT
(interactor, although)
192 W( the programmer is allowed to replace the routines to achieve customizations that)193 W
6120 53353 MT
(would otherwise not be possible.  The)
45 W( specifics of what the default routines do, and the parameters if the)44 W
6120 54549 MT
(programmer wants to override them are discussed in section 6.)SH
6120 56847 MT
(The following table and figure illustrate the working of the state machine and when the)
328 W( various)329 W
6120 58043 MT
(procedures are called.)SH
8320 59496 MT
(1.)SH
9420 XM
(If the)
26 W( interactor is not)25 W
/Times-Italic SF
19351 XM
(active)SH
/Times-Roman SF
(, then it waits until a program explicitly sets the interactor to be)25 W
9420 60692 MT
(active \050see section 8.2\051.)SH
8320 62586 MT
(2.)SH
9420 XM
(If active,)
47 W( the interactor waits in the start state for the start-event to happen while the mouse)48 W
9420 63782 MT
(is over the specified start-where area.)SH
8320 65676 MT
(3.)SH
9420 XM
(When that)
12 W( event happens, if the interactor is)11 W
/Times-Italic SF
29210 XM
(not)SH
/Times-Roman SF
30902 XM
(``continuous'' \050defined in section 3.2\051, then)11 W
9420 66872 MT
(it executes the Stop-action and returns to waiting for the start-event.  If the interactor)
163 W( is)164 W
9420 68068 MT
(continuous, then it does all of the following steps:)SH
11682 69521 MT
(a.)SH
12720 XM
(First, the interactor calls the Start-action and goes into the running state.)SH
11620 71415 MT
(b.)SH
12720 XM
(In the running state, it continually calls the)
84 W( running-action routine while the mouse)83 W
ES
%%Page: 235 16
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.6)
SH( Details)
1800 W( of the Operation)SH
51386 XM
(Page 235)SH
46800 50 8280 4486 UL
11 SS 
14880 7955 MT
(is in the)
305 W( running-where area.  Typically, the running-action is called for each)306 W
14880 9151 MT
(incremental mouse movement \050so the running-action routine is not called when)
86 W( the)85 W
14880 10347 MT
(mouse is not moving\051.)SH
13842 12241 MT
(c.)SH
14880 XM
(If the mouse goes)SH
/Times-Italic SF
22944 XM
(outside)SH
/Times-Roman SF
26397 XM
(the running-where area, then outside-action is called once.)SH
13780 14135 MT
(d.)SH
14880 XM
(If the mouse returns from)
117 W( outside running-where to be back inside, then the back-)118 W
14880 15331 MT
(inside-action is called once.)SH
13842 17225 MT
(e.)SH
14880 XM
(If the abort-event ever happens, then the abort-action)
48 W( is called and the state changes)47 W
14880 18421 MT
(back to the start state.)SH
13964 20315 MT
(f.)SH
14880 XM
(If the stop-event occurs while the mouse is inside running-where, then the)
201 W( stop-)202 W
14880 21511 MT
(action is called and the state returns to start.)SH
13780 23405 MT
(g.)SH
14880 XM
(If the stop-event occurs while the mouse is)74 W
/Times-Italic SF
34594 XM
(outside)SH
/Times-Roman SF
(, then if the)74 W
10 /Courier AF
43352 XM
(:outside)SH
11 /Times-Roman AF
48500 XM
(field has)73 W
14880 24601 MT
(the value)15 W
10 /Courier AF
19186 XM
(:last)SH
11 /Times-Roman AF
(, the the stop-action is called)
15 W( with the last legal value.  If)16 W
10 /Courier AF
47530 XM
(:outside)SH
11 /Times-Roman AF
14880 25797 MT
(is NIL, then the abort-action is)
17 W( called.  In either case, the state returns to start.  Note:)16 W
14880 26993 MT
(if)SH
10 /Courier AF
15841 XM
(:outside =)
14 W( :last)15 W
11 /Times-Roman AF
(, and there is no abort-event, then there is no way to abort an)15 W
14880 28189 MT
(interaction once it has started.)SH
8280 30487 MT
(If a program changes the active state to NIL \050not active\051 and)
162 W( the interactor is running or outside, the)161 W
8280 31683 MT
(interactor is)
51 W( immediately aborted \050so the abort-action is called\051, and the interactor waits for a program to)52 W
8280 32879 MT
(make it active again, at which point it is in the start)
55 W( state.  \050If the interactor was in the start state when it)54 W
8280 34075 MT
(became inactive, it simply waits until it becomes active again.\051)
213 W( This)
703 W( transition is not shown in the)214 W
8280 35271 MT
(following figure.  Section 8.2 discusses making an interactor in-active.)SH
ES
%%Page: 236 17
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 236)
SH( Interactors)830 W
43205 XM
(Operation Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
1 1 0 -1080 65848 GB 
%%BeginDocument: inter/interstate.ps
%!PS-Adobe-2.0
%%Title: INTERSTATE
%%Creator: Make-PS-File -- Garnet Version 2.0.alpha
%%CreationDate: Apr 28, 1992, 12:39 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 235 540 557
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/ArcDict 22 dict def
ArcDict /mtrx matrix put
/DrawArc
   {
        ArcDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        newpath
          x y translate
          xrad yrad scale
          % Fill the arc
          newpath
            0 0 moveto  0 0 1 startangle endangle arc  closepath
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          % Draw the border
          newpath
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-halftone line-red line-green line-blue line-color-p
            line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.69539374 0.69539374 scale

%
% Begin new window
%
0 -234 translate
gsave
0 932 673 464 ClipToRectangle
0 0 translate
gsave
276 897 886 98 14 0 false 0 0 0 false 0 0 0 false (Running-action) 12 /Courier-Bold DrawText
30 807 610 300 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
45 807 575 240 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
60 807 540 190 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
75 807 250 140 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
90 807 210 90 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
345 807 235 90 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
15 832 100 50 10 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRoundtangle
272 832 100 50 10 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRoundtangle
560 832 100 50 10 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRoundtangle
63.0 832.0 20.0 45.0 0 180 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawArc
325.0 832.0 20.0 45.0 0 180 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawArc
40 815 800 52 19 0 false 0 0 0 false 0 0 0 false (Start) 18 /Courier DrawText
286 816 801 75 19 0 false 0 0 0 false 0 0 0 false (Running) 18 /Courier DrawText
574 815 800 74 19 0 false 0 0 0 false 0 0 0 false (Outside) 18 /Courier DrawText
155 852 841 76 14 0 false 0 0 0 false 0 0 0 false (start-event) 12 /Courier-Oblique DrawText
155 838 827 48 14 0 false 0 0 0 false 0 0 0 false (   over) 12 /Courier-Oblique DrawText
155 824 813 76 14 0 false 0 0 0 false 0 0 0 false (start-where) 12 /Courier-Oblique DrawText
151 804 793 83 14 0 false 0 0 0 false 0 0 0 false (Start-action) 12 /Courier-Bold DrawText
159 735 724 69 14 0 false 0 0 0 false 0 0 0 false (stop-event) 12 /Courier-Oblique DrawText
155 716 705 76 14 0 false 0 0 0 false 0 0 0 false (Stop-action) 12 /Courier-Bold DrawText
155 685 674 76 14 0 false 0 0 0 false 0 0 0 false (abort-event) 12 /Courier-Oblique DrawText
151 665 654 84 14 0 false 0 0 0 false 0 0 0 false (Abort-action) 12 /Courier-Bold DrawText
287 635 624 76 14 0 false 0 0 0 false 0 0 0 false (abort-event) 12 /Courier-Oblique DrawText
283 614 603 84 14 0 false 0 0 0 false 0 0 0 false (Abort-action) 12 /Courier-Bold DrawText
283 564 553 84 14 0 false 0 0 0 false 0 0 0 false (Abort-action) 12 /Courier-Bold DrawText
287 504 493 76 14 0 false 0 0 0 false 0 0 0 false (Stop-action) 12 /Courier-Bold DrawText
197 585 574 258 14 0 false 0 0 0 false 0 0 0 false (stop-event if outside-control = Abort) 12 /Courier-Oblique DrawText
199 525 514 251 14 0 false 0 0 0 false 0 0 0 false (stop-event if outside-control = Last) 12 /Courier-Oblique DrawText
421 838 827 69 14 0 false 0 0 0 false 0 0 0 false (  not over) 12 /Courier-Oblique DrawText
421 824 813 90 14 0 false 0 0 0 false 0 0 0 false (running-where) 12 /Courier-Oblique DrawText
421 747 736 76 14 0 false 0 0 0 false 0 0 0 false (  back over) 12 /Courier-Oblique DrawText
421 733 722 90 14 0 false 0 0 0 false 0 0 0 false (running-where) 12 /Courier-Oblique DrawText
418 804 793 97 14 0 false 0 0 0 false 0 0 0 false (Outside-action) 12 /Courier-Bold DrawText
403 714 703 126 14 0 false 0 0 0 false 0 0 0 false (Back-inside-action) 12 /Courier-Bold DrawText
30 897 886 76 14 0 false 0 0 0 false 0 0 0 false (Stop-action) 12 /Courier-Bold DrawText
14 912 901 112 14 0 false 0 0 0 false 0 0 0 false (continuous = NIL) 12 /Courier-Oblique DrawText
0 0 0 0 true 0 0 [] 1 90 772 90 762 DrawLine
85 772 90 782 95 772 85 772 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 30 772 30 762 DrawLine
25 772 30 782 35 772 25 772 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 45 772 45 762 DrawLine
40 772 45 782 50 772 40 772 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 60 772 60 762 DrawLine
55 772 60 782 65 772 55 772 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 75 772 75 762 DrawLine
70 772 75 782 80 772 70 772 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 345 773 345 763 DrawLine
340 773 345 783 350 773 340 773 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 262 807 258 807 DrawLine
262 812 272 807 262 802 262 812 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 549 807 545 807 DrawLine
549 812 559 807 549 802 549 812 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 345 844 345 839 DrawLine
350 844 345 834 340 844 350 844 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 true 0 0 [] 1 83 844 83 839 DrawLine
88 844 83 834 78 844 88 844 8 0 0 0 0 true 0 0 [] 1 0 0 0 0 false DrawPolyline
grestore

grestore

0 932 673 464 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Oblique /Courier /Courier-Bold 
%%BoundingBox: 72 235 540 557

%%EndDocument
 GE /Times-Bold SF
6120 44100 MT
(Figure 1:)SH
/Times-Roman SF
10977 XM
(Each Interactor runs the same)
203 W( state machine to control its operation.  The)202 W
10 /Courier AF
46045 XM
(start-event)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
10977 45296 MT
(stop-event)SH
11 /Times-Roman AF
17584 XM
(and)SH
10 /Courier AF
19780 XM
(abort-event)SH
11 /Times-Roman AF
26988 XM
(can be specified \050see section 8.3\051, as can the various)333 W
10 /Courier AF
10977 46492 MT
(-action)SH
11 /Times-Roman AF
15653 XM
(procedures \050section 8.9\051.)
201 W( Where)
675 W( the mouse should be for the Interactor to start)200 W
10977 47688 MT
(\050)SH
10 /Courier AF
(start-where)SH
11 /Times-Roman AF
(\051, and where it should run \050)410 W
10 /Courier AF
(running-where)SH
11 /Times-Roman AF
(\051 can also)
410 W( be supplied as)411 W
10977 48884 MT
(parameters \050sections)
119 W( 3.5 and 3.5.2\051.  The)118 W
10 /Courier AF
29977 XM
(outside-control)SH
11 /Times-Roman AF
39370 XM
(parameter determines whether)118 W
10977 50080 MT
(the interaction is aborted when the user moves outside, or whether the last)
61 W( legal value is used)62 W
10977 51276 MT
(\050section 3.5.2\051.  There are default values for all parameters, so the programmer does)
66 W( not have)65 W
10977 52472 MT
(to specify them.  In addition)
256 W( to the transitions shown, Interactors can be aborted by the)257 W
10977 53668 MT
(application at any time.)SH
46800 50 6120 55064 UL
ES
%%Page: 237 18
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 4)
SH( Mouse)
1550 W( and Keyboard Accelerators)SH
51386 XM
(Page 237)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(4. Mouse and Keyboard Accelerators)SH
11 /Times-Roman AF
8280 10524 MT
(The Interactors now have a new mechanism to attach functions to specific keyboard keys as)21 W
/Times-Italic SF
49307 XM
(accelerators)SH
/Times-Roman SF
(.)SH
8280 11720 MT
(These are processed either before or after)
96 W( interactors, and are either attached to a particular window, or)97 W
8280 12916 MT
(global to all windows.  If they are)28 W
/Times-Italic SF
23625 XM
(after)SH
/Times-Roman SF
26006 XM
(the interactors, then the accelerators are)
28 W( only used if no interactor)27 W
8280 14112 MT
(accepts the event.)SH
8280 16410 MT
(\050Note: If you are using the)716 W
10 /Courier AF
24488 XM
(menubar)SH
11 /Times-Roman AF
29679 XM
(or)SH
10 /Courier AF
31586 XM
(motif-menubar)SH
11 /Times-Roman AF
(, then you can)
716 W( use the slot)717 W
10 /Courier AF
8280 17606 MT
(:accelerator-windows)SH
11 /Times-Roman AF
20833 XM
(of those gadgets to tell them which windows should have)
278 W( the keyboard)277 W
8280 18802 MT
(accelerators defined in them.\051)SH
8280 21100 MT
(By default, a number of)SH
/Times-Italic SF
19032 XM
(global)SH
/Times-Roman SF
22119 XM
(accelerators are defined:)SH
8 /Courier AF
12120 22265 MT
(:SHIFT-F1 -  raise window)SH
12120 23130 MT
(:SHIFT-F2 -  lower window)SH
12120 23995 MT
(:SHIFT-F3 -  iconify window)SH
12120 24860 MT
(:SHIFT-F4 -  zoom window)SH
12120 25725 MT
(:SHIFT-F5 -  fullzoom window)SH
12120 26590 MT
(:SHIFT-F6 -  refresh window)SH
12120 27455 MT
(:SHIFT-F7 -  destroy window)SH
12120 29185 MT
(:HELP - INSPECTOR object)SH
12120 30050 MT
(:CONTROL-HELP - INSPECTOR next interactor to run)SH
12120 30915 MT
(:SHIFT-HELP - print out object under the mouse \050also in inspector.lisp\051)SH
11 /Times-Roman AF
8280 33213 MT
(The last three are processed)59 W
/Times-Italic SF
21065 XM
(before)SH
/Times-Roman SF
24210 XM
(Interactors, and are defined in the debugging file)60 W
10 /Courier AF
46405 XM
(inspector.lisp)SH
11 /Times-Roman AF
(.)SH
8280 34409 MT
(To change these, see the Debugging Reference Manual.  The)
110 W( first 7 are processed)109 W
/Times-Italic SF
45973 XM
(after)SH
/Times-Roman SF
48435 XM
(the interactors.)109 W
8280 35605 MT
(To change these bindings, set the variable)276 W
10 /Courier AF
28906 XM
(*default-global-accelerators*)SH
11 /Times-Roman AF
(, which is initially)276 W
8280 36801 MT
(defined as:)SH
8 /Courier AF
10200 37966 MT
(\050defvar *default-global-accelerators* '\050)SH
12120 38831 MT
(\050:SHIFT-F1 .  raise-acc\051)SH
12120 39696 MT
(\050:SHIFT-F2 .  lower-acc\051)SH
12120 40561 MT
(\050:SHIFT-F3 .  iconify-acc\051)SH
12120 41426 MT
(\050:SHIFT-F4 .  zoom-acc\051)SH
12120 42291 MT
(\050:SHIFT-F5 .  fullzoom-acc\051)SH
12120 43156 MT
(\050:SHIFT-F6 .  refresh-acc\051)SH
12120 44021 MT
(\050:SHIFT-F7 .  destroy-acc\051\051\051)SH
11 /Times-Roman AF
8280 46319 MT
(Applications can also set and maintain their own accelerator keys, using the following functions:)SH
8 /Courier AF
10200 47532 MT
(inter:Add-Global-Accelerator)SH
/Times-Italic SF
24120 XM
(key fn)SH
/Courier SF
26487 XM
(&key)SH
/Times-Italic SF
28887 XM
(replace-existing? first?)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 48397 MT
(inter:Add-Window-Accelerator)SH
/Times-Italic SF
24120 XM
(win key fn)SH
/Courier SF
27843 XM
(&key)SH
/Times-Italic SF
30243 XM
(replace-existing? first?)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 50695 MT
(Will call)
183 W( the function)182 W
/Times-Italic SF
18663 XM
(fn)SH
/Times-Roman SF
19976 XM
(whenever)SH
/Times-Italic SF
24707 XM
(key)SH
/Times-Roman SF
26628 XM
(is hit.  If)182 W
/Times-Italic SF
31359 XM
(first?)SH
/Times-Roman SF
34597 XM
(then the accelerator will be tested before all)182 W
8280 51891 MT
(interactors, otherwise it will be tested if)
15 W( no interactor uses)16 W
/Times-Italic SF
34185 XM
(key)SH
/Times-Roman SF
(.)SH
/Times-Italic SF
36506 XM
(Replace-existing)SH
/Times-Roman SF
(, if non-NIL, will remove)16 W
8280 53087 MT
(any other assignments for)75 W
/Times-Italic SF
20187 XM
(key)SH
/Times-Roman SF
(. By)
423 W( using the default NIL value, you can temporarily hide an accelerator)74 W
8280 54283 MT
(binding.)SH
8280 56916 MT
(The function)SH
/Times-Italic SF
14206 XM
(fn)SH
/Times-Roman SF
15337 XM
(is called as:)SH
8 /Courier AF
10200 58081 MT
(\050lambda \050event\051\051)SH
11 /Times-Roman AF
8280 59502 MT
(where event is the interactor event structure that caused the accelerator to happen.)SH
8 /Courier AF
10200 60715 MT
(inter:Remove-Global-Accelerator)SH
/Times-Italic SF
25560 XM
(key)SH
/Courier SF
27105 XM
(&key)SH
/Times-Italic SF
29505 XM
(remove-all? first?)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 61580 MT
(inter:Remove-Window-Accelerator)SH
/Times-Italic SF
25560 XM
(win key)SH
/Courier SF
28461 XM
(&key)SH
/Times-Italic SF
30861 XM
(remove-all? first?)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 63001 MT
(Removes the specified accelerator.  If)141 W
/Times-Italic SF
26013 XM
(remove-all?)SH
/Times-Roman SF
31743 XM
(then removes all)
141 W( the accelerators bound to the)142 W
/Times-Italic SF
53341 XM
(key)SH
/Times-Roman SF
(,)SH
8280 64197 MT
(otherwise, just removes the first one.)SH
8 /Courier AF
10200 65410 MT
(inter:Clear-Global-Accelerators)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 66275 MT
(inter:Clear-Window-Accelerators)SH
/Times-Italic SF
25560 XM
(win)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 68005 MT
(inter:Default-Global-Accelerators)SH
/Times-Italic SF
26520 XM
(;; sets up the default accelerators)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
ES
%%Page: 238 19
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 238)
SH( Interactors)830 W
38066 XM
(Slots of All Interactors)
SH( Chapter)
1550 W( 5)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(5. Slots of All Interactors)SH
11 /Times-Roman AF
6120 10524 MT
(This section lists all the slots common to all interactors.)
209 W( Most)
691 W( of these have been explained in the)208 W
6120 11720 MT
(previous sections.  The slots a programmer is most likely to want to)
14 W( change are listed first.  Some specific)15 W
6120 12916 MT
(interactor types have additional slots, and these are described in their sections.)SH
6120 15214 MT
(The various)47 W
10 /Courier AF
11712 XM
(-action)SH
11 /Times-Roman AF
16233 XM
(procedures are used by the individual interactors to determine their behavior.)46 W
/Times-Italic SF
51208 XM
(You)SH
6120 16410 MT
(will rarely need to set these slots.)SH
/Times-Roman SF
21367 XM
(See section 8.9 for how to use the)SH
10 /Courier AF
36488 XM
(-action)SH
11 /Times-Roman AF
40963 XM
(slots.)SH
6120 18708 MT
(The following field)SH
/Times-Italic SF
14949 XM
(must)SH
/Times-Roman SF
17302 XM
(be supplied:)SH
10 /Courier AF
6120 20659 MT
(:start-where)SH
11 /Times-Roman AF
(- where the mouse should be for this interactor to)
40 W( start working.  Valid values for)41 W
10 /Courier AF
49920 XM
(where)SH
11 /Times-Roman AF
9720 21855 MT
(are described in section 3.5.)SH
6120 24153 MT
(The following fields are optional.  If they are not)
111 W( supplied, then the default value is used, as described)110 W
6120 25349 MT
(below. Note)
499 W( that supplying NIL is)112 W
/Times-Italic SF
22486 XM
(not)SH
/Times-Roman SF
24279 XM
(the same as not supplying a)
112 W( value \050since not supplying a value)113 W
6120 26545 MT
(means to use the default, and NIL often means to not do something\051.)SH
10 /Courier AF
6120 28496 MT
(:window)SH
11 /Times-Roman AF
(- the window that the interactor should be connected to.  Usually this is supplied as a)
141 W( single)140 W
9720 29692 MT
(window, but other options are)
161 W( possible for interactors that operate on multiple windows.  See)162 W
9720 30888 MT
(section 8.6.)SH
10 /Courier AF
6120 32583 MT
(:start-event)SH
11 /Times-Roman AF
(- the event that causes the interactor to start working.)
71 W( The)
415 W( default value is)70 W
10 /Courier AF
47245 XM
(:leftdown)SH
11 /Times-Roman AF
(.)SH
9720 33779 MT
(NIL means the interactor never starts by itself \050see)
69 W( 8.4\051.  Using)70 W
10 /Courier AF
38530 XM
(T)SH
11 /Times-Roman AF
39475 XM
(means no event, which means)70 W
9720 34975 MT
(that the interactor is operating)
63 W( whenever the mouse is over)62 W
10 /Courier AF
36368 XM
(:start-where)SH
11 /Times-Roman AF
(. The)
399 W( full syntax for)62 W
9720 36171 MT
(event specification is described in section 3.4.)SH
10 /Courier AF
6120 37866 MT
(:continuous)SH
11 /Times-Roman AF
(- if this is T, then the)
38 W( interactor operates continuously from start-event until stop-event.  If)39 W
9720 39062 MT
(it is NIL, then the)
13 W( interactor operates exactly once when start-event happens.  The default value is)12 W
10 /Courier AF
9720 40258 MT
(T)SH
11 /Times-Roman AF
(. See)
275 W( section 3.2 for more explanation.)SH
10 /Courier AF
6120 41953 MT
(:stop-event)SH
11 /Times-Roman AF
(- This is)
94 W( not used if)95 W
10 /Courier AF
22088 XM
(:continuous)SH
11 /Times-Roman AF
29058 XM
(is NIL.  If)95 W
10 /Courier AF
34111 XM
(:continuous)SH
11 /Times-Roman AF
41081 XM
(is T,)95 W
10 /Courier AF
43502 XM
(:stop-event)SH
11 /Times-Roman AF
50472 XM
(is the)95 W
9720 43149 MT
(event that the interaction should stop on.  If not)
121 W( supplied, and the start-event is a mouse down)120 W
9720 44345 MT
(event \050such as)92 W
10 /Courier AF
16501 XM
(:leftdown)SH
11 /Times-Roman AF
(\051, then the default)93 W
10 /Courier AF
30306 XM
(:stop-event)SH
11 /Times-Roman AF
37274 XM
(is the corresponding up event \050e.g.)93 W
10 /Courier AF
9720 45541 MT
(:leftup)SH
11 /Times-Roman AF
(\051. If)
889 W( start-event is a keyboard key, the default stop event is)307 W
10 /Courier AF
44026 XM
(#\134RETURN)SH
11 /Times-Roman AF
(. If)
887 W( the)306 W
10 /Courier AF
9720 46737 MT
(:start-event)SH
11 /Times-Roman AF
17198 XM
(is a list or a special form like)3 W
10 /Courier AF
30237 XM
(:any-mousedown)SH
11 /Times-Roman AF
(, then the default)4 W
10 /Courier AF
46320 XM
(:stop-event)SH
11 /Times-Roman AF
9720 47933 MT
(is calculated based on)
20 W( the actual start event used.  You only need to define stop-event if you want)19 W
9720 49129 MT
(some other behavior \050e.g. starting on)101 W
10 /Courier AF
26760 XM
(:leftdown)SH
11 /Times-Roman AF
32537 XM
(and stopping on the next)102 W
10 /Courier AF
44138 XM
(:leftdown)SH
11 /Times-Roman AF
49915 XM
(so you)102 W
9720 50325 MT
(must click twice\051.  The form for stop-events is the)
95 W( same as for start-events \050see section 8.3\051.)94 W
10 /Courier AF
52320 XM
(T)SH
11 /Times-Roman AF
9720 51521 MT
(means no event, so the interactor never stops \050unless it is turned off using)SH
10 /Courier AF
42315 XM
(ChangeActive)SH
11 /Times-Roman AF
(\051.)SH
10 /Courier AF
6120 53216 MT
(:feedback-obj)SH
11 /Times-Roman AF
(- If supplied, then)
4 W( this is the object to be used to show the feedback while the interaction)5 W
9720 54412 MT
(is running.  If NIL,)
113 W( then typically the object itself will be modified.  The default value is NIL.)112 W
9720 55608 MT
(See the descriptions of the specific interactors for more information.)SH
10 /Courier AF
6120 57303 MT
(:running-where)SH
11 /Times-Roman AF
(- Describes where the interaction should operate if it is continuous.  The default)
166 W( is)167 W
9720 58499 MT
(usually to)
30 W( use the same value as start-where.  Running-where will sometimes need to be different)29 W
9720 59695 MT
(from start-where, however.)
83 W( For)
442 W( example, with an object that moves with the mouse, you might)84 W
9720 60891 MT
(want to start moving when the press was over the object itself.  See section 3.5 for a complete)109 W
9720 62087 MT
(discussion of this field.)SH
10 /Courier AF
6120 63782 MT
(:outside)SH
11 /Times-Roman AF
(- Determines what to)
148 W( do when the mouse goes outside of running-where.  Legal values are)149 W
10 /Courier AF
9720 64978 MT
(:last)SH
11 /Times-Roman AF
(, which means to use the last value before the mouse went outside, or NIL which means to)27 W
9720 66174 MT
(return to the original value \050before the interaction started\051.  The default value is NIL.  See)
24 W( section)25 W
9720 67370 MT
(3.5.8 for more explanation.)SH
10 /Courier AF
6120 69065 MT
(:abort-event)SH
11 /Times-Roman AF
(- This is an event that causes the interaction)
91 W( to terminate prematurely.  If abort-event is)90 W
9720 70261 MT
(NIL, then there is no)
135 W( separate event to cause aborts.  The default value is NIL.  The form for)136 W
9720 71457 MT
(abort-events is the same as for start-events \050see section 8.3\051.)SH
ES
%%Page: 239 20
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 5)
SH( Slots)
1550 W( of All Interactors)SH
51386 XM
(Page 239)SH
46800 50 8280 4486 UL
/Courier SF
8280 7955 MT
(:waiting-priority)SH
11 /Times-Roman AF
(- This determines)
71 W( the priority of the interactor while waiting for the start event to)70 W
11880 9151 MT
(happen. See)
275 W( section 8.1 for a description of priority levels.)SH
10 /Courier AF
8280 10846 MT
(:running-priority)SH
11 /Times-Roman AF
(- This determines the priority of the interactor while it is running \050waiting for the)70 W
11880 12042 MT
(stop event to happen\051.  See section 8.1 for a description of priority levels.)SH
10 /Courier AF
8280 13737 MT
(:final-function)SH
11 /Times-Roman AF
(- This function)
197 W( is called after the interactor is complete.  The programmer might)196 W
11880 14933 MT
(supply a function here to)
7 W( cause the application to notice the users actions.  The particular form for)8 W
11880 16129 MT
(the parameters to this function is specific to the particular type of the interactor.)SH
10 /Courier AF
8280 17824 MT
(:stop-action)SH
11 /Times-Roman AF
(- This procedure is called once when the)108 W
10 /Courier AF
34424 XM
(:stop-event)SH
11 /Times-Roman AF
41407 XM
(happens, or if the interactor)
108 W( is)107 W
/Times-Italic SF
11880 19020 MT
(not)SH
/Times-Roman SF
13623 XM
(continuous, then this procedure is called once when the)62 W
10 /Courier AF
38801 XM
(:start-event)SH
11 /Times-Roman AF
46339 XM
(happens. The)
401 W( form)63 W
11880 20216 MT
(for the arguments is specific to the particular interactor sub-class.  Specifying NIL means do no)78 W
11880 21412 MT
(action. Normally,)
641 W( the)183 W
10 /Courier AF
22510 XM
(stop-action)SH
11 /Times-Roman AF
29569 XM
(procedure \050as well as the)184 W
10 /Courier AF
41696 XM
(start-action, running-)184 W
11880 22608 MT
(action, etc. below)2 W
11 /Times-Roman AF
22961 XM
(is)SH
/Times-Italic SF
23972 XM
(not)SH
/Times-Roman SF
25655 XM
(provided by)
2 W( the programmer, but rather inherited.  These functions)1 W
11880 23804 MT
(provide the default behavior, such as turning)
130 W( on and off the feedback object.  In particular the)131 W
11880 25000 MT
(default stop-action calls the final-function.  See section 8.9.)SH
10 /Courier AF
8280 26695 MT
(:start-action)SH
11 /Times-Roman AF
(- The action to take place when start-event happens when the mouse is over start-where)37 W
11880 27891 MT
(and continuous is T \050if continuous)
185 W( is NIL, then)186 W
10 /Courier AF
34447 XM
(stop-action)SH
11 /Times-Roman AF
41508 XM
(is called when the start-event)186 W
11880 29087 MT
(happens\051. The)
1081 W( form for the arguments is specific to)
403 W( the particular interactor sub-class.)402 W
11880 30283 MT
(Specifying NIL means do no action.  See section 8.9.)SH
10 /Courier AF
8280 31978 MT
(:running-action)SH
11 /Times-Roman AF
(- A procedure)
153 W( to be called as the interaction is running.  This is called repeatedly)154 W
11880 33174 MT
(\050typically for)
107 W( each incremental mouse movement\051 while the mouse is inside)106 W
10 /Courier AF
46680 XM
(:running-where)SH
11 /Times-Roman AF
11880 34370 MT
(and between when)104 W
10 /Courier AF
20651 XM
(:start-event)SH
11 /Times-Roman AF
28231 XM
(and)SH
10 /Courier AF
30199 XM
(:stop-event)SH
11 /Times-Roman AF
37179 XM
(happen. The)
485 W( form for the arguments is)105 W
11880 35566 MT
(specific to the particular interactor sub-class.)
97 W( Specifying)
467 W( NIL means do no action.  See section)96 W
11880 36762 MT
(8.9.)SH
10 /Courier AF
8280 38457 MT
(:abort-action)SH
11 /Times-Roman AF
(- This procedure is called when the interaction)
68 W( is aborted, either by)69 W
10 /Courier AF
46620 XM
(:abort-event)SH
11 /Times-Roman AF
54164 XM
(or)SH
10 /Courier AF
11880 39653 MT
(:stop-event)SH
11 /Times-Roman AF
18828 XM
(while outside.  The form for the)
73 W( arguments is specific to the particular interactor)72 W
11880 40849 MT
(sub-class. Specifying)
275 W( NIL means do no action.  See section 8.9.)SH
10 /Courier AF
8280 42544 MT
(:outside-action)SH
11 /Times-Roman AF
(- This procedure)
614 W( is called once each time the mouse goes from inside)615 W
10 /Courier AF
11880 43740 MT
(:running-where)SH
11 /Times-Roman AF
20676 XM
(to being outside.  It is)121 W
/Times-Italic SF
31210 XM
(not)SH
/Times-Roman SF
33011 XM
(called repeatedly while outside \050so it is different)120 W
11880 44936 MT
(from)SH
10 /Courier AF
14447 XM
(:running-action)SH
11 /Times-Roman AF
(\051. The)
583 W( form for the arguments)
154 W( is specific to the particular interactor)155 W
11880 46132 MT
(sub-class. Specifying)
275 W( NIL means do no action.  See section 8.9.)SH
10 /Courier AF
8280 47827 MT
(:back-inside-action)SH
11 /Times-Roman AF
(- This is called once)
36 W( each time the mouse goes from outside)35 W
10 /Courier AF
46680 XM
(:running-where)SH
11 /Times-Roman AF
11880 49023 MT
(to being inside.  Note that)72 W
10 /Courier AF
23953 XM
(:running-action)SH
11 /Times-Roman AF
33300 XM
(is)SH
/Times-Italic SF
34381 XM
(not)SH
/Times-Roman SF
36135 XM
(usually called on this point.  The form for)73 W
11880 50219 MT
(the arguments is specific to the particular interactor sub-class.  Specifying NIL)
195 W( means do no)194 W
11880 51415 MT
(action. See)
275 W( section 8.9.)SH
10 /Courier AF
8280 53110 MT
(:active)SH
11 /Times-Roman AF
(- Normally, an interactor is active \050willing to accept its start event\051 from the time it)
98 W( is created)99 W
11880 54306 MT
(until it is destroyed.  However, it is sometimes convenient)
117 W( to make an interactor inactive, so it)116 W
11880 55502 MT
(does not look for)
66 W( any events, for example, to have different modes in the interface.  This can be)67 W
11880 56698 MT
(achieved by setting the active field of the interactor.  If the interactor)
17 W( is running, setting)16 W
10 /Courier AF
50880 XM
(:active)SH
11 /Times-Roman AF
11880 57894 MT
(to NIL causes it to abort, and if the interactor is not running, then this just keeps it from)
45 W( starting.)46 W
11880 59090 MT
(This field can be set and changed at any time either using)6 W
10 /Courier AF
37488 XM
(s-value)SH
11 /Times-Roman AF
41969 XM
(or by having a formula in)
6 W( this)5 W
11880 60286 MT
(slot, but it is)
3 W( safest to use the)4 W
10 /Courier AF
24896 XM
(Change-active)SH
11 /Times-Roman AF
32975 XM
(procedure, since this guarantees that the interactor)4 W
11880 61482 MT
(will be aborted)
100 W( immediately if it is running.  Otherwise, if it is running when the)99 W
10 /Courier AF
49090 XM
(active)SH
11 /Times-Roman AF
53064 XM
(field)SH
11880 62678 MT
(changes to NIL, then it will)
76 W( abort the next time there is an event \050e.g., when the mouse moves\051.)77 W
11880 63874 MT
(See section 8.2 for more information.)SH
10 /Courier AF
8280 65569 MT
(:self-deactivate)SH
11 /Times-Roman AF
(- Normally, interactors are)
91 W( always active.  If this field is)90 W
10 /Courier AF
43766 XM
(T)SH
11 /Times-Roman AF
44731 XM
(however, the interactor)90 W
11880 66765 MT
(will become)
63 W( inactive after it runs once \050it will set its own)64 W
10 /Courier AF
38003 XM
(:active)SH
11 /Times-Roman AF
42542 XM
(slot to NIL\051.  The interactor)64 W
11880 67961 MT
(will then not run again until the)116 W
10 /Courier AF
26839 XM
(:active)SH
11 /Times-Roman AF
31430 XM
(field is explicitly set to)116 W
10 /Courier AF
42369 XM
(T)SH
11 /Times-Roman AF
(. If)
507 W( this field is used, it)
116 W( is)115 W
11880 69157 MT
(probably a bad idea to have a formula in the)SH
10 /Courier AF
31550 XM
(:active)SH
11 /Times-Roman AF
36025 XM
(slot.)SH
ES
%%Page: 240 21
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 240)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(6. Specific Interactors)SH
11 /Times-Roman AF
6120 10524 MT
(This section)
91 W( describes the specific interactors that have been defined.  Below is a list of the interactors,)92 W
6120 11720 MT
(and then the following sections describe them in more detail.)
83 W( There)
439 W( are also several interactors defined)82 W
6120 12916 MT
(for the)SH
10 /Courier AF
9296 XM
(multifont-text)SH
11 /Times-Roman AF
17971 XM
(object. These)
275 W( are described in the Opal manual.)SH
10 /Courier AF
6120 14867 MT
(Inter:Menu-Interactor)SH
11 /Times-Roman AF
19065 XM
(- to handle menu items, where the mouse)
70 W( can choose among a set of items.)71 W
9720 16063 MT
(Useful for menus, etc.)SH
10 /Courier AF
6120 17758 MT
(Inter:Button-Interactor)SH
11 /Times-Roman AF
20277 XM
(- to choose a particular button.  The difference)
82 W( from menus is that when)81 W
9720 18954 MT
(the mouse moves away, the item is deselected, rather than having a)
234 W( different item selected.)235 W
9720 20150 MT
(Useful for sets of buttons like "radio)
34 W( buttons" and "check boxes", and also for single, stand-alone)33 W
9720 21346 MT
(buttons. This)
275 W( can also be used just to select an object by making)SH
10 /Courier AF
38469 XM
(:continuous)SH
11 /Times-Roman AF
45344 XM
(be NIL.)SH
10 /Courier AF
6120 23041 MT
(Inter:Move-Grow-Interactor)SH
11 /Times-Roman AF
22021 XM
(- move or change the size of an object or one of a set of objects)
26 W( using)27 W
9720 24237 MT
(the mouse.  There may be feedback to show how the object moves or grows,)
72 W( or the object itself)71 W
9720 25433 MT
(may change with the mouse.  If defined over a set of)
21 W( objects, then the interactor gets the object to)22 W
9720 26629 MT
(change from where the interaction starts.  Useful for scroll bars, horizontal)
95 W( and vertical gauges,)94 W
9720 27825 MT
(and for moving and)
86 W( changing the size of application objects in a graphics editor.  It can change)87 W
9720 29021 MT
(the bounding box for the objects or the end points for a line.)SH
10 /Courier AF
6120 30716 MT
(Inter:Two-Point-Interactor)SH
11 /Times-Roman AF
22079 XM
(- This is used when there is no original object to modify, but one or)84 W
9720 31912 MT
(two new points are desired.  A rubber-band feedback object)
256 W( \050usually a rubber-band line or)257 W
9720 33108 MT
(rectangle\051 will typically be drawn based on the points specified.)SH
10 /Courier AF
6120 34803 MT
(Inter:Angle-Interactor)SH
11 /Times-Roman AF
19713 XM
(- Useful for)
118 W( getting the angle the mouse moves from around some point.)117 W
9720 35999 MT
(This can be used for circular gauges or for "stirring motions" for rotating.)SH
10 /Courier AF
6120 37694 MT
(Inter:Text-Interactor)SH
11 /Times-Roman AF
19135 XM
(- Used to input a small edited string of text.  The text can be one line)
140 W( or)141 W
9720 38890 MT
(multi-line.)SH
10 /Courier AF
6120 40585 MT
(Inter:Gesture-Interactor)SH
11 /Times-Roman AF
20795 XM
(- Used to recognize single-path gestures drawn with the mouse.)SH
10 /Courier AF
6120 42280 MT
(Inter:Animator-Interactor)SH
11 /Times-Roman AF
21493 XM
(- This interactor)
98 W( causes a function to be executed at regular intervals,)97 W
9720 43476 MT
(allowing rapid updating of graphics for animation.)SH
6120 49162 MT
(The following interactors are planned but not implemented yet.)SH
10 /Courier AF
6120 51113 MT
(Inter:Trace-Interactor)SH
11 /Times-Roman AF
20058 XM
(- This returns all of the points the mouse goes through between)463 W
10 /Courier AF
9720 52309 MT
(start-event)SH
11 /Times-Roman AF
16625 XM
(and)SH
10 /Courier AF
18518 XM
(stop-event)SH
11 /Times-Roman AF
(. This)
335 W( is useful for inking in a)
30 W( drawing program.  Although this)29 W
9720 53505 MT
(isn't implemented yet, it is trivial to use a gesture interactor with a)SH
10 /Courier AF
39232 XM
(:classifier)SH
11 /Times-Roman AF
46107 XM
(of NIL.)SH
10 /Courier AF
6120 55200 MT
(Inter:Multi-Point-Interactor)SH
11 /Times-Roman AF
23236 XM
(- This is used when there is no original)
41 W( object to modify, but more)42 W
9720 56396 MT
(than 2 new points are desired.  This is separate from the)71 W
10 /Courier AF
35405 XM
(two-point-interactor)SH
11 /Times-Roman AF
47751 XM
(because the)70 W
9720 57592 MT
(way the)
294 W( points are stored is usually different, and the stopping conditions are much more)295 W
9720 58788 MT
(complicated for multi-points.)29 W
/Times-Bold SF
23249 XM
(Not implemented yet.  However, there is a gadget)
29 W( in the gadget)28 W
9720 59984 MT
(set that will do most of this.  See)SH
10 /Courier AF
24996 XM
(garnet-gadgets:polyline-creator)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 241 22
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.1)
SH( Menu-Interactor)1800 W
51386 XM
(Page 241)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(6.1. Menu-Interactor)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'inter:Menu-Interactor inter:interactor)SH
/Times-Italic SF
11160 10168 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
11160 11033 MT
(\050:start-where NIL\051)SH
11160 11898 MT
(\050:window NIL\051)SH
11160 12763 MT
(\050:start-event :leftdown\051)SH
11160 13628 MT
(\050:continuous T\051)SH
11160 14493 MT
(\050:stop-event NIL\051)SH
11160 15358 MT
(\050:running-where NIL\051)SH
11160 16223 MT
(\050:outside NIL\051)SH
11160 17088 MT
(\050:abort-event :control-\134g\051)SH
11160 17953 MT
(\050:waiting-priority normal-priority-level\051)SH
11160 18818 MT
(\050:running-priority running-priority-level\051)SH
11160 19683 MT
(\050:active T\051)SH
11160 20548 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
11160 22278 MT
(; Slots specific to the menu-interactor \050discussed in this section\051)SH
/Courier SF
11160 23143 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
24120 XM
(; \050lambda \050inter final-obj-over\051\051)SH
/Courier SF
11160 24008 MT
(\050:how-set :set\051)SH
/Times-Italic SF
24120 XM
(; How to select new items \050toggle selection, etc.\051)SH
/Courier SF
11160 24873 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; Optional interim feedback object.  The inter will set this object's :obj-over slot.)SH
/Courier SF
11160 25738 MT
(\050:final-feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; The optional object to indicate the final selection)SH
/Courier SF
11160 26603 MT
(\050:slots-to-set)SH
/Times-Italic SF
24120 XM
(; Names of slots to set in the objects)SH
/Courier SF
11640 27468 MT
('\050:interim-selected)SH
/Times-Italic SF
24120 XM
(; '\050<interim-selected-slot-name-in-obj>)400 W
/Courier SF
12600 28333 MT
(:selected)SH
/Times-Italic SF
24120 XM
(; <selected-slot-name-in-obj>)800 W
/Courier SF
12600 29198 MT
(:selected\051\051)SH
/Times-Italic SF
24120 XM
(; <selected-slot-name-in-aggregate>\051)800 W
/Courier SF
11160 30063 MT
(\050:final-feed-inuse NIL\051)SH
/Times-Italic SF
24120 XM
(; Read-only slot.  A list of final feedback objects \050section 6.1.1.3\051)SH
11160 31793 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18357 XM
(Read-only slots.)SH
11160 32658 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
11160 33523 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
11160 34388 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
11160 35253 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The character or keyword of the start event.)SH
11160 36983 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18157 XM
(Customizable action routines.)SH
11160 37848 MT
(; See sections 5 and 8.9.1 for details about functions in these slots.)SH
/Courier SF
11160 38713 MT
(\050:start-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter first-obj-under-mouse\051\051)SH
/Courier SF
11160 39578 MT
(\050:running-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter prev-obj-over new-obj-over\051\051)SH
/Courier SF
11160 40443 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter final-obj-over\051\051)SH
/Courier SF
11160 41308 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter last-obj-over\051\051)SH
/Courier SF
11160 42173 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter outside-control prev-obj-over\051\051)SH
/Courier SF
11160 43038 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter outside-control prev-obj-over new-obj-over\051\051)SH
/Courier SF
10200 43903 MT
(...\051)SH
11 /Times-Roman AF
8280 45324 MT
(\050Note: If you just want to use a pre-defined menu, it may be sufficient to use)
58 W( one of the menu objects in)59 W
8280 46520 MT
(the Garnet Gadget Set.\051)SH
8280 48818 MT
(The menu interactor is used \050not surprisingly\051 mostly for menus.)
136 W( There)
545 W( is typically some feedback to)135 W
8280 50014 MT
(show where the mouse is while the interactor is running.  This is)
40 W( called the)41 W
/Times-Italic SF
42059 XM
(interim feedback)41 W
/Times-Roman SF
(. A)
357 W( separate)41 W
8280 51210 MT
(kind of feedback might be used to show the final object selected.  This is called the)SH
/Times-Italic SF
45120 XM
(final feedback)SH
/Times-Roman SF
(.)SH
8280 53508 MT
(Unlike button interactors \050see section 6.2\051, Menu-interactors allow the user to move from one)
153 W( item to)152 W
8280 54704 MT
(another while the interactor is running.  For example, the user can press over one menu)
90 W( item, move the)91 W
8280 55900 MT
(mouse to another menu item, and release, and the second item is the one that is selected.)SH
8280 58198 MT
(There are a number of examples of the use of menu)
75 W( interactors below.  Other examples can be found in)74 W
8280 59394 MT
(the)SH
10 /Courier AF
9899 XM
(menu)SH
11 /Times-Roman AF
12574 XM
(gadget in the Garnet Gadget Set, and in the file)SH
10 /Courier AF
33559 XM
(demo-menu.lisp)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 63078 MT
(6.1.1. Default Operation)SH
11 /Times-Roman AF
8280 64274 MT
(This section describes how the menu interactor works if)
19 W( the programmer does not remove or override any)20 W
8280 65470 MT
(of the standard)SH
10 /Courier AF
15091 XM
(-action)SH
11 /Times-Roman AF
19566 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.1.)SH
8280 67768 MT
(The menu interactor provides many different ways to)
95 W( control how the feedback graphics are controlled.)94 W
8280 68964 MT
(In all of these, the interactor sets)
13 W( special slots in objects, and the graphics must have formulas that depend)14 W
8280 70160 MT
(on these slots.)SH
ES
%%Page: 242 23
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 242)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.1.1.1. Interim Feedback)SH
11 /Times-Roman AF
6120 9200 MT
(To signify the object that the mouse is over as)76 W
/Times-Italic SF
27409 XM
(interim feedback)75 W
/Times-Roman SF
35195 XM
(\050while the interactor is running\051, menu-)75 W
6120 10396 MT
(interactors set two different slots.  If)
87 W( there is a feedback object supplied in the)88 W
10 /Courier AF
41888 XM
(:feedback-obj)SH
11 /Times-Roman AF
50051 XM
(slot of)88 W
6120 11592 MT
(the interactor, then the)148 W
10 /Courier AF
16883 XM
(:obj-over)SH
11 /Times-Roman AF
22706 XM
(slot of the feedback object is set to the current menu item)
148 W( object.)147 W
6120 12788 MT
(Also, the)34 W
10 /Courier AF
10435 XM
(:interim-selected)SH
11 /Times-Roman AF
20945 XM
(slot of the current menu item is set to T, and the)35 W
10 /Courier AF
42720 XM
(:interim-selected)SH
11 /Times-Roman AF
6120 13984 MT
(slots of all other items are set to NIL.  Note: there is always at most one interim-selected object,)258 W
6120 15180 MT
(independent of the value of the)SH
10 /Courier AF
20048 XM
(:how-set)SH
11 /Times-Roman AF
25123 XM
(slot.)SH
6120 17478 MT
(This supports two different ways to handle interim feedback:)SH
/Times-Bold SF
6120 19776 MT
(A single feedback object.)SH
/Times-Roman SF
6120 22074 MT
(This object should)
13 W( be supplied in the)14 W
10 /Courier AF
22685 XM
(:feedback-obj)SH
11 /Times-Roman AF
30774 XM
(slot of the interactor.  The)14 W
10 /Courier AF
42557 XM
(:obj-over)SH
11 /Times-Roman AF
48246 XM
(slot of this)14 W
6120 23270 MT
(object is set to the menu item that the feedback should appear over, or NIL if there is no)
124 W( object.  The)123 W
6120 24466 MT
(following is an example of a typical reverse-video black rectangle as a feedback object:)SH
8 /Courier AF
8040 25631 MT
(\050create-instance 'FEEDBACK-RECT opal:rectangle)SH
9480 26496 MT
(\050:obj-over NIL\051 ;)SH
/Times-Italic SF
(set by the interactor)SH
/Courier SF
9480 27361 MT
(\050:visible \050o-formula \050gvl :obj-over\051\051\051 ;)SH
/Times-Italic SF
(this rectangle is visible)SH
/Courier SF
28200 28226 MT
(;)SH
/Times-Italic SF
(only if over something)SH
/Courier SF
9480 29091 MT
(\050:left \050o-formula \050gvl :obj-over :left\051\051\051)SH
9480 29956 MT
(\050:top \050o-formula \050gvl :obj-over :top\051\051\051)SH
9480 30821 MT
(\050:width \050o-formula \050gvl :obj-over :width\051\051\051)SH
9480 31686 MT
(\050:height \050o-formula \050gvl :obj-over :height\051\051\051)SH
9480 32551 MT
(\050:fast-redraw-p T\051)SH
9480 33416 MT
(\050:draw-function :xor\051)SH
9480 34281 MT
(\050:filling-style opal:black-fill\051)SH
9480 35146 MT
(\050:line-style NIL\051\051)SH
11 /Times-Roman AF
6120 37444 MT
(The interactor to use it would be something like:)SH
8 /Courier AF
8040 38609 MT
(\050create-instance 'SELECT-INTER Inter:Menu-Interactor)SH
9480 39474 MT
(\050:start-where `\050:element-of ,ITEMSAGG\051\051)SH
9480 40339 MT
(\050:feedback-obj FEEDBACK-RECT\051)SH
9480 41204 MT
(\050:window MYWINDOW\051\051)SH
11 /Times-Roman AF
6120 42625 MT
(The items that can be chosen are elements of an aggregate named ITEMSAGG.)SH
/Times-Bold SF
6120 44923 MT
(Multiple feedback objects.)SH
/Times-Roman SF
6120 47221 MT
(In this case, each item of the menu might have its)
130 W( own feedback object, or else some property of that)131 W
6120 48417 MT
(menu item object might change as the mouse moves over it.  Here, you would have formulas that)239 W
6120 49613 MT
(depended on the)SH
10 /Courier AF
13603 XM
(:interim-selected)SH
11 /Times-Roman AF
24078 XM
(slot of the menu item.)SH
ES
%%Page: 243 24
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.1)
SH( Menu-Interactor)1800 W
51386 XM
(Page 243)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(If there are separate)
68 W( objects associated with each menu item that will be the interim feedback, then their)69 W
8280 9151 MT
(visibility slot can simply be tied to the)102 W
10 /Courier AF
26210 XM
(:interim-selected)SH
11 /Times-Roman AF
36787 XM
(slot. An)
477 W( example using an Aggregadget)101 W
8280 10347 MT
(which is the item-prototype for an AggreList \050see the Aggregadgets manual\051)
22 W( with an embedded interactor)23 W
8280 11543 MT
(is:)SH
8 /Courier AF
10200 12708 MT
(\050create-instance 'MYMENU opal:aggrelist)SH
11640 13573 MT
(\050:items '\050"One" "Two" "Three"\051\051)SH
11640 14438 MT
(\050:item-prototype)SH
12120 15303 MT
(`\050opal:aggregadget)SH
13080 16168 MT
(\050:width ,\050o-formula \050gvl :str :width\051\051\051)SH
13080 17033 MT
(\050:height ,\050o-formula \050gvl :str :height\051\051\051)SH
13080 17898 MT
(\050:my-item ,\050o-formula \050nth \050gvl :rank\051 \050gvl :parent :items\051\051\051\051)SH
13080 18763 MT
(\050:parts)SH
13560 19628 MT
(`\050\050:str ,opal:text)SH
17400 20493 MT
(\050:string ,\050o-formula \050gvl :parent :my-item\051\051\051)SH
17400 21358 MT
(\050:left ,\050o-formula \050gvl :parent :left\051\051\051)SH
17400 22223 MT
(\050:top ,\050o-formula \050gvl :parent :top\051\051\051\051)SH
14520 23088 MT
(\050:interim-feed ,opal:rectangle)SH
15000 23953 MT
(;;)SH
/Times-Italic SF
(The next slot causes the feedback to go on at the right time)SH
/Courier SF
21720 24818 MT
(\050:visible ,\050o-formula \050gvl :parent :interim-selected\051\051\051)SH
21720 25683 MT
(\050:left ,\050o-formula \050gvl :parent :left\051\051\051)SH
21720 26548 MT
(\050:top ,\050o-formula \050gvl :parent :top\051\051\051)SH
21720 27413 MT
(\050:width ,\050o-formula \050gvl :parent :width\051\051\051)SH
21720 28278 MT
(\050:height ,\050o-formula \050gvl :parent :height\051\051\051)SH
21720 29143 MT
(\050:fast-redraw-p T\051)SH
21720 30008 MT
(\050:draw-function :xor\051)SH
21720 30873 MT
(\050:filling-style ,opal:black-fill\051)SH
21720 31738 MT
(\050:line-style NIL\051\051\051\051\051\051)SH
11640 32603 MT
(\050:interactors)SH
12120 33468 MT
(`\050\050:inter ,Inter:Menu-Interactor)SH
16920 34333 MT
(\050:start-where ,\050o-formula \050list :element-of \050gvl :operates-on\051\051\051\051)SH
16920 35198 MT
(\050:window ,MYWINDOW\051\051\051\051\051)SH
12 /Times-Bold AF
8280 38162 MT
(6.1.1.2. Final Feedback)SH
11 /Times-Roman AF
8280 39358 MT
(For some menus, the application just wants to know which item was selected, and there is no graphics to)44 W
8280 40554 MT
(show the final selection.  In other cases, there should be)102 W
/Times-Italic SF
34235 XM
(final feedback)102 W
/Times-Roman SF
40915 XM
(graphics to show the object the)102 W
8280 41750 MT
(mouse ends up on.)SH
8280 44048 MT
(The Menu-Interactor supplies three ways to have graphics \050or applications\051)
38 W( depend on the final selection.)37 W
8280 45244 MT
(Both the)17 W
10 /Courier AF
12348 XM
(:selected)SH
11 /Times-Roman AF
18040 XM
(slot of the individual item and)
17 W( the)18 W
10 /Courier AF
33286 XM
(:selected)SH
11 /Times-Roman AF
38979 XM
(slot of the aggregate the items are in)18 W
8280 46440 MT
(are set.  The item's)20 W
10 /Courier AF
17054 XM
(:selected)SH
11 /Times-Roman AF
22749 XM
(slot is set with T or NIL, as)
20 W( appropriate, and the aggregate's)19 W
10 /Courier AF
49680 XM
(:selected)SH
11 /Times-Roman AF
8280 47636 MT
(slot is set with the particular item\050s\051 selected.  The number of items that are allowed to)
135 W( be selected is)136 W
8280 48832 MT
(controlled by the)SH
10 /Courier AF
16009 XM
(:how-set)SH
11 /Times-Roman AF
21084 XM
(slot of the interactor, as described in section 6.1.1.4.)SH
8280 51130 MT
(Note that the aggregate's)64 W
10 /Courier AF
19836 XM
(:selected)SH
11 /Times-Roman AF
25575 XM
(slot often contains a list of object names, but)
64 W( the)63 W
10 /Courier AF
47752 XM
(:selected)SH
11 /Times-Roman AF
53490 XM
(slot)SH
8280 52326 MT
(in the individual items will always)
186 W( contain T or NIL.  The programmer is responsible for setting up)187 W
8280 53522 MT
(constraints so that the appropriate final feedback is shown based on the)SH
10 /Courier AF
39864 XM
(:selected)SH
11 /Times-Roman AF
45539 XM
(field.)SH
8280 55820 MT
(If there is no aggregate \050because)124 W
10 /Courier AF
23558 XM
(:start-where)SH
11 /Times-Roman AF
31157 XM
(is something like)124 W
10 /Courier AF
39321 XM
(\050:in xxx\051)123 W
11 /Times-Roman AF
45242 XM
(rather than something)123 W
8280 57016 MT
(like)SH
10 /Courier AF
10222 XM
(\050:element-of xxx\051)17 W
11 /Times-Roman AF
(\051, then the slot of the object is set with T or)
17 W( NIL.  If the the)18 W
10 /Courier AF
46853 XM
(:start-where)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 58212 MT
(one of the ``list'' styles \050e.g.)12 W
10 /Courier AF
21405 XM
(\050:list-element-of obj slot\051)11 W
11 /Times-Roman AF
(, then the)11 W
10 /Courier AF
41998 XM
(:selected)SH
11 /Times-Roman AF
47684 XM
(slot of the object)11 W
8280 59408 MT
(the list is stored in \050here,)SH
10 /Courier AF
19431 XM
(obj)SH
11 /Times-Roman AF
(\051 is set as if that was the aggregate.)SH
8280 61706 MT
(The third way to)
60 W( show the final feedback is to use the)61 W
10 /Courier AF
32835 XM
(:final-feedback-obj)SH
11 /Times-Roman AF
44571 XM
(slot, which is described)61 W
8280 62902 MT
(in the next section.)SH
12 /Times-Bold AF
8280 65866 MT
(6.1.1.3. Final Feedback Objects)SH
11 /Times-Roman AF
8280 67062 MT
(The)SH
10 /Courier AF
10745 XM
(:feedback-obj)SH
11 /Times-Roman AF
19300 XM
(slot can be used for the object to)
480 W( show the interim-feedback, and the)479 W
10 /Courier AF
8280 68258 MT
(:final-feedback-obj)SH
11 /Times-Roman AF
20014 XM
(slot can be used to hold the object to show the final feedback.  Garnet will)
59 W( set)60 W
8280 69454 MT
(the)SH
10 /Courier AF
9970 XM
(:obj-over)SH
11 /Times-Roman AF
15716 XM
(slot of this object to the object that the interactor finishes on.  If the)71 W
10 /Courier AF
46658 XM
(:how-set)SH
11 /Times-Roman AF
51803 XM
(field of)70 W
8280 70650 MT
(the interactor is one of the)64 W
10 /Courier AF
20454 XM
(:list-*)SH
11 /Times-Roman AF
24993 XM
(options, then there might be)64 W
/Times-Italic SF
37901 XM
(multiple)SH
/Times-Roman SF
41846 XM
(final feedback objects needed)65 W
8280 71846 MT
(to show all the objects selected.  In this)
380 W( case, the interactor creates instances of object in the)379 W
ES
%%Page: 244 25
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 244)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(:final-feedback-obj)SH
11 /Times-Roman AF
18150 XM
(slot. Therefore,)
985 W( this object should)355 W
/Times-Italic SF
35616 XM
(not)SH
/Times-Roman SF
37652 XM
(be an aggregate;)
355 W( it must be an)356 W
4274 50 40988 8155 UL
6120 9151 MT
(aggregadget instead \050or it can be a single Opal object, such)
295 W( as a rectangle, circle, polyline, etc.\051.)294 W
5374 50 6120 9351 UL
6120 10347 MT
(Furthermore, the final-feedback object itself should not be a)57 W
10 /Courier AF
33329 XM
(:part)SH
11 /Times-Roman AF
36661 XM
(of an aggregadget, since you are not)58 W
6120 11543 MT
(allowed to add new objects to an aggregadget with parts.)SH
6120 13841 MT
(The)SH
10 /Courier AF
8110 XM
(:final-feedback-obj)SH
11 /Times-Roman AF
19790 XM
(slot may contain a formula, which might compute the appropriate)
5 W( feedback)4 W
6120 15037 MT
(object based on the object selected.  The)
59 W( interactor will automatically duplicate the appropriate feedback)60 W
6120 16233 MT
(object if more than one is needed \050e.g., if)152 W
10 /Courier AF
25814 XM
(:how-set)SH
11 /Times-Roman AF
31041 XM
(is)SH
10 /Courier AF
32201 XM
(:list-toggle)SH
11 /Times-Roman AF
(\051. One)
577 W( use of this is to have)151 W
6120 17429 MT
(different kinds of feedback for different kinds of objects, and another would be to)
14 W( have different feedback)15 W
6120 18625 MT
(objects in different windows,)
211 W( for an interactor that works across multiple windows.)
210 W( To)
1180 W( aid in this)210 W
6120 19821 MT
(computation, the)126 W
10 /Courier AF
14041 XM
(:current-obj-over)SH
11 /Times-Roman AF
24642 XM
(slot of the interactor is set with the object)
126 W( the mouse was last)127 W
6120 21017 MT
(over, and the)174 W
10 /Courier AF
12628 XM
(:current-window)SH
11 /Times-Roman AF
22077 XM
(slot of the interactor is maintained with the window of the current)174 W
6120 22213 MT
(event.)SH
6120 24511 MT
(If the start-where is one of the)73 W
10 /Courier AF
20160 XM
(...-or-none)SH
11 /Times-Roman AF
27108 XM
(forms, then whenever the user presses in the background,)73 W
6120 25707 MT
(the final feedback objects are all turned off.)SH
6120 28005 MT
(For examples of the use of final-feedback-objects, see MENU1 \050the month)
5 W( menu\051 or MENU2 \050the day-of-)4 W
6120 29201 MT
(the-week menu\051 in)SH
10 /Courier AF
14641 XM
(demo-menu.lisp)SH
11 /Times-Roman AF
(.)SH
/Times-Bold SF
6120 31499 MT
(Useful Functions)SH
/Times-Roman SF
6120 33797 MT
(In order to help with final feedback objects, there are a number)
16 W( of additional, useful functions.  To get the)17 W
6120 34993 MT
(final-feedback objects currently being displayed by an interactor, you can use:)SH
8 /Courier AF
8040 36206 MT
(inter:Return-Final-Selection-Objs)SH
/Times-Italic SF
24360 XM
(inter)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 38504 MT
(If you want to reference the current final)
39 W( feedback objects in a)38 W
/Times-Italic SF
34249 XM
(formula)SH
/Times-Roman SF
(, however, then you should access)38 W
6120 39700 MT
(the)SH
10 /Courier AF
7912 XM
(:final-feed-inuse)SH
11 /Times-Roman AF
18561 XM
(slot of the menu interactor.  This slot contains a list of the final feedback)174 W
6120 40896 MT
(objects that are)
42 W( in use.)41 W
/Times-Italic SF
16723 XM
(Do not set this slot)41 W
/Times-Roman SF
(. This)
357 W( might be useful if you wanted to use the final feedback)41 W
6120 42092 MT
(objects as the start objects)
34 W( for another interactor \050e.g, one to move the object selected by a final-feedback)35 W
6120 43288 MT
(object\051:)SH
8 /Courier AF
8040 44453 MT
(\050create-instance NIL Inter:Move-Grow-Interactor)SH
9480 45318 MT
(;;)SH
/Times-Italic SF
10920 XM
(start when press on a final-feedback object of SELECT-INTER)SH
/Courier SF
9480 46183 MT
(\050:start-where \050formula `\050list :list-element-of)SH
23880 47048 MT
(`,SELECT-INTER :final-feed-inuse\051\051\051)SH
9480 47913 MT
(;;)SH
/Times-Italic SF
(actually move the object which the feedback objects are over.)SH
/Courier SF
9480 48778 MT
(\050:obj-to-change \050o-formula \050gvl :first-obj-over :obj-over\051\051\051)SH
9480 49643 MT
(..... ;)SH
/Times-Italic SF
13320 XM
(all the other slots)SH
/Courier SF
9480 50508 MT
(\051)SH
11 /Times-Roman AF
6120 52806 MT
(If a program wants to make an object be selected, it can call:)SH
8 /Courier AF
8040 54019 MT
(inter:SelectObj)SH
/Times-Italic SF
15720 XM
(inter obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 55440 MT
(which will)
62 W( cause the object to become selected.  This uses the)61 W
10 /Courier AF
34314 XM
(:how-set)SH
11 /Times-Roman AF
39450 XM
(slot of the interactor to decide)61 W
6120 56636 MT
(whether to deselect the)
354 W( other objects \050whether single or multiple objects can be selected\051.  The)355 W
10 /Courier AF
6120 57832 MT
(:selected)SH
11 /Times-Roman AF
11998 XM
(slots of the object and the aggregate are set, and the final-feedback)
203 W( objects are handled)202 W
6120 59028 MT
(appropriately. To)
275 W( de-select an object, use:)SH
8 /Courier AF
8040 60241 MT
(inter:DeSelectObj)SH
/Times-Italic SF
16680 XM
(inter obj)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
12 /Times-Bold AF
6120 63205 MT
(6.1.1.4. Items Selected)SH
11 /Times-Roman AF
6120 64401 MT
(The menu interactor will automatically handle control over the)93 W
/Times-Italic SF
34847 XM
(number)SH
/Times-Roman SF
38576 XM
(of items selected.  A slot of the)94 W
6120 65597 MT
(interactor \050)90 W
10 /Courier AF
(:how-set)SH
11 /Times-Roman AF
(\051 determines whether a single item can be)
90 W( selected or multiple items.  In addition,)89 W
6120 66793 MT
(this slot also determines how this interactor will affect the)
37 W( selected items.  For example, if multiple items)38 W
6120 67989 MT
(can be selected, the)
118 W( most common option is for the interactor to ``toggle'' the selection \050so if the item)117 W
6120 69185 MT
(under the mouse was selected, it becomes de-selected,)
269 W( and if it was not selected, then it becomes)270 W
6120 70381 MT
(selected\051. Another)
416 W( design might use two interactors: one to select items when the left button is pressed,)70 W
6120 71577 MT
(and another to de-select items when the right button is pressed.  The)20 W
10 /Courier AF
36622 XM
(:how-set)SH
11 /Times-Roman AF
41717 XM
(slot provides)
20 W( for all these)21 W
ES
%%Page: 245 26
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.1)
SH( Menu-Interactor)1800 W
51386 XM
(Page 245)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(options.)SH
8280 10253 MT
(In particular, the legal values for the)SH
10 /Courier AF
24528 XM
(:how-set)SH
11 /Times-Roman AF
29603 XM
(slot are:)SH
10 /Courier AF
8280 12204 MT
(:set)SH
11 /Times-Roman AF
11063 XM
(- Select the final item.  One item is selectable at a time.  The aggregate's)108 W
10 /Courier AF
44985 XM
(:selected)SH
11 /Times-Roman AF
50768 XM
(slot is set)108 W
11880 13400 MT
(with this object.  The item's)SH
10 /Courier AF
24499 XM
(:selected)SH
11 /Times-Roman AF
30174 XM
(slot is set with T.)SH
10 /Courier AF
8280 15095 MT
(:clear)SH
11 /Times-Roman AF
12171 XM
(- De-select)
16 W( the final item.  At most one item is selectable at a time.  The aggregate's)17 W
10 /Courier AF
49680 XM
(:selected)SH
11 /Times-Roman AF
11880 16291 MT
(slot is set to NIL.  \050If some item other than the final item used to be)
28 W( selected, then that other item)27 W
11880 17487 MT
(becomes de-selected.  I.e., using)196 W
10 /Courier AF
27367 XM
(:clear)SH
11 /Times-Roman AF
31439 XM
(always causes there to be no selected items.\051  The)197 W
11880 18683 MT
(item's)SH
10 /Courier AF
14980 XM
(:selected)SH
11 /Times-Roman AF
20730 XM
(slot is set)
75 W( to NIL.  \050This choice for how-set is mainly useful when the menu)74 W
11880 19879 MT
(item contains a single item that can be turned on)
21 W( and off by different interactors\320e.g., left button)22 W
11880 21075 MT
(turns it on and)
249 W( right button turns it off.  With a set of menu items,)248 W
10 /Courier AF
44939 XM
(:set)SH
11 /Times-Roman AF
47862 XM
(is usually more)248 W
11880 22271 MT
(appropriate.\051)SH
10 /Courier AF
8280 23966 MT
(:toggle)SH
11 /Times-Roman AF
12808 XM
(- Select if not selected, clear if selected.  At most one item is selectable at)
53 W( a time.  This means)54 W
11880 25162 MT
(that if there are a set of objects and you select the object)
165 W( that used to be selected, then there)164 W
11880 26358 MT
(becomes no objects selected.  \050This is mainly useful when)
140 W( there is a single button that can be)141 W
11880 27554 MT
(turned on and off by one interactor\320each press changes the state.  With a set of menu items,)139 W
10 /Courier AF
11880 28750 MT
(:list-toggle)SH
11 /Times-Roman AF
19385 XM
(or)SH
10 /Courier AF
20606 XM
(:set)SH
11 /Times-Roman AF
23311 XM
(is usually more appropriate.  However, this option)
30 W( could be used with a)31 W
11880 29946 MT
(set of items if you wanted to allow the user to make there be)SH
/Times-Italic SF
38700 XM
(no)SH
/Times-Roman SF
40075 XM
(selection.\051)SH
10 /Courier AF
8280 31641 MT
(:list-add)SH
11 /Times-Roman AF
13961 XM
(- If not in list of selected items, then add it.  Multiple items are selectable at)
6 W( a time.  The item)5 W
11880 32837 MT
(is added to the aggregate's)79 W
10 /Courier AF
24278 XM
(:selected)SH
11 /Times-Roman AF
30032 XM
(slot using)79 W
10 /Courier AF
34714 XM
(pushnew)SH
11 /Times-Roman AF
(. The)
435 W( item's)80 W
10 /Courier AF
45069 XM
(:selected)SH
11 /Times-Roman AF
50824 XM
(slot is set)80 W
11880 34033 MT
(with T.)SH
10 /Courier AF
8280 35728 MT
(:list-remove)SH
11 /Times-Roman AF
15868 XM
(- If in list of selected items, then remove it.  Multiple items selectable at a time.)
113 W( The)500 W
11880 36924 MT
(item is removed from the aggregate's)90 W
10 /Courier AF
29159 XM
(:selected)SH
11 /Times-Roman AF
34925 XM
(slot. The)
457 W( item's)91 W
10 /Courier AF
42714 XM
(:selected)SH
11 /Times-Roman AF
48480 XM
(slot is set with)91 W
11880 38120 MT
(NIL.)SH
10 /Courier AF
8280 39815 MT
(:list-toggle)SH
11 /Times-Roman AF
16000 XM
(- If in list of selected items, then remove it, otherwise add it.)
245 W( Multiple)
764 W( items are)244 W
11880 41011 MT
(selectable at a time.  The item is removed or)
155 W( added to the aggregate's)156 W
10 /Courier AF
44812 XM
(:selected)SH
11 /Times-Roman AF
50643 XM
(slot. The)587 W
11880 42207 MT
(item's)SH
10 /Courier AF
14905 XM
(selected)SH
11 /Times-Roman AF
19980 XM
(slot is set with T or NIL.)SH
8280 43902 MT
(<a number> - Increment the)92 W
10 /Courier AF
21371 XM
(:selected)SH
11 /Times-Roman AF
27137 XM
(slot of the item by that amount \050which can be negative\051.  The)91 W
11880 45098 MT
(aggregate's)SH
10 /Courier AF
17230 XM
(:selected)SH
11 /Times-Roman AF
22912 XM
(slot is set to this object.  The value of)
7 W( the item's selected slot should be a)8 W
11880 46294 MT
(number.)SH
8280 47989 MT
(<a list of)
48 W( two numbers>:)47 W
10 /Courier AF
19626 XM
(\050inc mod\051)47 W
11 /Times-Roman AF
25395 XM
(- Increment the)47 W
10 /Courier AF
32529 XM
(:selected)SH
11 /Times-Roman AF
38251 XM
(slot of the item by the)47 W
10 /Courier AF
48433 XM
(car)SH
11 /Times-Roman AF
50555 XM
(of the list,)47 W
11880 49185 MT
(modulus the)22 W
10 /Courier AF
17608 XM
(cadr)SH
11 /Times-Roman AF
20305 XM
(of the list.  The aggregate's)22 W
10 /Courier AF
32746 XM
(:selected)SH
11 /Times-Roman AF
38443 XM
(slot is set to this object.  The value)
22 W( of)23 W
11880 50381 MT
(the item's selected slot should be a number.)SH
8280 52679 MT
(The default value for)SH
10 /Courier AF
17808 XM
(:how-set)SH
11 /Times-Roman AF
22883 XM
(for menus is)SH
10 /Courier AF
28596 XM
(:set)SH
11 /Times-Roman AF
(, so one item is selected at a time.)SH
12 /Times-Bold AF
8280 55643 MT
(6.1.1.5. Application Notification)SH
11 /Times-Roman AF
8280 56839 MT
(To have an application notice the effect of the menu-interactor, you can simply have some slot of)
83 W( some)82 W
8280 58035 MT
(object in the application contain a formula that depends on the aggregate's)SH
10 /Courier AF
41330 XM
(:selected)SH
11 /Times-Roman AF
47005 XM
(slot.)SH
8280 60333 MT
(Alternatively, the programmer can provide a function to be called when)
163 W( the interactor is complete by)164 W
8280 61529 MT
(putting the function in the)3 W
10 /Courier AF
19997 XM
(:final-function)SH
11 /Times-Roman AF
29274 XM
(slot. This)
279 W( function is called with the following arguments:)2 W
8 /Courier AF
10200 62694 MT
(\050lambda \050an-interactor final-obj-over\051\051)SH
12 /Times-Bold AF
8280 65658 MT
(6.1.1.6. Normal Operation)SH
11 /Times-Roman AF
8280 66854 MT
(If the value of)56 W
10 /Courier AF
14978 XM
(:continuous)SH
11 /Times-Roman AF
21909 XM
(is T, then when the start event happens, the interim feedback)
56 W( is turned on,)57 W
8280 68050 MT
(as described in section 6.1.1.1.  If the)
145 W( mouse moves to a different menu item, the interim feedback is)144 W
8280 69246 MT
(changed to that item.  If)
16 W( the mouse moves outside, the interim feedback is turned off, unless)17 W
10 /Courier AF
49254 XM
(:outside)SH
11 /Times-Roman AF
54346 XM
(is)SH
10 /Courier AF
8280 70442 MT
(:last)SH
11 /Times-Roman AF
11693 XM
(\050see section 3.5.8\051.  If the interactor aborts, the)
138 W( interim feedback is turned off.  When the stop)137 W
8280 71638 MT
(event happens, the interim)
79 W( feedback is turned off, and the final)80 W
10 /Courier AF
36982 XM
(:selected)SH
11 /Times-Roman AF
42737 XM
(slots are set as described in)80 W
ES
%%Page: 246 27
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 246)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(section 6.1.1.2 based on the value of the)160 W
10 /Courier AF
25331 XM
(:how-set)SH
11 /Times-Roman AF
30566 XM
(parameter \050section 6.1.1.4\051,)
160 W( then the)159 W
10 /Courier AF
47520 XM
(:obj-over)SH
11 /Times-Roman AF
6120 9151 MT
(field of the final-feedback-obj is set to)
126 W( the final selection \050possibly after creating a new final feedback)127 W
6120 10347 MT
(object, if necessary\051, as described in section 6.1.1.3.  Then the)
123 W( final-function \050if any\051 is called \050section)122 W
6120 11543 MT
(6.1.1.5\051.)SH
6120 13841 MT
(If the interactor is)9 W
/Times-Italic SF
14280 XM
(not)SH
/Times-Roman SF
15970 XM
(continuous, when the start event happens, the)9 W
10 /Courier AF
36286 XM
(:selected)SH
11 /Times-Roman AF
41970 XM
(slots are set based on the)9 W
6120 15037 MT
(value of the)186 W
10 /Courier AF
12145 XM
(:how-set)SH
11 /Times-Roman AF
17406 XM
(parameter, the)186 W
10 /Courier AF
24343 XM
(:obj-over)SH
11 /Times-Roman AF
30204 XM
(slot of the final-feedback-obj is set, and then)
186 W( the)185 W
6120 16233 MT
(final-function is called.)SH
12 /Times-Bold AF
6120 19917 MT
(6.1.2. Slots-To-Set)SH
11 /Times-Roman AF
6120 21113 MT
(The button and menu interactors by default set the)245 W
10 /Courier AF
30716 XM
(:selected)SH
11 /Times-Roman AF
36636 XM
(and)SH
10 /Courier AF
38744 XM
(:interim-selected)SH
11 /Times-Roman AF
49465 XM
(slots of)246 W
6120 22309 MT
(objects. This)
735 W( sometimes results)
230 W( in a conflict when two interactors are attached to the same object.)229 W
6120 23505 MT
(Therefore, the)9 W
10 /Courier AF
12641 XM
(:slots-to-set)SH
11 /Times-Roman AF
20725 XM
(slot has been provided)
9 W( in which you may specify what slot names should)10 W
6120 24701 MT
(be used.  Note: it is very important that once an interactor is started, the slot names)
101 W( for it should never)100 W
6120 25897 MT
(change.)SH
6120 28195 MT
(The)SH
10 /Courier AF
8105 XM
(:slots-to-set)SH
11 /Times-Roman AF
16180 XM
(slot takes a list of three values:)SH
8 /Courier AF
8520 29360 MT
(\050<interim-selected-slot-name-in-obj>)SH
9000 30225 MT
(<selected-slot-name-in-obj>)SH
9000 31090 MT
(<selected-slot-name-in-aggregate> \051)SH
11 /Times-Roman AF
6120 32511 MT
(The default value is)32 W
10 /Courier AF
15229 XM
(\050:interim-selected :selected :selected\051)33 W
11 /Times-Roman AF
(. If)
341 W( NIL is supplied for any slot)33 W
6120 33707 MT
(name, then that slot isn't set by the interactor.)SH
6120 36005 MT
(The slots in the object are set with T or NIL, and the slot in the aggregate)
11 W( is set with the selected object or)10 W
6120 37201 MT
(a list of the selected objects.)SH
ES
%%Page: 247 28
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.2)
SH( Button-Interactor)1800 W
51386 XM
(Page 247)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(6.2. Button-Interactor)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'inter:Button-Interactor inter:interactor)SH
/Times-Italic SF
11160 10168 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
11160 11033 MT
(\050:start-where NIL\051)SH
11160 11898 MT
(\050:window NIL\051)SH
11160 12763 MT
(\050:start-event :leftdown\051)SH
11160 13628 MT
(\050:continuous T\051)SH
11160 14493 MT
(\050:stop-event NIL\051)SH
11160 15358 MT
(\050:running-where '\050:in *\051\051)SH
11160 16223 MT
(\050:outside NIL\051)SH
11160 17088 MT
(\050:abort-event :control-\134g\051)SH
11160 17953 MT
(\050:waiting-priority normal-priority-level\051)SH
11160 18818 MT
(\050:running-priority running-priority-level\051)SH
11160 19683 MT
(\050:active T\051)SH
11160 20548 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
11160 22278 MT
(; Slots common to the menu-interactor and the button-interactor \050see section 6.1\051)SH
/Courier SF
11160 23143 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
24120 XM
(; \050lambda \050inter final-obj-over\051\051)SH
/Courier SF
11160 24008 MT
(\050:how-set :list-toggle\051)SH
/Times-Italic SF
24120 XM
(; How to select new items \050toggle selection, etc.\051)SH
/Courier SF
11160 24873 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; Optional interim feedback object.  The inter will set this object's :obj-over slot.)SH
/Courier SF
11160 25738 MT
(\050:final-feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; The optional object to indicate the final selection)SH
/Courier SF
11160 26603 MT
(\050:slots-to-set)SH
/Times-Italic SF
24120 XM
(; Names of slots to set in the objects)SH
/Courier SF
11640 27468 MT
('\050:interim-selected)SH
/Times-Italic SF
24120 XM
(; '\050<interim-selected-slot-name-in-obj>)400 W
/Courier SF
12600 28333 MT
(:selected)SH
/Times-Italic SF
24120 XM
(; <selected-slot-name-in-obj>)800 W
/Courier SF
12600 29198 MT
(:selected\051\051)SH
/Times-Italic SF
24120 XM
(; <selected-slot-name-in-aggregate>\051)800 W
/Courier SF
11160 30063 MT
(\050:final-feed-inuse NIL\051)SH
/Times-Italic SF
24120 XM
(; Read-only slot.  A list of final feedback objects \050section 6.1.1.3\051)SH
11160 31793 MT
(; Slots specific to the button-interactor \050discussed in this section\051)SH
/Courier SF
11160 32658 MT
(\050:timer-repeat-p NIL\051)SH
/Times-Italic SF
25080 XM
(; when T, then does timer)SH
/Courier SF
11160 33523 MT
(\050:timer-initial-wait 0.75\051)SH
/Times-Italic SF
25080 XM
(; time in seconds)SH
/Courier SF
11160 34388 MT
(\050:timer-repeat-wait 0.05\051)SH
/Times-Italic SF
25080 XM
(; time in seconds)SH
11160 36118 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18357 XM
(Read-only slots.)SH
11160 36983 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
11160 37848 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
11160 38713 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
11160 39578 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The character or keyword of the start event.)SH
11160 41308 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18157 XM
(Customizable action routines.)SH
11160 42173 MT
(; See sections 5 and 8.9.2 for details about functions in these slots.)SH
/Courier SF
11160 43038 MT
(\050:start-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-under-mouse\051\051)SH
/Courier SF
11160 43903 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter final-obj-over\051\051)SH
/Courier SF
11160 44768 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter last-obj-over\051\051)SH
/Courier SF
11160 45633 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter last-obj-over\051\051)SH
/Courier SF
11160 46498 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter new-obj-over\051\051)SH
/Courier SF
10200 47363 MT
(...\051)SH
11 /Times-Roman AF
8280 50421 MT
(\050Note: If you just want)
37 W( to use a pre-defined set of buttons, it may be sufficient to use the radio buttons or)38 W
8280 51617 MT
(x-button objects from the Garnet Gadget Set.)SH
8280 53915 MT
(The button interactor is used \050not surprisingly\051 mostly for buttons.)
90 W( There)
453 W( is typically some feedback to)89 W
8280 55111 MT
(show where the mouse is while the interactor is running.  This is)
40 W( called the)41 W
/Times-Italic SF
42059 XM
(interim feedback)41 W
/Times-Roman SF
(. A)
357 W( separate)41 W
8280 56307 MT
(kind of feedback might be used to show the final object selected.  This is called the)SH
/Times-Italic SF
45120 XM
(final feedback)SH
/Times-Roman SF
(.)SH
8280 58605 MT
(Unlike menu interactors)
20 W( \050see section 6.1\051, Button-interactors do not allow the user to move from one item)19 W
8280 59801 MT
(to another while the interactor)
157 W( is running.  For example, if there are a group of buttons, and the user)158 W
8280 60997 MT
(presses over one button, moving to a different button in the set does)26 W
/Times-Italic SF
38740 XM
(not)SH
/Times-Roman SF
40446 XM
(cause the other button to become)25 W
8280 62193 MT
(selected. Only)
341 W( the first button that the user presses)
33 W( over can be selected.  This is similar to the way radio)34 W
8280 63389 MT
(buttons and check boxes work on the Macintosh.)SH
8280 65687 MT
(There are a number)
56 W( of examples of the use of button interactors below.  Other examples can be found in)55 W
8280 66883 MT
(the demos for the)206 W
10 /Courier AF
17046 XM
(radio-button)SH
11 /Times-Roman AF
24727 XM
(and)SH
10 /Courier AF
26797 XM
(x-button)SH
11 /Times-Roman AF
32079 XM
(gadgets in the Garnet Gadget Set, and in the file)207 W
10 /Courier AF
8280 68079 MT
(demo-grow.lisp)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 248 29
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 248)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.2.1. Default Operation)SH
11 /Times-Roman AF
6120 9200 MT
(The button interactor works very similar to the menu)
35 W( interactor \050section 6.1\051.  This section describes how)34 W
6120 10396 MT
(the button interactor works if the programmer does not remove or override any of the standard)51 W
10 /Courier AF
48720 XM
(-action)SH
11 /Times-Roman AF
6120 11592 MT
(procedures. To)
275 W( supply custom action procedures, see section 8.9.2.)SH
6120 13890 MT
(The button interactor provides the same ways to control the feedback as the menu interactor.)SH
12 /Times-Bold AF
6120 16854 MT
(6.2.1.1. Interim Feedback)SH
11 /Times-Roman AF
6120 18050 MT
(As with menus, button-interactors set both the)14 W
10 /Courier AF
26810 XM
(:obj-over)SH
11 /Times-Roman AF
32499 XM
(slot of the)
14 W( object in the)13 W
10 /Courier AF
42967 XM
(:feedback-obj)SH
11 /Times-Roman AF
51055 XM
(slot,)SH
6120 19246 MT
(and the)20 W
10 /Courier AF
9642 XM
(:interim-selected)SH
11 /Times-Roman AF
20137 XM
(slot of the current button item.  The)20 W
10 /Courier AF
36214 XM
(:obj-over)SH
11 /Times-Roman AF
41909 XM
(slot is set with)
20 W( the object)21 W
6120 20442 MT
(that is under the mouse or NIL)
123 W( if none, and the)122 W
10 /Courier AF
28362 XM
(:interim-selected)SH
11 /Times-Roman AF
38959 XM
(slot is set with T or NIL.  See)122 W
6120 21638 MT
(section 6.1.1.1 for more information.)SH
12 /Times-Bold AF
6120 24602 MT
(6.2.1.2. Final Feedback)SH
11 /Times-Roman AF
6120 25798 MT
(The final feedback)
188 W( for buttons works the same way as for menus:  Both the)189 W
10 /Courier AF
42278 XM
(:selected)SH
11 /Times-Roman AF
48142 XM
(slot of the)189 W
6120 26994 MT
(individual item)
17 W( and the)16 W
10 /Courier AF
16635 XM
(:selected)SH
11 /Times-Roman AF
22326 XM
(slot of the aggregate the items are in are set, and the)16 W
10 /Courier AF
45639 XM
(:obj-over)SH
11 /Times-Roman AF
51330 XM
(slot)SH
6120 28190 MT
(of the object in the)9 W
10 /Courier AF
14688 XM
(:final-feedback-obj)SH
11 /Times-Roman AF
26372 XM
(slot \050if any\051 is set.)
9 W( The)
295 W( item's)10 W
10 /Courier AF
39921 XM
(:selected)SH
11 /Times-Roman AF
45606 XM
(slot is set with T)10 W
6120 29386 MT
(or NIL, as appropriate, and)
183 W( the aggregate's)182 W
10 /Courier AF
26545 XM
(:selected)SH
11 /Times-Roman AF
32402 XM
(slot is set with the name\050s\051 of the particular)182 W
6120 30582 MT
(item\050s\051 selected.)SH
6120 32880 MT
(For more information, see sections 6.1.1.2 and 6.1.1.3.)SH
12 /Times-Bold AF
6120 35844 MT
(6.2.1.3. Items Selected)SH
11 /Times-Roman AF
6120 37040 MT
(As with Menus, the button interactor will automatically handle control over)
22 W( the)23 W
/Times-Italic SF
41549 XM
(number)SH
/Times-Roman SF
45207 XM
(of items selected.)23 W
6120 38236 MT
(A slot of the interactor \050)77 W
10 /Courier AF
(:how-set)SH
11 /Times-Roman AF
(\051 determines whether a single item can be selected or multiple items.)76 W
6120 39432 MT
(In addition, this slot also determines how this interactor will affect the selected items.)SH
6120 41730 MT
(The legal values for)109 W
10 /Courier AF
15596 XM
(:how-set)SH
11 /Times-Roman AF
20780 XM
(are exactly the same as for menu \050see section 6.1.1.4:)109 W
10 /Courier AF
45985 XM
(:set)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
49045 XM
(:clear)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
6120 42926 MT
(:toggle)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
10870 XM
(:list-add)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
16820 XM
(:list-remove)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
24570 XM
(:list-toggle)SH
11 /Times-Roman AF
(, a number, or a list of two numbers\051.)SH
6120 45224 MT
(The default for buttons is)SH
10 /Courier AF
17515 XM
(:list-toggle)SH
11 /Times-Roman AF
(, however.)SH
12 /Times-Bold AF
6120 48188 MT
(6.2.1.4. Application Notification)SH
11 /Times-Roman AF
6120 49384 MT
(As with menus, to have an application notice the effect of the button-interactor,)
157 W( you can simply have)156 W
6120 50580 MT
(some slot of some object in the application contain a formula that depends)
6 W( on the aggregate's)7 W
10 /Courier AF
47520 XM
(:selected)SH
11 /Times-Roman AF
6120 51776 MT
(slot.)SH
6120 54074 MT
(Alternatively, the programmer can provide a)
164 W( function to be called when the interactor is complete by)163 W
6120 55270 MT
(putting the function in the)2 W
10 /Courier AF
17833 XM
(:final-function)SH
11 /Times-Roman AF
27110 XM
(slot. This)
279 W( function is called)
2 W( with the following arguments:)3 W
8 /Courier AF
8040 56435 MT
(\050lambda \050an-interactor final-obj-over\051\051)SH
12 /Times-Bold AF
6120 59399 MT
(6.2.1.5. Normal Operation)SH
11 /Times-Roman AF
6120 60595 MT
(If the value of)57 W
10 /Courier AF
12821 XM
(:continuous)SH
11 /Times-Roman AF
19752 XM
(is T, then when the start event happens, the interim feedback is turned on,)56 W
6120 61791 MT
(as described in)
41 W( section 6.2.1.1.  If the mouse moves away from the item it starts on, the interim feedback)42 W
6120 62987 MT
(goes off.  If the mouse moves back, the interim)
173 W( feedback goes back on.  If the interactor aborts, the)172 W
6120 64183 MT
(interim feedback is turned off.  When the stop event happens, the interim feedback is turned off.  If the)84 W
6120 65379 MT
(mouse is over the item that)
120 W( the interactor started on, the final)119 W
10 /Courier AF
34588 XM
(:selected)SH
11 /Times-Roman AF
40382 XM
(slots are set as described in)119 W
6120 66575 MT
(section 6.2.1.2 based on)
159 W( the value of the)160 W
10 /Courier AF
25328 XM
(:how-set)SH
11 /Times-Roman AF
30563 XM
(parameter \050section 6.2.1.3\051, then the)160 W
10 /Courier AF
47520 XM
(:obj-over)SH
11 /Times-Roman AF
6120 67771 MT
(field of the final-feedback-obj is set to the final selection \050possibly)
127 W( after creating a new final feedback)126 W
6120 68967 MT
(object, if necessary\051, as described in section)
122 W( 6.1.1.3.  Then the final-function \050if any\051 is called \050section)123 W
6120 70163 MT
(6.2.1.4\051. Otherwise,)
275 W( when the stop event happens, the interactor aborts.)SH
ES
%%Page: 249 30
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.2)
SH( Button-Interactor)1800 W
51386 XM
(Page 249)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(The)SH
10 /Courier AF
10265 XM
(:last)SH
11 /Times-Roman AF
13540 XM
(parameter is ignored by button interactors.)SH
8280 10253 MT
(If the interactor is)9 W
/Times-Italic SF
16440 XM
(not)SH
/Times-Roman SF
18130 XM
(continuous, when the start event happens, the)9 W
10 /Courier AF
38446 XM
(:selected)SH
11 /Times-Roman AF
44130 XM
(slots are set based on the)9 W
8280 11449 MT
(value of)
185 W( the)186 W
10 /Courier AF
14304 XM
(:how-set)SH
11 /Times-Roman AF
19565 XM
(parameter, the)186 W
10 /Courier AF
26502 XM
(:obj-over)SH
11 /Times-Roman AF
32363 XM
(slot of the final-feedback-obj is set, and then the)186 W
8280 12645 MT
(final-function is called.)SH
8280 14943 MT
(The)SH
10 /Courier AF
10283 XM
(:slots-to-set)SH
11 /Times-Roman AF
18376 XM
(slot can be used to change)
18 W( the name of the slots that are set, as described in section)17 W
8280 16139 MT
(6.1.2.)SH
12 /Times-Bold AF
8280 19823 MT
(6.2.2. Auto-Repeat for Buttons)SH
11 /Times-Roman AF
8280 21019 MT
(The)SH
10 /Courier AF
10329 XM
(button-interactor)SH
11 /Times-Roman AF
20868 XM
(can auto-repeat the)65 W
10 /Courier AF
29704 XM
(:final-function)SH
11 /Times-Roman AF
(.)SH
/Times-Italic SF
39659 XM
(Note: This only works for Allegro,)65 W
8280 22215 MT
(LispWorks, and Lucid lisps \050including Sun and HP CL\051;)SH
/Times-BoldItalic SF
33276 XM
(not)SH
/Times-Italic SF
35019 XM
(for CMU CL, AKCL, etc.)SH
/Times-Roman SF
8280 24513 MT
(If)SH
10 /Courier AF
9332 XM
(:timer-repeat-p)SH
11 /Times-Roman AF
18652 XM
(is non-NIL, then after the interactor starts, if the mouse button)
45 W( is held down more)44 W
8280 25709 MT
(than)SH
10 /Courier AF
11532 XM
(:timer-initial-wait)SH
11 /Times-Roman AF
24291 XM
(seconds, then every)1084 W
10 /Courier AF
36461 XM
(:timer-repeat-wait)SH
11 /Times-Roman AF
48620 XM
(seconds, the)1084 W
10 /Courier AF
8280 26905 MT
(:final-function)SH
11 /Times-Roman AF
17749 XM
(is called and the)
194 W( appropriate slot \050usually)193 W
10 /Courier AF
37462 XM
(:selected)SH
11 /Times-Roman AF
(\051 is set into the object the)193 W
8280 28101 MT
(interactor is operating over \050this might be useful, for example, if the)79 W
10 /Courier AF
39408 XM
(:how-set)SH
11 /Times-Roman AF
44562 XM
(was an integer)
79 W( to cause)80 W
8280 29297 MT
(the value of the)SH
10 /Courier AF
15366 XM
(:selected)SH
11 /Times-Roman AF
21041 XM
(slot to increment each time\051.)SH
8280 31595 MT
(The various scroll bar and slider gadgets use this feature to cause the arrows to auto repeat.)SH
12 /Times-Bold AF
8280 35279 MT
(6.2.3. Examples)SH
8280 38243 MT
(6.2.3.1. Single button)SH
11 /Times-Roman AF
8280 39439 MT
(The button)
36 W( in this example is not continuous, and does not have a final feedback; it just causes a value to)35 W
8280 40635 MT
(be incremented.)SH
8 /Courier AF
10200 41800 MT
(\050create-instance 'ARROW-INC opal:aggregadget)SH
11640 42665 MT
(\050:parts)SH
12120 43530 MT
(`\050\050:arrow ,opal:polyline)SH
16920 44395 MT
(\050:selected 10\051)SH
16920 45260 MT
(\050:point-list \05020 40 20 30 10 30 25 15 40 30 30 30 30 40 20 40\051\051\051)SH
13080 46125 MT
(\050:label ,opal:text)SH
16920 46990 MT
(\050:left 17\051\050:top 50\051)SH
16920 47855 MT
(\050:string ,\050o-formula \050prin1-to-string)SH
27480 48720 MT
(\050gvl :parent :arrow :selected\051\051\051\051\051\051\051)SH
11640 49585 MT
(\050:interactors)SH
12120 50450 MT
(`\050\050:incrementor ,Inter:Button-Interactor)SH
19800 51315 MT
(\050:continuous NIL\051)SH
19800 52180 MT
(\050:start-where ,\050o-formula \050list :in \050gvl :operates-on :arrow\051\051\051\051)SH
19800 53045 MT
(\050:window ,MYWINDOW\051)SH
19800 53910 MT
(\050:how-set 3\051\051\051\051\051  ; increment by 3)SH
12 /Times-Bold AF
8280 56874 MT
(6.2.3.2. Single button with a changing label)SH
11 /Times-Roman AF
8280 58070 MT
(Here we have an object whose label changes)
38 W( every time the mouse is pressed over it.  It cycles through a)39 W
8280 59266 MT
(set of labels.  This interactor is not)
31 W( continuous, so the action happens immediately on the down-press and)30 W
8280 60462 MT
(there is no feedback object.)SH
ES
%%Page: 250 31
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 250)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'CYCLE-STRING opal:aggregadget)SH
9000 8564 MT
(\050:parts)SH
9480 9429 MT
(`\050\050:label ,opal:text)SH
14280 10294 MT
(\050:left 10\051\050:top 80\051)SH
14280 11159 MT
(\050:selected 0\051)SH
14280 12024 MT
(\050:choices \050"USA" "Japan" "Mexico" "Canada"\051\051)SH
14280 12889 MT
(\050:string ,\050o-formula \050nth \050gvl :selected\051 \050gvl :choices\051\051\051\051\051\051\051)SH
9000 13754 MT
(\050:interactors)SH
9480 14619 MT
(`\050\050:incrementor ,Inter:Button-Interactor)SH
17160 15484 MT
(\050:continuous NIL\051)SH
17160 16349 MT
(\050:start-where)SH
18120 17214 MT
(,\050o-formula \050list :in \050gvl :operates-on :label\051\051\051\051)SH
17160 18079 MT
(\050:window ,MYWINDOW\051)SH
17160 18944 MT
(;;)SH
/Times-Italic SF
18600 XM
(use a list of 2 numbers and interactor will do MOD)SH
/Courier SF
17160 19809 MT
(\050:how-set)SH
18120 20674 MT
(,\050o-formula \050list 1 \050length \050gvl :operates-on)SH
33960 21539 MT
(:label :choices\051\051\051\051\051\051\051\051\051)SH
14 /Times-Bold AF
6120 25357 MT
(6.3. Move-Grow-Interactor)SH
8 /Courier AF
8040 26522 MT
(\050create-instance 'inter:Move-Grow-Interactor inter:interactor)SH
/Times-Italic SF
9000 27387 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
9000 28252 MT
(\050:start-where NIL\051)SH
9000 29117 MT
(\050:window NIL\051)SH
9000 29982 MT
(\050:start-event :leftdown\051)SH
9000 30847 MT
(\050:continuous T\051)SH
9000 31712 MT
(\050:stop-event NIL\051)SH
9000 32577 MT
(\050:running-where NIL\051)SH
9000 33442 MT
(\050:outside NIL\051)SH
9000 34307 MT
(\050:abort-event :control-\134g\051)SH
9000 35172 MT
(\050:waiting-priority normal-priority-level\051)SH
9000 36037 MT
(\050:running-priority running-priority-level\051)SH
9000 36902 MT
(\050:active T\051)SH
9000 37767 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
9000 39497 MT
(; Slots specific to the move-grow-interactor \050discussed in this section\051)SH
/Courier SF
9000 40362 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
21960 XM
(; \050lambda \050inter obj-being-changed final-points\051\051)SH
/Courier SF
9000 41227 MT
(\050:line-p NIL\051)SH
/Times-Italic SF
21960 XM
(; If NIL, set :box slot of object.  If T, set :points slot)SH
/Courier SF
9000 42092 MT
(\050:grow-p NIL\051)SH
/Times-Italic SF
21960 XM
(; If T, grow the object instead of move it)SH
/Courier SF
9000 42957 MT
(\050:obj-to-change NIL\051)SH
/Times-Italic SF
21960 XM
(; The object to move or grow \050usually this is automatically set to be the object)SH
21960 43822 MT
(; returned from the start-where\051)SH
/Courier SF
9000 44687 MT
(\050:attach-point :where-hit\051)SH
/Times-Italic SF
21960 XM
(; Where the mouse will attach to the object)SH
/Courier SF
9000 45552 MT
(\050:min-width 0\051)SH
/Times-Italic SF
21960 XM
(; Minimum width for any object being grown)SH
/Courier SF
9000 46417 MT
(\050:mih-height 0\051)SH
/Times-Italic SF
21960 XM
(; Minimum height for any object being grown)SH
/Courier SF
9000 47282 MT
(\050:min-length NIL\051)SH
/Times-Italic SF
21960 XM
(; Minimum length of any line being grown)SH
/Courier SF
9000 48147 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
21960 XM
(; Optional interim feedback object.  The inter will set this object's :obj-over slot)SH
21960 49012 MT
(; and either its :box or :points slot.)SH
/Courier SF
9000 49877 MT
(\050:slots-to-set :box\051)SH
/Times-Italic SF
21960 XM
(; Names of slots to set in the objects.)SH
/Times-Bold SF
33866 XM
(Note:)SH
/Times-Italic SF
35931 XM
(:box = :points because of :line-p slot.)SH
/Courier SF
9000 50742 MT
(\050:input-filter NIL\051)SH
/Times-Italic SF
21960 XM
(; Used for gridding)SH
9000 52472 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
16197 XM
(Read-only slots.)SH
9000 53337 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
9000 54202 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
9000 55067 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
9000 55932 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The character or keyword of the start event.)SH
9000 57662 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
15997 XM
(Customizable action routines.)SH
9000 58527 MT
(; See sections 5 and 8.9.3 for details about functions in these slots.)SH
/Courier SF
9000 59392 MT
(\050:start-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter obj-being-changed first-points\051\051)SH
/Courier SF
9000 60257 MT
(\050:running-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter obj-being-changed new-points\051\051)SH
/Courier SF
9000 61122 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter obj-being-changed final-points\051\051)SH
/Courier SF
9000 61987 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter obj-being-changed\051\051)SH
/Courier SF
9000 62852 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter outside-control obj-being-changed\051\051)SH
/Courier SF
9000 63717 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter outside-control obj-being-changed new-inside-points\051\051)SH
/Courier SF
8040 64582 MT
(...\051)SH
11 /Times-Roman AF
6120 66003 MT
(This is used to move or change the size of an object or one of a)
90 W( set of objects with the mouse.  This is)91 W
6120 67199 MT
(quite a flexible interactor and will handle many different)
84 W( behaviors including: moving the indicator in a)83 W
6120 68395 MT
(slider, changing the size of a bar in a thermometer, changing the size of a rectangle in a graphics editor,)68 W
6120 69591 MT
(changing the position of a circle, and changing an end-point of a line.)SH
6120 71889 MT
(The interactor can either be permanently tied to)
40 W( a particular graphics object, or it will get the object from)39 W
ES
%%Page: 251 32
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.3)
SH( Move-Grow-Interactor)1800 W
51386 XM
(Page 251)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(where the mouse is when)
19 W( the interaction starts.  There may be a feedback object to show where the object)20 W
8280 9151 MT
(will be moved or changed to, or the object itself may change with the mouse.)SH
8280 11449 MT
(There are a number of examples of the use of move-grow-interactors below.  Other examples can)
167 W( be)166 W
8280 12645 MT
(found in sections 8.1.1, 8.5.1, and)
102 W( 8.9, in the)103 W
10 /Courier AF
29031 XM
(graphics-selection)SH
11 /Times-Roman AF
40209 XM
(gadget in the Garnet Gadget Set,)103 W
8280 13841 MT
(and in)
923 W( the files)922 W
10 /Courier AF
18751 XM
(demo-grow.lisp)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
28623 XM
(demo-moveline.lisp)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
40895 XM
(demo-scrollbar.lisp)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 15037 MT
(demo-manyobjs.lisp)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 18721 MT
(6.3.1. Default Operation)SH
11 /Times-Roman AF
8280 19917 MT
(This section describes how the)80 W
10 /Courier AF
22457 XM
(move-grow-interactor)SH
11 /Times-Roman AF
34812 XM
(works if the programmer does not remove or)81 W
8280 21113 MT
(override any of the standard)SH
10 /Courier AF
20893 XM
(-action)SH
11 /Times-Roman AF
25368 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.3.)SH
8280 23411 MT
(The feedback)
110 W( object \050if any\051)109 W
/Times-Italic SF
21559 XM
(and)SH
/Times-Roman SF
23593 XM
(the object being edited are modified indirectly, by setting slots called)109 W
10 /Courier AF
8280 24607 MT
(:box)SH
11 /Times-Roman AF
10998 XM
(or)SH
10 /Courier AF
12232 XM
(:points)SH
11 /Times-Roman AF
(. The)
361 W( programmer must provide constraints between these slots and)
43 W( the)44 W
10 /Courier AF
48811 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
52405 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
8280 25803 MT
(:width)SH
11 /Times-Roman AF
(, and)117 W
10 /Courier AF
14527 XM
(:height)SH
11 /Times-Roman AF
19119 XM
(slots or the)117 W
10 /Courier AF
24573 XM
(:x1, :y1, :x2,)117 W
11 /Times-Roman AF
33598 XM
(and)SH
10 /Courier AF
35577 XM
(:y2)SH
11 /Times-Roman AF
37768 XM
(slots \050as appropriate\051.  For example, a)116 W
8280 26999 MT
(rectangle that can be moved and changed size with the mouse might have the following definition:)SH
8 /Courier AF
10200 28164 MT
(\050create-instance 'MOVING-RECTANGLE opal:rectangle)SH
11640 29029 MT
(\050:box \050list 0 0 10 10\051\051  ;)SH
/Times-Italic SF
(some initial values \050x, y, width, height\051)SH
/Courier SF
11640 29894 MT
(\050:left \050o-formula \050first \050gvl :box\051\051\051\051)SH
11640 30759 MT
(\050:top \050o-formula \050second \050gvl :box\051\051\051\051)SH
11640 31624 MT
(\050:width \050o-formula \050third \050gvl :box\051\051\051\051)SH
11640 32489 MT
(\050:height \050o-formula \050fourth \050gvl :box\051\051\051\051\051)SH
11 /Times-Roman AF
8280 33910 MT
(A movable line could be defined as:)SH
8 /Courier AF
10200 35075 MT
(\050create-instance 'MOVING-LINE opal:line)SH
11640 35940 MT
(\050:points \050list 0 0 10 10\051\051  ;)SH
/Times-Italic SF
(some initial values \050x1 y1 x2 y2\051)SH
/Courier SF
11640 36805 MT
(\050:x1 \050o-formula \050first \050gvl :points\051\051\051\051)SH
11640 37670 MT
(\050:y1 \050o-formula \050second \050gvl :points\051\051\051\051)SH
11640 38535 MT
(\050:x2 \050o-formula \050third \050gvl :points\051\051\051\051)SH
11640 39400 MT
(\050:y2 \050o-formula \050fourth \050gvl :points\051\051\051\051\051)SH
11 /Times-Roman AF
8280 41698 MT
(The slot)47 W
10 /Courier AF
12224 XM
(:line-p)SH
11 /Times-Roman AF
16746 XM
(tells the interactor whether to change the)47 W
10 /Courier AF
35249 XM
(:box)SH
11 /Times-Roman AF
37972 XM
(slot or the)48 W
10 /Courier AF
42791 XM
(:points)SH
11 /Times-Roman AF
47314 XM
(slot. If)371 W
10 /Courier AF
50880 XM
(:line-p)SH
11 /Times-Roman AF
8280 42894 MT
(is NIL \050the default\051, then the interactor changes the object by setting its)44 W
10 /Courier AF
40498 XM
(:box)SH
11 /Times-Roman AF
43217 XM
(slot to a list containing the)44 W
8280 44090 MT
(new values for \050left, top, width, height\051.)
232 W( If)
740 W( T, then the interactor changes the object by setting its)233 W
10 /Courier AF
8280 45286 MT
(:points)SH
11 /Times-Roman AF
12828 XM
(slot to a list containing the new values for \050x1, y1, x2, y2\051.  \050These are the same slots as used)72 W
8280 46482 MT
(for)SH
10 /Courier AF
9837 XM
(two-point-interactor)SH
11 /Times-Roman AF
(\320section 6.4\051.)SH
8280 48780 MT
(This allows the object to perform any desired filtering on the)
173 W( values before they are used in the real)174 W
10 /Courier AF
8280 49976 MT
(:left :top)
183 W( :width :height)182 W
11 /Times-Roman AF
24284 XM
(or)SH
10 /Courier AF
25657 XM
(:x1 :y1 :x2 :y2)182 W
11 /Times-Roman AF
35660 XM
(slots. For)
639 W( example, a scroll bar might be)182 W
8280 51172 MT
(defined as follows:)SH
ES
%%Page: 252 33
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 252)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'MYSCROLLER opal:aggregadget)SH
9480 8564 MT
(\050:parts)SH
9960 9429 MT
(`\050\050:outline ,opal:rectangle)SH
15720 10294 MT
(\050:left 100\051\050:top 10\051\050:width 20\051\050:height 200\051\051)SH
10920 11159 MT
(\050:indicator ,opal:rectangle)SH
16680 12024 MT
(\050:box \05052 12 16 16\051\051 ;;)SH
/Times-Italic SF
(only the second value is used)SH
/Courier SF
16680 12889 MT
(\050:left ,\050o-formula \050+ 2 \050gvl :parent :outline :left\051\051\051\051)SH
16680 13754 MT
(;;)SH
/Times-Italic SF
(Clip-And-Map clips the first parameter to keep it)SH
/Courier SF
16680 14619 MT
(;;)SH
/Times-Italic SF
17840 XM
(between the other two parameters, see section 6.3.4)SH
/Courier SF
16680 15484 MT
(\050:top ,\050o-formula)SH
20520 16349 MT
(\050Clip-And-Map \050second \050gvl :box\051\051)SH
21480 17214 MT
(12 ;)480 W
/Times-Italic SF
(Top of outline + 2)SH
/Courier SF
21480 18079 MT
(192 ;)SH
/Times-Italic SF
(Bottom of outline - indicator height - 2)SH
/Courier SF
21480 18944 MT
(\051\051\051)SH
16680 19809 MT
(\050:width 16\051\050:height 16\051)SH
16680 20674 MT
(\050:filling-style ,opal:gray-fill\051)SH
16680 21539 MT
(\050:line-style NIL\051)SH
16680 22404 MT
(\050:fast-redraw-p T\051)SH
16680 23269 MT
(\050:draw-function :xor\051\051\051\051)SH
9480 24134 MT
(\050:interactors)SH
9960 24999 MT
(`\050\050:move-indicator ,Inter:Move-Grow-Interactor)SH
19080 25864 MT
(\050:start-where)SH
19560 26729 MT
(,\050o-formula \050list :in \050gvl :operates-on :indicator\051\051\051\051)SH
19080 27594 MT
(\050:window ,\050o-formula \050gvl :operates-on :window\051\051\051\051\051\051\051)SH
11 /Times-Roman AF
6120 29892 MT
(This interactor will either change the position of the object \050if)31 W
10 /Courier AF
33862 XM
(:grow-p)SH
11 /Times-Roman AF
38368 XM
(is NIL\051 or the size.  For lines, \050if)32 W
10 /Courier AF
6120 31088 MT
(:line-p)SH
11 /Times-Roman AF
10639 XM
(is T\051, ``growing'' means changing a single end point to follow the mouse while the other stays)44 W
6120 32284 MT
(fixed, and moving means changing both)
89 W( end points to follow the mouse so that the line keeps the same)90 W
6120 33480 MT
(length and slope.)SH
6120 35778 MT
(Since an object's)
4 W( size can change from the left and top, in addition to from the right and bottom, and since)3 W
6120 36974 MT
(objects are defined to by their left, top, width and height, this interactor may have to)
90 W( change any of the)91 W
6120 38170 MT
(left, top, width and height fields when changing an object's size.  For example, to)
76 W( change the size of an)75 W
6120 39366 MT
(object from the left \050so that the left moves)
99 W( and the right side stays fixed\051, both the)100 W
10 /Courier AF
43982 XM
(:left)SH
11 /Times-Roman AF
47357 XM
(and)SH
10 /Courier AF
49320 XM
(:width)SH
11 /Times-Roman AF
6120 40562 MT
(fields must be set.  Therefore, by default, this interactor sets a)43 W
10 /Courier AF
34035 XM
(:box)SH
11 /Times-Roman AF
36753 XM
(field containing 4 values.  When the)42 W
6120 41758 MT
(interactor is used for)
15 W( moving an object, the last two values of the)16 W
10 /Courier AF
35101 XM
(:box)SH
11 /Times-Roman AF
37792 XM
(slot are set with the original width)16 W
6120 42954 MT
(and height of the object.  Similarly, when setting the)41 W
10 /Courier AF
29872 XM
(:points)SH
11 /Times-Roman AF
34388 XM
(slot, all of the values are set,)
41 W( even though)40 W
6120 44150 MT
(only two of them will change.)SH
6120 46448 MT
(When the)
200 W( interaction is running, either the object itself or a separate)201 W
/Times-Italic SF
38678 XM
(feedback)SH
/Times-Roman SF
43062 XM
(object can follow the)201 W
6120 47644 MT
(mouse. If)
377 W( a feedback object is used, it should)
51 W( be specified in the)50 W
10 /Courier AF
35481 XM
(:feedback-obj)SH
11 /Times-Roman AF
43606 XM
(slot of the interactor,)50 W
6120 48840 MT
(and it will need the)
37 W( same kinds of formulas on)38 W
10 /Courier AF
27148 XM
(:box)SH
11 /Times-Roman AF
29861 XM
(or)SH
10 /Courier AF
31090 XM
(:points)SH
11 /Times-Roman AF
35603 XM
(as the actual object.  If the object itself)38 W
6120 50036 MT
(should change, then)119 W
10 /Courier AF
15519 XM
(:feedback-obj)SH
11 /Times-Roman AF
23712 XM
(should be NIL.  If there is a feedback object, the interactor also)118 W
6120 51232 MT
(sets its)153 W
10 /Courier AF
9666 XM
(:obj-over)SH
11 /Times-Roman AF
15494 XM
(field to the actual object that is being moved.  This can be used, for example,)
153 W( to)154 W
6120 52428 MT
(control the visibility of the feedback object or its size.)SH
6120 54726 MT
(The object being changed is either gotten from the)85 W
10 /Courier AF
29336 XM
(:obj-to-change)SH
11 /Times-Roman AF
38096 XM
(slot of the interactor, or if that is)84 W
6120 55922 MT
(NIL, then from the object returned from)199 W
10 /Courier AF
25411 XM
(:start-where)SH
11 /Times-Roman AF
(. If)
673 W( the)
199 W( interactor is to work over multiple)200 W
6120 57118 MT
(objects, then)17 W
10 /Courier AF
11989 XM
(:obj-to-change)SH
11 /Times-Roman AF
20681 XM
(should be NIL, and)17 W
10 /Courier AF
29516 XM
(:start-where)SH
11 /Times-Roman AF
37008 XM
(will be one of the forms that returns)17 W
6120 58314 MT
(one of a set of objects \050e.g.,)SH
10 /Courier AF
18520 XM
(:element-of)SH
11 /Times-Roman AF
(\051.)SH
12 /Times-Bold AF
6120 61278 MT
(6.3.1.1. Attach-Point)SH
11 /Times-Roman AF
6120 62474 MT
(The)SH
10 /Courier AF
8226 XM
(:attach-point)SH
11 /Times-Roman AF
16422 XM
(slot of interactors controls)
121 W( where the mouse will attach to the object.  The legal)122 W
6120 63670 MT
(choices depend on)SH
10 /Courier AF
14519 XM
(:line-p)SH
11 /Times-Roman AF
(.)SH
6120 65968 MT
(If)SH
10 /Courier AF
7291 XM
(:line-p)SH
11 /Times-Roman AF
11930 XM
(is T \050so)
164 W( the end-point of the line is changing\051, and the object is being grown, then legal)163 W
6120 67164 MT
(choices are:)SH
10 /Courier AF
8620 69115 MT
(1)SH
11 /Times-Roman AF
(: Change the first endpoint of the line \050x1, y1\051.)SH
10 /Courier AF
8620 70311 MT
(2)SH
11 /Times-Roman AF
(: Change the second endpoint of the line \050x2, y2\051.)SH
10 /Courier AF
8620 71507 MT
(:where-hit)SH
11 /Times-Roman AF
(: Change which-ever end point is nearest the initial press.)SH
ES
%%Page: 253 34
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.3)
SH( Move-Grow-Interactor)1800 W
51386 XM
(Page 253)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(If)SH
10 /Courier AF
9287 XM
(:line-p)SH
11 /Times-Roman AF
13762 XM
(is T and the object is being moved, then legal choices are:)SH
10 /Courier AF
10780 9906 MT
(1)SH
11 /Times-Roman AF
(: Attach mouse to the first endpoint.)SH
10 /Courier AF
10780 11102 MT
(2)SH
11 /Times-Roman AF
(: Attach mouse to the second endpoint.)SH
10 /Courier AF
10780 12298 MT
(:center)SH
11 /Times-Roman AF
(: Attach mouse to the center of the line.)SH
10 /Courier AF
10780 13494 MT
(:where-hit)SH
11 /Times-Roman AF
(: Attach mouse where pressed on the line.)SH
8280 15792 MT
(If)SH
10 /Courier AF
9287 XM
(:line-p)SH
11 /Times-Roman AF
13762 XM
(is NIL \050so the bounding box is changing, either moving or growing\051 the choices are:)SH
10 /Courier AF
10780 17743 MT
(:N)SH
11 /Times-Roman AF
12255 XM
(- Top)SH
10 /Courier AF
10780 18939 MT
(:S)SH
11 /Times-Roman AF
12255 XM
(- Bottom)SH
10 /Courier AF
10780 20135 MT
(:E)SH
11 /Times-Roman AF
12255 XM
(- Right)SH
10 /Courier AF
10780 21331 MT
(:W)SH
11 /Times-Roman AF
12255 XM
(- Left)SH
10 /Courier AF
10780 22527 MT
(:NE)SH
11 /Times-Roman AF
12855 XM
(- Top, right)SH
10 /Courier AF
10780 23723 MT
(:NW)SH
11 /Times-Roman AF
12855 XM
(- Top, left)SH
10 /Courier AF
10780 24919 MT
(:SE)SH
11 /Times-Roman AF
12855 XM
(- Bottom, right)SH
10 /Courier AF
10780 26115 MT
(:SW)SH
11 /Times-Roman AF
12855 XM
(- Bottom, left)SH
10 /Courier AF
10780 27311 MT
(:center)SH
11 /Times-Roman AF
15255 XM
(- Center)SH
10 /Courier AF
10780 28507 MT
(:where-hit)SH
11 /Times-Roman AF
17170 XM
(- The mouse attaches to the object wherever the mouse was first pressed inside the)116 W
11880 29703 MT
(object.)SH
8280 31654 MT
(The default value is)SH
10 /Courier AF
17260 XM
(:where-hit)SH
11 /Times-Roman AF
23535 XM
(since this works for both)SH
10 /Courier AF
34686 XM
(:line-p)SH
11 /Times-Roman AF
39161 XM
(T and NIL.)SH
8280 33952 MT
(If growing and)91 W
10 /Courier AF
15364 XM
(:attach-point)SH
11 /Times-Roman AF
23530 XM
(is)SH
10 /Courier AF
24630 XM
(:where-hit)SH
11 /Times-Roman AF
(, the object grows)
91 W( from the nearest side or corner \050the)90 W
8280 35148 MT
(object is implicitly divided into 9 regions\051.  If the press is in the center, the object)
96 W( grows from the)97 W
10 /Courier AF
53280 XM
(:NW)SH
11 /Times-Roman AF
8280 36344 MT
(corner.)SH
8280 38642 MT
(The value set into the)76 W
10 /Courier AF
18405 XM
(:box)SH
11 /Times-Roman AF
21156 XM
(slot by this interactor is always the correct value)
76 W( for the top, left corner, no)75 W
8280 39838 MT
(matter what the value of attach-point \050the interactor does the conversion for)
296 W( you\051.  Note that the)297 W
8280 41034 MT
(conversion is done based on the)225 W
10 /Courier AF
23926 XM
(:left, :top, :width)225 W
11 /Times-Roman AF
36276 XM
(and)SH
10 /Courier AF
38364 XM
(:height)SH
11 /Times-Roman AF
43064 XM
(of the actual)
225 W( object being)224 W
8280 42230 MT
(changed; not based on the feedback object.  Therefore, if there is a separate feedback)
105 W( object, either the)106 W
8280 43426 MT
(feedback object should be the same size as the object being changed, or)23 W
10 /Courier AF
40342 XM
(:attach-point)SH
11 /Times-Roman AF
48439 XM
(should be)22 W
10 /Courier AF
53005 XM
(:NW)SH
11 /Times-Roman AF
(.)SH
/Times-Bold SF
8280 44622 MT
(Possible future enhancement:  allow a list of points, and pick the closest one to the mouse.)SH
12 SS 
8280 47586 MT
(6.3.1.2. Running where)SH
11 /Times-Roman AF
8280 48782 MT
(Normally, the default value for)173 W
10 /Courier AF
23073 XM
(:running-where)SH
11 /Times-Roman AF
31921 XM
(is the same as)173 W
10 /Courier AF
38967 XM
(:start-where)SH
11 /Times-Roman AF
(, but for the move-)174 W
8280 49978 MT
(grow-interactor, the default)SH
10 /Courier AF
20618 XM
(:running-where)SH
11 /Times-Roman AF
29293 XM
(is T, to allow the mouse to go anywhere.)SH
12 /Times-Bold AF
8280 52942 MT
(6.3.1.3. Extra Parameters)SH
11 /Times-Roman AF
8280 54138 MT
(The extra parameters are:)SH
10 /Courier AF
8280 56089 MT
(:line-p)SH
11 /Times-Roman AF
(- This slot determines whether the object's bounding)
24 W( box or line end points are set.  If)23 W
10 /Courier AF
50880 XM
(:line-p)SH
11 /Times-Roman AF
11880 57285 MT
(is NIL, then the)67 W
10 /Courier AF
19327 XM
(:box)SH
11 /Times-Roman AF
22069 XM
(slot is set to a list containing \050left top width height\051 and if)67 W
10 /Courier AF
48515 XM
(:line-p)SH
11 /Times-Roman AF
53057 XM
(is T,)67 W
11880 58481 MT
(then the)SH
10 /Courier AF
15668 XM
(:points)SH
11 /Times-Roman AF
20143 XM
(slot is set with a list containing \050x1 y1 x2 y2\051.  The default is NIL.)SH
10 /Courier AF
8280 60176 MT
(:grow-p)SH
11 /Times-Roman AF
(- This slot determines whether the object moves or)
143 W( changes size.  The default is NIL, which)142 W
11880 61372 MT
(means to move.  Non-NIL means to change size.)SH
10 /Courier AF
8280 63067 MT
(:obj-to-change)SH
11 /Times-Roman AF
(- If an object is supplied as this parameter, then the interactor changes)
177 W( that object.)178 W
11880 64263 MT
(Otherwise, the interactor changes the object returned)
201 W( from)200 W
10 /Courier AF
39415 XM
(:start-where)SH
11 /Times-Roman AF
(. If)
675 W( the interactor)200 W
11880 65459 MT
(should change)
566 W( one of a set of objects, then)567 W
10 /Courier AF
35920 XM
(:obj-to-change)SH
11 /Times-Roman AF
45162 XM
(should be NIL and)567 W
10 /Courier AF
11880 66655 MT
(:start-where)SH
11 /Times-Roman AF
19414 XM
(should be be a form that will return the object)
59 W( to change.  The reason that there)58 W
11880 67851 MT
(may need to)
12 W( be a separate object passed as the)13 W
10 /Courier AF
32592 XM
(:obj-to-change)SH
11 /Times-Roman AF
41280 XM
(is that sometimes the interactor)13 W
11880 69047 MT
(cannot get the)
97 W( object to be changed from the :where fields.  For example, the programmer may)96 W
11880 70243 MT
(want to)
44 W( have a scroll bar indicator changed whenever the user presses over the background.  The)45 W
11880 71439 MT
(object in the)195 W
10 /Courier AF
18178 XM
(:obj-to-change)SH
11 /Times-Roman AF
27048 XM
(field may be different from the one in)
195 W( the)194 W
10 /Courier AF
47280 XM
(:feedback-obj)SH
ES
%%Page: 254 35
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 254)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
9720 7955 MT
(since the object in the)SH
10 /Courier AF
19587 XM
(:feedback-obj)SH
11 /Times-Roman AF
27662 XM
(field is used as the interim feedback.)SH
10 /Courier AF
6120 9650 MT
(:attach-point)SH
11 /Times-Roman AF
(- This tells where)
70 W( the mouse will attach to the object.  Values are)71 W
10 /Courier AF
43716 XM
(1, 2, :center)71 W
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
9720 10846 MT
(:where-hit)SH
11 /Times-Roman AF
16028 XM
(if)SH
10 /Courier AF
17008 XM
(:line-p)SH
11 /Times-Roman AF
21516 XM
(is T, or)33 W
10 /Courier AF
25037 XM
(:N, :S, :E, :W, :NW,)
33 W( :NE, :SW, :SE, :center,)32 W
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
9720 12042 MT
(:where-hit)SH
11 /Times-Roman AF
16084 XM
(if)SH
10 /Courier AF
17120 XM
(:line-p)SH
11 /Times-Roman AF
21684 XM
(is NIL.  The default)
89 W( value is)90 W
10 /Courier AF
34956 XM
(:where-hit)SH
11 /Times-Roman AF
(. See)
455 W( section 6.3.1.1 for a)90 W
9720 13238 MT
(full explanation.)SH
10 /Courier AF
6120 14933 MT
(:min-width)SH
11 /Times-Roman AF
(- The)256 W
10 /Courier AF
15258 XM
(:min-width)SH
11 /Times-Roman AF
21789 XM
(and)SH
10 /Courier AF
23908 XM
(:min-height)SH
11 /Times-Roman AF
31039 XM
(fields determine the minimum)
256 W( legal width and)255 W
9720 16129 MT
(height of the object if)174 W
10 /Courier AF
20335 XM
(:line-p)SH
11 /Times-Roman AF
24984 XM
(is NIL and)174 W
10 /Courier AF
30485 XM
(:grow-p)SH
11 /Times-Roman AF
35134 XM
(is T. Default is 0.  If)175 W
10 /Courier AF
45554 XM
(:min-width)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
9720 17325 MT
(:min-height)SH
11 /Times-Roman AF
16732 XM
(is NIL, then there is no minimum width)
137 W( or height.  In this case, the width and)136 W
9720 18521 MT
(height of the object may become negative values which causes)
381 W( an error \050so this is not)382 W
9720 19717 MT
(recommended\051. Unlike)
1915 W( the)820 W
10 /Courier AF
25309 XM
(two-point-interactor)SH
11 /Times-Roman AF
38404 XM
(\050section 6.4\051, there)
820 W( are no)819 W
10 /Courier AF
9720 20913 MT
(:flip-if-change-side)SH
11 /Times-Roman AF
21995 XM
(or)SH
10 /Courier AF
23186 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
34861 XM
(slots for the)SH
10 /Courier AF
40330 XM
(move-grow-interactor)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 22608 MT
(:min-height)SH
11 /Times-Roman AF
(- See)SH
10 /Courier AF
15224 XM
(:min-width)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 24303 MT
(:min-length)SH
11 /Times-Roman AF
(- If)46 W
10 /Courier AF
14460 XM
(:line-p)SH
11 /Times-Roman AF
18981 XM
(is T, this specifies the minimum length)
46 W( for lines.  The default is NIL, for no)47 W
9720 25499 MT
(minimum. This)
275 W( slot is ignored if)SH
10 /Courier AF
24512 XM
(:line-p)SH
11 /Times-Roman AF
28987 XM
(is NIL.)SH
10 /Courier AF
6120 27194 MT
(:input-filter)SH
11 /Times-Roman AF
(- Used to support gridding.  See section 6.3.2)SH
12 /Times-Bold AF
6120 30158 MT
(6.3.1.4. Application Notification)SH
11 /Times-Roman AF
6120 31354 MT
(Often, it is)
82 W( not necessary to have the application notified of the result of a move-grow-interactor, if you)81 W
6120 32550 MT
(only want the object to move around.  Otherwise, you can have constraints)
192 W( in the application to the)193 W
6120 33746 MT
(various slots of the object being changed.)SH
6120 36044 MT
(Alternatively, the programmer can provide a)
164 W( function to be called when the interactor is complete by)163 W
6120 37240 MT
(putting the function in the)2 W
10 /Courier AF
17833 XM
(:final-function)SH
11 /Times-Roman AF
27110 XM
(slot. This)
279 W( function is called)
2 W( with the following arguments:)3 W
8 /Courier AF
8040 38405 MT
(\050lambda \050an-interactor object-being-changed final-points\051\051)SH
10 SS 
6120 39826 MT
(Final-points)SH
11 /Times-Roman AF
13606 XM
(is a list of four values,)
11 W( either the left, top, width and height if)10 W
10 /Courier AF
40788 XM
(:line-p)SH
11 /Times-Roman AF
45273 XM
(is NIL, or x1, y1,)10 W
6120 41022 MT
(x2, and y2 if)SH
10 /Courier AF
11955 XM
(:line-p)SH
11 /Times-Roman AF
16430 XM
(is T.)SH
12 /Times-Bold AF
6120 43986 MT
(6.3.1.5. Normal Operation)SH
11 /Times-Roman AF
6120 45182 MT
(If the value of)16 W
10 /Courier AF
12658 XM
(:continuous)SH
11 /Times-Roman AF
19549 XM
(is T, then when the start)
16 W( event happens, the interactor determines the object)17 W
6120 46378 MT
(to be changed as either the value of the)36 W
10 /Courier AF
23883 XM
(:obj-to-change)SH
11 /Times-Roman AF
32594 XM
(slot, or if)
36 W( that is NIL, then the object returned)35 W
6120 47574 MT
(from the)281 W
10 /Courier AF
10714 XM
(:start-where)SH
11 /Times-Roman AF
(. The)837 W
10 /Courier AF
21567 XM
(:obj-over)SH
11 /Times-Roman AF
27523 XM
(slot of the object in)
281 W( the)282 W
10 /Courier AF
39599 XM
(:feedback-obj)SH
11 /Times-Roman AF
47956 XM
(slot of the)282 W
6120 48770 MT
(interactor is set to the object being changed.  Then, for every mouse movement until the stop)
196 W( event)195 W
6120 49966 MT
(happens, the)
295 W( interactor sets either the)296 W
10 /Courier AF
24480 XM
(:box)SH
11 /Times-Roman AF
27451 XM
(slot or the)296 W
10 /Courier AF
33014 XM
(:points)SH
11 /Times-Roman AF
37785 XM
(slot \050depending on the value of)296 W
10 /Courier AF
6120 51162 MT
(:line-p)SH
11 /Times-Roman AF
(\051 based on a calculation that depends on the values in the minimum)
35 W( slots and)34 W
10 /Courier AF
44845 XM
(:attach-point)SH
11 /Times-Roman AF
(.)SH
6120 52358 MT
(The object that is modified while running is either the feedback object if it exists or the)
156 W( object being)157 W
6120 53554 MT
(changed if there is no feedback object.)SH
6120 55852 MT
(If the mouse goes outside of)83 W
10 /Courier AF
19326 XM
(:running-where)SH
11 /Times-Roman AF
(, then if)83 W
10 /Courier AF
31641 XM
(:outside)SH
11 /Times-Roman AF
36798 XM
(is)SH
10 /Courier AF
37889 XM
(:last)SH
11 /Times-Roman AF
(, nothing happens until the)82 W
6120 57048 MT
(mouse comes back inside or the stop)
9 W( or abort events happen \050the object stays at its last legal inside value\051.)10 W
6120 58244 MT
(If)SH
10 /Courier AF
7303 XM
(:outside)SH
11 /Times-Roman AF
12554 XM
(is NIL,)
176 W( then the feedback object's)175 W
10 /Courier AF
28784 XM
(:obj-over)SH
11 /Times-Roman AF
34634 XM
(slot is set to NIL \050so there should be a)175 W
6120 59440 MT
(formula in the feedback object's)109 W
10 /Courier AF
21172 XM
(:visible)SH
11 /Times-Roman AF
26356 XM
(slot that depends on)109 W
10 /Courier AF
35837 XM
(:obj-over)SH
11 /Times-Roman AF
(\051. If)
495 W( there is no feedback)110 W
6120 60636 MT
(object and the mouse goes outside,)
184 W( then the object being changed is returned to its original size and)183 W
6120 61832 MT
(position \050before the interactor started\051.)SH
6120 64130 MT
(If the abort event happens, then the feedback object's)145 W
10 /Courier AF
31185 XM
(:obj-over)SH
11 /Times-Roman AF
37005 XM
(slot is set to)
145 W( NIL, or if there is no)146 W
6120 65326 MT
(feedback object, then the object being)
148 W( changed is returned to its original size and position \050before the)147 W
6120 66522 MT
(interactor started\051.)SH
6120 68820 MT
(When the stop)
182 W( event happens, the feedback object's)183 W
10 /Courier AF
30641 XM
(:obj-over)SH
11 /Times-Roman AF
36499 XM
(slot is set to NIL, and the)183 W
10 /Courier AF
49146 XM
(:box)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
6120 70016 MT
(:points)SH
11 /Times-Roman AF
10595 XM
(slot of the actual object are set with the last value, and the final-function \050if any\051 is called.)SH
ES
%%Page: 255 36
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.3)
SH( Move-Grow-Interactor)1800 W
51386 XM
(Page 255)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(If the interactor)
62 W( is)61 W
/Times-Italic SF
16650 XM
(not)SH
/Times-Roman SF
18392 XM
(continuous, when the start event happens, the)61 W
10 /Courier AF
39072 XM
(:box)SH
11 /Times-Roman AF
41808 XM
(or)SH
10 /Courier AF
43060 XM
(:points)SH
11 /Times-Roman AF
47596 XM
(slot of the actual)61 W
8280 9151 MT
(object are set with the initial value, and the final-function \050if any\051)
117 W( is called.  This is probably not very)118 W
8280 10347 MT
(useful.)SH
12 /Times-Bold AF
8280 14031 MT
(6.3.2. Gridding)SH
11 /Times-Roman AF
8280 15227 MT
(The)SH
10 /Courier AF
10314 XM
(move-grow-interactor)SH
11 /Times-Roman AF
22637 XM
(supports arbitrary gridding of the values.  The slot)48 W
10 /Courier AF
45431 XM
(:input-filter)SH
11 /Times-Roman AF
53554 XM
(can)SH
8280 16423 MT
(take any of the following values:)SH
10 /Courier AF
10780 18374 MT
(NIL)SH
11 /Times-Roman AF
12855 XM
(- for no filtering.  This is the default.)SH
10780 20069 MT
(a number - grid by that)
161 W( amount in both X and Y with the origin at the upper left corner of the)162 W
11880 21265 MT
(window.)SH
10780 22960 MT
(a list of four numbers:)98 W
10 /Courier AF
21321 XM
(\050xmod xorigin ymod yorigin\051)98 W
11 /Times-Roman AF
38188 XM
(to allow non-uniform gridding with a)97 W
11880 24156 MT
(specific origin.)SH
10780 25851 MT
(a function of the form)133 W
10 /Courier AF
21372 XM
(\050lambda\050inter x y\051 ...\051)133 W
11 /Times-Roman AF
35979 XM
(which returns)133 W
10 /Courier AF
42537 XM
(\050values gridx gridy\051)134 W
11 /Times-Roman AF
(.)SH
11880 27047 MT
(This allows arbitrary filtering of the)
112 W( values, including application-specific gravity to interesting)111 W
11880 28243 MT
(points of other objects, snap-dragging, etc.)SH
12 /Times-Bold AF
8280 31927 MT
(6.3.3. Setting Slots)SH
11 /Times-Roman AF
8280 33123 MT
(The)SH
10 /Courier AF
10368 XM
(move-grow-interactor)SH
11 /Times-Roman AF
22746 XM
(by default)
103 W( sets either the)104 W
10 /Courier AF
34292 XM
(:box)SH
11 /Times-Roman AF
37071 XM
(or)SH
10 /Courier AF
38366 XM
(:points)SH
11 /Times-Roman AF
42945 XM
(slots of objects \050depending)104 W
8280 34319 MT
(on whether it was a rectangle or line-type)
166 W( object\051.  We discovered that there were a large number of)165 W
8280 35515 MT
(formulas that simply copied the values out of these lists.  Therefore, in the)
83 W( current version, you can ask)84 W
8280 36711 MT
(the)SH
10 /Courier AF
10003 XM
(move-grow-interactor)SH
11 /Times-Roman AF
22382 XM
(to directly set the)
104 W( slots of objects, if you don't need any filtering on the)103 W
8280 37907 MT
(values. If)
331 W( you want to use)28 W
10 /Courier AF
20328 XM
(Clip-and-Map)SH
11 /Times-Roman AF
27831 XM
(or other filtering, you should still)
28 W( use the)29 W
10 /Courier AF
46299 XM
(:box)SH
11 /Times-Roman AF
49003 XM
(slot. The)
333 W( slot)29 W
10 /Courier AF
8280 39103 MT
(:slots-to-set)SH
11 /Times-Roman AF
16355 XM
(can be supplied to determine which slots to set.  The values can be:)SH
10 /Courier AF
10780 41054 MT
(:box)SH
11 /Times-Roman AF
13455 XM
(- if line-p object, then sets the)SH
10 /Courier AF
26835 XM
(:points)SH
11 /Times-Roman AF
31310 XM
(slot, otherwise sets the)SH
10 /Courier AF
41545 XM
(:box)SH
11 /Times-Roman AF
44220 XM
(slot.)SH
10 /Courier AF
10780 42749 MT
(:points)SH
11 /Times-Roman AF
15286 XM
(- same as)31 W
10 /Courier AF
19746 XM
(:box)SH
11 /Times-Roman AF
(. Note)
336 W( that the interactor ignores the actual value put in)30 W
10 /Courier AF
47280 XM
(:slots-to-set)SH
11 /Times-Roman AF
11880 43945 MT
(and decides which to use based on the value of the)SH
10 /Courier AF
34391 XM
(:line-p)SH
11 /Times-Roman AF
38866 XM
(slot of the object.)SH
10780 45640 MT
(a list of four T's and NILs \050representing)102 W
10 /Courier AF
29494 XM
(\050:left :top)
102 W( :width :height\051)103 W
11 /Times-Roman AF
46380 XM
(or)SH
10 /Courier AF
47674 XM
(\050:x1 :y1 :x2)103 W
11880 46836 MT
(:y2\051)SH
11 /Times-Roman AF
(\051 - In this case, the interactor sets the slots of the object that have T's and)
109 W( doesn't set the)108 W
11880 48032 MT
(slots that are NIL.  For example, if)15 W
10 /Courier AF
27518 XM
(:slots-to-set)SH
11 /Times-Roman AF
35608 XM
(is)SH
10 /Courier AF
36632 XM
(\050T T NIL NIL\051)15 W
11 /Times-Roman AF
(, then the interactor will)16 W
11880 49228 MT
(set the)26 W
10 /Courier AF
15048 XM
(:x1)SH
11 /Times-Roman AF
17149 XM
(and)SH
10 /Courier AF
19038 XM
(:y1)SH
11 /Times-Roman AF
21139 XM
(slots of objects that are)26 W
10 /Courier AF
31686 XM
(:line-p)SH
11 /Times-Roman AF
(, and the)26 W
10 /Courier AF
39996 XM
(:left)SH
11 /Times-Roman AF
43297 XM
(and)SH
10 /Courier AF
45186 XM
(:top)SH
11 /Times-Roman AF
47886 XM
(slots of all other)25 W
11880 50424 MT
(objects.)SH
10780 52119 MT
(a list of four slot names or NILs - In this case, the values are set into the specified slots of)
3 W( the object.)4 W
11880 53315 MT
(Any NILs)
31 W( mean that slot isn't set.  The specified slots are used whether the object is)30 W
10 /Courier AF
49659 XM
(:line-p)SH
11 /Times-Roman AF
54164 XM
(or)SH
11880 54511 MT
(not. This)
275 W( can be used to map the four values into new slots.)SH
12 /Times-Bold AF
8280 58195 MT
(6.3.4. Useful Function: Clip-And-Map)SH
11 /Times-Roman AF
8280 59391 MT
(It is often useful to take the value returned by the mouse)
215 W( and clip it within a range.  The function)216 W
10 /Courier AF
8280 60587 MT
(Clip-And-Map)SH
11 /Times-Roman AF
15755 XM
(is provided by the interactors package to help with this:)SH
8 /Courier AF
10200 61800 MT
(inter:Clip-And-Map)SH
/Times-Italic SF
19320 XM
(val val-1 val-2)200 W
/Courier SF
24863 XM
(&optional)SH
/Times-Italic SF
29663 XM
(target-val-1 target-val-2)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 64098 MT
(If)SH
/Times-Italic SF
9333 XM
(target-val-1)SH
/Times-Roman SF
14908 XM
(or)SH
/Times-Italic SF
16145 XM
(target-val-2)SH
/Times-Roman SF
21720 XM
(is NIL or not supplied, then this function just clips)46 W
/Times-Italic SF
44638 XM
(val)SH
/Times-Roman SF
46302 XM
(to be between)45 W
/Times-Italic SF
52820 XM
(val-1)SH
/Times-Roman SF
8280 65294 MT
(and)SH
/Times-Italic SF
10143 XM
(val-2)SH
/Times-Roman SF
12678 XM
(\050inclusive\051.)SH
8280 67592 MT
(If)SH
/Times-Italic SF
9338 XM
(target-val-1)SH
/Times-Roman SF
14918 XM
(and)SH
/Times-Italic SF
16832 XM
(target-val-2)SH
/Times-Roman SF
22412 XM
(are supplied, then this function clips)51 W
/Times-Italic SF
38941 XM
(val)SH
/Times-Roman SF
40611 XM
(to be in the range)51 W
/Times-Italic SF
48777 XM
(val-1)SH
/Times-Roman SF
51363 XM
(to)SH
/Times-Italic SF
52545 XM
(val-2)SH
/Times-Roman SF
(,)SH
8280 68788 MT
(and then then)
106 W( scales and translates the value \050using linear-interpolation\051 to be between)105 W
/Times-Italic SF
47858 XM
(target-val-1)SH
/Times-Roman SF
53492 XM
(and)SH
/Times-Italic SF
8280 69984 MT
(target-val-2)SH
/Times-Roman SF
(.)SH
ES
%%Page: 256 37
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 256)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 /Times-Italic AF
6120 7955 MT
(Target-val-1)SH
/Times-Roman SF
12083 XM
(and)SH
/Times-Italic SF
14074 XM
(target-val-2)SH
/Times-Roman SF
19731 XM
(should be integers, but)128 W
/Times-Italic SF
30478 XM
(val)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
32500 XM
(val-1)SH
/Times-Roman SF
35163 XM
(and)SH
/Times-Italic SF
37154 XM
(val-2)SH
/Times-Roman SF
39817 XM
(can be any kind of)
128 W( numbers.)129 W
/Times-Italic SF
6120 9151 MT
(Val-1)SH
/Times-Roman SF
8839 XM
(can either be less or greater than)SH
/Times-Italic SF
23344 XM
(val-2)SH
/Times-Roman SF
25879 XM
(and)SH
/Times-Italic SF
27742 XM
(target-val-1)SH
/Times-Roman SF
33271 XM
(can be less or greater than)SH
/Times-Italic SF
44997 XM
(target-val-2)SH
/Times-Roman SF
(.)SH
6120 11449 MT
(Examples:)SH
8 /Courier AF
8040 12614 MT
(\050clip-and-map 5 0 10\051 => 5)SH
8040 13479 MT
(\050clip-and-map 5 10 0\051 => 5)SH
8040 14344 MT
(\050clip-and-map -5 0 10\051 => 0)SH
8040 15209 MT
(\050clip-and-map 40 0 10\051 => 10)SH
8040 16074 MT
(\050clip-and-map 5 0 10 100 200\051 => 150)SH
8040 16939 MT
(\050clip-and-map -5 0 10 100 200\051 => 100)SH
8040 17804 MT
(\050clip-and-map 0.3 0.0 1.0 0 100\051 => 30)SH
8040 18669 MT
(\050clip-and-map 5 20 0 100 200\051 => 175)SH
/Times-Italic SF
8040 20399 MT
(;; Formula to put in the :percent slot of a moving scroll bar indicator.)SH
8040 21264 MT
(;; Clip the moving indicator position to be between the top and bottom of)SH
8040 22129 MT
(;; the slider-shell \050minus the height of the indicator to keep it inside\051,)SH
8040 22994 MT
(;; and then map the value to be between 0 and 100.)SH
/Courier SF
8040 23859 MT
(\050formula `\050Clip-and-Map \050second \050gvl :box\051\051)SH
19560 24724 MT
(\050gv ',SLIDER-SHELL :top\051)SH
19560 25589 MT
(\050- \050gv-bottom ',SLIDER-SHELL\051 \050gvl :height\051 2\051)SH
19560 26454 MT
(0 100\051\051)SH
14 /Times-Bold AF
6120 30272 MT
(6.4. Two-Point-Interactor)SH
8 /Courier AF
8040 31437 MT
(\050create-instance 'inter:Two-Point-Interactor inter:interactor)SH
/Times-Italic SF
9000 32302 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
9000 33167 MT
(\050:start-where NIL\051)SH
9000 34032 MT
(\050:window NIL\051)SH
9000 34897 MT
(\050:start-event :leftdown\051)SH
9000 35762 MT
(\050:continuous T\051)SH
9000 36627 MT
(\050:stop-event NIL\051)SH
9000 37492 MT
(\050:running-where NIL\051)SH
9000 38357 MT
(\050:outside NIL\051)SH
9000 39222 MT
(\050:abort-event :control-\134g\051)SH
9000 40087 MT
(\050:waiting-priority normal-priority-level\051)SH
9000 40952 MT
(\050:running-priority running-priority-level\051)SH
9000 41817 MT
(\050:active T\051)SH
9000 42682 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
9000 44412 MT
(; Slots specific to the two-point-interactor \050discussed in this section\051)SH
/Courier SF
9000 45277 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
21960 XM
(; \050lambda \050inter final-point-list\051\051)SH
/Courier SF
9000 46142 MT
(\050:line-p NIL\051)SH
/Times-Italic SF
21960 XM
(; Whether to set the :box or :points slot of the feedback-obj)SH
/Courier SF
9000 47007 MT
(\050:min-width 0\051)SH
/Times-Italic SF
21960 XM
(; Minimum width for new rectangular region)SH
/Courier SF
9000 47872 MT
(\050:mih-height 0\051)SH
/Times-Italic SF
21960 XM
(; Minimum height for new rectangular region)SH
/Courier SF
9000 48737 MT
(\050:min-length NIL\051)SH
/Times-Italic SF
21960 XM
(; Minimum length for new line)SH
/Courier SF
9000 49602 MT
(\050:abort-if-too-small NIL\051)SH
/Times-Italic SF
21960 XM
(; Whether to draw feedback and execute final function when the selected region)SH
21960 50467 MT
(; is smaller than the minimum)SH
/Courier SF
9000 51332 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
21960 XM
(; Optional interim feedback object.  The inter will set this object's :visible slot)SH
21960 52197 MT
(and its :points or :box slot.)SH
/Courier SF
9000 53062 MT
(\050:flip-if-change-side T\051)SH
/Times-Italic SF
21960 XM
(; Whether to flip origin of rectangle when appropriate)SH
/Courier SF
9000 53927 MT
(\050:input-filter NIL\051)SH
/Times-Italic SF
21960 XM
(; Used for gridding \050see section 6.3.2\051)SH
9000 55657 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
16197 XM
(Read-only slots.)SH
9000 56522 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
9000 57387 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
9000 58252 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
9000 59117 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The character or keyword of the start event.)SH
9000 60847 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
15997 XM
(Customizable action routines.)SH
9000 61712 MT
(; See sections 5 and 8.9.4 for details about functions in these slots.)SH
/Courier SF
9000 62577 MT
(\050:start-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter first-points\051\051)SH
/Courier SF
9000 63442 MT
(\050:running-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter new-points\051\051)SH
/Courier SF
9000 64307 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter final-points\051\051)SH
/Courier SF
9000 65172 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter\051\051)SH
/Courier SF
9000 66037 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter outside-control\051\051)SH
/Courier SF
9000 66902 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter outside-control new-inside-points\051\051)SH
/Courier SF
8040 67767 MT
(...\051)SH
11 /Times-Roman AF
6120 69188 MT
(The Two-Point-interactor is used to enter one or two)
173 W( new points, when there is no existing object to)172 W
6120 70384 MT
(change. For)
507 W( example, this interactor might be used when creating a new rectangle or line.)
116 W( If)
509 W( the new)117 W
6120 71580 MT
(object needs to be defined by more than two points \050for example for polygons\051, then you would probably)36 W
ES
%%Page: 257 38
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.4)
SH( Two-Point-Interactor)1800 W
51386 XM
(Page 257)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(use the)SH
10 /Courier AF
11640 XM
(multi-point-interactor)SH
11 /Times-Roman AF
25115 XM
(instead, except that it is not implemented yet.)SH
8280 10253 MT
(Since lines)
71 W( and rectangles are defined differently, there are two modes for this interactor, determined by)72 W
8280 11449 MT
(the)SH
10 /Courier AF
9985 XM
(:line-p)SH
11 /Times-Roman AF
14546 XM
(slot. If)447 W
10 /Courier AF
18226 XM
(:line-p)SH
11 /Times-Roman AF
22787 XM
(is NIL, then rectangle mode is)
86 W( used, so the new object is defined by its)85 W
8280 12645 MT
(left, top, width, and height.  If)24 W
10 /Courier AF
21921 XM
(:line-p)SH
11 /Times-Roman AF
26420 XM
(is T, then the object is defined by two points: x1, y1, and x2,)
24 W( y2.)25 W
8280 13841 MT
(Both of these are stored as a list of four values.)SH
8280 16139 MT
(As a convenience, this interactor will handle clipping of the values.  A minimum)
2 W( size can be supplied, and)1 W
8280 17335 MT
(the object will not be smaller than this.)SH
8280 19633 MT
(While the interactor)
258 W( is running, a feedback object, supplied in the)259 W
10 /Courier AF
40176 XM
(:feedback-obj)SH
11 /Times-Roman AF
48510 XM
(slot is usually)259 W
8280 20829 MT
(modified to show where)
74 W( the new object will be.  When the interaction is complete, however, there is no)73 W
8280 22025 MT
(existing object to modify, so this interactor cannot just set an object field)
74 W( with the final value, like most)75 W
8280 23221 MT
(other interactors.  Therefore, the)35 W
10 /Courier AF
22960 XM
(final-function)SH
11 /Times-Roman AF
31670 XM
(\050section 6.4.1.3\051 will usually need to be used for)
35 W( this)34 W
8280 24417 MT
(interactor.)SH
8280 26715 MT
(There are a number of examples of the use)
84 W( of two-point-interactors below, and another in section 8.3.1.)85 W
8280 27911 MT
(Other examples can be found in the file)SH
10 /Courier AF
25934 XM
(demo-twop.lisp)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 31595 MT
(6.4.1. Default Operation)SH
11 /Times-Roman AF
8280 32791 MT
(This section describes how the two-point interactor works if the programmer does)
23 W( not remove or override)22 W
8280 33987 MT
(any of the standard)SH
10 /Courier AF
16954 XM
(-action)SH
11 /Times-Roman AF
21429 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.4.)SH
8280 36285 MT
(Just as for move-grow-interactors \050section 6.3\051, the feedback object \050if)
155 W( any\051 is modified indirectly, by)156 W
8280 37481 MT
(setting slots called)112 W
10 /Courier AF
17019 XM
(:box)SH
11 /Times-Roman AF
19806 XM
(or)SH
10 /Courier AF
21109 XM
(:points)SH
11 /Times-Roman AF
(. The)
499 W( programmer must provide constraints between the)111 W
10 /Courier AF
51480 XM
(:left,)SH
8280 38677 MT
(:top, :width,)182 W
11 /Times-Roman AF
16719 XM
(and)SH
10 /Courier AF
18764 XM
(:height)SH
11 /Times-Roman AF
23421 XM
(slots or the)182 W
10 /Courier AF
29070 XM
(:x1, :y1, :x2,)182 W
11 /Times-Roman AF
38291 XM
(and)SH
10 /Courier AF
40336 XM
(:y2)SH
11 /Times-Roman AF
42593 XM
(slots \050as appropriate\051.  The)182 W
8280 39873 MT
(examples in section 6.3 show how to define constraints for the feedback object.)SH
8280 42171 MT
(The slot)244 W
10 /Courier AF
12618 XM
(:line-p)SH
11 /Times-Roman AF
17337 XM
(tells the interactor whether)
244 W( to change the)243 W
10 /Courier AF
37214 XM
(:box)SH
11 /Times-Roman AF
40132 XM
(slot or the)243 W
10 /Courier AF
45536 XM
(:points)SH
11 /Times-Roman AF
50254 XM
(slot in the)243 W
8280 43367 MT
(feedback object.)
128 W( If)532 W
10 /Courier AF
17557 XM
(:line-p)SH
11 /Times-Roman AF
22161 XM
(is NIL \050the default\051, then the interactor changes the object by setting its)129 W
10 /Courier AF
8280 44563 MT
(:box)SH
11 /Times-Roman AF
10959 XM
(slot to a list containing the new values for \050left, top, width, height\051.  If)
4 W( T, then the interactor changes)3 W
8280 45759 MT
(the object by setting its)45 W
10 /Courier AF
18986 XM
(:points)SH
11 /Times-Roman AF
23507 XM
(slot to a list containing the new values for \050x1, y1, x2, y2\051.  \050These are)46 W
8280 46955 MT
(the same slots as used for)SH
10 /Courier AF
19766 XM
(move-grow-interactor)SH
11 /Times-Roman AF
(\051.)SH
12 /Times-Bold AF
8280 49919 MT
(6.4.1.1. Minimum sizes)SH
11 /Times-Roman AF
8280 51115 MT
(The two-point interactor will)
68 W( automatically keep objects the same or bigger than a specified size.  There)67 W
8280 52311 MT
(are two)
45 W( different mechanisms: one if)46 W
10 /Courier AF
24987 XM
(:line-p)SH
11 /Times-Roman AF
29508 XM
(is NIL \050so the object is defined by its)46 W
10 /Courier AF
46511 XM
(:box)SH
11 /Times-Roman AF
(\051, and another)46 W
8280 53507 MT
(if)SH
10 /Courier AF
9227 XM
(:line-p)SH
11 /Times-Roman AF
13702 XM
(is T.)SH
8280 55805 MT
(In both modes, the slot)55 W
10 /Courier AF
18883 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
30613 XM
(determines what happens)
55 W( if the size is smaller than the)54 W
8280 57001 MT
(defined minimum.  The default is NIL, which means to create the)
171 W( object with the minimum size.  If)172 W
10 /Courier AF
8280 58197 MT
(:abort-if-too-small)SH
11 /Times-Roman AF
20035 XM
(is T, however,)
80 W( then the feedback object will disappear if the size is too small,)79 W
8280 59393 MT
(and if the mouse is released, the final-function will be called with)
39 W( an error value \050NIL\051 so the application)40 W
8280 60589 MT
(will know not to create the object.)SH
8280 62887 MT
(If)SH
10 /Courier AF
9332 XM
(:line-p)SH
11 /Times-Roman AF
13852 XM
(is NIL, the slots)45 W
10 /Courier AF
21335 XM
(:min-width)SH
11 /Times-Roman AF
27655 XM
(and)SH
10 /Courier AF
29563 XM
(:min-height)SH
11 /Times-Roman AF
36483 XM
(define the minimum size of the object.  If)45 W
8280 64083 MT
(both of these are not set, zero is used as the minimum size \050the two-point-interactor)
35 W( will not let the width)36 W
8280 65279 MT
(or height get to be less than zero\051.  If the user moves the)
47 W( mouse to the left or above of the original point,)46 W
8280 66475 MT
(the parameter)132 W
10 /Courier AF
14835 XM
(:flip-if-change-side)SH
11 /Times-Roman AF
27243 XM
(determines what happens.  If)133 W
10 /Courier AF
40858 XM
(:flip-if-change-side)SH
11 /Times-Roman AF
53266 XM
(is T)133 W
8280 67671 MT
(\050the default\051, then the box will still be)
47 W( drawn from the initial point to the current mouse position, and the)46 W
8280 68867 MT
(box will be flipped.  The values put into the)141 W
10 /Courier AF
29213 XM
(:box)SH
11 /Times-Roman AF
32029 XM
(slot will always be the correct left, top, width)
141 W( and)142 W
8280 70063 MT
(height. If)275 W
10 /Courier AF
12862 XM
(:flip-if-change-side)SH
11 /Times-Roman AF
25137 XM
(is NIL, then the box will peg at its minimum value.)SH
ES
%%Page: 258 39
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 258)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(If)SH
10 /Courier AF
7338 XM
(:line-p)SH
11 /Times-Roman AF
12024 XM
(is T, the slot)211 W
10 /Courier AF
18583 XM
(:min-length)SH
11 /Times-Roman AF
25669 XM
(determines the)
211 W( minimum length.  This length is the actual)210 W
6120 9151 MT
(distance along the line,)
21 W( and the line will extend from its start point through the current mouse position for)22 W
6120 10347 MT
(the minimum length.  If not supplied, then the minimum will)
58 W( be zero. The)57 W
10 /Courier AF
39713 XM
(:min-width)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
46320 XM
(:min-height)SH
11 /Times-Roman AF
6120 11543 MT
(and)SH
10 /Courier AF
7983 XM
(:flip-if-change-side)SH
11 /Times-Roman AF
20258 XM
(slots are ignored for lines.)SH
12 /Times-Bold AF
6120 14507 MT
(6.4.1.2. Extra Parameters)SH
11 /Times-Roman AF
6120 15703 MT
(The extra parameters are:)SH
10 /Courier AF
6120 17654 MT
(:line-p)SH
11 /Times-Roman AF
(- If T, the)19 W
10 /Courier AF
14885 XM
(:points)SH
11 /Times-Roman AF
19379 XM
(slot of the feedback object is set with the list)19 W
10 /Courier AF
39427 XM
(\050x1 y1 x2 y2\051)19 W
11 /Times-Roman AF
(. If)
313 W( NIL, the)20 W
10 /Courier AF
9720 18850 MT
(:box)SH
11 /Times-Roman AF
12402 XM
(slot of the feedback object is set with)
7 W( the list)6 W
10 /Courier AF
32327 XM
(\050left top width height\051)6 W
11 /Times-Roman AF
(. The)
287 W( values in)6 W
9720 20046 MT
(the list)
10 W( passed to the final-function is also determined by)11 W
10 /Courier AF
35003 XM
(:line-p)SH
11 /Times-Roman AF
(. The)
297 W( default is NIL \050rectangle)11 W
9720 21242 MT
(mode\051.)SH
10 /Courier AF
6120 22937 MT
(:min-width)SH
11 /Times-Roman AF
(- The)256 W
10 /Courier AF
15258 XM
(:min-width)SH
11 /Times-Roman AF
21789 XM
(and)SH
10 /Courier AF
23908 XM
(:min-height)SH
11 /Times-Roman AF
31039 XM
(fields determine the minimum)
256 W( legal width and)255 W
9720 24133 MT
(height of the rectangle or other)
94 W( object if)95 W
10 /Courier AF
28251 XM
(:line-p)SH
11 /Times-Roman AF
32821 XM
(is NIL.  Default is NIL, which means use 0.)95 W
9720 25329 MT
(Both)SH
10 /Courier AF
12226 XM
(min-width)SH
11 /Times-Roman AF
17992 XM
(and)SH
10 /Courier AF
19946 XM
(min-height)SH
11 /Times-Roman AF
26312 XM
(must be non-NIL for this to take effect.)91 W
10 /Courier AF
44967 XM
(:min-width)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
9720 26525 MT
(:min-height)SH
11 /Times-Roman AF
16595 XM
(are ignored if)SH
10 /Courier AF
22794 XM
(:line-p)SH
11 /Times-Roman AF
27269 XM
(is non-)SH
9 SS 
(NIL)SH
11 SS 
32069 XM
(\050see)SH
10 /Courier AF
34114 XM
(:min-length)SH
11 /Times-Roman AF
(\051.)SH
10 /Courier AF
6120 28220 MT
(:min-height)SH
11 /Times-Roman AF
(- See)SH
10 /Courier AF
15224 XM
(:min-width)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 29915 MT
(:min-length)SH
11 /Times-Roman AF
(- If)257 W
10 /Courier AF
14882 XM
(:line-p)SH
11 /Times-Roman AF
19614 XM
(is non-)257 W
9 SS 
(NIL)SH
11 SS 
(, then)257 W
10 /Courier AF
27629 XM
(:min-width)SH
11 /Times-Roman AF
34161 XM
(and)SH
10 /Courier AF
36281 XM
(:min-height)SH
11 /Times-Roman AF
43413 XM
(are ignored,)
257 W( and the)258 W
10 /Courier AF
9720 31111 MT
(:min-length)SH
11 /Times-Roman AF
16616 XM
(slot is)
21 W( used instead.  This slot determines the minimum allowable length for a line)20 W
9720 32307 MT
(\050in pixels\051.  If NIL \050the default\051, then there is no minimum length.)SH
10 /Courier AF
6120 34002 MT
(:abort-if-too-small)SH
11 /Times-Roman AF
(- If this is NIL \050the default\051, then if the size)
66 W( is smaller than the minimum, then)67 W
9720 35198 MT
(the size is made bigger to be the minimum \050this works for)
234 W( both)233 W
10 /Courier AF
40715 XM
(:line-p)SH
11 /Times-Roman AF
45423 XM
(T and NIL\051.  If)233 W
10 /Courier AF
9720 36394 MT
(:abort-if-too-small)SH
11 /Times-Roman AF
21444 XM
(is T, then instead, no object is created and no feedback is shown if the)49 W
9720 37590 MT
(size is smaller than)SH
10 /Courier AF
18396 XM
(:min-width)SH
11 /Times-Roman AF
24671 XM
(and)SH
10 /Courier AF
26534 XM
(:min-height)SH
11 /Times-Roman AF
33409 XM
(or)SH
10 /Courier AF
34600 XM
(:min-length)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 39285 MT
(:flip-if-change-side)SH
11 /Times-Roman AF
(- This only applies if)794 W
10 /Courier AF
31531 XM
(:line-p)SH
11 /Times-Roman AF
36800 XM
(is NIL)
794 W( \050rectangle mode\051.  If)793 W
10 /Courier AF
9720 40481 MT
(:flip-if-change-side)SH
11 /Times-Roman AF
22190 XM
(is T \050the default\051, then if the user moves)
195 W( to the top or left of the)196 W
9720 41677 MT
(original point, the rectangle will)
17 W( be ``flipped'' so its top or left is the new point and the width and)16 W
9720 42873 MT
(height is based on the original point.)
12 W( If)301 W
10 /Courier AF
27429 XM
(:flip-if-change-side)SH
11 /Times-Roman AF
39717 XM
(is NIL, then the original point)13 W
9720 44069 MT
(is always the top-left, and if the mouse goes above or to the)
60 W( left of that, then the minimum legal)59 W
9720 45265 MT
(width or height is used.)SH
10 /Courier AF
6120 46960 MT
(:input-filter)SH
11 /Times-Roman AF
(- Used to support gridding.  See section 6.3.2.)SH
12 /Times-Bold AF
6120 49924 MT
(6.4.1.3. Application Notification)SH
11 /Times-Roman AF
6120 51120 MT
(Unlike with other interactors, it is usually necessary to have an application)
36 W( function called with the result)37 W
6120 52316 MT
(of the two-point-interactor.  The function is)
49 W( put into the)48 W
10 /Courier AF
31321 XM
(:final-function)SH
11 /Times-Roman AF
40644 XM
(slot of the interactor, and is)48 W
6120 53512 MT
(called with the following arguments:)SH
8 /Courier AF
8040 54677 MT
(\050lambda \050an-interactor final-point-list\051\051)SH
11 /Times-Roman AF
6120 56098 MT
(The)SH
10 /Courier AF
8261 XM
(final-point-list)SH
11 /Times-Roman AF
18292 XM
(will either)
156 W( be a list of the left top width, and height or the x and y of two)157 W
6120 57294 MT
(points, depending on the setting of the)41 W
10 /Courier AF
23516 XM
(:line-p)SH
11 /Times-Roman AF
28031 XM
(slot. If)
355 W( the)40 W
10 /Courier AF
33232 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
44947 XM
(slot is set \050section)40 W
6120 58490 MT
(6.4.1.1\051, then the)SH
10 /Courier AF
13849 XM
(final-point-list)SH
11 /Times-Roman AF
23724 XM
(will be NIL if the user tries to create an object that is too small.)SH
6120 60788 MT
(Therefore, the)
188 W( function should check to see if)189 W
10 /Courier AF
27880 XM
(final-point-list)SH
11 /Times-Roman AF
37944 XM
(is NIL, and if so, not create the)189 W
6120 61984 MT
(object. If)
565 W( you want to access the points anyway, the original point is available as the)144 W
10 /Courier AF
46113 XM
(:first-x)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
6120 63180 MT
(:first-y)SH
11 /Times-Roman AF
11252 XM
(slots of the interactor, and the)
57 W( final point is available in the)58 W
10 /Courier AF
38124 XM
(*Current-Event*)SH
11 /Times-Roman AF
47457 XM
(as described)58 W
6120 64376 MT
(in section 8.3.1.)SH
/Times-Bold SF
6120 66674 MT
(IMPORTANT NOTE: When creating an object using)63 W
10 /Courier AF
32014 XM
(final-point-list)SH
11 /Times-Bold AF
(, the elements of the list)62 W
6120 67870 MT
(should be accessed individually)
331 W( \050e.g,)332 W
10 /Courier AF
24924 XM
(\050first final-point-list\051 \050second final-point-)332 W
6120 69066 MT
(list\051 etc.)91 W
11 /Times-Bold AF
(\051 or else the list should be copied)91 W
10 /Courier AF
28401 XM
(\050copy-list final-point-list\051)90 W
11 /Times-Bold AF
45656 XM
(before they are)90 W
6120 70262 MT
(used in any object slots, since to avoid consing, the interactor reuses the same list.  Examples:)SH
ES
%%Page: 259 40
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.4)
SH( Two-Point-Interactor)1800 W
51386 XM
(Page 259)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050defun Create-New-Object1 \050an-interactor points-list\051)SH
11160 8564 MT
(\050when points-list)SH
12120 9429 MT
(\050create-instance NIL opal:rectangle)SH
13560 10294 MT
(\050:left \050first points-list\051\051 ;)SH
/Times-Italic SF
(access the values in)SH
/Courier SF
13560 11159 MT
(\050:top \050second points-list\051\051 ;)SH
/Times-Italic SF
27960 XM
(the list individually)SH
/Courier SF
13560 12024 MT
(\050:width \050third points-list\051\051)SH
13560 12889 MT
(\050:height \050fourth points-list\051\051\051\051\051)SH
/Times-Bold SF
10200 13754 MT
(OR)SH
/Courier SF
10200 14619 MT
(\050defun Create-New-Object2 \050an-interactor points-list\051)SH
11160 15484 MT
(\050when points-list)SH
12120 16349 MT
(\050create-instance NIL opal:rectangle)SH
13560 17214 MT
(\050:box \050copy-list points-list\051\051 ;)SH
/Times-Italic SF
(copy the list)SH
/Courier SF
13560 18079 MT
(\050:left \050first box\051\051)SH
13560 18944 MT
(\050:top \050second box\051\051)SH
13560 19809 MT
(\050:width \050third box\051\051)SH
13560 20674 MT
(\050:height \050fourth box\051\051\051\051\051)SH
12 /Times-Bold AF
8280 23638 MT
(6.4.1.4. Normal Operation)SH
11 /Times-Roman AF
8280 24834 MT
(If the value of)162 W
10 /Courier AF
15402 XM
(:continuous)SH
11 /Times-Roman AF
22439 XM
(is T,)
162 W( then when the start event happens, if)163 W
10 /Courier AF
42508 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 26030 MT
(non-NIL, then nothing happens until)
191 W( the mouse moves so that the size is big enough.  Otherwise, if)190 W
10 /Courier AF
8280 27226 MT
(:line-p)SH
11 /Times-Roman AF
12822 XM
(is NIL, then the)67 W
10 /Courier AF
20269 XM
(:visible)SH
11 /Times-Roman AF
25411 XM
(slot of the)68 W
10 /Courier AF
30290 XM
(:feedback-obj)SH
11 /Times-Roman AF
38433 XM
(is set to T, and its)68 W
10 /Courier AF
46878 XM
(:box)SH
11 /Times-Roman AF
49621 XM
(or)SH
10 /Courier AF
50880 XM
(:points)SH
11 /Times-Roman AF
8280 28422 MT
(slot is set with the correct values for the minimum size rectangle or line.  As the)
39 W( mouse moves, the)38 W
10 /Courier AF
52680 XM
(:box)SH
11 /Times-Roman AF
8280 29618 MT
(or)SH
10 /Courier AF
9660 XM
(:points)SH
11 /Times-Roman AF
14324 XM
(slot is set)
189 W( with the current size \050or minimum size\051.  If the size gets to be less than the)190 W
8280 30814 MT
(minimum and)108 W
10 /Courier AF
14914 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
26697 XM
(is non-NIL, then)
108 W( the)107 W
10 /Courier AF
36322 XM
(:visible)SH
11 /Times-Roman AF
41504 XM
(field of the feedback object is)107 W
8280 32010 MT
(set to NIL, and it is set to T again when the size gets equal or bigger than the minimum.)SH
8280 34308 MT
(If the mouse goes outside of)82 W
10 /Courier AF
21480 XM
(:running-where)SH
11 /Times-Roman AF
(, then if)83 W
10 /Courier AF
33795 XM
(:outside)SH
11 /Times-Roman AF
38953 XM
(is)SH
10 /Courier AF
40045 XM
(:last)SH
11 /Times-Roman AF
(, nothing happens until the)83 W
8280 35504 MT
(mouse comes back inside or the stop or abort events happen \050the object stays)
10 W( at its last legal inside value\051.)9 W
8280 36700 MT
(If)SH
10 /Courier AF
9287 XM
(:outside)SH
11 /Times-Roman AF
14362 XM
(is NIL, then the feedback object's)SH
10 /Courier AF
29541 XM
(:visible)SH
11 /Times-Roman AF
34616 XM
(slot is set to NIL.)SH
8280 38998 MT
(If the abort event happens, then the feedback object's)SH
10 /Courier AF
32040 XM
(:visible)SH
11 /Times-Roman AF
37115 XM
(slot is set to NIL.)SH
8280 41296 MT
(When the stop event happens, the feedback object's)30 W
10 /Courier AF
31579 XM
(:visible)SH
11 /Times-Roman AF
36684 XM
(slot is set to NIL and the final-function is)31 W
8280 42492 MT
(called.)SH
8280 44790 MT
(If the value of)29 W
10 /Courier AF
14870 XM
(:continuous)SH
11 /Times-Roman AF
21774 XM
(is NIL, then the final-function is called immediately)
29 W( on the start event with)28 W
8280 45986 MT
(the)SH
10 /Courier AF
10234 XM
(final-point-list)SH
11 /Times-Roman AF
20444 XM
(parameter as NIL if)335 W
10 /Courier AF
30700 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
42710 XM
(is non-NIL, or)
335 W( else a list)336 W
8280 47182 MT
(calculated based on the minimum size.)SH
ES
%%Page: 260 41
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 260)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.4.2. Examples)SH
6120 10968 MT
(6.4.2.1. Creating New Objects)SH
11 /Times-Roman AF
6120 12164 MT
(Create a rectangle when the middle button is pressed down, and a line when the right button is pressed.)SH
8 /Courier AF
8040 13329 MT
(\050defun Create-New-Object \050an-interactor points-list\051)SH
9000 14194 MT
(\050when points-list)SH
9960 15059 MT
(\050let \050obj\051)SH
10920 15924 MT
(\050if \050gv an-interactor :line-p\051)SH
12840 16789 MT
(;;)SH
/Times-Italic SF
(then create a line)SH
/Courier SF
12840 17654 MT
(\050setq obj \050create-instance NIL opal:line)SH
19080 18519 MT
(\050:x1 \050first points-list\051\051)SH
19080 19384 MT
(\050:y1 \050second points-list\051\051)SH
19080 20249 MT
(\050:x2 \050third points-list\051\051)SH
19080 21114 MT
(\050:y2 \050fourth points-list\051\051\051\051)SH
12840 21979 MT
(;;)SH
/Times-Italic SF
(else create a rectangle)SH
/Courier SF
12840 22844 MT
(\050setq obj \050create-instance NIL opal:rectangle)SH
19080 23709 MT
(\050:left \050first points-list\051\051)SH
19080 24574 MT
(\050:top \050second points-list\051\051)SH
19080 25439 MT
(\050:width \050third points-list\051\051)SH
19080 26304 MT
(\050:height \050fourth points-list\051\051\051\051\051)SH
10920 27169 MT
(\050opal:add-components MYAGG obj\051)SH
10920 28034 MT
(obj\051\051\051)SH
8040 29764 MT
(\050create-instance 'CREATERECT Inter:Two-Point-Interactor)SH
9480 30629 MT
(\050:window MYWINDOW\051)SH
9480 31494 MT
(\050:start-event :middledown\051)SH
9480 32359 MT
(\050:start-where T\051)SH
9480 33224 MT
(\050:final-function #'Create-New-Object\051)SH
9480 34089 MT
(\050:feedback-obj MOVING-RECTANGLE\051 ;)SH
/Times-Italic SF
(section 6.3.1)SH
/Courier SF
9480 34954 MT
(\050:min-width 20\051)SH
9480 35819 MT
(\050:min-height 20\051\051)SH
8040 36684 MT
(\050create-instance 'CREATELINE Inter:Two-Point-Interactor)SH
9480 37549 MT
(\050:window MYWINDOW\051)SH
9480 38414 MT
(\050:start-event :rightdown\051)SH
9480 39279 MT
(\050:start-where T\051)SH
9480 40144 MT
(\050:final-function #'Create-New-Object\051)SH
9480 41009 MT
(\050:feedback-obj MOVING-LINE\051 ;)SH
/Times-Italic SF
(section 6.3.1)SH
/Courier SF
9480 41874 MT
(\050:line-p T\051)SH
9480 42739 MT
(\050:min-length 20\051\051)SH
ES
%%Page: 261 42
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.5)
SH( Angle-Interactor)1800 W
51386 XM
(Page 261)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(6.5. Angle-Interactor)SH
8 /Courier AF
10200 9303 MT
(\050create-instance 'inter:Angle-Interactor inter:interactor)SH
/Times-Italic SF
11160 10168 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
11160 11033 MT
(\050:start-where NIL\051)SH
11160 11898 MT
(\050:window NIL\051)SH
11160 12763 MT
(\050:start-event :leftdown\051)SH
11160 13628 MT
(\050:continuous T\051)SH
11160 14493 MT
(\050:stop-event NIL\051)SH
11160 15358 MT
(\050:running-where NIL\051)SH
11160 16223 MT
(\050:outside NIL\051)SH
11160 17088 MT
(\050:abort-event :control-\134g\051)SH
11160 17953 MT
(\050:waiting-priority normal-priority-level\051)SH
11160 18818 MT
(\050:running-priority running-priority-level\051)SH
11160 19683 MT
(\050:active T\051)SH
11160 20548 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
11160 22278 MT
(; Slots specific to the move-grow-interactor \050discussed in this section\051)SH
/Courier SF
11160 23143 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
24120 XM
(; \050lambda \050inter obj-being-rotated final-angle\051\051)SH
/Courier SF
11160 24008 MT
(\050:obj-to-change NIL\051)SH
/Times-Italic SF
24120 XM
(; The object to change the :angle slot of \050if NIL, then the interactor will change)SH
24120 24873 MT
(; the object returned from the start-where\051)SH
/Courier SF
11160 25738 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; Optional interim feedback object.  The inter will set this object's :obj-over slot)SH
24120 26603 MT
(; and its :angle slot during interim selection)SH
/Courier SF
11160 27468 MT
(\050:center-of-rotation NIL\051)SH
/Times-Italic SF
24120 XM
(; A list \050x y\051 indicating a coordinate around which the objects will be rotated.)SH
24120 28333 MT
(; If NIL, the center of the object is used)SH
11160 30063 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18357 XM
(Read-only slots.)SH
11160 30928 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
11160 31793 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
11160 32658 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
11160 33523 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The character or keyword of the start event.)SH
11160 35253 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18157 XM
(Customizable action routines.)SH
11160 36118 MT
(; See sections 5 and 8.9.5 for details about functions in these slots.)SH
/Courier SF
11160 36983 MT
(\050:start-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-being-rotated first-angle\051\051)SH
/Courier SF
11160 37848 MT
(\050:running-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-being-rotated new-angle angle-delta\051\051)SH
/Courier SF
11160 38713 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-being-rotated final-angle angle-delta\051\051)SH
/Courier SF
11160 39578 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-being-rotated\051\051)SH
/Courier SF
11160 40443 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter outside-control obj-being-rotated\051\051)SH
/Courier SF
11160 41308 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter outside-control obj-being-rotated new-angle\051\051)SH
/Courier SF
10200 42173 MT
(...\051)SH
11 /Times-Roman AF
8280 43594 MT
(This is used to measure)
20 W( the angle the mouse moves around a point.  It can be used for circular gauges, for)19 W
8280 44790 MT
(rotating objects, or for ``stirring motions'' for objects.)SH
8280 47088 MT
(It operates very much like)
107 W( the)108 W
10 /Courier AF
22302 XM
(move-grow-interactor)SH
11 /Times-Roman AF
34685 XM
(and has interim and final feedback that work)108 W
8280 48284 MT
(much the same way.)SH
8280 50582 MT
(The interactor can either be permanently tied to)
40 W( a particular graphics object, or it will get the object from)39 W
8280 51778 MT
(where the mouse is when)
19 W( the interaction starts.  There may be a feedback object to show where the object)20 W
8280 52974 MT
(will be moved or changed to, or the object itself may change with the mouse.)SH
8280 55272 MT
(There is an example of the use)
33 W( of the angle-interactor below.  Other examples can be found in the)32 W
10 /Courier AF
52080 XM
(Gauge)SH
11 /Times-Roman AF
8280 56468 MT
(gadget in the Garnet Gadget Set, and in the files)SH
10 /Courier AF
29693 XM
(demo-angle.lisp)SH
11 /Times-Roman AF
38968 XM
(and)SH
10 /Courier AF
40831 XM
(demo-clock.lisp)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 60152 MT
(6.5.1. Default Operation)SH
11 /Times-Roman AF
8280 61348 MT
(This section describes how the angle interactor works if the programmer)
23 W( does not remove or override any)24 W
8280 62544 MT
(of the standard)SH
10 /Courier AF
15091 XM
(-action)SH
11 /Times-Roman AF
19566 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.5.)SH
8280 64842 MT
(The feedback object \050if any\051)83 W
/Times-Italic SF
21428 XM
(and)SH
/Times-Roman SF
23436 XM
(the object being edited are modified indirectly, by setting a slot)
83 W( called)82 W
10 /Courier AF
8280 66038 MT
(:angle)SH
11 /Times-Roman AF
(. The)
757 W( programmer must provide constraints to this slot.  If there is a)
241 W( feedback object, the)242 W
8280 67234 MT
(interactor also sets its)94 W
10 /Courier AF
18432 XM
(:obj-over)SH
11 /Times-Roman AF
24201 XM
(field to the actual object that is being)
94 W( moved.  This can be used, for)93 W
8280 68430 MT
(example, to control the visibility of the feedback object or its size.)SH
8280 70728 MT
(The angle slot is set with a value in radians measured counter-clockwise)
99 W( from the far right.  Therefore,)100 W
8280 71924 MT
(straight up is)SH
10 /Courier AF
14239 XM
(\050/ PI 2.0\051)SH
11 /Times-Roman AF
(, straight left is)SH
10 /Courier AF
27114 XM
(PI)SH
11 /Times-Roman AF
(, and straight down is)SH
10 /Courier AF
38030 XM
(\050* PI 1.5\051)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 262 43
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 262)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(The object being changed is either gotten from the)85 W
10 /Courier AF
29336 XM
(:obj-to-change)SH
11 /Times-Roman AF
38096 XM
(slot of the interactor, or if that is)84 W
6120 9151 MT
(NIL, then from the object returned from)SH
10 /Courier AF
24018 XM
(:start-where)SH
11 /Times-Roman AF
(.)SH
6120 11449 MT
(The interactor needs to)
22 W( be told where the center of rotation should be.  The slot)23 W
10 /Courier AF
41520 XM
(:center-of-rotation)SH
11 /Times-Roman AF
6120 12645 MT
(can contain a point as a list of)9 W
10 /Courier AF
19572 XM
(\050x y\051)9 W
11 /Times-Roman AF
(. If)293 W
10 /Courier AF
24440 XM
(:center-of-rotation)SH
11 /Times-Roman AF
36124 XM
(is NIL \050the default\051, then)
9 W( the center of)8 W
6120 13841 MT
(the object being rotated is used.)SH
6120 16139 MT
(For example, a line that can be rotated around an endpoint might have the following definition:)SH
8 /Courier AF
8040 17304 MT
(\050create-instance 'ROTATING-LINE opal:line)SH
9480 18169 MT
(\050:angle \050/ PI 4\051\051  ;)SH
/Times-Italic SF
(initial value = 45 degrees up)SH
/Courier SF
9480 19034 MT
(\050:line-length 50\051)SH
9480 19899 MT
(\050:x1 70\051)SH
9480 20764 MT
(\050:y1 170\051)SH
9480 21629 MT
(\050:x2 \050o-formula \050+ \050gvl :x1\051)SH
18600 22494 MT
(\050round \050* \050gvl :line-length\051)SH
23400 23359 MT
(\050cos \050gvl :angle\051\051\051\051\051\051\051)SH
9480 24224 MT
(\050:y2 \050o-formula \050- \050gvl :y1\051)SH
18600 25089 MT
(\050round \050* \050gvl :line-length\051)SH
23400 25954 MT
(\050sin \050gvl :angle\051\051\051\051\051\051\051\051)SH
8040 27684 MT
(\050create-instance 'MYROTATOR Inter:Angle-Interactor)SH
9480 28549 MT
(\050:start-where T\051)SH
9480 29414 MT
(\050:obj-to-change ROTATING-LINE\051)SH
9480 30279 MT
(\050:center-of-rotation \050o-formula \050list \050gvl :obj-to-change :x1\051)SH
27720 31144 MT
(\050gvl :obj-to-change :y1\051\051\051\051)SH
9480 32009 MT
(\050:window MYWINDOW\051\051)SH
12 /Times-Bold AF
6120 34973 MT
(6.5.1.1. Extra Parameters)SH
11 /Times-Roman AF
6120 36169 MT
(The extra parameters are:)SH
10 /Courier AF
6120 38120 MT
(:obj-to-change)SH
11 /Times-Roman AF
(- If an object is supplied here, then the interactor modifies)
161 W( the)162 W
10 /Courier AF
43853 XM
(:angle)SH
11 /Times-Roman AF
47890 XM
(slot of that)162 W
9720 39316 MT
(object. If)509 W
10 /Courier AF
14591 XM
(:obj-to-change)SH
11 /Times-Roman AF
23383 XM
(is NIL, then the interactor)
117 W( operates on whatever is returned from)116 W
10 /Courier AF
9720 40512 MT
(:start-where)SH
11 /Times-Roman AF
(. The)
275 W( default value is NIL.)SH
10 /Courier AF
6120 42207 MT
(:center-of-rotation)SH
11 /Times-Roman AF
(- This is the center of rotation for the interaction.  It should be a list of)57 W
10 /Courier AF
49587 XM
(\050x y\051)58 W
11 /Times-Roman AF
(.)SH
9720 43403 MT
(If NIL, then the center of the real)
3 W( object being rotated \050note:)2 W
/Times-Italic SF
36474 XM
(not)SH
/Times-Roman SF
38157 XM
(the feedback object\051 is used.  The)2 W
9720 44599 MT
(default value is NIL.)SH
12 /Times-Bold AF
6120 47563 MT
(6.5.1.2. Application Notification)SH
11 /Times-Roman AF
6120 48759 MT
(Often, it is not necessary to have the application notified of the result of a angle-interactor, if you only)102 W
6120 49955 MT
(want the)
93 W( object to rotate around.  Otherwise, you can have constraints in the application to the)92 W
10 /Courier AF
49320 XM
(:angle)SH
11 /Times-Roman AF
6120 51151 MT
(slot.)SH
6120 53449 MT
(Alternatively, the programmer can provide a function to be called when)
163 W( the interactor is complete by)164 W
6120 54645 MT
(putting the function in the)3 W
10 /Courier AF
17837 XM
(:final-function)SH
11 /Times-Roman AF
27114 XM
(slot. This)
279 W( function is called with the following arguments:)2 W
8 /Courier AF
8040 55810 MT
(\050lambda \050an-interactor object-being-rotated final-angle\051\051)SH
12 /Times-Bold AF
6120 58774 MT
(6.5.1.3. Normal Operation)SH
11 /Times-Roman AF
6120 59970 MT
(If the value of)16 W
10 /Courier AF
12658 XM
(:continuous)SH
11 /Times-Roman AF
19549 XM
(is T, then when the start)
16 W( event happens, the interactor determines the object)17 W
6120 61166 MT
(to be changed as either the value of the)36 W
10 /Courier AF
23883 XM
(:obj-to-change)SH
11 /Times-Roman AF
32594 XM
(slot, or if)
36 W( that is NIL, then the object returned)35 W
6120 62362 MT
(from the)281 W
10 /Courier AF
10714 XM
(:start-where)SH
11 /Times-Roman AF
(. The)837 W
10 /Courier AF
21567 XM
(:obj-over)SH
11 /Times-Roman AF
27523 XM
(slot of the object in)
281 W( the)282 W
10 /Courier AF
39599 XM
(:feedback-obj)SH
11 /Times-Roman AF
47956 XM
(slot of the)282 W
6120 63558 MT
(interactor is set to the object being changed.  Then, for every mouse movement until the stop)
196 W( event)195 W
6120 64754 MT
(happens, the interactor sets the)178 W
10 /Courier AF
20816 XM
(:angle)SH
11 /Times-Roman AF
24869 XM
(slot. The)
631 W( object that is modified while running is either)
178 W( the)179 W
6120 65950 MT
(feedback object if it exists or the object being changed if there is no feedback object.)SH
6120 68248 MT
(If the mouse goes outside of)83 W
10 /Courier AF
19326 XM
(:running-where)SH
11 /Times-Roman AF
(, then if)83 W
10 /Courier AF
31641 XM
(:outside)SH
11 /Times-Roman AF
36798 XM
(is)SH
10 /Courier AF
37889 XM
(:last)SH
11 /Times-Roman AF
(, nothing happens until the)82 W
6120 69444 MT
(mouse comes back inside or the stop)
9 W( or abort events happen \050the object stays at its last legal inside value\051.)10 W
6120 70640 MT
(If)SH
10 /Courier AF
7226 XM
(:outside)SH
11 /Times-Roman AF
12400 XM
(is NIL, then the feedback object's)99 W
10 /Courier AF
28173 XM
(:obj-over)SH
11 /Times-Roman AF
33947 XM
(slot is set)
99 W( to NIL.  If there is no feedback)98 W
6120 71836 MT
(object and the mouse goes outside, then the object being)
50 W( changed is returned to its original angle \050before)51 W
ES
%%Page: 263 44
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.6)
SH( Text-interactor)1800 W
51386 XM
(Page 263)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(the interactor started\051.)SH
8280 10253 MT
(If the abort event happens, then the)
146 W( feedback object's)145 W
10 /Courier AF
33351 XM
(:obj-over)SH
11 /Times-Roman AF
39171 XM
(slot is set to NIL, or if there is no)145 W
8280 11449 MT
(feedback object, then the object being)
232 W( rotated is returned to its original angle \050before the interactor)233 W
8280 12645 MT
(started\051.)SH
8280 14943 MT
(When the stop event happens, the feedback object's)3 W
10 /Courier AF
31363 XM
(:obj-over)SH
11 /Times-Roman AF
37040 XM
(slot is set to NIL, and the)2 W
10 /Courier AF
48420 XM
(:angle)SH
11 /Times-Roman AF
52297 XM
(slot of)2 W
8280 16139 MT
(the actual object is set with the last value, and the final-function \050if any\051 is called.)SH
8280 18437 MT
(If the interactor is)5 W
/Times-Italic SF
16424 XM
(not)SH
/Times-Roman SF
18110 XM
(continuous, when the start event happens, the)5 W
10 /Courier AF
38398 XM
(:angle)SH
11 /Times-Roman AF
42278 XM
(slot of the actual object)
5 W( is set)6 W
8280 19633 MT
(with the initial value, and the final-function \050if any\051 is called.)SH
14 /Times-Bold AF
8280 23451 MT
(6.6. Text-interactor)SH
8 /Courier AF
10200 24616 MT
(\050create-instance 'inter:Text-Interactor inter:interactor)SH
/Times-Italic SF
11160 25481 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
11160 26346 MT
(\050:start-where NIL\051)SH
11160 27211 MT
(\050:window NIL\051)SH
11160 28076 MT
(\050:start-event :leftdown\051)SH
11160 28941 MT
(\050:continuous T\051)SH
11160 29806 MT
(\050:stop-event NIL\051)SH
11160 30671 MT
(\050:running-where T\051)SH
11160 31536 MT
(\050:outside NIL\051)SH
11160 32401 MT
(\050:abort-event '\050:control-\134g :control-g\051\051)SH
11160 33266 MT
(\050:waiting-priority normal-priority-level\051)SH
11160 34131 MT
(\050:running-priority running-priority-level\051)SH
11160 34996 MT
(\050:active T\051)SH
11160 35861 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
11160 37591 MT
(; Slots specific to the text-interactor \050discussed in this section\051)SH
/Courier SF
11160 38456 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
24120 XM
(; \050lambda \050inter obj-being-edited final-event final-string x y\051\051)SH
/Courier SF
11160 39321 MT
(\050:obj-to-change NIL\051)SH
/Times-Italic SF
24120 XM
(; The object to change the :string slot of \050if NIL, then the interactor will change)SH
24120 40186 MT
(; the object returned from the start-where\051)SH
/Courier SF
11160 41916 MT
(\050:feedback-obj NIL\051)SH
/Times-Italic SF
24120 XM
(; Optional interim feedback object.  The inter will set this object's :string, :cursor-index,)SH
24120 42781 MT
(; :obj-over, and :box slots)SH
/Courier SF
11160 43646 MT
(\050:cursor-where-press T\051)SH
/Times-Italic SF
24120 XM
(; Whether to position the cursor under the mouse or at the end of the string)SH
/Courier SF
11160 44511 MT
(\050:input-filter NIL\051)SH
/Times-Italic SF
24120 XM
(; Used for gridding \050see section 6.3.2\051)SH
/Courier SF
11160 45376 MT
(\050:button-outside-stop? T\051)SH
/Times-Italic SF
24120 XM
(; Whether a click outside the string should stop editing \050see section 6.6.2.2\051)SH
11160 47106 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18357 XM
(Read-only slots.)SH
11160 47971 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
11160 48836 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
11160 49701 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
11160 50566 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
23640 XM
(; Read-only slot.  The character or keyword of the start event.)SH
11160 52296 MT
(;)SH
/Times-Bold SF
11626 XM
(Advanced feature:)SH
/Times-Italic SF
18157 XM
(Customizable action routines.)SH
11160 53161 MT
(; See sections 5 and 8.9.6 for details about functions in these slots.)SH
/Courier SF
11160 54026 MT
(\050:start-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter new-obj-over start-event\051\051)SH
/Courier SF
11160 54891 MT
(\050:running-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-over event\051\051)SH
/Courier SF
11160 55756 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-over stop-event\051\051)SH
/Courier SF
11160 56621 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-over abort-event\051\051)SH
/Courier SF
11160 57486 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-over\051\051)SH
/Courier SF
11160 58351 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
23640 XM
(; \050lambda \050inter obj-over event\051\051)SH
/Courier SF
10200 59216 MT
(...\051)SH
11 /Times-Roman AF
8280 60637 MT
(If you want)
24 W( to use multi-font, multi-line text objects, you will probably want to use the special interactors)23 W
8280 61833 MT
(defined for them, which are described in the Opal manual.)SH
8280 64131 MT
(The)SH
10 /Courier AF
10365 XM
(text-interactor)SH
11 /Times-Roman AF
19740 XM
(will input a one-line or multi-line string of text, while allowing editing)
100 W( on the)101 W
8280 65327 MT
(string. A)
351 W( fairly complete set of editing operations is supported,)
38 W( and the programmer or user can add new)37 W
8280 66523 MT
(ones or change the bindings of)
19 W( the default operations.  The intention is that this be used for string entry in)20 W
8280 67719 MT
(text forms, for file)
30 W( names, object names, numbers, labels for pictures, etc.  The strings can be in any font,)29 W
8280 68915 MT
(but the entire string must be in the same font.)
30 W( More)
336 W( complex editing capabilities are clearly possible, but)31 W
8280 70111 MT
(not implemented here.)SH
ES
%%Page: 264 45
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 264)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(Text-interactors work on)307 W
10 /Courier AF
18250 XM
(opal:text)SH
11 /Times-Roman AF
24232 XM
(objects. The)
889 W( interactor)
307 W( can either be permanently tied to a)306 W
6120 9151 MT
(particular text object, or it will get the object from where the mouse)
40 W( is when the interaction starts.  There)41 W
6120 10347 MT
(may be a feedback object to show the edits, with the final object changed only when)
209 W( the editing is)208 W
6120 11543 MT
(complete, or else the object)
210 W( itself can be edited.  \050Feedback objects are actually not very useful for)211 W
6120 12739 MT
(text-interactors.\051 Both)
275 W( the feedback and the main object should be an)SH
10 /Courier AF
37001 XM
(opal:text)SH
11 /Times-Roman AF
42676 XM
(object.)SH
6120 15037 MT
(There is an example of the use of the text-interactor below.  Other examples can)
155 W( be found in the top)154 W
6120 16233 MT
(type-in area in the)SH
10 /Courier AF
14366 XM
(v-slider)SH
11 /Times-Roman AF
19441 XM
(gadget in the Garnet Gadget Set, and in the file)SH
10 /Courier AF
40426 XM
(demo-text.lisp)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 19917 MT
(6.6.1. Default Editing Commands)SH
11 /Times-Roman AF
6120 21113 MT
(There is a)
233 W( default set of editing commands provided with text interactors.  These are based on the)234 W
6120 22309 MT
(EMACS command set.  The programmer change this)
18 W( and can create his own mappings and functions \050see)17 W
6120 23505 MT
(section 6.6.5\051.)
121 W( In)
519 W( the following, keys like ")122 W
10 /Courier AF
(insert)SH
11 /Times-Roman AF
(" and ")122 W
10 /Courier AF
(home)SH
11 /Times-Roman AF
(" are the specially labeled keys on the)122 W
6120 24701 MT
(IBM/RT or Sun keyboard.  If your keyboard has)
14 W( some keys you would like to work as editing commands,)13 W
6120 25897 MT
(see section 3.4.)SH
10 /Courier AF
8620 27848 MT
(^h, delete, backspace)SH
11 /Times-Roman AF
(: delete previous character.)SH
10 /Courier AF
8620 29543 MT
(^w, ^backspace, ^delete)SH
11 /Times-Roman AF
(: delete previous word.)SH
10 /Courier AF
8620 31238 MT
(^d)SH
11 /Times-Roman AF
(: delete next character.)SH
10 /Courier AF
8620 32933 MT
(^u)SH
11 /Times-Roman AF
(: delete entire string.)SH
10 /Courier AF
8620 34628 MT
(^k)SH
11 /Times-Roman AF
(: delete to end of line.)SH
10 /Courier AF
8620 36323 MT
(^b, left-arrow)SH
11 /Times-Roman AF
(: go back one character.)SH
10 /Courier AF
8620 38018 MT
(^f, right-arrow)SH
11 /Times-Roman AF
(: go forward one character.)SH
10 /Courier AF
8620 39713 MT
(^n, down-arrow)SH
11 /Times-Roman AF
(: go vertically down one line \050for multi-line strings\051.)SH
10 /Courier AF
8620 41408 MT
(^p, up-arrow)SH
11 /Times-Roman AF
(: go vertically up one line \050for multi-line strings\051.)SH
10 /Courier AF
8620 43103 MT
(^<, ^comma, home)SH
11 /Times-Roman AF
(: go to the beginning of the string.)SH
10 /Courier AF
8620 44798 MT
(^>, ^period, end)SH
11 /Times-Roman AF
(: go to the end of the string.)SH
10 /Courier AF
8620 46493 MT
(^a)SH
11 /Times-Roman AF
(: go to beginning of the current line \050different from)SH
10 /Courier AF
32546 XM
(^<)SH
11 /Times-Roman AF
34021 XM
(for multi-line strings\051.)SH
10 /Courier AF
8620 48188 MT
(^e)SH
11 /Times-Roman AF
(: go to end of the current line \050different from)SH
10 /Courier AF
29734 XM
(^>)SH
11 /Times-Roman AF
31209 XM
(for multi-line strings\051.)SH
10 /Courier AF
8620 49883 MT
(^y, insert)SH
11 /Times-Roman AF
(: insert the contents of the cut buffer into the string at the current point.)SH
10 /Courier AF
8620 51578 MT
(^c)SH
11 /Times-Roman AF
(: copy the current string to the cut buffer.)SH
10 /Courier AF
8620 53273 MT
(enter, return, ^j, ^J)SH
11 /Times-Roman AF
(: Add a new line.)SH
10 /Courier AF
8620 54968 MT
(^o)SH
11 /Times-Roman AF
(: Insert a new line after the cursor.)SH
10 /Courier AF
8620 56663 MT
(any mouse button down inside the string)61 W
11 /Times-Roman AF
(: move the cursor to)
61 W( the specified point.  This)62 W
9720 57859 MT
(only works if the)SH
10 /Courier AF
17480 XM
(:cursor-where-press)SH
11 /Times-Roman AF
29155 XM
(slot of the interactor is non-NIL.)SH
6120 60157 MT
(In addition, the numeric keypad is mapped to normal numbers and symbols.)SH
6120 62455 MT
(Note: if you manage to get an illegal character into)
60 W( the string, the string will only be displayed up to the)59 W
6120 63651 MT
(first illegal character.  The rest will be invisible \050but still in the)SH
10 /Courier AF
33982 XM
(:string)SH
11 /Times-Roman AF
38457 XM
(slot\051.)SH
6120 65949 MT
(The interactor's)83 W
10 /Courier AF
13554 XM
(:stop-event)SH
11 /Times-Roman AF
20512 XM
(and)SH
10 /Courier AF
22458 XM
(:abort-event)SH
11 /Times-Roman AF
30016 XM
(override the above operations.)
83 W( For)
442 W( example, if the)84 W
10 /Courier AF
6120 67145 MT
(:stop-event)SH
11 /Times-Roman AF
13189 XM
(is)SH
10 /Courier AF
14392 XM
(:any-mousedown)SH
11 /Times-Roman AF
(, then when you press in the string, editing will stop)
194 W( rather than)193 W
6120 68341 MT
(causing the cursor to move.  Similarly, if)37 W
10 /Courier AF
24686 XM
(#\134RETURN)SH
11 /Times-Roman AF
29798 XM
(is the)37 W
10 /Courier AF
32500 XM
(:stop-event)SH
11 /Times-Roman AF
(, then it cannot)
37 W( be inserted into)38 W
6120 69537 MT
(the string for a multi-line string, and if)14 W
10 /Courier AF
23433 XM
(:control-\134c)SH
11 /Times-Roman AF
30322 XM
(is the)14 W
10 /Courier AF
32978 XM
(:abort-event)SH
11 /Times-Roman AF
(, it cannot be)
14 W( used to copy to)13 W
6120 70733 MT
(the X cut buffer.  Therefore,)
90 W( you need to pick the)91 W
10 /Courier AF
29013 XM
(:stop-event)SH
11 /Times-Roman AF
35979 XM
(and)SH
10 /Courier AF
37933 XM
(:abort-event)SH
11 /Times-Roman AF
45499 XM
(appropriately, or)91 W
6120 71929 MT
(change the bindings \050see section 6.6.5\051)SH
ES
%%Page: 265 46
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.6)
SH( Text-interactor)1800 W
51386 XM
(Page 265)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(6.6.2. Default Operation)SH
11 /Times-Roman AF
8280 9200 MT
(This section describes)
70 W( how the text interactor works if the programmer does not remove or override any)69 W
8280 10396 MT
(of the standard)SH
10 /Courier AF
15091 XM
(-action)SH
11 /Times-Roman AF
19566 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.6.)SH
8280 12694 MT
(Unlike other interactors, the feedback object \050if any\051 and the object being edited)
27 W( are modified directly, by)28 W
8280 13890 MT
(setting the)37 W
10 /Courier AF
13182 XM
(:string)SH
11 /Times-Roman AF
17694 XM
(and)SH
10 /Courier AF
19594 XM
(:cursor-index)SH
11 /Times-Roman AF
27706 XM
(fields \050that control the value displayed and the position)
37 W( of the)36 W
8280 15086 MT
(cursor in the string\051.  If there is a feedback object,)
44 W( the interactor also sets the first two values of its)45 W
10 /Courier AF
52680 XM
(:box)SH
11 /Times-Roman AF
8280 16282 MT
(field to be the position where the start event happened.  This)
54 W( might be used to put the feedback object at)53 W
8280 17478 MT
(the mouse position when the user presses to start a new string.)SH
8280 19776 MT
(In general, feedback objects are mainly useful when)
151 W( you want to create new strings as a result of the)152 W
8280 20972 MT
(event.)SH
8280 23270 MT
(The object being changed is either gotten from the)85 W
10 /Courier AF
31496 XM
(:obj-to-change)SH
11 /Times-Roman AF
40256 XM
(slot of the interactor, or if that is)84 W
8280 24466 MT
(NIL, then from the object returned from)SH
10 /Courier AF
26178 XM
(:start-where)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 27430 MT
(6.6.2.1. Multi-line text strings)SH
11 /Times-Roman AF
8280 28626 MT
(The default stop event for text interactors is)100 W
10 /Courier AF
28568 XM
(#\134RETURN)SH
11 /Times-Roman AF
(, which is)
100 W( fine for one-line strings, but does not)101 W
8280 29822 MT
(work for multi-line strings.  For those, you probably want to)
196 W( specify a stop event as something like)195 W
10 /Courier AF
8280 31018 MT
(:any-mousedown)SH
11 /Times-Roman AF
17064 XM
(so that)109 W
10 /Courier AF
20461 XM
(#\134RETURN)SH
11 /Times-Roman AF
(s can be typed into the string \050actually, the character in the string)110 W
8280 32214 MT
(that makes it go to the next line)
148 W( is #\134NEWLINE; the interactor maps the return key to #\134NEWLINE\051.)147 W
8280 33410 MT
(Also)SH
10 /Courier AF
10665 XM
(:any-mousedown)SH
11 /Times-Roman AF
19372 XM
(would be a bad choice for the stop event if you wanted to)
32 W( allow the mouse to be)33 W
8280 34606 MT
(used for changing the text insert cursor position.)SH
8280 36904 MT
(Note that the stop event is)SH
/Times-Italic SF
20012 XM
(not)SH
/Times-Roman SF
21693 XM
(edited into the string.)SH
8280 39202 MT
(The)SH
10 /Courier AF
10265 XM
(:outside)SH
11 /Times-Roman AF
15340 XM
(slot is ignored.)SH
8280 41500 MT
(The default)SH
10 /Courier AF
13594 XM
(:running-where)SH
11 /Times-Roman AF
22269 XM
(is T for text-interactors.)SH
12 /Times-Bold AF
8280 44464 MT
(6.6.2.2. Extra Parameters)SH
11 /Times-Roman AF
8280 45660 MT
(The extra parameters are:)SH
10 /Courier AF
8280 47611 MT
(:obj-to-change)SH
11 /Times-Roman AF
(- If an object is supplied here, then the interactor modifies the)380 W
10 /Courier AF
48638 XM
(:string)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
11880 48807 MT
(:cursor-index)SH
11 /Times-Roman AF
20046 XM
(slots of that object.  If)91 W
10 /Courier AF
30521 XM
(:obj-to-change)SH
11 /Times-Roman AF
39288 XM
(is NIL, then the interactor operates)92 W
11880 50003 MT
(on whatever is returned from)SH
10 /Courier AF
24921 XM
(:start-where)SH
11 /Times-Roman AF
(. The)
275 W( default value is NIL.)SH
10 /Courier AF
8280 51698 MT
(:cursor-where-press)SH
11 /Times-Roman AF
(- If this slot is non-NIL, then the initial position of the text editing cursor is)156 W
11880 52894 MT
(underneath the)
59 W( mouse cursor \050i.e, the user begins editing the string on the character under where)60 W
11880 54090 MT
(the mouse was pressed\051.  This is the default.)
133 W( If)539 W
10 /Courier AF
34325 XM
(:cursor-where-press)SH
11 /Times-Roman AF
46132 XM
(is specified as NIL,)132 W
11880 55286 MT
(however, the)
145 W( cursor always starts at the end of the string.  This slot also controls whether the)146 W
11880 56482 MT
(mouse is allowed to move the cursor while the string is being edited.)
2 W( If)278 W
10 /Courier AF
43680 XM
(:cursor-where-press)SH
11 /Times-Roman AF
11880 57678 MT
(is NIL, then)
111 W( mouse presses are ignored while editing \050unless they are the)112 W
10 /Courier AF
45590 XM
(:stop-)SH
11 /Times-Roman AF
49577 XM
(or)SH
10 /Courier AF
50880 XM
(:abort-)SH
11 /Times-Roman AF
11880 58874 MT
(events\051, otherwise, presses can be used to move the cursor.)SH
10 /Courier AF
8280 60569 MT
(:input-filter)SH
11 /Times-Roman AF
16355 XM
(- Used to support gridding.  See section 6.3.2.)SH
10 /Courier AF
8280 62264 MT
(:button-outside-stop?)SH
11 /Times-Roman AF
(- Whether)
6 W( a mouse click)5 W
/Times-Italic SF
31931 XM
(outside)SH
/Times-Roman SF
35389 XM
(the string should stop editing, but still do the)5 W
11880 63460 MT
(action it would have done if text wasn't being edited.)
7 W( This)
290 W( means, for example, that you typically)8 W
11880 64656 MT
(won't have to type RETURN before hitting the OK button, since the down press)
25 W( will stop editing)24 W
11880 65852 MT
(and still operate the OK button.  By default this feature is enabled, but)
143 W( you can turn it off by)144 W
1588 50 11880 66052 UL
11880 67048 MT
(setting the)SH
10 /Courier AF
16708 XM
(:button-outside-stop?)SH
11 /Times-Roman AF
29583 XM
(parameter to NIL.)SH
ES
%%Page: 266 47
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 266)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.6.2.3. Application Notification)SH
11 /Times-Roman AF
6120 9200 MT
(Often, it is not)
9 W( necessary to have the application notified of the result of a text-interactor, if you only want)8 W
6120 10396 MT
(the string object to be changed, it will happen automatically.)SH
6120 12694 MT
(Alternatively, the programmer can provide a function to be called when)
163 W( the interactor is complete by)164 W
6120 13890 MT
(putting the function in the)3 W
10 /Courier AF
17837 XM
(:final-function)SH
11 /Times-Roman AF
27114 XM
(slot. This)
279 W( function is called with the following arguments:)2 W
8 /Courier AF
8040 15055 MT
(\050lambda \050an-interactor obj-being-edited final-event final-string x y\051\051)SH
11 /Times-Roman AF
6120 16476 MT
(The definition of)
189 W( the type for)190 W
10 /Courier AF
20332 XM
(final-event)SH
11 /Times-Roman AF
27397 XM
(is in section 8.3.  \050It is a Lisp structure containing the)190 W
6120 17672 MT
(particular key hit.\051  The)86 W
10 /Courier AF
17240 XM
(final-string)SH
11 /Times-Roman AF
24801 XM
(is the final value for the entire)
86 W( string.)85 W
/Times-Italic SF
42434 XM
(It is important that you)85 W
6120 18868 MT
(copy the)
57 W( string \050with)58 W
10 /Courier AF
15701 XM
(copy-seq)SH
11 /Times-Italic AF
(\051 before using it, since it will be shared with the feedback object.)58 W
/Times-Roman SF
50277 XM
(The)SH
10 /Courier AF
52320 XM
(x)SH
11 /Times-Roman AF
6120 20064 MT
(and)SH
10 /Courier AF
7986 XM
(y)SH
11 /Times-Roman AF
8864 XM
(parameters are the)3 W
/Times-Italic SF
17208 XM
(initial)SH
/Times-Roman SF
20116 XM
(positions put into the feedback object's)3 W
10 /Courier AF
37670 XM
(:box)SH
11 /Times-Roman AF
40348 XM
(slot \050which might be used as)3 W
6120 21260 MT
(the position of the new object\051.  The)
386 W( values of)387 W
10 /Courier AF
30480 XM
(x)SH
11 /Times-Roman AF
31742 XM
(and)SH
10 /Courier AF
33992 XM
(y)SH
11 /Times-Roman AF
35254 XM
(are)SH
/Times-Italic SF
37258 XM
(filtered)SH
/Times-Roman SF
41098 XM
(values computed via the)387 W
10 /Courier AF
6120 22456 MT
(:input-filter)SH
11 /Times-Roman AF
14195 XM
(given to the interactor \050see section 6.3.2\051.)SH
12 /Times-Bold AF
6120 25420 MT
(6.6.2.4. Normal Operation)SH
11 /Times-Roman AF
6120 26616 MT
(If the value of)65 W
10 /Courier AF
12854 XM
(:continuous)SH
11 /Times-Roman AF
19794 XM
(is T, then when the start event happens,)
65 W( if there is a feedback object, then)64 W
6120 27812 MT
(its)SH
10 /Courier AF
7496 XM
(:box)SH
11 /Times-Roman AF
10232 XM
(slot is set to)
61 W( the position of the start-event, and its)62 W
10 /Courier AF
33033 XM
(:obj-over)SH
11 /Times-Roman AF
38770 XM
(slot is set to)62 W
10 /Courier AF
44520 XM
(:obj-to-change)SH
11 /Times-Roman AF
6120 29008 MT
(or the result of the)185 W
10 /Courier AF
15384 XM
(:start-where)SH
11 /Times-Roman AF
(. Its)645 W
10 /Courier AF
25339 XM
(:cursor-index)SH
11 /Times-Roman AF
33599 XM
(is set to the position of the start-event)
185 W( \050if)184 W
10 /Courier AF
6120 30204 MT
(:cursor-where-press)SH
11 /Times-Roman AF
17863 XM
(is T\051 or to the end of the string \050so the cursor becomes visible\051.  If there is no)69 W
10 /Courier AF
6120 31400 MT
(:feedback-obj)SH
11 /Times-Roman AF
(, then the)439 W
10 /Courier AF
19575 XM
(:obj-to-change)SH
11 /Times-Roman AF
28689 XM
(or if that is NIL, then the object)
439 W( returned from)438 W
10 /Courier AF
6120 32596 MT
(:start-where)SH
11 /Times-Roman AF
13793 XM
(has its cursor turned on)
198 W( at the appropriate place.  If the start event was a keyboard)199 W
6120 33792 MT
(character, it is then edited into the string.  Therefore, you can have a text interactor start)
403 W( on)402 W
10 /Courier AF
6120 34988 MT
(:any-keyboard)SH
11 /Times-Roman AF
14195 XM
(and have the first character typed entered into the string.)SH
6120 37286 MT
(Then, for)
113 W( every subsequent keyboard down-press, the key is either entered into the string, or if it is an)114 W
6120 38482 MT
(editing command, then it is performed.)SH
6120 40780 MT
(If the mouse goes outside)
118 W( of)117 W
10 /Courier AF
19534 XM
(:running-where)SH
11 /Times-Roman AF
(, then the cursor is turned off, and it is turned back on)117 W
6120 41976 MT
(when the mouse goes back inside.  Events other)
51 W( than the stop event and the abort event are ignored until)52 W
6120 43172 MT
(the mouse goes back inside.  Note: this is usually not used because)106 W
10 /Courier AF
37132 XM
(:running-where)SH
11 /Times-Roman AF
45913 XM
(is usually)
106 W( T for)105 W
6120 44368 MT
(text-interactors. If)
361 W( it is desirable to only edit while the mouse is over the object,)
43 W( then)44 W
10 /Courier AF
44520 XM
(:running-where)SH
11 /Times-Roman AF
6120 45564 MT
(can be specified as)18 W
10 /Courier AF
14742 XM
('\050:in *\051)18 W
11 /Times-Roman AF
19853 XM
(which means that the interactor will work only)
18 W( when the mouse is over the)17 W
6120 46760 MT
(object it started over.)SH
6120 49058 MT
(If the abort event happens, then the feedback object's)356 W
10 /Courier AF
33084 XM
(:string)SH
11 /Times-Roman AF
37915 XM
(is set with its initial)
356 W( value, its)357 W
10 /Courier AF
6120 50254 MT
(:cursor-index)SH
11 /Times-Roman AF
14231 XM
(is set to NIL, and its)35 W
10 /Courier AF
23638 XM
(:obj-over)SH
11 /Times-Roman AF
29348 XM
(is set to NIL.  If there is no feedback object, then the)35 W
6120 51450 MT
(main object's)SH
10 /Courier AF
12352 XM
(:string)SH
11 /Times-Roman AF
16827 XM
(is set to its original value and its)SH
10 /Courier AF
31311 XM
(:cursor-index)SH
11 /Times-Roman AF
39386 XM
(is set to NIL.)SH
6120 53748 MT
(When the stop event happens, if)
94 W( there is a feedback object, then its)95 W
10 /Courier AF
36947 XM
(:visible)SH
11 /Times-Roman AF
42117 XM
(slot is set with NIL, the)95 W
6120 54944 MT
(main object is set with feedback object's)23 W
10 /Courier AF
24456 XM
(:string)SH
11 /Times-Roman AF
(, and the)23 W
10 /Courier AF
32757 XM
(:cursor-index)SH
11 /Times-Roman AF
40855 XM
(is set to NIL.  If there)
23 W( is no)22 W
6120 56140 MT
(feedback object, then the)76 W
10 /Courier AF
17693 XM
(:cursor-index)SH
11 /Times-Roman AF
25844 XM
(of the)
76 W( main object is set to NIL.  Note that the stop event is)77 W
/Times-Italic SF
6120 57336 MT
(not)SH
/Times-Roman SF
7801 XM
(edited into the string.  Finally, the final-function \050if any\051 is called.)SH
6120 59634 MT
(If the interactor is)56 W
/Times-Italic SF
14468 XM
(not)SH
/Times-Roman SF
16205 XM
(continuous, when the start event happens, the actions described above for the)
56 W( stop)55 W
6120 60830 MT
(event are done.)SH
12 /Times-Bold AF
6120 64514 MT
(6.6.3. Useful Functions)SH
8 /Courier AF
8040 65727 MT
(inter:Insert-Text-Into-String)SH
/Times-Italic SF
22440 XM
(text-obj new-string)280 W
/Courier SF
29263 XM
(&optional)SH
/Times-Italic SF
34063 XM
(\050move-back-cursor 0\051)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 67148 MT
(The function)346 W
10 /Courier AF
12738 XM
(Insert-Text-Into-String)SH
11 /Times-Roman AF
27159 XM
(inserts a string)346 W
/Times-Italic SF
34888 XM
(new-string)SH
/Times-Roman SF
40216 XM
(into an)347 W
10 /Courier AF
44210 XM
(opal:text)SH
11 /Times-Roman AF
50232 XM
(object)SH
/Times-Italic SF
6120 68344 MT
(text-obj)SH
/Times-Roman SF
9942 XM
(at the current cursor point.  This can be used even while the text-interactor is running.)
187 W( For)647 W
6120 69540 MT
(example, an)
44 W( on-screen button might insert some text into a string.  After the text is inserted, the cursor is)45 W
6120 70736 MT
(moved to the end)
98 W( of the new text, minus the optional offset)97 W
/Times-Italic SF
33530 XM
(move-back-cursor)SH
/Times-Roman SF
41902 XM
(\050which should be a non-)97 W
6120 71932 MT
(negative integer\051.  For example, to insert the string)49 W
10 /Courier AF
29137 XM
("\050+ foo 5\051")50 W
11 /Times-Roman AF
36162 XM
(and leave the cursor between the)50 W
10 /Courier AF
51120 XM
("5")SH
ES
%%Page: 267 48
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.6)
SH( Text-interactor)1800 W
51386 XM
(Page 267)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(and the)SH
10 /Courier AF
11762 XM
("\051")SH
11 /Times-Roman AF
(, you could call:)SH
8 /Courier AF
10200 9120 MT
(\050Insert-Text-Into-String MYTEXT "\050+ foo 5\051" 1\051)SH
12 /Times-Bold AF
8280 12804 MT
(6.6.4. Examples)SH
8280 15768 MT
(6.6.4.1. Editing a particular string)SH
11 /Times-Roman AF
8280 16964 MT
(This creates an aggregadget containing a single-line text object and an interactor to edit)
49 W( it when the right)48 W
8280 18160 MT
(mouse button is pressed.)SH
8 /Courier AF
10200 19325 MT
(\050create-instance 'EDITABLE-STRING opal:aggregadget)SH
11640 20190 MT
(\050:left 10\051)SH
11640 21055 MT
(\050:top 200\051)SH
11640 21920 MT
(\050:parts)SH
12120 22785 MT
(`\050\050:txt ,opal:text)SH
15960 23650 MT
(\050:left ,\050o-formula \050gvl :parent :left\051\051\051)SH
15960 24515 MT
(\050:top ,\050o-formula \050gvl :parent :top\051\051\051)SH
15960 25380 MT
(\050:string "Hello World"\051\051\051\051 ;)SH
/Times-Italic SF
(default initial value)SH
/Courier SF
11640 26245 MT
(\050:interactors)SH
12120 27110 MT
(`\050\050:editor ,Inter:Text-Interactor)SH
17400 27975 MT
(\050:start-where ,\050o-formula \050list :in \050gvl :operates-on :txt\051\051\051\051)SH
17400 28840 MT
(\050:window ,\050o-formula \050gvl :operates-on :window\051\051\051)SH
17400 29705 MT
(\050:stop-event \050:any-mousedown #\134RETURN\051\051 ;)SH
/Times-Italic SF
(either)SH
/Courier SF
17400 30570 MT
(\050:start-event :rightdown\051\051\051\051\051)SH
12 /Times-Bold AF
8280 33534 MT
(6.6.4.2. Editing an existing or new string)SH
11 /Times-Roman AF
8280 34730 MT
(Here, the)
37 W( right button will create a new multi-line string object when the user presses on the background,)38 W
8280 35926 MT
(and it will edit an existing object if the user presses on top of it, as in Macintosh MacDraw.)SH
8280 38224 MT
(Note: This uses a formula in the)108 W
10 /Courier AF
23425 XM
(:feedback-obj)SH
11 /Times-Roman AF
31608 XM
(slot that depends on the)108 W
10 /Courier AF
42810 XM
(:first-obj-over)SH
11 /Times-Roman AF
52192 XM
(slot of)107 W
8280 39420 MT
(the interactor.  This slot, which holds the object the interactor starts over, is explained in section 8.5.)SH
ES
%%Page: 268 49
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 268)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
8 /Courier AF
8040 7699 MT
(\050create-instance 'THE-FEEDBACK-OBJ opal:text)SH
9480 8564 MT
(\050:string ""\051)SH
9480 9429 MT
(\050:visible NIL\051)SH
9480 10294 MT
(\050:left \050formula '\050first \050gvl :box\051\051\051\051)SH
9480 11159 MT
(\050:top \050formula '\050second \050gvl :box\051\051\051\051\051)SH
8040 12889 MT
(;;;)SH
/Times-Italic SF
(Assume there is a top level aggregate in the window called)SH
/Courier SF
28797 XM
(top-agg.)SH
8040 13754 MT
(;;;)SH
/Times-Italic SF
(Create an aggregate to hold all the strings.  This aggregate must have a fixed)SH
/Courier SF
8040 14619 MT
(;;;)SH
/Times-Italic SF
10080 XM
(size so user can press inside even when it does not contain any objects.)SH
/Courier SF
8040 15484 MT
(\050create-instance 'OBJECT-AGG opal:aggregate)SH
9480 16349 MT
(\050:left 0\051\050:top 0\051)SH
9480 17214 MT
(\050:width \050o-formula \050gvl :window :width\051\051\051)SH
9480 18079 MT
(\050:height \050o-formula \050gvl :window :height\051\051\051\051)SH
8040 19809 MT
(\050opal:add-components TOP-AGG THE-FEEDBACK-OBJ OBJECT-AGG\051)SH
8040 20674 MT
(\050opal:update MYWINDOW\051)SH
8040 22404 MT
(\050create-instance 'CREATE-OR-EDIT Inter:Text-Interactor)SH
9960 23269 MT
(\050:feedback-obj \050o-formula)SH
17640 24134 MT
(\050if \050eq :none \050gvl :first-obj-over\051\051)SH
19560 24999 MT
(;)SH
/Times-Italic SF
(then create a new object, so use feedback-obj)SH
/Courier SF
19560 25864 MT
(THE-FEEDBACK-OBJ)SH
19560 26729 MT
(;)SH
/Times-Italic SF
(else use object returned by mouse)SH
/Courier SF
19560 27594 MT
(NIL\051\051\051)SH
9960 28459 MT
(\050:start-where `\050:element-of-or-none ,OBJECT-AGG\051\051)SH
9960 29324 MT
(\050:window MYWINDOW\051)SH
9960 30189 MT
(\050:start-event :any-rightdown\051)SH
9960 31054 MT
(\050:stop-event '\050:any-mousedown :control-\134j\051\051 ;)SH
/Times-Italic SF
(either one stops)SH
/Courier SF
9960 31919 MT
(\050:final-function)SH
10440 32784 MT
(#'\050lambda \050an-interactor obj-being-edited stop-event final-string x y\051)SH
12360 33649 MT
(\050declare \050ignore an-interactor stop-event\051\051)SH
12360 34514 MT
(\050when \050eq :none obj-being-edited\051)SH
13320 35379 MT
(;;)SH
/Times-Italic SF
(then create a new string and add to aggregate.)SH
/Courier SF
13320 36244 MT
(;;)SH
/Times-Italic SF
(Note that it is important to copy the string.)SH
/Courier SF
13320 37109 MT
(\050let \050\050new-str \050create-instance NIL opal:text)SH
21960 37974 MT
(\050:string \050copy-seq final-string\051\051)SH
21960 38839 MT
(\050:left x\051\050:top y\051\051\051\051)SH
14280 39704 MT
(\050opal:add-component OBJECT-AGG new-str\051)SH
14280 40569 MT
(\050s-value THE-FEEDBACK-OBJ :string ""\051 ;)SH
/Times-Italic SF
(so starts empty next time)SH
/Courier SF
14280 41434 MT
(\051\051\051\051\051)SH
12 /Times-Bold AF
6120 45118 MT
(6.6.5. Key Translation Tables)SH
11 /Times-Roman AF
6120 46314 MT
(The programmer can)
191 W( change the bindings of keyboard keys to editing operations, and even add new)192 W
6120 47510 MT
(editing operations in a straightforward manner.)SH
6120 49808 MT
(Each text interactor can have its own)114 W
/Times-Italic SF
23441 XM
(key translation table)114 W
/Times-Roman SF
(. The)
503 W( default table is stored)
114 W( in the top-level)113 W
10 /Courier AF
6120 51004 MT
(Text-Interactor)SH
11 /Times-Roman AF
15489 XM
(object, and so text-interactor instances will)
94 W( inherit it automatically.  If you want to)95 W
6120 52200 MT
(change the bindings, you need to use)794 W
10 /Courier AF
28174 XM
(Bind-key)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
34318 XM
(Unbind-key)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
41661 XM
(Unbind-All-Keys)SH
11 /Times-Roman AF
(, or)793 W
10 /Courier AF
6120 53396 MT
(Set-Default-Key-Translations)SH
11 /Times-Roman AF
23195 XM
(\050these functions are defined below\051.)SH
6120 55694 MT
(If you want to change the binding for)
4 W( all of your text interactors, you can edit the bindings of the top-level)5 W
10 /Courier AF
6120 56890 MT
(Text-Interactor)SH
11 /Times-Roman AF
15440 XM
(object. If)
365 W( you want a binding to be different for a particular interactor instance, just)45 W
6120 58086 MT
(modify the table for that instance.  What happens in this case is)
21 W( that the inherited table is copied first, and)22 W
6120 59282 MT
(then modified.  That way, other interactors that also inherit from the default table will)
119 W( not be affected.)118 W
6120 60478 MT
(This copy is performed automatically by the first call to one of these functions.)SH
6120 62776 MT
(Bindings can be changed while the interactor is running, and they will take effect immediately.)SH
8 /Courier AF
8040 63989 MT
(inter:Bind-Key)SH
/Times-Italic SF
15240 XM
(key val an-interactor)280 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10 SS 
6120 65410 MT
(Bind-Key)SH
11 /Times-Roman AF
11195 XM
(sets the binding for)SH
/Times-Italic SF
19933 XM
(key)SH
/Times-Roman SF
21672 XM
(to be)SH
/Times-Italic SF
24116 XM
(val)SH
/Times-Roman SF
25735 XM
(for)SH
/Times-Italic SF
27292 XM
(an-interactor)SH
/Times-Roman SF
(. The)275 W
/Times-Italic SF
35968 XM
(key)SH
/Times-Roman SF
37708 XM
(can either be a Lisp character \050like)1 W
10 /Courier AF
6120 66606 MT
(:control-\134t)SH
11 /Times-Roman AF
(\051 or a special keyword)
41 W( that is returned when a key is hit \050like)40 W
10 /Courier AF
40224 XM
(:uparrow)SH
11 /Times-Roman AF
(\051. If)
355 W( the key used)40 W
6120 67802 MT
(to have some other binding, the old binding is removed.  It is fine)
8 W( to bind multiple keys to the same value,)9 W
6120 68998 MT
(however \050e.g., both)SH
10 /Courier AF
14916 XM
(^p)SH
11 /Times-Roman AF
16391 XM
(and)SH
10 /Courier AF
18254 XM
(:uparrow)SH
11 /Times-Roman AF
23329 XM
(are bound to)SH
10 /Courier AF
29102 XM
(:upline)SH
11 /Times-Roman AF
(\051.)SH
6120 71296 MT
(The second parameter \050)SH
/Times-Italic SF
(val)SH
/Times-Roman SF
(\051 can be any one of the following four forms:)SH
ES
%%Page: 269 50
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.6)
SH( Text-interactor)1800 W
51386 XM
(Page 269)SH
46800 50 8280 4486 UL
11 SS 
10480 7955 MT
(1.)SH
11580 XM
(A character to map into.  This allows special keys to map to regular keys.  So, for example,)34 W
11580 9151 MT
(you can have)SH
10 /Courier AF
17657 XM
(:super-4)SH
11 /Times-Roman AF
22732 XM
(map to)SH
10 /Courier AF
26032 XM
(#\1344)SH
11 /Times-Roman AF
(.)SH
10480 11045 MT
(2.)SH
11580 XM
(A string.  This allows the key to act like an abbreviation and)
159 W( expand into a string.  For)160 W
11580 12241 MT
(example,)SH
10 /Courier AF
15930 XM
(\050inter:bind-key :F2 "long string" MYINTER\051)73 W
11 /Times-Roman AF
41770 XM
(will insert "long string")73 W
11580 13437 MT
(whenever F2 is)
50 W( hit.  Unfortunately, the string must be constant and cannot, for example, be)51 W
11580 14633 MT
(computed by a formula.)SH
10480 16527 MT
(3.)SH
11580 XM
(One of the built-in editing operations which are keywords.  These are)
349 W( implemented)348 W
11580 17723 MT
(internally to the text interactor, but the)
18 W( user can decide which key\050s\051 causes them to happen.)19 W
11580 18919 MT
(The keywords that are available are:)SH
/Symbol SF
13549 20497 MT
(\267)SH
10 /Courier AF
14330 XM
(:prev-char)SH
11 /Times-Roman AF
20605 XM
(- move cursor to previous character.)SH
/Symbol SF
13549 21693 MT
(\267)SH
10 /Courier AF
14330 XM
(:next-char)SH
11 /Times-Roman AF
20605 XM
(- move cursor to next character.)SH
/Symbol SF
13549 22889 MT
(\267)SH
10 /Courier AF
14330 XM
(:up-line)SH
11 /Times-Roman AF
19405 XM
(- move cursor up one line.)SH
/Symbol SF
13549 24085 MT
(\267)SH
10 /Courier AF
14330 XM
(:down-line)SH
11 /Times-Roman AF
20605 XM
(- move cursor down one line.)SH
/Symbol SF
13549 25281 MT
(\267)SH
10 /Courier AF
14330 XM
(:delete-prev-char)SH
11 /Times-Roman AF
24805 XM
(- delete character to left of cursor.)SH
/Symbol SF
13549 26477 MT
(\267)SH
10 /Courier AF
14330 XM
(:delete-prev-word)SH
11 /Times-Roman AF
24805 XM
(- delete word to left of cursor.)SH
/Symbol SF
13549 27673 MT
(\267)SH
10 /Courier AF
14330 XM
(:delete-next-char)SH
11 /Times-Roman AF
24805 XM
(- delete character to right of cursor.)SH
/Symbol SF
13549 28869 MT
(\267)SH
10 /Courier AF
14330 XM
(:kill-line)SH
11 /Times-Roman AF
20605 XM
(- delete to end of line.)SH
/Symbol SF
13549 30065 MT
(\267)SH
10 /Courier AF
14330 XM
(:insert-lf-after)SH
11 /Times-Roman AF
24205 XM
(- add new line after cursor.)SH
/Symbol SF
13549 31261 MT
(\267)SH
10 /Courier AF
14330 XM
(:delete-string)SH
11 /Times-Roman AF
23005 XM
(- delete entire string.)SH
/Symbol SF
13549 32457 MT
(\267)SH
10 /Courier AF
14330 XM
(:beginning-of-string)SH
11 /Times-Roman AF
26605 XM
(- move cursor to beginning of string.)SH
/Symbol SF
13549 33653 MT
(\267)SH
10 /Courier AF
14330 XM
(:beginning-of-line)SH
11 /Times-Roman AF
25405 XM
(- move cursor to beginning of line.)SH
/Symbol SF
13549 34849 MT
(\267)SH
10 /Courier AF
14330 XM
(:end-of-string)SH
11 /Times-Roman AF
23005 XM
(- move cursor to end of string.)SH
/Symbol SF
13549 36045 MT
(\267)SH
10 /Courier AF
14330 XM
(:end-of-line)SH
11 /Times-Roman AF
21805 XM
(- move cursor to end of line.)SH
/Symbol SF
13549 37241 MT
(\267)SH
10 /Courier AF
14330 XM
(:copy-to-X-cut-buffer)SH
11 /Times-Roman AF
27205 XM
(- copy entire string to cut buffer.)SH
/Symbol SF
13549 38437 MT
(\267)SH
10 /Courier AF
14330 XM
(:copy-from-X-cut-buffer)SH
11 /Times-Roman AF
28405 XM
(- insert cut buffer at current cursor.)SH
11580 39890 MT
(For example,)72 W
10 /Courier AF
17803 XM
(\050inter:bind-key :F4 :upline MYINTER\051)72 W
11 /Times-Roman AF
39966 XM
(will make the)
72 W( F4 key move)71 W
11580 41086 MT
(the cursor up one line.)SH
10480 42980 MT
(4.)SH
11580 XM
(A function that performs an edit.  The function should be of the following form:)SH
8 /Courier AF
13500 44145 MT
(\050lambda \050an-interactor text-obj event\051\051)SH
11 /Times-Roman AF
11580 45566 MT
(The interactor will be the text-interactor, the text object is the one being edited, and the)161 W
11580 46762 MT
(event is an Interactor event structure \050see section 8.3\051. Note:)267 W
/Times-Italic SF
41004 XM
(not)SH
/Times-Roman SF
42951 XM
(a lisp character; the)266 W
11580 47958 MT
(character is)
264 W( a field in the event.  This function can do arbitrary manipulations of the)265 W
10 /Courier AF
11580 49154 MT
(:string)SH
11 /Times-Roman AF
16100 XM
(slot and the)45 W
10 /Courier AF
21582 XM
(:cursor-index)SH
11 /Times-Roman AF
29702 XM
(slot of the)44 W
10 /Courier AF
34509 XM
(text-obj)SH
11 /Times-Roman AF
(. For)
363 W( example, the following)44 W
11580 50350 MT
(code could be used to)
290 W( implement the ``swap previous two character'' operation from)291 W
11580 51546 MT
(EMACS:)SH
8 /Courier AF
13500 52759 MT
(;;)SH
/Times-Italic SF
(first define the function)SH
/Courier SF
13500 53624 MT
(\050defun flip \050inter str event\051 ;)SH
/Times-Italic SF
(swap the two characters to the left of the cursor)SH
/Courier SF
14460 54489 MT
(\050let \050\050index \050gv str :cursor-index\051\051 ;)SH
/Times-Italic SF
(get the old values)SH
/Courier SF
17340 55354 MT
(\050s \050gv str :string\051\051\051)SH
15420 56219 MT
(\050when \050> index 1\051  ;)SH
/Times-Italic SF
(make sure there are 2 chars to the left of the cursor)SH
/Courier SF
16380 57084 MT
(\050let \050\050oldsecondchar \050elt s \0501- index\051\051\051\051 ;)SH
/Times-Italic SF
(do the swap in place in the str)SH
/Courier SF
17340 57949 MT
(\050setf \050elt s \0501- index\051\051 \050elt s \050- index 2\051\051\051)SH
17340 58814 MT
(\050setf \050elt s \050- index 2\051\051 oldsecondchar\051)SH
17340 59679 MT
(\050mark-as-changed str :string \051\051\051\051\051 ;)SH
/Times-Italic SF
(since we modified the string value)SH
/Courier SF
28860 60544 MT
(;)SH
/Times-Italic SF
29820 XM
(of the object in place, we have to let KR know)SH
/Courier SF
28860 61409 MT
(;)SH
/Times-Italic SF
29820 XM
(it has been modified.)SH
/Courier SF
13500 62274 MT
(;;)SH
/Times-Italic SF
(now bind it to ^t for a particular text-interactor called)SH
/Courier SF
32270 XM
(my-text-inter.)SH
13500 63139 MT
(\050inter:bind-key :control-\134t #'flip MY-TEXT-INTER\051 ; lower case t)SH
11 /Times-Roman AF
8280 65437 MT
(The function)64 W
10 /Courier AF
14334 XM
(Unbind-Key)SH
11 /Times-Roman AF
20673 XM
(removes the binding of)64 W
/Times-Italic SF
31377 XM
(key)SH
/Times-Roman SF
33180 XM
(for)SH
/Times-Italic SF
34801 XM
(an-interactor)SH
/Times-Roman SF
(. All)
403 W( keys that are not bound to)64 W
8280 66633 MT
(something either insert themselves into the string \050if they are printable characters\051, or else cause the)200 W
8280 67829 MT
(interactor to beep when typed.)SH
8 /Courier AF
10200 69042 MT
(inter:Unbind-Key)SH
/Times-Italic SF
18360 XM
(key an-interactor)280 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 70772 MT
(inter:Unbind-All-Keys)SH
/Times-Italic SF
20760 XM
(an-interactor)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
ES
%%Page: 270 51
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 270)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(Unbind-All-Keys)SH
11 /Times-Roman AF
15418 XM
(unbinds all keys)
23 W( for)22 W
/Times-Italic SF
24490 XM
(an-interactor)SH
/Times-Roman SF
(. This)
319 W( would usually be followed by binding some)22 W
6120 9151 MT
(of the keys in a different way.)SH
8 /Courier AF
8040 10364 MT
(inter:Set-Default-Key-Translations)SH
/Times-Italic SF
24840 XM
(an-interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 11785 MT
(This sets up)53 W
/Times-Italic SF
11810 XM
(an-interactor)SH
/Times-Roman SF
18004 XM
(with the default key bindings)
53 W( presented in section 6.6.1.  This might be useful)54 W
6120 12981 MT
(to restore an interactor after the other functions above were used to change the bindings.)SH
12 /Times-Bold AF
6120 16665 MT
(6.6.6. Editing Function)SH
11 /Times-Roman AF
6120 17861 MT
(If you need even)
152 W( more flexibility than changing the key translations offers, then you can override the)151 W
6120 19057 MT
(entire editing function, which is implemented as a method.)
72 W( Simply)
421 W( set the)73 W
10 /Courier AF
40028 XM
(:edit-func)SH
11 /Times-Roman AF
46376 XM
(slot of the text)73 W
6120 20253 MT
(interactor with a function as follows:)SH
8 /Courier AF
8040 21418 MT
(lambda \050an-interactor string-object event\051)SH
11 /Times-Roman AF
6120 22839 MT
(It is expected to perform the modifications of the string-object based on the)122 W
10 /Courier AF
41155 XM
(event)SH
11 /Times-Roman AF
(, which is a Garnet)122 W
6120 24035 MT
(event structure \050section 8.3\051.)SH
14 /Times-Bold AF
6120 27853 MT
(6.7. Gesture-Interactor)SH
8 /Courier AF
8040 29018 MT
(\050create-instance 'inter:Gesture-Interactor inter:interactor)SH
/Times-Italic SF
9000 29883 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
9000 30748 MT
(\050:start-where NIL\051)SH
9000 31613 MT
(\050:window NIL\051)SH
9000 32478 MT
(\050:start-event :leftdown\051)SH
9000 33343 MT
(\050:continuous T\051)SH
/Times-Italic SF
23880 XM
(; Must be T for gesture-interactor)SH
/Courier SF
9000 34208 MT
(\050:stop-event NIL\051)SH
9000 35073 MT
(\050:running-where T\051)SH
9000 35938 MT
(\050:outside NIL\051)SH
9000 36803 MT
(\050:abort-event '\050:control-\134g :control-g\051\051)SH
9000 37668 MT
(\050:waiting-priority normal-priority-level\051)SH
9000 38533 MT
(\050:running-priority running-priority-level\051)SH
9000 39398 MT
(\050:active T\051)SH
9000 40263 MT
(\050:self-deactivate NIL\051)SH
/Times-Italic SF
9000 41993 MT
(; Slots specific to the gesture-interactor \050discussed in this section\051)SH
/Courier SF
9000 42858 MT
(\050:final-function NIL\051)SH
/Times-Italic SF
23880 XM
(; \050lambda \050inter first-obj-over gesture-name attribs points-array nap dist\051\051)SH
/Courier SF
9000 43723 MT
(\050:classifier NIL\051)SH
/Times-Italic SF
23880 XM
(; classifier to use)SH
/Courier SF
9000 44588 MT
(\050:show-trace T\051)SH
/Times-Italic SF
23880 XM
(; show trace of gesture?)SH
/Courier SF
9000 45453 MT
(\050:min-non-ambig-prob nil\051)SH
/Times-Italic SF
23880 XM
(; non-ambiguity probability)SH
/Courier SF
9000 46318 MT
(\050:max-dist-to-mean nil\051)SH
/Times-Italic SF
23880 XM
(; distance to class mean)SH
/Courier SF
9000 47183 MT
(\050:went-outside NIL\051)SH
/Times-Italic SF
23880 XM
(; Read-only slot.  Set in outside action function)SH
9000 48913 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
16197 XM
(Read-only slots.)SH
9000 49778 MT
(; See section 8.5 for details about these slots.)SH
/Courier SF
9000 50643 MT
(\050:first-obj-over NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The object returned from the start-where.)SH
/Courier SF
9000 51508 MT
(\050:current-window NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The window of the last \050or current\051 event.)SH
/Courier SF
9000 52373 MT
(\050:start-char NIL\051)SH
/Times-Italic SF
21480 XM
(; Read-only slot.  The character or keyword of the start event.)SH
9000 54103 MT
(;)SH
/Times-Bold SF
9466 XM
(Advanced feature:)SH
/Times-Italic SF
15997 XM
(Customizable action routines.)SH
9000 54968 MT
(; See sections 5 and 8.9.7 for details about functions in these slots.)SH
/Courier SF
9000 55833 MT
(\050:start-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter obj-under-mouse point\051\051)SH
/Courier SF
9000 56698 MT
(\050:running-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter new-obj-over point\051\051)SH
/Courier SF
9000 57563 MT
(\050:stop-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter final-obj-over point\051\051)SH
/Courier SF
9000 58428 MT
(\050:abort-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter\051\051)SH
/Courier SF
9000 59293 MT
(\050:outside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter prev-obj-over\051\051)SH
/Courier SF
9000 60158 MT
(\050:back-inside-action ...\051)SH
/Times-Italic SF
21480 XM
(; \050lambda \050inter new-obj-over\051\051)SH
/Courier SF
8040 61023 MT
(...\051)SH
11 /Times-Roman AF
6120 62444 MT
(The Gesture-interactor is)
191 W( used to recognize single-path gestures that are drawn with the mouse.  For)192 W
6120 63640 MT
(example, this interactor might be used to allow the user to)
123 W( create circles and rectangles by drawing an)122 W
6120 64836 MT
(ellipse for a circle and an ``L'' shape for a rectangle with the mouse.)
6 W( A)289 W
/Times-Italic SF
38010 XM
(classifier)SH
/Times-Roman SF
42326 XM
(will be created for these)7 W
6120 66032 MT
(two gestures.)
48 W( A)
369 W( ``classifier'' is a data structure that holds the information the gesture interactor needs to)47 W
6120 67228 MT
(differentiate the gestures.  Classifiers are created by using a special training program to give several)192 W
6120 68424 MT
(examples of each kind of gesture that will be recognized.  For instance, you might use Agate \050section)135 W
6120 69620 MT
(6.7.3\051, the Garnet gesture trainer, to give 15 examples of the ellipses and 15 of the ``L'' shape.)
129 W( Each)534 W
6120 70816 MT
(gesture is)
53 W( named with a keyword \050here,)52 W
10 /Courier AF
24077 XM
(:circle)SH
11 /Times-Roman AF
28604 XM
(and)SH
10 /Courier AF
30519 XM
(:rectangle)SH
11 /Times-Roman AF
36846 XM
(might be used\051.  Then, the classifier)52 W
ES
%%Page: 271 52
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.7)
SH( Gesture-Interactor)1800 W
51386 XM
(Page 271)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(will be written to a file.)
114 W( The)
505 W( gesture interactor will then read this file and know how to recognize the)115 W
8280 9151 MT
(specified gestures.)SH
8280 11449 MT
(The classification algorithm is based on Rubine's gesture recognition algorithm)
235 W( [Rubine)
SH( 91a,)
234 W( Rubine)SH
8280 12645 MT
(91b]. It)
275 W( uses a statistical technique.)SH
8280 14943 MT
(There is one example)
346 W( of the gesture-interactor below. Other examples can be found in the files)347 W
10 /Courier AF
8280 16139 MT
(demo-arith.lisp)SH
11 /Times-Roman AF
17555 XM
(and)SH
10 /Courier AF
19418 XM
(demo-gesture.lisp)SH
11 /Times-Roman AF
(.)SH
8280 18437 MT
(Unlike other interactors, Gestures are not)
54 W( automatically loaded when you load Garnet.  To load gestures,)53 W
8280 19633 MT
(use:)SH
8 /Courier AF
10200 20798 MT
(\050load Garnet-Gesture-Loader\051)SH
12 /Times-Bold AF
8280 24482 MT
(6.7.1. Default Operation)SH
11 /Times-Roman AF
8280 25678 MT
(This section describes how the gesture-interactor works)
96 W( if the programmer does not remove or override)97 W
8280 26874 MT
(any of the standard)SH
10 /Courier AF
16954 XM
(-action)SH
11 /Times-Roman AF
21429 XM
(procedures. To)
275 W( supply custom action procedures, see section 8.9.7.)SH
8280 29172 MT
(The interactor is used by specifying a classifier to use)
60 W( and a)59 W
10 /Courier AF
35509 XM
(final-function)SH
11 /Times-Roman AF
44243 XM
(\0506.7.1.3\051 to call with the)59 W
8280 30368 MT
(result of the classification.)SH
8280 32666 MT
(The)SH
10 /Courier AF
10290 XM
(:classifier)SH
11 /Times-Roman AF
17190 XM
(slot should be set to the value of)
25 W( a gesture classifier.  Classifiers trained and saved by)26 W
8280 33862 MT
(Agate can)
92 W( be read with)91 W
10 /Courier AF
19149 XM
(inter:gest-classifier-read)SH
11 /Times-Roman AF
(. The)457 W
10 /Courier AF
37832 XM
(:final-function)SH
11 /Times-Roman AF
47198 XM
(slot should be set)91 W
8280 35058 MT
(to a function to call with the result of the gesture classification.)SH
8280 37356 MT
(Since the programmer may or not want)
19 W( the trace of the gesture to be shown, there are two drawing modes)20 W
8280 38552 MT
(for the interactor, determined by the)33 W
10 /Courier AF
24635 XM
(:show-trace)SH
11 /Times-Roman AF
31543 XM
(slot. If)341 W
10 /Courier AF
35064 XM
(:show-trace)SH
11 /Times-Roman AF
41971 XM
(is non-NIL \050the default\051, then)32 W
8280 39748 MT
(the points making up the gesture will be displayed as the gesture is drawn and erased when it is finished.)SH
12 /Times-Bold AF
8280 42712 MT
(6.7.1.1. Rejecting Gestures)SH
11 /Times-Roman AF
8280 43908 MT
(If the gesture-interactor is)
12 W( unable to classify the gesture, it will call the)13 W
10 /Courier AF
39786 XM
(final-function)SH
11 /Times-Roman AF
48474 XM
(with a value of)13 W
8280 45104 MT
(NIL for the classified)
4 W( gesture name. Often, the gesture will be ambiguous, in that it is similar to more than)3 W
8280 46300 MT
(one known gesture.  By setting the)272 W
10 /Courier AF
25704 XM
(:min-non-ambig-prob)SH
11 /Times-Roman AF
37651 XM
(slot, the programmer)
272 W( can specify the)273 W
8280 47496 MT
(minimum non-ambiguous)
90 W( probability below which gestures will be rejected. Empirically, a value of .95)89 W
8280 48692 MT
(has been found to be a reasonable value for a number of gesture sets [Rubine 91a].)SH
8280 50990 MT
(Also, the gesture may be an)
32 W( outlier, different from any of the expected gestures. An approximation of the)33 W
8280 52186 MT
(Mahalanobis distance from the features of the given gesture to the features of the gesture)
24 W( it was classified)23 W
8280 53382 MT
(as gives a good indication of this.  By)
11 W( setting the)12 W
10 /Courier AF
30098 XM
(:max-dist-to-mean)SH
11 /Times-Roman AF
40585 XM
(slot, the programmer can specify)12 W
8280 54578 MT
(the maximum distance above which gestures will be rejected. Rubine shows that a value of)
101 W( 60 \050for our)100 W
8280 55774 MT
(feature set\051 is a good compromise between accepting obvious outliers and rejecting reasonable gestures.)SH
8280 58072 MT
(NIL for either parameter means that that kind of checking is not performed.)SH
12 /Times-Bold AF
8280 61036 MT
(6.7.1.2. Extra Parameters)SH
11 /Times-Roman AF
8280 62232 MT
(The extra parameters are:)SH
10 /Courier AF
8280 64183 MT
(:classifier)SH
11 /Times-Roman AF
15301 XM
(- This field determines which classifier to use when recognizing gestures.  If NIL \050the)147 W
11880 65379 MT
(default\051, the gesture-interactor will call the)SH
10 /Courier AF
30969 XM
(final-function)SH
11 /Times-Roman AF
39644 XM
(with a result of NIL.)SH
10 /Courier AF
8280 67074 MT
(:show-trace)SH
11 /Times-Roman AF
15219 XM
(- If non-NIL \050the default\051, the points making up the gesture are displayed in the supplied)63 W
11880 68270 MT
(interactor window as the gesture is drawn.  If NIL, no points are displayed.)SH
10 /Courier AF
8280 69965 MT
(:min-non-ambig-prob)SH
11 /Times-Roman AF
20036 XM
(- This field determines the minimum)
81 W( non-ambiguous probability below which)82 W
11880 71161 MT
(gestures will be rejected.  The default value)
259 W( of NIL causes the interactor to not make this)258 W
ES
%%Page: 272 53
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 272)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
11 SS 
9720 7955 MT
(calculation and pass NIL as the)SH
10 /Courier AF
23770 XM
(nap)SH
11 /Times-Roman AF
25845 XM
(parameter to)SH
10 /Courier AF
31647 XM
(final-function)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 9650 MT
(:max-dist-to-mean)SH
11 /Times-Roman AF
16705 XM
(- This field determines)
110 W( the maximum distance to the classified gesture from the)111 W
9720 10846 MT
(given gesture.  Any gesture with a distance above this value will be rejected.  The default value of)4 W
9720 12042 MT
(NIL causes the)
140 W( interactor to not make this calculation and pass NIL as the)141 W
10 /Courier AF
44436 XM
(dist)SH
11 /Times-Roman AF
47252 XM
(parameter to)141 W
10 /Courier AF
9720 13238 MT
(final-function)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 16202 MT
(6.7.1.3. Application Notification)SH
11 /Times-Roman AF
6120 17398 MT
(Like the two-point-interactor, it is always necessary to have an application function called with the)
41 W( result)40 W
6120 18594 MT
(of the gesture-interactor.  The function is put into the)117 W
10 /Courier AF
30903 XM
(:final-function)SH
11 /Times-Roman AF
40295 XM
(slot of)
117 W( the interactor, and is)118 W
6120 19790 MT
(called with the following arguments:)SH
8 /Courier AF
8040 20955 MT
(\050lambda \050an-interactor first-obj-over gesture-name attribs points-array nap dist\051\051)SH
11 /Times-Roman AF
6120 23253 MT
(The)SH
10 /Courier AF
8275 XM
(gesture-name)SH
11 /Times-Roman AF
15920 XM
(will be set to the name the drawn gesture was recognized as.  These names are)170 W
6120 24449 MT
(stored in the classifier as keyword parameters \050e.g.,)3 W
10 /Courier AF
29019 XM
(:circle)SH
11 /Times-Roman AF
(\051. If)
281 W( the gesture could)
3 W( not be recognized this)4 W
6120 25645 MT
(will be set to NIL.)SH
6120 27943 MT
(The)SH
10 /Courier AF
8219 XM
(attribs)SH
11 /Times-Roman AF
12808 XM
(will be set to a structure)
114 W( of gesture attributes that may be useful to the application.  For)113 W
6120 29139 MT
(example, the bounding box of the gesture is one)
64 W( of these attributes.  The following function calls can be)65 W
6120 30335 MT
(used to access these attributes:)SH
8 /Courier AF
8040 31548 MT
(\050gest-attributes-startx attribs\051)
SH( ;)3360 W
/Times-Italic SF
(first point)SH
/Courier SF
8040 32413 MT
(\050gest-attributes-starty attribs\051)SH
8040 34143 MT
(\050gest-attributes-initial-sin attribs\051)
SH( ;)960 W
/Times-Italic SF
(initial angle to the x axis)SH
/Courier SF
8040 35008 MT
(\050gest-attributes-initial-cos attribs\051)SH
8040 36738 MT
(\050gest-attributes-dx2 attribs\051)
SH( ;)4800 W
/Times-Italic SF
(differences: endx - prevx)SH
/Courier SF
8040 37603 MT
(\050gest-attributes-dy2 attribs\051)
SH( ;)4800 W
/Times-Italic SF
31520 XM
(endy - prevy)SH
/Courier SF
8040 38468 MT
(\050gest-attributes-magsq2 attribs\051)
SH( ;)3360 W
/Times-Italic SF
(\050dx2 * dx2\051 + \050dy2 * dy2\051)SH
/Courier SF
8040 40198 MT
(\050gest-attributes-endx attribs\051)
SH( ;)4320 W
/Times-Italic SF
(last point)SH
/Courier SF
8040 41063 MT
(\050gest-attributes-endy attribs\051)SH
8040 42793 MT
(\050gest-attributes-minx attribs\051)
SH( ;)4320 W
/Times-Italic SF
(bounding box)SH
/Courier SF
8040 43658 MT
(\050gest-attributes-maxx attribs\051)SH
8040 44523 MT
(\050gest-attributes-miny attribs\051)SH
8040 45388 MT
(\050gest-attributes-maxy attribs\051)SH
8040 47118 MT
(\050gest-attributes-path-r attribs\051)
SH( ;)3360 W
/Times-Italic SF
(total path length \050in rads\051)SH
/Courier SF
8040 47983 MT
(\050gest-attributes-path-th attribs\051)
SH( ;)2880 W
/Times-Italic SF
(total rotation \050in rads\051)SH
/Courier SF
8040 48848 MT
(\050gest-attributes-abs-th attribs\051)
SH( ;)3360 W
/Times-Italic SF
(sum of absolute values of path angles)SH
/Courier SF
8040 49713 MT
(\050gest-attributes-sharpness attribs\051)
SH( ;)1920 W
/Times-Italic SF
(sum of non-linear function of absolute values)SH
/Courier SF
27240 50578 MT
(;)SH
/Times-Italic SF
(of path angles counting acute angles heavier)SH
11 /Times-Roman AF
6120 52876 MT
(The)SH
10 /Courier AF
8241 XM
(points-array)SH
11 /Times-Roman AF
15852 XM
(will be set to an array \050of the form [x1)
136 W( y1 x2 y2...]\051 containing the points in the)135 W
6120 54072 MT
(gesture. This array can be used along with a NIL classifier to use the gesture-interactor)
227 W( as a trace-)228 W
6120 55268 MT
(interactor. A)
491 W( trace-interactor)
108 W( returns all the points the mouse goes through between the)107 W
10 /Courier AF
46320 XM
(start-event)SH
11 /Times-Roman AF
6120 56464 MT
(and the)SH
10 /Courier AF
9602 XM
(stop-event)SH
11 /Times-Roman AF
(. This)
275 W( is useful for inking in a drawing program.)SH
/Times-Bold SF
6120 58762 MT
(IMPORTANT NOTE:)261 W
/Times-Roman SF
17520 XM
(The elements of)
261 W( the)262 W
10 /Courier AF
27546 XM
(attribs)SH
11 /Times-Roman AF
32283 XM
(structure and the)262 W
10 /Courier AF
40674 XM
(points-array)SH
11 /Times-Roman AF
48411 XM
(should be)262 W
6120 59958 MT
(accessed individually \050e.g.,)2 W
10 /Courier AF
18344 XM
(\050gest-attributes-minx attribs\051 \050aref points-array 0\051 etc.)2 W
11 /Times-Roman AF
(\051)SH
6120 61154 MT
(or else they should be copied)
802 W( \050e.g.,)803 W
10 /Courier AF
27314 XM
(\050copy-gest-attributes attribs\051 \050copy-seq)803 W
6120 62350 MT
(points-array\051)SH
11 /Times-Roman AF
(\051 before they are used in any object)
202 W( slots.  This is necessary because the interactor)201 W
6120 63546 MT
(reuses the)SH
10 /Courier AF
10762 XM
(attribs)SH
11 /Times-Roman AF
15237 XM
(structure and the)SH
10 /Courier AF
22842 XM
(points-array)SH
11 /Times-Roman AF
30317 XM
(in order to avoid extra memory allocation.)SH
6120 65844 MT
(If)SH
10 /Courier AF
7238 XM
(:min-non-ambig-prob)SH
11 /Times-Roman AF
19024 XM
(is not NIL, the)111 W
10 /Courier AF
26159 XM
(nap)SH
11 /Times-Roman AF
28345 XM
(parameter will be set to)
111 W( the calculated non-ambiguous)112 W
6120 67040 MT
(probability of the entered gesture.)SH
6120 69338 MT
(If)SH
10 /Courier AF
7289 XM
(:max-dist-to-mean)SH
11 /Times-Roman AF
17926 XM
(is not NIL, the)162 W
10 /Courier AF
25265 XM
(dist)SH
11 /Times-Roman AF
28102 XM
(parameter will be set to)
162 W( the calculated distance of the)161 W
6120 70534 MT
(entered gesture from the classification.)SH
ES
%%Page: 273 54
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.7)
SH( Gesture-Interactor)1800 W
51386 XM
(Page 273)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(6.7.1.4. Normal Operation)SH
11 /Times-Roman AF
8280 9200 MT
(When the start event happens, if)72 W
10 /Courier AF
23159 XM
(:show-trace)SH
11 /Times-Roman AF
30107 XM
(is non-NIL, a trace following the mouse pointer will be)73 W
8280 10396 MT
(displayed. If)275 W
10 /Courier AF
14328 XM
(:show-trace)SH
11 /Times-Roman AF
21203 XM
(is NIL, no trace will be seen.)SH
8280 12694 MT
(If the mouse goes outside of)218 W
10 /Courier AF
22296 XM
(:running-where)SH
11 /Times-Roman AF
(, then the system will beep)
218 W( and if)217 W
10 /Courier AF
47254 XM
(:show-trace)SH
11 /Times-Roman AF
54346 XM
(is)SH
8280 13890 MT
(non-NIL, the trace will be erased.)SH
8280 16188 MT
(If the abort event happens and if)SH
10 /Courier AF
22787 XM
(:show-trace)SH
11 /Times-Roman AF
29662 XM
(is non-NIL, the trace will be erased.)SH
8280 18486 MT
(When the stop event happens, if)164 W
10 /Courier AF
23651 XM
(:show-trace)SH
11 /Times-Roman AF
30690 XM
(is non-NIL,)
164 W( the trace will be erased. Then, the final-)165 W
8280 19682 MT
(function is called with the result of classifying the given gesture)
237 W( with the classifier supplied in the)236 W
10 /Courier AF
8280 20878 MT
(:classifier)SH
11 /Times-Roman AF
15155 XM
(slot.)SH
8280 23176 MT
(An error will be generated if the)SH
10 /Courier AF
22725 XM
(:continuous)SH
11 /Times-Roman AF
29600 XM
(slot is anything other than T, the default.)SH
ES
%%Page: 274 55
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 274)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.7.2. Example - Creating new Objects)SH
11 /Times-Roman AF
6120 9200 MT
(Create a rectangle when an ``L'' shape is drawn and create a circle when a circle is drawn.)SH
8 /Courier AF
8040 11850 MT
(;)SH
/Times-Italic SF
9000 XM
(load the gesture interactor, unless already loaded \050Garnet does NOT load the gesture-interactor by default\051)SH
/Courier SF
8040 12715 MT
(\050defvar DEMO-GESTURE-INIT)SH
9960 13580 MT
(\050load Garnet-Gesture-Loader\051\051)SH
8040 15310 MT
(;)SH
/Times-Italic SF
9000 XM
(handle-gesture is called by the gesture interactor after it classifies a gesture)SH
/Courier SF
8040 16175 MT
(\050defun Handle-Gesture \050inter first-obj-over gesture-name attribs)SH
19080 17040 MT
(points-array nap dist\051)SH
9960 17905 MT
(\050declare \050ignore inter first-obj-over points-array nap dist\051\051)SH
9960 18770 MT
(\050case gesture-name)SH
11880 19635 MT
(\050:CIRCLE)SH
13800 20500 MT
(;)SH
/Times-Italic SF
14760 XM
(create a circle with the same "radius" as the gesture and with the same upper left of the gesture)SH
/Courier SF
13800 21365 MT
(\050opal:add-components SHAPE-AGG)SH
15720 22230 MT
(\050create-instance NIL opal:circle)SH
17160 23095 MT
(\050:left \050inter:gest-attributes-minx attribs\051\051)SH
17160 23960 MT
(\050:top \050inter:gest-attributes-miny attribs\051\051)SH
17160 24825 MT
(\050:width \050- \050inter:gest-attributes-maxx attribs\051)SH
22440 25690 MT
(\050inter:gest-attributes-minx attribs\051\051\051)SH
17160 26555 MT
(\050:height \050- \050inter:gest-attributes-maxx attribs\051)SH
22920 27420 MT
(\050inter:gest-attributes-minx attribs\051\051\051\051\051)SH
11880 28285 MT
(\051)SH
11880 29150 MT
(\050:RECTANGLE)SH
13800 30015 MT
(;)SH
/Times-Italic SF
14760 XM
(create a rectangle with the same height and width as the gesture and with the same upper left of the gesture)SH
/Courier SF
13800 30880 MT
(\050opal:add-components SHAPE-AGG)SH
15720 31745 MT
(\050create-instance NIL opal:rectangle)SH
17160 32610 MT
(\050:left \050inter:gest-attributes-minx attribs\051\051)SH
17160 33475 MT
(\050:top \050inter:gest-attributes-miny attribs\051\051)SH
17160 34340 MT
(\050:width \050- \050inter:gest-attributes-maxx attribs\051)SH
22440 35205 MT
(\050inter:gest-attributes-minx attribs\051\051\051)SH
17160 36070 MT
(\050:height \050- \050inter:gest-attributes-maxy attribs\051)SH
22920 36935 MT
(\050inter:gest-attributes-miny attribs\051\051\051\051\051)SH
11880 37800 MT
(\051)SH
11880 38665 MT
(\050otherwise)SH
13800 39530 MT
(\050format T "Can not handle this gesture ...~%~%"\051)SH
11880 40395 MT
(\051)SH
9960 41260 MT
(\051)SH
9960 42125 MT
(\050opal:update TOP-WIN\051)SH
8040 42990 MT
(\051)SH
8040 44720 MT
(;)SH
/Times-Italic SF
9000 XM
(create top-level window)SH
/Courier SF
8040 45585 MT
(\050create-instance 'TOP-WIN inter:interactor-window)SH
9480 46450 MT
(\050:left 750\051 \050:top 80\051 \050:width 520\051 \050:height 400\051)SH
8040 47315 MT
(\051)SH
8040 49045 MT
(;)SH
/Times-Italic SF
9000 XM
(create the top level aggregate in the window)SH
/Courier SF
8040 49910 MT
(\050s-value TOP-WIN :aggregate \050create-instance 'TOP-AGG opal:aggregate\051\051)SH
8040 51640 MT
(;)SH
/Times-Italic SF
9000 XM
(create an aggregate to hold the shapes we will create)SH
/Courier SF
8040 52505 MT
(\050create-instance 'SHAPE-AGG opal:aggregate\051)SH
8040 53370 MT
(\050opal:add-components TOP-AGG SHAPE-AGG\051)SH
8040 54235 MT
(\050opal:update TOP-WIN\051)SH
8040 55965 MT
(;)SH
/Times-Italic SF
9000 XM
(create a gesture interactor that will allow us to create circles and rectangles)SH
/Courier SF
8040 56830 MT
(\050create-instance 'GESTURE-INTER inter:gesture-interactor)SH
9480 57695 MT
(\050:window TOP-WIN\051)SH
9480 58560 MT
(\050:start-where \050list :in TOP-WIN\051\051)SH
9480 59425 MT
(\050:running-where \050list :in TOP-WIN\051\051)SH
9480 60290 MT
(\050:start-event :any-mousedown\051)SH
9480 61155 MT
(\050:classifier \050inter:gest-classifier-read)SH
17640 62020 MT
(\050merge-pathnames "demo-gesture.classifier")SH
19560 62885 MT
(#+cmu "gesture-data:")SH
19560 63750 MT
(#-cmu user::Garnet-Gesture-Data-Pathname\051\051\051)SH
9480 64615 MT
(\050:final-function #'Handle-Gesture\051)SH
9480 65480 MT
(\050:min-non-ambig-prob .95\051)SH
9480 66345 MT
(\050:max-dist-to-mean 60\051)SH
8040 67210 MT
(\051)SH
ES
%%Page: 275 56
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.7)
SH( Gesture-Interactor)1800 W
51386 XM
(Page 275)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(6.7.3. Agate)SH
11 /Times-Roman AF
8280 9200 MT
(Agate is a Garnet application that is used to train)
161 W( gestures for use with the gesture interactor.  Agate)162 W
8280 10396 MT
(stands for A Gesture-recognizer And Trainer by)
6 W( Example.  Agate is in the)5 W
10 /Courier AF
41153 XM
(gesture)SH
11 /Times-Roman AF
45633 XM
(subdirectory, and can)5 W
794 50 12874 10596 UL
794 50 13949 10596 UL
794 50 22656 10596 UL
672 50 24831 10596 UL
672 50 29728 10596 UL
8280 11592 MT
(be loaded using)SH
10 /Courier AF
15459 XM
(\050garnet-load "gestures:agate"\051)SH
11 /Times-Roman AF
(. Then)
275 W( type)SH
10 /Courier AF
38988 XM
(\050agate:do-go\051)SH
11 /Times-Roman AF
47063 XM
(to begin.)SH
46800 50 8280 13743 UL
75 100 0 8692 68540 GB 
%%BeginDocument: inter/agate-pix.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: AGATE: Garnet Gesture Trainer (v. 2.0)
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 2, 1993, 4:59 AM
%%For: 
%%This file uses real color
%%DocumentFonts: (atend)
%%BoundingBox: 101 72 512 720
%%%Pages: 1
%%EndComments


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawMotifWindowFrame { % label left top w h 
                        % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def

    /bottom y bottommargin sub def
    /top y h add topmargin add def
    /left x leftmargin sub def
    /right x w add rightmargin add def

    /light .9 def
    /medium .7 def
    /dark .4 def

    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    medium setgray fill
  } exec

  { % outer upper left edges
    left bottom moveto
    right bottom lineto
    right top lineto
    right 2 sub top 2 sub lineto
    right 2 sub bottom 2 add lineto
    left 2 add bottom 2 add lineto
    closepath
    dark setgray fill
  } exec

  { % outer lower right edges
    left bottom moveto
    left top lineto
    right top lineto
    right 2 sub top 2 sub lineto
    left 2 add top 2 sub lineto
    left 2 add bottom 2 add lineto
    closepath
    light setgray fill
  } exec

  { % inner lower right edges
    left 9 add bottom 9 add moveto
    right 9 sub bottom 9 add lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    right 11 sub bottom 11 add lineto
    left 11 add bottom 11 add lineto
    closepath
    light setgray fill
  } exec

  { % inner upper left edges
    left 9 add bottom 9 add moveto
    left 9 add top 25 sub lineto
    right 9 sub top 25 sub lineto
    right 11 sub top 27 sub lineto
    left 11 add top 27 sub lineto
    left 11 add bottom 11 add lineto
    closepath
    dark setgray fill
  } exec

  { % top rut above label
    left 9 add top 9.5 sub moveto
    right 9.01 sub top 9.5 sub lineto
    dark setgray stroke
    left 10 add top 10.5 sub moveto
    right 9.01 sub top 10.5 sub lineto
    light setgray stroke
  } exec

  { % left edge of left button
    left 9.5 add top 9 sub moveto
    left 9.5 add top 25.99 sub lineto
    dark setgray stroke
    left 10.5 add top 10 sub moveto
    left 10.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of big right button
    right 10.5 sub top 11 sub moveto
    right 10.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 9.5 sub top 11 sub moveto
    right 9.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % right edge of left button
    left 26.5 add top 11 sub moveto
    left 26.5 add top 25.99 sub lineto
    dark setgray stroke
    left 27.5 add top 11 sub moveto
    left 27.5 add top 25.99 sub lineto
    light setgray stroke
  } exec

  { % edge between small and big right buttons
    right 27.5 sub top 11 sub moveto
    right 27.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 11 sub moveto
    right 26.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % left edge of small right button
    right 44.5 sub top 11 sub moveto
    right 44.5 sub top 25.99 sub lineto
    dark setgray stroke
    right 43.5 sub top 11 sub moveto
    right 43.5 sub top 25.99 sub lineto
    light setgray stroke
  } exec

  { % top left resize corner
    left 26.5 add top 1 sub moveto
    left 26.5 add top 9.99 sub lineto
    dark setgray stroke
    left 27.5 add top 1 sub moveto
    left 27.5 add top 9.99 sub lineto
    light setgray stroke

    left 1 add top 26.5 sub moveto
    left 9.99 add top 26.5 sub lineto
    dark setgray stroke
    left 1 add top 27.5 sub moveto
    left 9.99 add top 27.5 sub lineto
    light setgray stroke
  } exec

  { % top right resize corner
    right 27.5 sub top 1 sub moveto
    right 27.5 sub top 9.99 sub lineto
    dark setgray stroke
    right 26.5 sub top 1 sub moveto
    right 26.5 sub top 9.99 sub lineto
    light setgray stroke

    right 1.01 sub top 26.5 sub moveto
    right 9 sub top 26.5 sub lineto
    dark setgray stroke
    right 1.01 sub top 27.5 sub moveto
    right 9 sub top 27.5 sub lineto
    light setgray stroke
  } exec

  { % bottom left resize corner
    left 26.5 add bottom 1.01 add moveto
    left 26.5 add bottom 9 add lineto
    dark setgray stroke
    left 27.5 add bottom 1.01 add moveto
    left 27.5 add bottom 9 add lineto
    light setgray stroke

    left 1 add bottom 27.5 add moveto
    left 9.99 add bottom 27.5 add lineto
    dark setgray stroke
    left 1 add bottom 26.5 add moveto
    left 9.99 add bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % bottom right resize corner
    right 27.5 sub bottom 1.01 add moveto
    right 27.5 sub bottom 9 add lineto
    dark setgray stroke
    right 26.5 sub bottom 1.01 add moveto
    right 26.5 sub bottom 9 add lineto
    light setgray stroke

    right 1.01 sub bottom 27.5 add moveto
    right 9 sub bottom 27.5 add lineto
    dark setgray stroke
    right 1.01 sub bottom 26.5 add moveto
    right 9 sub bottom 26.5 add lineto
    light setgray stroke
  } exec

  { % upper left button
    left 14.5 add top 19.99 sub moveto
    left 14.5 add top 16.5 sub lineto
    left 22.99 add top 16.5 sub lineto
    light setgray stroke
    left 15 add top 19.5 sub moveto
    left 22.5 add top 19.5 sub lineto
    left 22.5 add top 17 sub lineto
    dark setgray stroke
  } exec

  { % upper right big button
    right 14.01 sub top 14.5 sub moveto
    right 22.5 sub top 14.5 sub lineto
    right 22.5 sub top 22.99 sub lineto
    light setgray stroke
    right 14.5 sub top 15 sub moveto
    right 14.5 sub top 22.5 sub lineto
    right 22 sub top 22.5 sub lineto
    dark setgray stroke
  } exec

  { % upper right small button
    right 34.01 sub top 16.5 sub moveto
    right 37.5 sub top 16.5 sub lineto
    right 37.5 sub top 19.99 sub lineto
    light setgray stroke
    right 34.5 sub top 17 sub moveto
    right 34.5 sub top 19.5 sub lineto
    right 37 sub top 19.5 sub lineto
    dark setgray stroke
  } exec

  { % label
    /Helvetica-Bold findfont 10 scalefont setfont
    label stringwidth pop
    left 28 add right 44 sub add 2 div
    1 index 2 div sub
    dup 2 sub top 24 sub
    moveto
    1 index 4 add 0 rlineto
    0 12 rlineto
    exch 4 add neg 0 rlineto
    closepath
    1 setgray fill
    top 21 sub moveto
    0 setgray
    label show
  } exec

  end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.77 0.77 scale
37 838 translate

%
% Begin new window
%
gsave
0 0 532 838 ClipToRectangle
gsave
0 0 532 838 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
11 -27 translate
(AGATE: Garnet Gesture Trainer (v. 2.0)) 0 0 510 800 11 27 11 11 DrawMotifWindowFrame
0 0 510 800 ClipToRectangle
gsave
0 0 510 800 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
13 -7 114 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
15 -9 112 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
15 -9 110 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
22 -10 -21 97 14 false [0 0 0] [1 1 1] (New Classifier) 12 /Courier DrawText
136 -7 114 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
138 -9 112 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
138 -9 110 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
141 -10 -21 104 14 false [0 0 0] [1 1 1] (Load Classifier) 12 /Courier DrawText
259 -7 114 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
261 -9 112 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
261 -9 110 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
265 -10 -21 103 14 false [0 0 0] [1 1 1] (Save Classifier) 12 /Courier DrawText
382 -7 114 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
384 -9 112 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
384 -9 110 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
426 -10 -21 27 14 false [0 0 0] [1 1 1] (Quit) 12 /Courier DrawText
2 -39 -51 91 15 false [0 0 0] [1 1 1] (Classifier Name:  ) 12 /Times-Bold DrawText
210 -64 -76 89 15 false [0 0 0] [1 1 1] (Gesture Classes) 12 /Times-Bold DrawText
147 -244 93 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
149 -246 91 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
149 -246 89 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
162 -247 -258 62 14 false [0 0 0] [1 1 1] (New Class) 12 /Courier DrawText
269 -244 93 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
271 -246 91 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
271 -246 89 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
274 -247 -258 83 14 false [0 0 0] [1 1 1] (Delete Class) 12 /Courier DrawText
4 -280 -291 130 14 false [0 0 0] [1 1 1] (Gesture Class Name:) 12 /Courier-Bold DrawText
139 -278 371 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
141 -280 369 16 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
141 -280 367 14 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
143 -280 -291 47 14 false [0 0 0] [1 1 1] (ZIG-ZAG) 12 /Courier DrawText
229 -308 -320 51 15 false [0 0 0] [1 1 1] (Examples) 12 /Times-Bold DrawText
201 -460 107 20 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
203 -462 105 18 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
203 -462 103 16 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
206 -463 -474 97 14 false [0 0 0] [1 1 1] (Delete Example) 12 /Courier DrawText
145 -503 {
  { 163 -503 154 -494 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
145 -503 {
  { 163 -503 154 -512 }
} [1 1 1] 0 0 [] 2 [0.70 0.70 0.70] DrawPolyline
173 -496 -507 35 14 false [0 0 0] [1 1 1] (Train) 12 /Courier DrawText
273 -503 {
  { 291 -503 282 -494 }
} [1 1 1] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
273 -503 {
  { 291 -503 282 -512 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
301 -496 -507 62 14 false [0 0 0] [1 1 1] (Recognize) 12 /Courier DrawText
235 -524 -536 39 15 false [0 0 0] [1 1 1] (Canvas) 12 /Times-Bold DrawText
grestore


%
% Begin new window
%
gsave
2 -542 translate
() 0 0 505 256 2 2 2 2 DrawGenericWindowFrame
0 0 505 256 ClipToRectangle
gsave
68 -28 {
  { 476 -187 476 -187 477 -187 461 -188 413 -189 348 -192 251 -194 93 -199 90 -198 91 -194 92 -194 94 -188 99 -180 102 -176 105 -171 106 -170 110 -164 118 -154 130 -134 149 -123 228 -93 373 -55 395 -35 395 -31 395 -30 201 -30 73 -29 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
56 -18 {
  { 54 -32 73 -29 }
} [1 0.65 0] 0 0 [] 2 null DrawPolyline
grestore

grestore


%
% Begin new window
%
gsave
2 -326 translate
() 0 0 505 120 2 2 2 2 DrawGenericWindowFrame
0 0 505 120 ClipToRectangle
gsave
0 0 505 120 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
2 -2 16 116 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
4 -4 14 114 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
4 -4 12 112 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
4 -17 12 83 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
6 -19 10 81 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
6 -19 8 79 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
10 -5 {
  { 5 -15 14 -15 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
[1 1 1] 0 0 [] 2 5 -15 10 -5 DrawLine
10 -113 {
  { 15 -103 5 -103 }
} [1 1 1] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
[0.20 0.20 0.20] 0 0 [] 2 10 -113 15 -103 DrawLine
grestore


%
% Begin new window
%
gsave
20 0 translate
() 0 0 485 120 0 0 0 0 DrawGenericWindowFrame
0 0 485 120 ClipToRectangle
gsave
0 0 485 120 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
() 0 0 485 120 0 0 0 0 DrawGenericWindowFrame
0 0 485 120 ClipToRectangle
gsave
0 0 485 120 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
0 0 60 60 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
13 -5 {
  { 47 -44 47 -44 46 -44 42 -44 40 -44 30 -45 23 -45 23 -45 22 -45 23 -45 23 -44 23 -44 23 -44 23 -44 23 -43 23 -43 23 -42 24 -40 24 -38 24 -36 25 -34 27 -30 28 -24 34 -12 35 -5 35 -4 35 -4 35 -4 34 -4 33 -4 32 -5 30 -5 30 -5 26 -5 17 -5 14 -5 13 -5 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
8 -2 {
  { 8 -8 14 -5 }
} [1 0.65 0] 0 0 [] 1 null DrawPolyline
60 0 60 60 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
66 -5 {
  { 111 -44 111 -44 111 -44 111 -44 110 -44 110 -45 108 -45 105 -46 103 -46 92 -47 86 -48 74 -49 61 -50 61 -50 61 -50 61 -50 62 -48 66 -41 72 -36 85 -24 97 -14 106 -7 106 -5 106 -5 106 -5 104 -5 103 -5 101 -5 93 -5 87 -5 79 -5 71 -5 66 -5 66 -5 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
65 -2 {
  { 65 -8 71 -5 }
} [1 0.65 0] 0 0 [] 1 null DrawPolyline
120 0 60 60 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
126 -10 {
  { 172 -34 172 -34 172 -34 171 -34 170 -35 168 -36 155 -41 142 -44 141 -44 141 -44 141 -44 141 -44 141 -42 141 -42 142 -41 142 -39 143 -37 143 -33 144 -30 144 -26 145 -20 146 -18 147 -16 149 -13 150 -9 150 -9 149 -9 148 -9 145 -9 137 -10 130 -10 127 -10 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
121 -7 {
  { 121 -13 127 -10 }
} [1 0.65 0] 0 0 [] 1 null DrawPolyline
180 0 60 60 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
180 0 60 60 [1 0 0] 0 0 [] 4 null DrawRectangle
188 -6 {
  { 233 -38 233 -38 233 -38 232 -38 226 -38 219 -39 208 -39 191 -40 190 -40 191 -39 191 -39 191 -38 191 -36 192 -36 192 -35 192 -34 193 -33 194 -31 195 -27 197 -25 206 -19 222 -11 224 -7 224 -7 224 -6 203 -6 189 -6 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
183 -3 {
  { 183 -9 189 -6 }
} [1 0.65 0] 0 0 [] 1 null DrawPolyline
grestore

grestore

grestore

grestore


%
% Begin new window
%
gsave
2 -82 translate
() 0 0 505 148 2 2 2 2 DrawGenericWindowFrame
0 0 505 148 ClipToRectangle
gsave
0 0 505 148 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
2 -2 16 144 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
4 -4 14 142 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
4 -4 12 140 [0 0 0] 0 0 [] -1 [0.70 0.70 0.70] DrawRectangle
4 -17 12 111 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
6 -19 10 109 [0 0 0] 0 0 [] -1 [0.20 0.20 0.20] DrawRectangle
6 -19 8 107 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
10 -5 {
  { 5 -15 14 -15 }
} [0.20 0.20 0.20] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
[1 1 1] 0 0 [] 2 5 -15 10 -5 DrawLine
10 -141 {
  { 15 -131 5 -131 }
} [1 1 1] 0 0 [] 2 [0.9 0.9 0.9] DrawPolyline
[0.20 0.20 0.20] 0 0 [] 2 10 -141 15 -131 DrawLine
grestore


%
% Begin new window
%
gsave
20 0 translate
() 0 0 485 148 0 0 0 0 DrawGenericWindowFrame
0 0 485 148 ClipToRectangle
gsave
0 0 485 148 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
() 0 0 485 148 0 0 0 0 DrawGenericWindowFrame
0 0 485 148 ClipToRectangle
gsave
0 0 485 148 [0 0 0] 0 0 [] -1 [0.9 0.9 0.9] DrawRectangle
0 0 60 60 [0 0 0] 0 0 [] 1 [1 dup dup] DrawRectangle
6 -60 -71 47 14 false [0 0 0] [1 1 1] (ZIG-ZAG) 12 /Courier DrawText
13 -5 {
  { 47 -44 47 -44 46 -44 42 -44 40 -44 30 -45 23 -45 23 -45 22 -45 23 -45 23 -44 23 -44 23 -44 23 -44 23 -43 23 -43 23 -42 24 -40 24 -38 24 -36 25 -34 27 -30 28 -24 34 -12 35 -5 35 -4 35 -4 35 -4 34 -4 33 -4 32 -5 30 -5 30 -5 26 -5 17 -5 14 -5 13 -5 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
8 -2 {
  { 8 -8 14 -5 }
} [1 0.65 0] 0 0 [] 1 null DrawPolyline
grestore

grestore

grestore

grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Times-Bold /Courier Helvetica-Bold 
%%BoundingBox: 101 72 512 720

%%EndDocument
 GE /Times-Bold SF
8280 64892 MT
(Figure 2:)SH
/Times-Roman SF
13137 XM
(An example session with the Agate gesture trainer)SH
46800 50 8280 66288 UL
ES
%%Page: 276 57
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 276)
SH( Interactors)830 W
39401 XM
(Specific Interactors)
SH( Chapter)
1550 W( 6)SH
46800 50 6120 4486 UL
12 /Times-Bold AF
6120 8004 MT
(6.7.3.1. End-User Interface)SH
11 /Times-Roman AF
6120 9200 MT
(To train a gesture classifier, the user first types a)
26 W( gesture name into the)27 W
10 /Courier AF
37858 XM
(Gesture Class Name)27 W
11 /Times-Roman AF
49014 XM
(field and)27 W
6120 10396 MT
(then demonstrates approximately 15 examples of the gesture)
7 W( by drawing on the)6 W
10 /Courier AF
41389 XM
(Canvas)SH
11 /Times-Roman AF
45270 XM
(window with one)6 W
6120 11592 MT
(of the mouse buttons pressed.  To train another gesture)
8 W( class the user can press on the)9 W
10 /Courier AF
44140 XM
(New Class)9 W
11 /Times-Roman AF
49833 XM
(button,)SH
6120 12788 MT
(type in the new gesture name, and give some examples of the gesture. This is)
28 W( done repeatedly for each of)27 W
6120 13984 MT
(the gestures that the user would like the classifier to recognize.)SH
6120 16617 MT
(At any point, the user can try out the gestures trained so far by switching to)5 W
10 /Courier AF
39589 XM
(Recognize)SH
11 /Times-Roman AF
45270 XM
(mode by clicking)6 W
6120 17813 MT
(on the)89 W
10 /Courier AF
9292 XM
(Recognize)SH
11 /Times-Roman AF
15056 XM
(toggle button.)
89 W( After)
452 W( demonstrating a gesture in)88 W
10 /Courier AF
36933 XM
(Recognize)SH
11 /Times-Roman AF
42696 XM
(mode, Agate will print)88 W
6120 19009 MT
(the name of the gesture in the)58 W
10 /Courier AF
19813 XM
(Gesture Class Name)58 W
11 /Times-Roman AF
31063 XM
(field, along with numbers that represent the non-)59 W
6120 20205 MT
(ambiguity probability and distance of the example from the mean \050see section 6.7.1.1\051.)SH
6120 22503 MT
(When the gesture classifier performs as desired, it can be)
246 W( saved to a file by clicking on the)245 W
10 /Courier AF
50520 XM
(Save)SH
6120 23699 MT
(Classifier)SH
11 /Times-Roman AF
12411 XM
(button. Existing)
307 W( classifiers can be modified by first loading them into Agate by clicking)
16 W( on)17 W
6120 24895 MT
(the)SH
10 /Courier AF
7751 XM
(Load Classifier)12 W
11 /Times-Roman AF
17050 XM
(button. Then)
299 W( the user can add more)
12 W( examples to existing gestures or add entirely)11 W
6120 26091 MT
(new gestures to the classifier.)SH
6120 28389 MT
(A gesture example can be deleted by first selecting the example \050a full-sized version of)
7 W( the gesture will be)8 W
6120 29585 MT
(displayed on the Canvas\051 and then clicking on the)88 W
10 /Courier AF
29121 XM
(Delete Example)88 W
11 /Times-Roman AF
37972 XM
(button. Similarly,)
449 W( an entire class)87 W
6120 30781 MT
(can be deleted by selecting the class \050all of the examples will be displayed in)
15 W( the)16 W
10 /Courier AF
42040 XM
(Examples)SH
11 /Times-Roman AF
47131 XM
(window\051 and)16 W
6120 31977 MT
(then clicking on the)79 W
10 /Courier AF
15418 XM
(Delete Class)79 W
11 /Times-Roman AF
23051 XM
(button. A)
433 W( gesture class can be renamed by)
79 W( selecting the class and)78 W
6120 33173 MT
(then editing the name in the)SH
10 /Courier AF
18646 XM
(Gesture Class Name)SH
11 /Times-Roman AF
29721 XM
(field.)SH
6120 35471 MT
(The current gesture classifier can be cleared out by clicking on the)53 W
10 /Courier AF
36258 XM
(New Classifier)53 W
11 /Times-Roman AF
(. The)
381 W( user)
53 W( will be)54 W
6120 36667 MT
(prompted to save the classifier if it has not been previously saved.)SH
12 /Times-Bold AF
6120 39631 MT
(6.7.3.2. Programming Interface)SH
11 /Times-Roman AF
6120 40827 MT
(Agate V2.0 is a self-contained interface tool that can be integrated within another)
58 W( Garnet application.  A)57 W
6120 42023 MT
(designer can call)5 W
10 /Courier AF
13800 XM
(agate:do-go)SH
11 /Times-Roman AF
20681 XM
(with parameters for an initial classifier, an initial name to be displayed in)6 W
6120 43219 MT
(the)SH
10 /Courier AF
7739 XM
(Gesture Class Name)SH
11 /Times-Roman AF
18814 XM
(field, and a final function to call when the user quits Agate.)SH
8 /Courier AF
8040 44432 MT
(agate:Do-Go &key)SH
/Times-Italic SF
16200 XM
(dont-enter-main-event-loop double-buffered-p)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
/Times-Italic SF
16200 45297 MT
(initial-classifier initial-examples initial-gesture-name)
200 W( final-function)SH
10 /Courier AF
6120 47595 MT
(Do-go)SH
11 /Times-Roman AF
9410 XM
(creates the necessary windows and Garnet objects,)
15 W( and then starts the application.  The parameters)14 W
6120 48791 MT
(to)SH
10 /Courier AF
7251 XM
(do-go)SH
11 /Times-Roman AF
10526 XM
(are as follows:)SH
/Times-Italic SF
8620 50742 MT
(dont-enter-main-event-loop)SH
/Times-Roman SF
21051 XM
(- if T, don't enter the main event loop)SH
/Times-Italic SF
8620 52437 MT
(double-buffered-p)SH
/Times-Roman SF
16837 XM
(- if T, use double buffered windows)SH
/Times-Italic SF
8620 54132 MT
(initial-classifier)SH
/Times-Roman SF
15925 XM
(- initial classifier to use)SH
/Times-Italic SF
8620 55827 MT
(initial-examples)SH
/Times-Roman SF
15983 XM
(- initial examples to display)SH
/Times-Italic SF
8620 57522 MT
(initial-gesture-name)SH
/Times-Roman SF
17877 XM
(- name to fill in gesture class name field)SH
/Times-Italic SF
8620 59217 MT
(final-function)SH
/Times-Roman SF
14885 XM
(- function to call on quit)SH
6120 61515 MT
(The final function takes five parameters:)SH
/Times-Italic SF
8620 63466 MT
(last-saved-filename)SH
/Times-Roman SF
17509 XM
(- the last filename saved to)SH
/Times-Italic SF
8620 65161 MT
(cur-classifier)SH
/Times-Roman SF
14761 XM
(- the current classifier \050as of last training\051)SH
/Times-Italic SF
8620 66856 MT
(cur-examples)SH
/Times-Roman SF
15087 XM
(- the current examples \050if untrained, will not necessarily correspond to the cur-)269 W
9720 68052 MT
(classifier\051)SH
/Times-Italic SF
8620 69747 MT
(saved-p)SH
/Times-Roman SF
12315 XM
(- has the current classifier been saved?)SH
/Times-Italic SF
8620 71442 MT
(trained-p)SH
/Times-Roman SF
12989 XM
(- has the current classifier been trained?)SH
ES
%%Page: 277 58
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 6.8)
SH( Animator-Interactor)1800 W
51386 XM
(Page 277)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(6.7.4. Gesture Demos)SH
11 /Times-Roman AF
8280 9200 MT
(There are two demos that show)
40 W( how gestures can be used in an application.  Demo-gesture allows you to)39 W
8280 10396 MT
(draw rough approximations of circles and rectangles, which)
261 W( become perfect shapes in the window.)262 W
8280 11592 MT
(Demo-unidraw is a gesture-based text editor which uses a gesture shorthand for entering)
13 W( characters.  Both)12 W
8280 12788 MT
(of these demos are discussed in the Demos section of this manual, starting on page 483.)SH
14 /Times-Bold AF
8280 16606 MT
(6.8. Animator-Interactor)SH
8 /Courier AF
10200 17771 MT
(\050create-instance 'inter:Animator-Interactor inter:interactor)SH
/Times-Italic SF
11160 18636 MT
(;; Slots common to all interactors \050see section 5\051)SH
/Courier SF
11160 19501 MT
(\050:window NIL\051)SH
11160 20366 MT
(\050:active T\051)SH
/Times-Italic SF
11160 22096 MT
(; Slots specific to the button-interactor \050discussed in this section\051)SH
/Courier SF
11160 22961 MT
(\050:timer-handler NIL\051)SH
/Times-Italic SF
25080 XM
(; \050lambda \050inter\051\051  ;; function to execute)SH
/Courier SF
11160 23826 MT
(\050:timer-repeat-wait 0.2\051)SH
/Times-Italic SF
25080 XM
(; time in seconds)SH
/Courier SF
10200 24691 MT
(...\051)SH
11 /Times-Roman AF
8280 26112 MT
(The)SH
10 /Courier AF
10367 XM
(animator-interactor)SH
11 /Times-Roman AF
22144 XM
(has been implemented using the multiple process mechanism)
102 W( of Allegro,)103 W
8280 27308 MT
(LispWorks, Lucid \050also Sun and HP\051 Common Lisp.)192 W
/Times-BoldItalic SF
33749 XM
(It does not work under)
192 W( CMU Common Lisp,)191 W
8280 28504 MT
(AKCL, CLISP, etc.; sorry.)SH
/Times-Roman SF
8280 30802 MT
(The)SH
10 /Courier AF
10438 XM
(animator-interactor)SH
11 /Times-Roman AF
22286 XM
(works quite)
173 W( differently from other interactors.  In particular, it is more)174 W
8280 31998 MT
(procedural. You)
379 W( provide a function to be called at a fixed rate in the)52 W
10 /Courier AF
39479 XM
(:timer-handler)SH
11 /Times-Roman AF
48205 XM
(slot, and a time)51 W
8280 33194 MT
(interval in the slot)607 W
10 /Courier AF
18958 XM
(:timer-repeat-wait)SH
11 /Times-Roman AF
30640 XM
(at which this function will be)
607 W( executed.  The)608 W
10 /Courier AF
8280 34390 MT
(:timer-handler)SH
11 /Times-Roman AF
17340 XM
(function takes as a parameter the animation interactor and should)
385 W( update the)384 W
8280 35586 MT
(appropriate graphics.)SH
8280 37884 MT
(Unlike other interactors,)
152 W( the animation interactor does)153 W
/Times-Italic SF
33419 XM
(not)SH
/Times-Roman SF
35253 XM
(start immediately when created.  You must)153 W
8280 39080 MT
(explicitly start it operating with)SH
10 /Courier AF
22427 XM
(inter:Start-Animator)SH
11 /Times-Roman AF
34702 XM
(and stop it with)SH
10 /Courier AF
41792 XM
(inter:Stop-Animator)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
10200 40293 MT
(inter:Start-Animator)SH
/Times-Italic SF
20280 XM
(animator-inter)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
10200 42023 MT
(inter:Stop-Animator)SH
/Times-Italic SF
19800 XM
(animator-inter)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 43444 MT
(After starting, the interactor will call the)49 W
10 /Courier AF
26645 XM
(:timer-handler)SH
11 /Times-Roman AF
35369 XM
(every)SH
10 /Courier AF
38134 XM
(:timer-repeat-wait)SH
11 /Times-Roman AF
49257 XM
(seconds until)48 W
8280 44640 MT
(you explicitly stop the interactor.  It is OK for the)SH
10 /Courier AF
30398 XM
(:timer-handler)SH
11 /Times-Roman AF
39073 XM
(itself to call)SH
10 /Courier AF
44542 XM
(stop-animator)SH
11 /Times-Roman AF
(.)SH
8280 46938 MT
(Two special-purpose animator interactors have been supplied that have built-in)
115 W( timer functions \050so you)116 W
8280 48134 MT
(don't have to supply the)SH
10 /Courier AF
19187 XM
(:timer-handler)SH
11 /Times-Roman AF
27862 XM
(for these\051:)SH
8 /Courier AF
10200 49299 MT
(\050create-instance 'inter:Animator-Bounce inter:animator-interactor)SH
11160 50164 MT
(\050:x-inc 2\051)SH
11160 51029 MT
(\050:y-inc 2\051)SH
11160 51894 MT
(\050:timer-repeat-wait 0.2\051)SH
/Times-Italic SF
23640 XM
(; seconds)SH
/Courier SF
11160 52759 MT
(\050:obj-to-change NIL\051)SH
/Times-Italic SF
23640 XM
(; fill this in)SH
/Courier SF
11160 53624 MT
(...\051)SH
10200 55354 MT
(\050create-instance 'inter:Animator-Wrap inter:animator-interactor)SH
11160 56219 MT
(\050:x-inc 2\051)SH
11160 57084 MT
(\050:y-inc 2\051)SH
11160 57949 MT
(\050:timer-repeat-wait 0.2\051)SH
/Times-Italic SF
23160 XM
(; seconds)SH
/Courier SF
11160 58814 MT
(\050:obj-to-change NIL\051)SH
/Times-Italic SF
23160 XM
(; fill this in)SH
/Courier SF
11160 59679 MT
(...\051)SH
10 SS 
8280 61977 MT
(Animator-bounce)SH
11 /Times-Roman AF
17652 XM
(will move the object supplied in the)97 W
10 /Courier AF
34372 XM
(:obj-to-change)SH
11 /Times-Roman AF
43144 XM
(by)SH
10 /Courier AF
44616 XM
(:x-inc)SH
11 /Times-Roman AF
48588 XM
(pixels in)
97 W( the x)96 W
8280 63173 MT
(direction and)173 W
10 /Courier AF
14674 XM
(:y-inc)SH
11 /Times-Roman AF
18722 XM
(pixels in the y direction every)174 W
10 /Courier AF
33146 XM
(:timer-repeat-wait)SH
11 /Times-Roman AF
44395 XM
(seconds. The)
623 W( object is)174 W
8280 64369 MT
(modified by directly setting its)19 W
10 /Courier AF
22156 XM
(:left)SH
11 /Times-Roman AF
25450 XM
(and)SH
10 /Courier AF
27332 XM
(:top)SH
11 /Times-Roman AF
(. \050Note:)19 W
/Times-Italic SF
33405 XM
(not)SH
/Times-Roman SF
35104 XM
(its)SH
10 /Courier AF
36437 XM
(:box)SH
11 /Times-Roman AF
39130 XM
(slot.\051 When)
311 W( the object comes to the)18 W
8280 65565 MT
(edge of its window, it will bounce and change direction.)SH
10 /Courier AF
8280 67863 MT
(Animator-wrap)SH
11 /Times-Roman AF
16419 XM
(moves an object the same way except that when it gets to an)
64 W( edge, it re-appears at the)65 W
8280 69059 MT
(opposite edge of the window.)SH
8280 71357 MT
(See the demo)SH
10 /Courier AF
14481 XM
(demo-animator)SH
11 /Times-Roman AF
22556 XM
(for examples.)SH
ES
%%Page: 278 59
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 278)
SH( Interactors)830 W
42705 XM
(Transcripts Chapter)
1550 W( 7)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(7. Transcripts)SH
11 /Times-Roman AF
6120 10524 MT
(Garnet will create a transcript of)
18 W( all mouse and keyboard events in a file, and allow the file to be replayed)17 W
6120 11720 MT
(later as if the user had executed all events again.  This can be used for demonstrations, human factors)126 W
6120 12916 MT
(testing, and/or)
106 W( debugging.  Using the transcript mechanism is very easy.  The procedure to start saving)105 W
6120 14112 MT
(events is:)SH
8 /Courier AF
8040 15325 MT
(inter:Transcript-Events-To-File)SH
/Times-Italic SF
23400 XM
(filename window-list)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
23400 16190 MT
(&key \050)SH
/Times-Italic SF
(motion)SH
/Courier SF
28982 XM
(T\051 \050)SH
/Times-Italic SF
(if-exists)SH
/Courier SF
33868 XM
(:supersede\051)SH
25800 17055 MT
(\050)SH
/Times-Italic SF
(wait-elapsed-time)SH
/Courier SF
32490 XM
(T\051 \050)SH
/Times-Italic SF
(verbose)SH
/Courier SF
37377 XM
(T\051)SH
11 /Times-Roman AF
6120 18476 MT
(Events are then)
31 W( written to file)32 W
/Times-Italic SF
19628 XM
(filename)SH
/Times-Roman SF
(. The)339 W
/Times-Italic SF
26322 XM
(window-list)SH
/Times-Roman SF
31765 XM
(is a list of windows that events should be saved)32 W
6120 19672 MT
(for. It)
307 W( is also allowed to be a single window.  \050Note: subwindows of windows on the window)
16 W( list are also)15 W
6120 20868 MT
(handled automatically, and do)76 W
/Times-Italic SF
19958 XM
(not)SH
/Times-Roman SF
21716 XM
(have to be specified.\051  If the)77 W
10 /Courier AF
34837 XM
(:motion)SH
11 /Times-Roman AF
39389 XM
(parameter is specified as NIL,)77 W
6120 22064 MT
(then mouse movement)
25 W( events are not saved to the file, which can significantly decrease the file size.  The)24 W
10 /Courier AF
6120 23260 MT
(:if-exists)SH
11 /Times-Roman AF
12567 XM
(parameter is used in the Lisp)172 W
10 /Courier AF
26551 XM
(open)SH
11 /Times-Roman AF
29398 XM
(command when opening a file, and takes the)
172 W( same)173 W
6120 24456 MT
(values \050see the Common Lisp book\051.  If specified)
73 W( as)72 W
10 /Courier AF
30033 XM
(:append)SH
11 /Times-Roman AF
(, then the new events are appended to the)72 W
6120 25652 MT
(end of an existing file.  The transcript is a textual file, where each event has its own line.)SH
6120 27950 MT
(When you are finished making the transcript, call)SH
8 /Courier AF
8040 29163 MT
(inter:Close-Transcript)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 31461 MT
(To replay a transcript, use:)SH
8 /Courier AF
8040 32674 MT
(inter:Transcript-Events-From-File)SH
/Times-Italic SF
24360 XM
(filename window-list)SH
/Courier SF
31527 XM
(&key \050)SH
/Times-Italic SF
(wait-elapsed-time)SH
/Courier SF
40617 XM
(T\051)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 34095 MT
(The)SH
/Times-Italic SF
8270 XM
(filename)SH
/Times-Roman SF
12498 XM
(is the file to read from.)165 W
/Times-Italic SF
24284 XM
(Wait-elapsed-time)SH
/Times-Roman SF
32789 XM
(determines if the replay should wait for the)166 W
6120 35291 MT
(correct time so)
85 W( the replay goes about the same speed as the original user went, or else \050if NIL\051 whether)84 W
6120 36487 MT
(the replay should just go as fast as possible.  \050Each event in the transcript has a timestamp in it.\051)SH
6120 38785 MT
(It is)
5 W( important that the)6 W
/Times-Italic SF
16202 XM
(window-list)SH
/Times-Roman SF
21619 XM
(passed to)6 W
10 /Courier AF
25969 XM
(Transcript-Events-From-File)SH
11 /Times-Roman AF
42450 XM
(be windows that are the)6 W
6120 39981 MT
(same type and in the same order as the windows passed to)
37 W( the)36 W
10 /Courier AF
34060 XM
(Transcript-Events-To-File)SH
11 /Times-Roman AF
49371 XM
(call that)36 W
6120 41177 MT
(made the)
112 W( transcript.  Garnet maps each event from the transcript into the corresponding window in the)113 W
6120 42373 MT
(specified window-list.  The windows do not have)
220 W( to be in the same places \050all events are window-)219 W
6120 43569 MT
(relative\051, however.)SH
6120 45867 MT
(A typical example would be)
164 W( to create a bunch of windows, call)165 W
10 /Courier AF
36105 XM
(Transcript-Events-To-File)SH
11 /Times-Roman AF
(, do)165 W
6120 47063 MT
(some operations, call)12 W
10 /Courier AF
15748 XM
(Close-Transcript)SH
11 /Times-Roman AF
(, then sometime later,)
12 W( create new windows the same way, then)11 W
6120 48259 MT
(call)SH
10 /Courier AF
7983 XM
(Transcript-Events-From-File)SH
11 /Times-Roman AF
(.)SH
6120 50557 MT
(During playback, all mouse and keyboard)
170 W( events are ignored, except)171 W
10 /Courier AF
38245 XM
(inter:*Garnet-Break-Key*)SH
11 /Times-Roman AF
(,)SH
6120 51753 MT
(which is normally)
12 W( bound to)11 W
10 /Courier AF
18552 XM
(:F1)SH
11 /Times-Roman AF
(. This)
297 W( aborts the transcript playback.  Window refresh events are handled)11 W
6120 52949 MT
(while replaying, however.)SH
ES
%%Page: 279 60
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.1)
SH( Priority)
1800 W( Levels)SH
51386 XM
(Page 279)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(8. Advanced Features)SH
11 /Times-Roman AF
8280 10524 MT
(This chapter describes a number of special features that will help)
136 W( experienced Interactor users achieve)137 W
8280 11720 MT
(some necessary effects.  The features described in this chapter are:)SH
/Times-Italic SF
10780 13671 MT
(Priorities)SH
/Times-Roman SF
(: Interactors)
517 W( can be put at different priority levels, to help)
121 W( control which ones start and)120 W
11880 14867 MT
(stop with events.)SH
/Times-Italic SF
10780 16562 MT
(Modes)SH
/Times-Roman SF
(: The)
275 W( priority levels and the)SH
10 /Courier AF
26451 XM
(:active)SH
11 /Times-Roman AF
30926 XM
(slots can be used for local or global modes.)SH
/Times-Italic SF
10780 18257 MT
(Events)SH
/Times-Roman SF
(: The)275 W
10 /Courier AF
16553 XM
(event)SH
11 /Times-Roman AF
19828 XM
(structure that describes the user's event can be useful.)SH
/Times-Italic SF
10780 19952 MT
(Start-interactor)SH
/Times-Roman SF
18079 XM
(and)SH
/Times-Italic SF
20060 XM
(Abort-Interactor)SH
/Times-Roman SF
(: These)
511 W( functions can be used to explicitly start and stop an)118 W
11880 21148 MT
(interactor without waiting for its events.)SH
/Times-Italic SF
10780 22843 MT
(Special slots of interactors)107 W
/Times-Roman SF
(: There)
489 W( are a)
107 W( number of slots of interactors that are maintained by the)106 W
11880 24039 MT
(system that can be used by programmers in formulas or custom action routines.)SH
/Times-Italic SF
10780 25734 MT
(Multiple windows)SH
/Times-Roman SF
(: Interactors)
275 W( can be made to work over multiple windows.)SH
/Times-Italic SF
10780 27429 MT
(Waiting for interaction to complete)SH
/Times-Roman SF
(: To)
275 W( support synchronous interfaces.)SH
/Times-Italic SF
10780 29124 MT
(Custom Action Routines)316 W
/Times-Roman SF
(: Some)
907 W( advice about how)
316 W( to write your own action routines, when)317 W
11880 30320 MT
(necessary.)SH
14 /Times-Bold AF
8280 34138 MT
(8.1. Priority Levels)SH
11 /Times-Roman AF
8280 35334 MT
(Normally, when events arrive from the user, they are processed by)53 W
/Times-Italic SF
38396 XM
(all)SH
/Times-Roman SF
39885 XM
(the interactors that are waiting for)52 W
8280 36530 MT
(events. This)
275 W( means that if two interactors)
SH( are waiting for the same event \050e.g.)1 W
10 /Courier AF
42742 XM
(:leftdown)SH
11 /Times-Roman AF
(\051 they may both)1 W
8280 37726 MT
(start if the mouse location passes both of their)SH
10 /Courier AF
28779 XM
(:start-where)SH
11 /Times-Roman AF
(s.)SH
8280 40024 MT
(The interactors do not know about object covering, so that)
128 W( even if an object is covered by some other)127 W
8280 41220 MT
(object, the mouse can still be in that object.  For)
67 W( example, you might have an interactor that starts when)68 W
8280 42416 MT
(you press over the indicator of a scroll bar, and a different interactor that starts when you press on)
113 W( the)112 W
8280 43612 MT
(background of the scroll bar.  However, if)
42 W( these interactors both start with the same event, they will both)43 W
8280 44808 MT
(start when the user presses)
62 W( on the indicator, because it is also inside the background.  Priority levels can)61 W
8280 46004 MT
(be used to solve this problem.  The higher-priority interactors get to process)
88 W( events and run first, and if)89 W
8280 47200 MT
(they accept the event, then lower-priority interactors can be set up so they do not)
82 W( run.  Garnet normally)81 W
8280 48396 MT
(uses three priority levels, but you can but you can add more priority levels for your interactors as)
124 W( you)125 W
8280 49592 MT
(need them \050see below\051.)SH
8280 51890 MT
(By default, interactors wait at ``normal'' priority for their)
18 W( start event to happen, and then are elevated to a)17 W
8280 53086 MT
(higher priority)
55 W( while they are running.  This means that the stop event for the running interactor will not)56 W
8280 54282 MT
(be seen by other interactors.  The programmer)
45 W( has full control over the priorities of interactors, however.)44 W
8280 55478 MT
(There are two slots of interactors that control this:)SH
10 /Courier AF
8280 57429 MT
(:waiting-priority)SH
11 /Times-Roman AF
(- the priority of the interactor)
13 W( while waiting for its start event.  The default value is)14 W
10 /Courier AF
11880 58625 MT
(inter:normal-priority-level)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8280 60320 MT
(:running-priority)SH
11 /Times-Roman AF
(- the priority of the interactor while running)
182 W( \050waiting for the stop event\051.  The)181 W
11880 61516 MT
(default value is)SH
10 /Courier AF
18875 XM
(inter:running-priority-level)SH
11 /Times-Roman AF
(.)SH
8280 63814 MT
(There are a list of)
4 W( priority levels, each of which contains a list of interactors.  The events from the user are)5 W
8280 65010 MT
(first processed by all the interactors in the highest priority level.  All the interactors at)
26 W( this level are given)25 W
8280 66206 MT
(the event.  After they are finished, then lower)
88 W( level priorities may be given the event \050controlled by the)89 W
10 /Courier AF
8280 67402 MT
(:stop-when)SH
11 /Times-Roman AF
14591 XM
(slot of the priority level that has just finished running, see below\051.  Thus, all the interactors)35 W
8280 68598 MT
(at the same priority level get to process the events that any of them get.)SH
8280 70896 MT
(There is a list of priorities stored in the variable)71 W
10 /Courier AF
30190 XM
(inter:priority-level-list)SH
11 /Times-Roman AF
(. The)
419 W( first element of)72 W
ES
%%Page: 280 61
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 280)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(this list has the highest priority, and)
39 W( the second element has the second priority, etc.  This list is exported)38 W
6120 9151 MT
(so programs can use the standard list manipulation routines to modify it.)SH
6120 11449 MT
(The elements of this list must)
30 W( be instances of)31 W
10 /Courier AF
26467 XM
(inter:priority-level)SH
11 /Times-Roman AF
(, which is a KR schema with the)31 W
6120 12645 MT
(following slots:)SH
10 /Courier AF
6120 14596 MT
(:interactors)SH
11 /Times-Roman AF
(- List of interactors at this priority level.)
66 W( This)
405 W( slot is maintained automatically based on)65 W
9720 15792 MT
(the values in the)
23 W( interactor's)24 W
10 /Courier AF
22574 XM
(:waiting-priority)SH
11 /Times-Roman AF
33073 XM
(and)SH
10 /Courier AF
34960 XM
(:running-priority)SH
11 /Times-Roman AF
45459 XM
(slots.)SH
/Times-Italic SF
48350 XM
(Do not set)24 W
9720 16988 MT
(or modify this slot directly.)SH
10 /Courier AF
6120 18683 MT
(:active)SH
11 /Times-Roman AF
(- Determines whether this priority level and all the interactors in it are active.)
23 W( The)
320 W( default value)22 W
9720 19879 MT
(is T. For an)
133 W( interactor to be usable, both the interactor's)134 W
10 /Courier AF
35964 XM
(:active)SH
11 /Times-Roman AF
40573 XM
(slot and the priority-level's)134 W
10 /Courier AF
9720 21075 MT
(:active)SH
11 /Times-Roman AF
14218 XM
(slot must be non-NIL.  If this slot is NIL, then)
23 W( this level is totally ignored, including its)22 W
10 /Courier AF
9720 22271 MT
(:stop-when)SH
11 /Times-Roman AF
16216 XM
(field \050see below\051.  The)
221 W( value of the)222 W
10 /Courier AF
33655 XM
(:active)SH
11 /Times-Roman AF
38352 XM
(slot can be a formula, but if it)222 W
9720 23467 MT
(changes to be NIL, the)
90 W( interactors will not be automatically aborted.  Use the)89 W
10 /Courier AF
45120 XM
(change-active)SH
11 /Times-Roman AF
9720 24663 MT
(function to get the priority)
11 W( level and all its interactors to be aborted immediately \050see section 8.2\051.)12 W
9720 25859 MT
(Note: It is a really bad idea to make the)149 W
10 /Courier AF
28804 XM
(:active)SH
11 /Times-Roman AF
33427 XM
(slot of any)148 W
/Times-Italic SF
38790 XM
(running)SH
/Times-Roman SF
(-priority levels be NIL,)148 W
9720 27055 MT
(since interactors will start but never complete.)SH
10 /Courier AF
6120 28750 MT
(:stop-when)SH
11 /Times-Roman AF
(- This slot controls what happens after the event has been processed by the interactors)
7 W( at this)8 W
9720 29946 MT
(priority level.  This slot can take one of three values:)SH
10 /Courier AF
9720 31897 MT
(:always)SH
11 /Times-Roman AF
(- Always)
176 W( stop after handling this level.  This means that the event is never seen by)175 W
13320 33093 MT
(interactors at lower levels.)
66 W( Pushing)
409 W( a new priority level with)67 W
10 /Courier AF
41120 XM
(:stop-when)SH
11 /Times-Roman AF
47462 XM
(as)SH
10 /Courier AF
48720 XM
(:always)SH
11 /Times-Roman AF
13320 34289 MT
(on the front of)87 W
10 /Courier AF
20266 XM
(:priority-level-list)SH
11 /Times-Roman AF
32627 XM
(is a convenient way to set up a special mode)86 W
13320 35485 MT
(where the interactors)
258 W( in the new priority level are processed and all other ones are)259 W
13320 36681 MT
(ignored. The)
345 W( priority level)
35 W( can be popped or de-activated \050by setting its)34 W
10 /Courier AF
45656 XM
(:active)SH
11 /Times-Roman AF
50165 XM
(slot to)34 W
13320 37877 MT
(NIL\051 to turn this mode off.)SH
10 /Courier AF
9720 39073 MT
(:if-any)SH
11 /Times-Roman AF
(- If any of the interactors at this level accept the event, then do not pass the event)
37 W( down)38 W
13320 40269 MT
(to lower levels.  If no interactors)
86 W( at this level want the event, then)85 W
/Times-Italic SF
43596 XM
(do)SH
/Times-Roman SF
45056 XM
(pass it through to)85 W
13320 41465 MT
(lower levels.  This is used, for example, for the)498 W
10 /Courier AF
39285 XM
(:stop-when)SH
11 /Times-Roman AF
46058 XM
(of the default)499 W
10 /Courier AF
13320 42661 MT
(running-priority-level)SH
11 /Times-Roman AF
26827 XM
(to keep the stop-event)
32 W( of a running interactor from starting)31 W
13320 43857 MT
(a different interactor.)SH
10 /Courier AF
9720 45053 MT
(NIL)SH
11 /Times-Roman AF
11823 XM
(- If)28 W
10 /Courier AF
13527 XM
(:stop-when)SH
11 /Times-Roman AF
19830 XM
(is NIL, then)
28 W( the events are always passed through.  This might be useful if)29 W
13320 46249 MT
(you want to control)
96 W( the order of interactors running, or if you want to set the)95 W
10 /Courier AF
48720 XM
(:active)SH
11 /Times-Roman AF
13320 47445 MT
(slots of the priority levels independently.)SH
10 /Courier AF
6120 49396 MT
(:sorted-interactors)SH
11 /Times-Roman AF
17795 XM
(- See section 8.1.2.)SH
6120 51694 MT
(Three priority levels are supplied by default.  These are:)SH
10 /Courier AF
8320 53645 MT
(inter:running-priority-level)SH
11 /Times-Roman AF
(- The highest default priority is)
9 W( for interactors that are running.)10 W
11620 54841 MT
(It is defined with)SH
10 /Courier AF
19380 XM
(:stop-when)SH
11 /Times-Roman AF
25655 XM
(as)SH
10 /Courier AF
26846 XM
(:if-any)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8320 56536 MT
(inter:high-priority-level)SH
11 /Times-Roman AF
(- A high-priority level for use by programs.)
204 W( It)
681 W( is defined with)203 W
10 /Courier AF
11620 57732 MT
(:stop-when)SH
11 /Times-Roman AF
17895 XM
(as)SH
10 /Courier AF
19086 XM
(:if-any)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8320 59427 MT
(inter:normal-priority-level)SH
11 /Times-Roman AF
(- The normal priority for use by interactors that are)
113 W( waiting to)114 W
11620 60623 MT
(run.)SH
10 /Courier AF
13911 XM
(:Stop-when)SH
11 /Times-Roman AF
20186 XM
(is NIL.)SH
6120 62921 MT
(The initial value of)SH
10 /Courier AF
14796 XM
(priority-level-list)SH
11 /Times-Roman AF
26471 XM
(is:)SH
8 /Courier AF
8040 64086 MT
(\050list running-priority-level high-priority-level normal-priority-level\051)SH
11 /Times-Roman AF
6120 66384 MT
(The programmer can create new priority levels)
126 W( \050using)125 W
10 /Courier AF
31070 XM
(\050create-instance NIL inter:priority-)125 W
6120 67580 MT
(level ...\051)36 W
11 /Times-Roman AF
12467 XM
(and add them)
36 W( to this list \050using the standard CommonLisp list manipulation routines\051.  The)37 W
6120 68776 MT
(new priorities can be at any level.)
14 W( Priorities)
301 W( can also be removed at any time, but)13 W
/Times-Italic SF
42422 XM
(do not remove the three)13 W
6120 69972 MT
(default priority levels)20 W
/Times-Roman SF
(. There)
315 W( is nothing special about the pre-defined)
20 W( priorities.  They are just used as the)21 W
6120 71168 MT
(defaults for interactors that do)
45 W( not define a waiting and running priority.  For example, it is acceptable to)44 W
ES
%%Page: 281 62
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.2)
SH( Modes)
1800 W( and Change-Active)SH
51386 XM
(Page 281)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(use the pre-defined)42 W
10 /Courier AF
17109 XM
(inter:running-priority-level)SH
11 /Times-Roman AF
34226 XM
(as the)42 W
10 /Courier AF
37120 XM
(:waiting-priority)SH
11 /Times-Roman AF
47637 XM
(for an interactor,)42 W
8280 9151 MT
(or to use)SH
10 /Courier AF
12343 XM
(inter:high-priority-level)SH
11 /Times-Roman AF
27618 XM
(as the)SH
10 /Courier AF
30428 XM
(:running-priority)SH
11 /Times-Roman AF
40903 XM
(of another interactor.)SH
8280 11449 MT
(It is)
309 W( acceptable for an interactor to use the same priority level for its)308 W
10 /Courier AF
42709 XM
(:waiting-priority)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
8280 12645 MT
(:running-priority)SH
11 /Times-Roman AF
(, but it is a bad idea for the)382 W
10 /Courier AF
33954 XM
(:running-priority)SH
11 /Times-Roman AF
44811 XM
(to be)382 W
/Times-Italic SF
48020 XM
(lower)SH
/Times-Roman SF
51184 XM
(than the)383 W
10 /Courier AF
8280 13841 MT
(:waiting-priority)SH
11 /Times-Roman AF
(. Therefore,)
2461 W( if you create)
1093 W( a new priority level above the)1092 W
10 /Courier AF
8280 15037 MT
(running-priority-level)SH
11 /Times-Roman AF
21840 XM
(and use it as the)85 W
10 /Courier AF
29566 XM
(:waiting-priority)SH
11 /Times-Roman AF
40126 XM
(of an interactor, be sure to)
85 W( create)86 W
8280 16233 MT
(an even higher priority level for use as the)188 W
10 /Courier AF
28817 XM
(:running-priority)SH
11 /Times-Roman AF
39480 XM
(of the interactor)
188 W( \050or use the same)187 W
8280 17429 MT
(priority level as both the waiting and running priorities\051.)SH
12 /Times-Bold AF
8280 21113 MT
(8.1.1. Example)SH
11 /Times-Roman AF
8280 22309 MT
(Consider the scroll bar.  The)
82 W( interactor that moves the indicator might have higher priority than the one)83 W
8280 23505 MT
(that operates on the background.)SH
8 /Courier AF
10200 24670 MT
(\050create-instance NIL Inter:Move-Grow-Interactor)SH
11640 25535 MT
(\050:window MYWINDOW\051)SH
11640 26400 MT
(\050:start-where \050list :in-box INDICATOR\051\051)SH
11640 27265 MT
(\050:running-where \050list :in-box SLIDER-SHELL\051\051)SH
11640 28130 MT
(\050:outside :last\051)SH
11640 28995 MT
(\050:attach-point :center\051)SH
11640 29860 MT
(\050:waiting-priority inter:high-priority-level\051\051)SH
10200 31590 MT
(\050create-instance NIL Inter:Move-Grow-Interactor)SH
11640 32455 MT
(\050:continuous NIL\051)SH
11640 33320 MT
(\050:window MYWINDOW\051)SH
11640 34185 MT
(\050:start-event :leftdown\051)SH
11640 35050 MT
(\050:start-where \050list :in-box SLIDER-SHELL\051\051)SH
11640 35915 MT
(\050:obj-to-change indicator\051)SH
11640 36780 MT
(\050:attach-point :center\051\051)SH
12 /Times-Bold AF
8280 40464 MT
(8.1.2. Sorted-Order Priority Levels)SH
11 /Times-Roman AF
8280 41660 MT
(As an experiment, and to support the Marquise tool which is in progress, there is an alternative)
102 W( way to)101 W
8280 42856 MT
(control which interactors run.  You can)
827 W( mark an interactor priority level as having)828 W
10 /Courier AF
8280 44052 MT
(:sorted-interactors)SH
11 /Times-Roman AF
(. When)
363 W( this slot of a priority level)
44 W( is non-NIL, then the interactors in that level)43 W
8280 45248 MT
(run in sorted order by)
14 W( the number in the)15 W
10 /Courier AF
26220 XM
(:sort-order)SH
11 /Times-Roman AF
33110 XM
(slot of each interactor \050which can be an integer or)15 W
8280 46444 MT
(float, negative or positive\051.  The lowest numbered interactor runs first.  Then, if that interactor has)
14 W( a value)13 W
8280 47640 MT
(in its)92 W
10 /Courier AF
10910 XM
(:exclusivity-value)SH
11 /Times-Roman AF
22077 XM
(slot, then no other interactor with the same value in that slot)
92 W( will be run,)93 W
8280 48836 MT
(but interactors with a different value in that)
42 W( slot will be run in their sorted order.  Interactors with NIL in)41 W
8280 50032 MT
(their)SH
10 /Courier AF
10622 XM
(:sort-order)SH
11 /Times-Roman AF
17548 XM
(and/or)SH
10 /Courier AF
20684 XM
(:exclusivity-value)SH
11 /Times-Roman AF
31810 XM
(slot will run after all other)
51 W( interactors are run.  Note)52 W
8280 51228 MT
(that multiple interactors with the same)
153 W( number in the)152 W
10 /Courier AF
33208 XM
(:sort-order)SH
11 /Times-Roman AF
40235 XM
(slot will run in an indeterminate)152 W
8280 52424 MT
(order \050or if they have the same)110 W
10 /Courier AF
22823 XM
(:exclusivity-value)SH
11 /Times-Roman AF
(, then only one)
110 W( of them will run, but no telling)111 W
8280 53620 MT
(which one\051.  The)6 W
10 /Courier AF
16030 XM
(:stop-when)SH
11 /Times-Roman AF
22310 XM
(slot of the priority-level works as always to determine what happens when)5 W
8280 54816 MT
(the interactors in that level are finished.)SH
14 /Times-Bold AF
8280 58634 MT
(8.2. Modes and Change-Active)SH
11 /Times-Roman AF
8280 59830 MT
(In order to implement ``Modes'' in a user interface, you need to have)
SH( interactors turn off sometimes.  This)1 W
8280 61026 MT
(can be done in several ways.  Section 8.2.1 below discusses how to)
39 W( restrict all interactor input to a single)38 W
8280 62222 MT
(window \050like a dialog box\051 while suspending the interactors in all other windows.)
97 W( Section)
470 W( 8.2.2 below)98 W
8280 63418 MT
(discusses how to turn off particular interactors or groups of interactors.)SH
12 /Times-Bold AF
8280 67102 MT
(8.2.1. Modal Windows)SH
11 /Times-Roman AF
8280 68298 MT
(When the)47 W
10 /Courier AF
12894 XM
(:modal-p)SH
11 /Times-Roman AF
18016 XM
(slot of an)47 W
10 /Courier AF
22526 XM
(interactor-window)SH
11 /Times-Roman AF
33048 XM
(is T, then interaction in all)
47 W( other Garnet windows)46 W
8280 69494 MT
(will be suspended until the window goes away \050e.g., the user clicks an "OK" button\051.  Any input directed)35 W
8280 70690 MT
(to a non-modal window will cause a beep.)
80 W( If)
434 W( more than one modal window is visible at the same time,)79 W
8280 71886 MT
(then input can be directed at any of)
67 W( them \050this allows stacking of modal windows\051.  The)68 W
10 /Courier AF
48347 XM
(:modal-p)SH
11 /Times-Roman AF
53490 XM
(slot)SH
ES
%%Page: 282 63
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 282)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(can be calculated by a formula.  Typically, however, the)46 W
10 /Courier AF
31593 XM
(:modal-p)SH
11 /Times-Roman AF
36713 XM
(slot will stay T, and you will simply)45 W
6120 9151 MT
(set the window to be visible or invisible.)SH
6120 11449 MT
(The)SH
10 /Courier AF
8127 XM
(:modal-p)SH
11 /Times-Roman AF
13224 XM
(slot is often used in conjunction with)22 W
10 /Courier AF
29909 XM
(wait-interaction-complete)SH
11 /Times-Roman AF
(, a function which)23 W
6120 12645 MT
(suspends all lisp activity until)40 W
10 /Courier AF
19675 XM
(interaction-complete)SH
11 /Times-Roman AF
31990 XM
(is called.  An example application would make)40 W
6120 13841 MT
(a modal window visible, then call)258 W
10 /Courier AF
22791 XM
(wait-interaction-complete)SH
11 /Times-Roman AF
(. The)
791 W( user would be unable to)259 W
6120 15037 MT
(interact with the rest of)
52 W( the interface until the modal window was addressed.  Then, when the user clicks)51 W
6120 16233 MT
(on the "OK" button in the modal window, the window becomes invisible)
46 W( and)47 W
10 /Courier AF
40920 XM
(interaction-complete)SH
11 /Times-Roman AF
6120 17429 MT
(is called.  Interaction then resumes)
281 W( as usual in the interface.  See section 8.7 for a discussion of)280 W
10 /Courier AF
6120 18625 MT
(wait-interaction-complete)SH
11 /Times-Roman AF
(.)SH
6120 20923 MT
(The)SH
10 /Courier AF
8169 XM
(error-gadget)SH
11 /Times-Roman AF
15709 XM
(and)SH
10 /Courier AF
17637 XM
(query-gadget)SH
11 /Times-Roman AF
25177 XM
(dialog boxes use this feature exactly as in the example above.)65 W
6120 22119 MT
(They ensure that the user responds to the error message before continuing any action in)
116 W( the rest of the)115 W
6120 23315 MT
(interface. The)
457 W( property sheet)
91 W( gadget display routines and the)92 W
10 /Courier AF
34189 XM
(gilt:show-in-window)SH
11 /Times-Roman AF
45956 XM
(routine have an)92 W
6120 24511 MT
(optional modal parameter which)
8 W( uses this feature.  You may be able to implement your design using these)7 W
6120 25707 MT
(gadgets and routines, rather than using the)SH
10 /Courier AF
24998 XM
(:modal-p)SH
11 /Times-Roman AF
30073 XM
(slot explicitly.)SH
12 /Times-Bold AF
6120 29391 MT
(8.2.2. Change-Active)SH
11 /Times-Roman AF
6120 30587 MT
(Interactors can either)
47 W( be turned on and off individually using the)48 W
10 /Courier AF
35267 XM
(:active)SH
11 /Times-Roman AF
39790 XM
(slot in each interactor, or you)48 W
6120 31783 MT
(can put a group of interactors)
79 W( together in a priority level \050see section 8.1\051 and turn on and off the entire)78 W
6120 32979 MT
(group using the priority level's)SH
10 /Courier AF
20021 XM
(:active)SH
11 /Times-Roman AF
24496 XM
(slot.)SH
6120 35277 MT
(The)SH
10 /Courier AF
8445 XM
(:active)SH
11 /Times-Roman AF
13260 XM
(slot of an interactor)
340 W( may be)341 W
10 /Courier AF
27643 XM
(s-value)SH
11 /Times-Roman AF
('d explicitly, causing the interactor to abort)341 W
6120 36473 MT
(immediately. But)
275 W( to change the activity of a priority level, you should use the function)SH
10 /Courier AF
44676 XM
(Change-Active)SH
11 /Times-Roman AF
(:)SH
8 /Courier AF
8040 37686 MT
(inter:Change-Active)SH
/Times-Italic SF
17640 XM
(an-interactor-or-priority-level new-value)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 39107 MT
(This makes the interactor or priority-level be)
55 W( active \050if)54 W
/Times-Italic SF
30833 XM
(new-value)SH
/Times-Roman SF
35682 XM
(is T\051 or inactive \050if)54 W
/Times-Italic SF
44535 XM
(new-value)SH
/Times-Roman SF
49384 XM
(is NIL\051.)54 W
6120 40303 MT
(When)SH
10 /Courier AF
9152 XM
(change-active)SH
11 /Times-Roman AF
17358 XM
(makes a priority)
131 W( level not active, then all interactors on the priority level will)132 W
6120 41499 MT
(abort immediately.  Interactors are not guaranteed to abort immediately)
65 W( if their priority level's)64 W
10 /Courier AF
48720 XM
(:active)SH
11 /Times-Roman AF
6120 42695 MT
(slot is simply set to NIL.)SH
14 /Times-Bold AF
6120 46513 MT
(8.3. Events)SH
11 /Times-Roman AF
6120 47709 MT
(Some functions, such as)130 W
10 /Courier AF
17547 XM
(Start-Interactor)SH
11 /Times-Roman AF
27552 XM
(\050see section 8.4\051 take an)
130 W( ``event'' as a parameter.  You)131 W
6120 48905 MT
(might also want to look at an event to provide extra features.)SH
10 /Courier AF
6120 51203 MT
(Inter:Event)SH
11 /Times-Roman AF
13092 XM
(is an interactor-defined structure \050a regular Lisp structure, not a KR schema\051, and is not)96 W
6120 52399 MT
(the same as the events created by the X window manager)
SH( or Mac QuickDraw.  Normally, programs do not)1 W
6120 53595 MT
(need to ever look at the event structure, but it is exported from interactors in case you need it.)SH
10 /Courier AF
6120 55893 MT
(Inter:Event)SH
11 /Times-Roman AF
12995 XM
(has the following fields:)SH
10 /Courier AF
8620 57844 MT
(Window)SH
11 /Times-Roman AF
(- The Interactor window that the event occurred in.)SH
10 /Courier AF
8620 59539 MT
(Char)SH
11 /Times-Roman AF
(- The Lisp character that the event corresponds to.  If)
4 W( this is a mouse event, then the)3 W
10 /Courier AF
48226 XM
(Char)SH
11 /Times-Roman AF
50904 XM
(field)SH
9720 60735 MT
(will actually hold a keyword like)SH
10 /Courier AF
24506 XM
(:leftdown)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8620 62430 MT
(Code)SH
11 /Times-Roman AF
(- The X/11 or MCL internal code for the event.)SH
10 /Courier AF
8620 64125 MT
(Mousep)SH
11 /Times-Roman AF
(- Whether the event is a mouse event or not.)SH
10 /Courier AF
8620 65820 MT
(Downp)SH
11 /Times-Roman AF
(- If a mouse event, whether it is a down-transition or not.)SH
10 /Courier AF
8620 67515 MT
(X)SH
11 /Times-Roman AF
(- The X position of the mouse when the event happened.)SH
10 /Courier AF
8620 69210 MT
(Y)SH
11 /Times-Roman AF
(- The Y position of the mouse when the event happened.)SH
10 /Courier AF
8620 70905 MT
(Timestamp)SH
11 /Times-Roman AF
(- The X/11 or MCL timestamp for the event.)SH
ES
%%Page: 283 64
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.4)
SH( Starting)
1800 W( and Stopping Interactors Explicitly)SH
51386 XM
(Page 283)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Each of the fields has a corresponding accessor and setf function:)SH
8 /Courier AF
10200 9120 MT
(\050event-window event\051)
SH( \050setf)
1920 W( \050event-window event\051 w\051)SH
10200 9985 MT
(\050event-char event\051)
SH( \050setf)
2880 W( \050event-char event\051 c\051)SH
10200 10850 MT
(\050event-code event\051)
SH( \050setf)
2880 W( \050event-code event\051 c\051)SH
10200 11715 MT
(\050event-mousep event\051)
SH( \050setf)
1920 W( \050event-mousep event\051 T\051)SH
10200 12580 MT
(\050event-downp event\051)
SH( \050setf)
2400 W( \050event-downp event\051 T\051)SH
10200 13445 MT
(\050event-x event\051)
SH( \050setf)
4320 W( \050event-x event\051 0\051)SH
10200 14310 MT
(\050event-y event\051)
SH( \050setf)
4320 W( \050event-y event\051 0\051)SH
10200 15175 MT
(\050event-timestamp event\051  \050setf \050event-timestamp event\051 0\051)SH
11 /Times-Roman AF
8280 17473 MT
(You can)
1 W( create new events \050for example, to pass to the)2 W
10 /Courier AF
32611 XM
(Start-Interactor)SH
11 /Times-Roman AF
42488 XM
(function\051, using the standard)2 W
8280 18669 MT
(structure creation function)SH
10 /Courier AF
20161 XM
(Make-Event)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 19882 MT
(inter:Make-Event &key \050)SH
/Times-Italic SF
(window)SH
/Courier SF
24210 XM
(NIL\051 \050)SH
/Times-Italic SF
(char)SH
/Courier SF
29036 XM
(:leftdown\051 \050)SH
/Times-Italic SF
(code)SH
/Courier SF
36786 XM
(1\051 \050)SH
/Times-Italic SF
(mousep)SH
/Courier SF
41630 XM
(T\051)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
21720 20747 MT
(\050)SH
/Times-Italic SF
(downp)SH
/Courier SF
24814 XM
(T\051 \050)SH
/Times-Italic SF
(x)SH
/Courier SF
27569 XM
(0\051 \050)SH
/Times-Italic SF
(y)SH
/Courier SF
30324 XM
(0\051 \050)SH
/Times-Italic SF
(timestamp)SH
/Courier SF
36012 XM
(0\051\051)SH
11 /Times-Roman AF
8280 23045 MT
(The last event that was processed by the interactors system is)
738 W( stored in the variable)737 W
10 /Courier AF
8280 24241 MT
(Inter:*Current-Event*)SH
11 /Times-Roman AF
(. This)
391 W( is often useful for functions that need to know)
58 W( where the mouse is or)59 W
8280 25437 MT
(what actual mouse or keyboard key was hit.  Note that two of the fields of)
57 W( this event \050window and char\051)56 W
8280 26633 MT
(are copied into the slots of the interactor \050see section 8.5\051 and can be more easily accessed from there.)SH
12 /Times-Bold AF
8280 30317 MT
(8.3.1. Example of using an event)SH
11 /Times-Roman AF
8280 31513 MT
(The two-point interactor calls the final-function with a NIL parameter if)
107 W( the rectangle is smaller than a)108 W
8280 32709 MT
(specified size \050see section 6.4.1.3\051.  This feature can be used to allow the end user to)
22 W( pick an object under)21 W
8280 33905 MT
(the mouse if the user presses and releases, but to select everything)
90 W( inside a rectangle if the user presses)91 W
8280 35101 MT
(and moves \050in this case, moves more than 5 pixels\051.)SH
8280 37399 MT
(Assume the objects to be selected are stored in the aggregate)SH
10 /Courier AF
35249 XM
(all-obj-agg)SH
11 /Times-Roman AF
(.)SH
8 /Courier AF
10200 38564 MT
(\050create-instance 'SELECT-POINT-OR-BOX Inter:Two-Point-Interactor)SH
11160 39429 MT
(\050:start-where T\051)SH
11160 40294 MT
(\050:start-event :leftdown\051)SH
11160 41159 MT
(\050:abort-if-too-small T\051)SH
11160 42024 MT
(\050:min-width 5\051)SH
11160 42889 MT
(\050:min-height 5\051)SH
11160 43754 MT
(\050:line-p NIL\051)SH
11160 44619 MT
(\050:flip-if-change-sides T\051)SH
11160 45484 MT
(\050:final-function)SH
11640 46349 MT
(#'\050lambda \050an-interactor final-point-list\051)SH
13560 47214 MT
(\050if \050null final-point-list\051)SH
15480 48079 MT
(;)SH
/Times-Italic SF
16440 XM
(then select object at point.  Get point from)SH
/Courier SF
15480 48944 MT
(;)SH
/Times-Italic SF
16640 XM
(the *Current-event* structure, and use it in the)SH
/Courier SF
15480 49809 MT
(;)SH
/Times-Italic SF
16640 XM
(standard point-to-component routine.)SH
/Courier SF
15480 50674 MT
(\050setf selected-object)SH
18360 51539 MT
(\050opal:point-to-component ALL-OBJ-AGG)SH
30360 52404 MT
(\050inter:event-x inter:*Current-event*\051)SH
30360 53269 MT
(\050inter:event-y inter:*Current-event*\051\051\051)SH
15480 54134 MT
(;)SH
/Times-Italic SF
16440 XM
(else we have to find all objects inside the rectangle.)SH
/Courier SF
15480 54999 MT
(;)SH
/Times-Italic SF
16640 XM
(There is no standard function to do this.)SH
/Courier SF
15480 55864 MT
(\050setf selected-object)SH
18360 56729 MT
(\050My-Find-Objs-In-Rectangle ALL-OBJ-AGG final-point-list\051\051\051\051\051\051)SH
14 /Times-Bold AF
8280 60547 MT
(8.4. Starting and Stopping Interactors Explicitly)SH
11 /Times-Roman AF
8280 61743 MT
(Normally an interactor will start operating \050go into the ``running'' state\051 after its start-event)
27 W( happens over)26 W
8280 62939 MT
(its start-where.  However, sometimes it is useful to explicitly start an interactor without waiting for its)122 W
8280 64135 MT
(start event.  You can do this using the function)68 W
10 /Courier AF
29765 XM
(Start-interactor)SH
11 /Times-Roman AF
(. For)
411 W( example,)
68 W( if a menu selection)67 W
8280 65331 MT
(should cause a sub-menu to start operating, or if after creating a new rectangle you want to)
65 W( immediately)66 W
8280 66527 MT
(start editing a text string that is the label for that rectangle.)SH
8 /Courier AF
10200 67740 MT
(inter:Start-Interactor)SH
/Times-Italic SF
21240 XM
(an-interactor)SH
/Courier SF
25984 XM
(&optional \050)SH
/Times-Italic SF
(event)SH
/Courier SF
33431 XM
(T\051)SH
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 70038 MT
(This function does nothing if the interactor is already running or if it is not active.  If an event is passed)64 W
8280 71234 MT
(in, then this is used as the x and y location to start with.  This may be important for selecting)
8 W( which object)9 W
ES
%%Page: 284 65
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 284)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(the interactor operates on, for example)
308 W( if the)307 W
10 /Courier AF
28402 XM
(:start-where)SH
11 /Times-Roman AF
36184 XM
(of the interactor is)307 W
10 /Courier AF
45720 XM
(\050:element-of)SH
6120 9151 MT
(<agg>\051)SH
11 /Times-Roman AF
(, the choice of which element is made based on the value of x and y in the event.)
10 W( \050See)
296 W( section 8.3)11 W
6120 10347 MT
(for a description of the event\051.)
160 W( If)
594 W( the event parameter is T \050the default\051, then the last event that was)159 W
6120 11543 MT
(processed is)
42 W( re-used.  The event is also used to calculate the appropriate default stop event \050needed if the)43 W
6120 12739 MT
(start-event is a list or something like)52 W
10 /Courier AF
22769 XM
(:any-mousedown)SH
11 /Times-Roman AF
31496 XM
(and the stop-event is not supplied\051.  If the event)52 W
6120 13935 MT
(is specified as NIL or the x and y)
64 W( in the event do not pass)65 W
10 /Courier AF
32594 XM
(:start-where)SH
11 /Times-Roman AF
(, the interactor is still started,)65 W
6120 15131 MT
(but the initial object will be NIL, which might be a problem)
263 W( \050especially for button-interactors, for)262 W
6120 16327 MT
(example\051. NOTE:)
887 W( If you want the interactor to never start by itself,)
306 W( then its)307 W
10 /Courier AF
44222 XM
(:start-where)SH
11 /Times-Roman AF
52004 XM
(or)SH
10 /Courier AF
6120 17523 MT
(:start-event)SH
11 /Times-Roman AF
13595 XM
(can be set to NIL.)SH
6120 19821 MT
(Examples of using)SH
10 /Courier AF
14583 XM
(start-interactor)SH
11 /Times-Roman AF
24458 XM
(are in the file)SH
10 /Courier AF
30566 XM
(demo-sequence.lisp)SH
11 /Times-Roman AF
(.)SH
6120 22119 MT
(Similarly, it is sometimes useful to abort an interactor explicitly.  This can be done with the function:)SH
8 /Courier AF
8040 23332 MT
(inter:Abort-Interactor)SH
/Times-Italic SF
19080 XM
(an-interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 24753 MT
(If the interactor is running, it is aborted \050as if the abort event had occurred\051.)SH
10 /Courier AF
6120 27051 MT
(Stop-Interactor)SH
11 /Times-Roman AF
15395 XM
(can be called to stop an interactor as if the stop event had happened.)SH
8 /Courier AF
8040 28264 MT
(inter:Stop-Interactor)SH
/Times-Italic SF
18600 XM
(an-interactor)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 29685 MT
(It reuses the last object the interactor was operating on, and the current event is ignored.  This function)
34 W( is)33 W
6120 30881 MT
(useful if you want to have the interactor stopped due to some other external action.  For example, to)
SH( stop a)1 W
6120 32077 MT
(text-interactor when the user chooses a menu item,)
51 W( simply call stop-interactor on the text-interactor from)50 W
6120 33273 MT
(the final-function of the menu.)SH
14 /Times-Bold AF
6120 37091 MT
(8.5. Special slots of interactors)SH
11 /Times-Roman AF
6120 38287 MT
(There are a)
271 W( number of slots of interactors that are maintained by the system that can be used by)272 W
6120 39483 MT
(programmers in formulas or custom action routines.  These are:)SH
10 /Courier AF
6120 41434 MT
(:first-obj-over)SH
11 /Times-Roman AF
15420 XM
(- this is set to the)
25 W( object that is returned from)24 W
10 /Courier AF
35700 XM
(:start-where)SH
11 /Times-Roman AF
(. This)
323 W( might be useful)24 W
9720 42630 MT
(if you want)
70 W( a formula in the)71 W
10 /Courier AF
22770 XM
(:obj-to-change)SH
11 /Times-Roman AF
31516 XM
(slot that will depend on which object is pressed)71 W
9720 43826 MT
(on \050see the examples below and in section 6.6.4.2\051.  Note that if the)98 W
10 /Courier AF
41028 XM
(:start-where)SH
11 /Times-Roman AF
48601 XM
(is T, then)97 W
10 /Courier AF
9720 45022 MT
(:first-obj-over)SH
11 /Times-Roman AF
19053 XM
(will be)
58 W( T, rather than an object.  The value in)59 W
10 /Courier AF
39830 XM
(:first-obj-over)SH
11 /Times-Roman AF
49164 XM
(does not)59 W
9720 46218 MT
(change as the interactor is running \050it is only set once at the beginning\051.)SH
10 /Courier AF
6120 47913 MT
(:current-obj-over)SH
11 /Times-Roman AF
16595 XM
(- this slot is set with the object that the mouse was last over \050see section 6.1.1.3\051.)SH
10 /Courier AF
6120 49608 MT
(:current-window)SH
11 /Times-Roman AF
15420 XM
(- this is set with)
25 W( the actual window of the last \050or current\051 input event. This might be)24 W
9720 50804 MT
(useful for multi-window interactors \050see)
324 W( section 8.6\051.  The)325 W
10 /Courier AF
38574 XM
(:current-window)SH
11 /Times-Roman AF
48174 XM
(slot is set)325 W
9720 52000 MT
(repeatedly while the interactor is running.)SH
10 /Courier AF
6120 53695 MT
(:start-char)SH
11 /Times-Roman AF
12996 XM
(- The Lisp character \050or keyword)
1 W( if a mouse event\051 of the actual start event.  This might be)SH
9720 54891 MT
(useful, for example, if the start event can be one of a)
116 W( set of things, and some parameter of the)117 W
9720 56087 MT
(interactor depends on which one.)
47 W( See)
367 W( the example below.  The value in)46 W
10 /Courier AF
42256 XM
(:start-char)SH
11 /Times-Roman AF
49177 XM
(does not)46 W
9720 57283 MT
(change as the interactor is running \050it is only set once at the beginning\051.)SH
12 /Times-Bold AF
6120 60967 MT
(8.5.1. Example of using the special slots)SH
11 /Times-Roman AF
6120 62163 MT
(This example uses two slots)
133 W( of the interactor in formulas.  A formula in the)134 W
10 /Courier AF
41486 XM
(:grow-p)SH
11 /Times-Roman AF
46095 XM
(slot determines)134 W
6120 63359 MT
(whether to move or grow an object based on whether the user starts with a left)
137 W( or right mouse button)136 W
6120 64555 MT
(\050)SH
10 /Courier AF
(:start-char)SH
11 /Times-Roman AF
(\051. A)
545 W( formula in the)135 W
10 /Courier AF
22663 XM
(:line-p)SH
11 /Times-Roman AF
27273 XM
(slot decides whether to change this object as a line or)
135 W( a)136 W
6120 65751 MT
(rectangle based on whether the object started on \050)194 W
10 /Courier AF
(:first-obj-over)SH
11 /Times-Roman AF
(\051 is a line or)
194 W( not.  Similarly, a)193 W
6120 66947 MT
(formula in the feedback slot chooses the correct type of object \050line or rectangle\051.)SH
6120 69245 MT
(The application creates a set of objects and stores them in an aggregate called)SH
10 /Courier AF
40510 XM
(all-object-agg)SH
11 /Times-Roman AF
(.)SH
ES
%%Page: 285 66
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.7)
SH( Wait-Interaction-Complete)1800 W
51386 XM
(Page 285)SH
46800 50 8280 4486 UL
8 /Courier AF
10200 7699 MT
(\050create-instance 'MOVE-OR-GROWER Inter:Move-Grow-Interactor)SH
11640 8564 MT
(\050:start-event '\050:leftdown :rightdown\051\051  ;)SH
/Times-Italic SF
(either left or right)SH
/Courier SF
11640 9429 MT
(\050:grow-p \050o-formula \050eq :rightdown \050gvl :start-char\051\051\051\051 ;)SH
/Times-Italic SF
(grow if right button)SH
/Courier SF
11640 10294 MT
(\050:line-p \050o-formula \050is-a-p \050gvl :first-obj-over\051 opal:line\051\051\051)SH
11640 11159 MT
(\050:feedback-obj \050o-formula)SH
19320 12024 MT
(\050if \050gvl :line-p\051)SH
21240 12889 MT
(MY-LINE-FEEDBACK-OBJ)SH
21240 13754 MT
(MY-RECTANGLE-FEEDBACK-OBJ\051\051\051)SH
11640 14619 MT
(\050:start-where `\050:element-of ,ALL-OBJECT-AGG\051\051)SH
11640 15484 MT
(\050:window MYWINDOW\051\051)SH
14 /Times-Bold AF
8280 19302 MT
(8.6. Multiple Windows)SH
11 /Times-Roman AF
8280 20498 MT
(Interactors can be made to work over multiple windows.)
16 W( The)308 W
10 /Courier AF
35826 XM
(:window)SH
11 /Times-Roman AF
40318 XM
(slot of an interactor can contain a)17 W
8280 21694 MT
(single window \050the normal case\051, a list of windows, or T)
146 W( which means all Interactor windows \050this is)145 W
8280 22890 MT
(rather inefficient\051.  If one of the last two options is used,)
159 W( then the interactor will operate over all the)160 W
8280 24086 MT
(specified windows.  This means that as the interactor)
76 W( is running, mouse movement events are processed)75 W
8280 25282 MT
(for all)
93 W( windows that are referenced.  Also, when the last of the windows referenced is deleted, then the)94 W
8280 26478 MT
(interactor is automatically destroyed.)SH
8280 28776 MT
(This is mainly useful if you want to have an object move among various windows.  If you want an)
29 W( object)28 W
8280 29972 MT
(to track the mouse as it changes windows,)
59 W( however, you have to explicitly change the aggregate that the)60 W
8280 31168 MT
(object is in as it follows)
98 W( the mouse, since each window has a single top-level aggregate and aggregates)97 W
8280 32364 MT
(cannot be)
26 W( connected to multiple windows.  You will probably need a custom)27 W
10 /Courier AF
42662 XM
(:running-action)SH
11 /Times-Roman AF
51964 XM
(routine)SH
8280 33560 MT
(to do this \050see section 8.9\051.  This is true of the feedback object as well as the main object.)SH
8280 35858 MT
(You can look at the demonstration program)SH
10 /Courier AF
27739 XM
(demo-multiwin.lisp)SH
11 /Times-Roman AF
38814 XM
(to see how this might be done.)SH
14 /Times-Bold AF
8280 39676 MT
(8.7. Wait-Interaction-Complete)SH
11 /Times-Roman AF
8280 40872 MT
(Interactors supplies a pair of functions which can be used to)
96 W( suspend Lisp processing while waiting for)95 W
8280 42068 MT
(the user to complete an action.  It is a little)
80 W( complicated to do this at the Interactors level, but there is a)81 W
8280 43264 MT
(convenient function for Gilt-created)
161 W( dialog boxes called)160 W
10 /Courier AF
34296 XM
(gilt:Show-In-Window-And-Wait)SH
11 /Times-Roman AF
51531 XM
(\050see the)160 W
8280 44460 MT
(Gilt manual\051.  Also,)736 W
10 /Courier AF
20268 XM
(garnet-gadgets:display-error-and-wait)SH
11 /Times-Roman AF
43480 XM
(and)SH
10 /Courier AF
46080 XM
(garnet-gadgets:)SH
8280 45656 MT
(display-query-and-wait)SH
11 /Times-Roman AF
21847 XM
(can be used to pop up message windows and wait)
92 W( for the user's response)91 W
8280 46852 MT
(\050see the)SH
10 /Courier AF
11944 XM
(error-gadget)SH
11 /Times-Roman AF
19419 XM
(in the Gadgets manual\051.)SH
8280 49150 MT
(For other applications, you can call:)SH
8 /Courier AF
10200 50363 MT
(inter:Wait-Interaction-Complete &optional)SH
/Times-Italic SF
30360 XM
(window-to-raise)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 51784 MT
(which does not return until an interactor executes:)SH
8 /Courier AF
10200 52997 MT
(inter:Interaction-Complete &optional)SH
/Times-Italic SF
27960 XM
(val)SH
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 54418 MT
(If a)89 W
/Times-Italic SF
10229 XM
(val)SH
/Times-Roman SF
11938 XM
(is supplied, then this is returned as the value of)90 W
10 /Courier AF
33765 XM
(Inter:Wait-Interaction-Complete)SH
11 /Times-Roman AF
(. The)455 W
/Times-Italic SF
8280 55614 MT
(window-to-raise)SH
/Times-Roman SF
15875 XM
(parameter is)
108 W( provided to avoid a race condition that occurs when you call update on a)107 W
8280 56810 MT
(window and immediately call)380 W
10 /Courier AF
23120 XM
(wait-interaction-complete)SH
11 /Times-Roman AF
(. If)
1035 W( you have problems)
380 W( with this)381 W
8280 58006 MT
(function, then try supplying your window)
139 W( as the optional argument.)138 W
10 /Courier AF
40080 XM
(Wait-interaction-complete)SH
11 /Times-Roman AF
8280 59202 MT
(will then raise your window to the top and update it for you.)SH
8280 61500 MT
(Typically,)SH
10 /Courier AF
13103 XM
(Inter:Interaction-Complete)SH
11 /Times-Roman AF
29035 XM
(will be called in the final-function of the interactor \050or)
57 W( the)58 W
8280 62696 MT
(selection-function of the gadget\051 that should cause)
37 W( a value to be returned, such as a value associated with)36 W
8280 63892 MT
(the "OK" button of)
74 W( a dialog box.  Note that you must use some other mechanism of interactors to make)75 W
8280 65088 MT
(sure that only the interactors you care about are executable;)64 W
10 /Courier AF
35368 XM
(Wait-Interaction-Complete)SH
11 /Times-Roman AF
50707 XM
(allows)SH
/Times-Italic SF
53918 XM
(all)SH
/Times-Roman SF
8280 66284 MT
(interactors in)SH
/Times-Italic SF
14328 XM
(all)SH
/Times-Roman SF
15765 XM
(windows to run.)SH
ES
%%Page: 286 67
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 286)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
14 /Times-Bold AF
6120 8138 MT
(8.8. Useful Procedures)SH
11 /Times-Roman AF
6120 9334 MT
(The text interactor beeps \050makes a sound\051 when)
100 W( you hit an illegal character.  The function to cause the)101 W
6120 10530 MT
(sound is exported as)SH
8 /Courier AF
8040 11743 MT
(inter:Beep)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 13164 MT
(which can be used anywhere in application code also.)SH
6120 15462 MT
(The Interactors package exports the function)SH
8 /Courier AF
8040 16675 MT
(inter:Warp-Pointer)SH
/Times-Italic SF
17160 XM
(window x y)SH
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 18096 MT
(which moves the position of the mouse cursor to the)
53 W( specified point in the specified window.  The result)52 W
6120 19292 MT
(is the same as if the user had moved the mouse to position <x,y>.)SH
14 /Times-Bold AF
6120 23110 MT
(8.9. Custom Action Routines)SH
11 /Times-Roman AF
6120 24306 MT
(We have found that the interactors supply sufficient flexibility to)
87 W( support almost all kinds of interactive)88 W
6120 25502 MT
(behaviors. There)
677 W( are many parameters that you can set in each kind of interactor, and you)
201 W( can use)200 W
6120 26698 MT
(formulas to determine values for these dynamically.)
61 W( The)398 W
10 /Courier AF
32085 XM
(final-function)SH
11 /Times-Roman AF
40822 XM
(can be used for application)62 W
6120 27894 MT
(notification if necessary.)SH
6120 30192 MT
(However, sometimes a programmer may find that special actions are required for)
167 W( one or more of the)166 W
6120 31388 MT
(action routines.  In this case, it is easy to)
1 W( override the default behavior and supply your own functions.  As)2 W
6120 32584 MT
(described in section 5, the action routines are:)SH
10 /Courier AF
8620 34404 MT
(:stop-action)SH
8620 35600 MT
(:start-action)SH
8620 36796 MT
(:running-action)SH
8620 37992 MT
(:abort-action)SH
8620 39188 MT
(:outside-action)SH
8620 40384 MT
(:back-inside-action)SH
11 /Times-Roman AF
6120 42682 MT
(Each of the interactor types has its own functions supplied in each of these slots.)SH
6120 44980 MT
(If you want the default behavior)172 W
/Times-Italic SF
21568 XM
(in addition)
172 W( to)171 W
/Times-Roman SF
28287 XM
(your own custom behavior, then you can use the KR)171 W
6120 46176 MT
(function)SH
10 /Courier AF
10179 XM
(Call-Prototype-Method)SH
11 /Times-Roman AF
23172 XM
(to call)
118 W( the standard function from your function.  The parameters)119 W
6120 47372 MT
(are the same as for your function.)SH
6120 49670 MT
(For example, the)SH
10 /Courier AF
13818 XM
(:running-action)SH
11 /Times-Roman AF
23093 XM
(for Move-Grow interactors is defined \050in section 8.9.3\051 as:)SH
8 /Courier AF
8040 50835 MT
(\050lambda \050an-interactor object-being-changed new-points\051\051)SH
11 /Times-Roman AF
6120 52256 MT
(so to create an interactor with a custom action as well as the default action, you might do:)SH
8 /Courier AF
8040 53421 MT
(\050create-instance NIL Inter:Move-Grow-Interactor)SH
9480 54286 MT
(...)SH
/Times-Italic SF
11400 XM
(the other usual slots)SH
/Courier SF
9480 55151 MT
(\050:running-action)SH
9960 56016 MT
(#'\050lambda \050an-interactor object-being-changed new-points\051)SH
11880 56881 MT
(\050call-prototype-method an-interactor object-being-changed new-points\051)SH
11880 57746 MT
(\050)SH
/Times-Italic SF
(Do-My-Custom-Stuff)SH
/Courier SF
(\051\051\051\051)SH
11 /Times-Roman AF
6120 60044 MT
(The parameters to all the action procedures for all the interactor)
230 W( types are defined in the following)229 W
6120 61240 MT
(sections.)SH
12 /Times-Bold AF
6120 64924 MT
(8.9.1. Menu Action Routines)SH
11 /Times-Roman AF
6120 66120 MT
(The parameters to the action routines of menu interactors are:)SH
10 /Courier AF
6120 68071 MT
(:Start-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 68936 MT
(\050lambda \050an-interactor first-object-under-mouse\051\051)SH
11 /Times-Roman AF
9720 70132 MT
(Note that)4 W
10 /Courier AF
14066 XM
(:running-action)SH
11 /Times-Roman AF
23345 XM
(is not called until the mouse is moved to a)
4 W( different object \050it is not)5 W
9720 71328 MT
(called on this first object which is passed as)SH
10 /Courier AF
29241 XM
(first-object-under-mouse)SH
11 /Times-Roman AF
(\051.)SH
ES
%%Page: 287 68
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.9)
SH( Custom)
1800 W( Action Routines)SH
51386 XM
(Page 287)SH
46800 50 8280 4486 UL
/Courier SF
8280 7955 MT
(:Running-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 8820 MT
(\050lambda \050an-interactor prev-obj-over new-obj-over\051\051)SH
11 /Times-Roman AF
11880 10016 MT
(This is called)
200 W( once each time the object under the mouse changes \050not each time the mouse)199 W
11880 11212 MT
(moves\051.)SH
10 /Courier AF
8280 12907 MT
(:Outside-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 13772 MT
(\050lambda \050an-interactor outside-control prev-obj-over\051\051)SH
11 /Times-Roman AF
11880 14968 MT
(This is called when the mouse)
65 W( moves out of the entire menu.)66 W
10 /Courier AF
39983 XM
(Outside-Control)SH
11 /Times-Roman AF
49324 XM
(is simply the)66 W
11880 16164 MT
(value of the)SH
10 /Courier AF
17347 XM
(:outside)SH
11 /Times-Roman AF
22422 XM
(slot.)SH
10 /Courier AF
8280 17859 MT
(:Back-inside-action)SH
11 /Times-Roman AF
19955 XM
(-)SH
8 /Courier AF
15480 18724 MT
(\050lambda \050an-interactor outside-control prev-obj-over new-obj-over\051\051)SH
11 /Times-Roman AF
11880 19920 MT
(Called when the mouse was outside all items and then moved back inside.)83 W
10 /Courier AF
46189 XM
(Prev-obj-over)SH
11 /Times-Roman AF
54346 XM
(is)SH
11880 21116 MT
(the last object the mouse was over before it went outside.  This is)
46 W( used to remove feedback from)47 W
11880 22312 MT
(it if)SH
10 /Courier AF
13714 XM
(:outside)SH
11 /Times-Roman AF
18789 XM
(is)SH
10 /Courier AF
19798 XM
(:last)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8280 24007 MT
(:Stop-action)SH
11 /Times-Roman AF
15755 XM
(-)SH
8 /Courier AF
15480 24872 MT
(\050lambda \050an-interactor final-obj-over\051\051)SH
11 /Times-Roman AF
11880 26068 MT
(The interactor guarantees that)64 W
10 /Courier AF
25512 XM
(:running-action)SH
11 /Times-Italic AF
34851 XM
(has)SH
/Times-Roman SF
36718 XM
(been called on)63 W
10 /Courier AF
43534 XM
(final-obj-over)SH
11 /Times-Roman AF
52272 XM
(before)SH
11880 27264 MT
(the)SH
10 /Courier AF
13499 XM
(:stop-action)SH
11 /Times-Roman AF
20974 XM
(procedure is called.)SH
10 /Courier AF
8280 28959 MT
(:Abort-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 29824 MT
(\050lambda \050an-interactor last-obj-over\051\051)SH
12 /Times-Bold AF
8280 33508 MT
(8.9.2. Button Action Routines)SH
11 /Times-Roman AF
8280 34704 MT
(The parameters to the action routines of button interactors are:)SH
10 /Courier AF
8280 36655 MT
(:Start-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 37520 MT
(\050lambda \050an-interactor object-under-mouse\051\051)SH
11 /Times-Roman AF
11880 38716 MT
(Note that)SH
10 /Courier AF
16218 XM
(back-inside-action)SH
11 /Times-Roman AF
27293 XM
(is not called this first time.)SH
10 /Courier AF
8280 40411 MT
(:Running-action)SH
11 /Times-Roman AF
18294 XM
(- This is not used by this interactor.)739 W
10 /Courier AF
41077 XM
(:Back-inside-action)SH
11 /Times-Roman AF
53492 XM
(and)SH
10 /Courier AF
11880 41607 MT
(:Outside-action)SH
11 /Times-Roman AF
21155 XM
(are used instead.)SH
10 /Courier AF
8280 43302 MT
(:Back-inside-action)SH
11 /Times-Roman AF
19955 XM
(-)SH
8 /Courier AF
15480 44167 MT
(\050lambda \050an-interactor new-obj-over\051\051)SH
11 /Times-Roman AF
11880 45363 MT
(This is called each time the mouse comes back to the original object.)SH
10 /Courier AF
8280 47058 MT
(:Outside-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 47923 MT
(\050lambda \050an-interactor last-obj-over\051\051)SH
11 /Times-Roman AF
11880 49119 MT
(This is called if the mouse moves outside)
97 W( of)96 W
10 /Courier AF
32396 XM
(:running-where)SH
11 /Times-Roman AF
41167 XM
(before stop-event.  The default)96 W
10 /Courier AF
11880 50315 MT
(:running-where)SH
11 /Times-Roman AF
20555 XM
(is)SH
10 /Courier AF
21564 XM
('\050:in *\051)SH
11 /Times-Roman AF
26639 XM
(which means in the object that the interactor started on.)SH
10 /Courier AF
8280 52010 MT
(:Stop-action)SH
11 /Times-Roman AF
15755 XM
(-)SH
8 /Courier AF
15480 52875 MT
(\050lambda \050an-interactor final-obj-over\051\051)SH
10 SS 
8280 54570 MT
(:Abort-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 55435 MT
(\050lambda \050an-interactor obj-over\051\051)SH
11 /Times-Roman AF
11880 56631 MT
(Obj-over will be the object originally pressed on, or NIL if outside when aborted.)SH
12 /Times-Bold AF
8280 60315 MT
(8.9.3. Move-Grow Action Routines)SH
11 /Times-Roman AF
8280 61511 MT
(The parameters to the action routines of move-grow interactors are:)SH
10 /Courier AF
8280 63462 MT
(:Start-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 64327 MT
(\050lambda \050an-interactor object-being-changed first-points\051\051)SH
10 SS 
11880 65523 MT
(First-points)SH
11 /Times-Roman AF
19445 XM
(is a list of the original left, top, width)
90 W( and height for the object, or the original)91 W
11880 66719 MT
(X1, Y1, X2, Y2, depending on the setting of)124 W
10 /Courier AF
32823 XM
(:line-p)SH
11 /Times-Roman AF
(. The)523 W
10 /Courier AF
40205 XM
(object-being-changed)SH
11 /Times-Roman AF
52604 XM
(is the)123 W
11880 67915 MT
(actual object to change, not)
78 W( the feedback object.  Note that)79 W
10 /Courier AF
38798 XM
(:running-action)SH
11 /Times-Roman AF
48152 XM
(is not called on)79 W
11880 69111 MT
(this first point; it will not be called until the mouse moves to a new point.)SH
10 /Courier AF
8280 70806 MT
(:Running-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 71671 MT
(\050lambda \050an-interactor object-being-changed new-points\051\051)SH
ES
%%Page: 288 69
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 288)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
11 SS 
9720 7955 MT
(The)SH
10 /Courier AF
11705 XM
(object-being-changed)SH
11 /Times-Roman AF
23980 XM
(is the actual object to change, not the feedback object.)SH
10 /Courier AF
6120 9650 MT
(:Outside-action)SH
11 /Times-Roman AF
15395 XM
(-)SH
8 /Courier AF
13320 10515 MT
(\050lambda \050an-interactor outside-control object-being-changed\051\051)SH
11 /Times-Roman AF
9720 11711 MT
(The)SH
10 /Courier AF
12173 XM
(object-being-changed)SH
11 /Times-Roman AF
24916 XM
(is the actual object to change, not the feedback)
468 W( object.)467 W
10 /Courier AF
9720 12907 MT
(Outside-control)SH
11 /Times-Roman AF
18995 XM
(is set with the value of)SH
10 /Courier AF
29199 XM
(:outside)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 14602 MT
(:Back-inside-action)SH
11 /Times-Roman AF
17795 XM
(-)SH
8 /Courier AF
13320 15467 MT
(\050lambda \050an-interactor outside-control object-being-changed new-inside-points\051\051)SH
11 /Times-Roman AF
9720 16663 MT
(The)SH
10 /Courier AF
11743 XM
(object-being-changed)SH
11 /Times-Roman AF
24056 XM
(is the actual object to change, not the feedback object.)
38 W( Note)
352 W( that)39 W
9720 17859 MT
(the running-action procedure is not called on the point passed to this procedure.)SH
10 /Courier AF
6120 19554 MT
(:Stop-action)SH
11 /Times-Roman AF
13595 XM
(-)SH
8 /Courier AF
13320 20419 MT
(\050lambda \050an-interactor object-being-changed final-points\051\051)SH
11 /Times-Roman AF
9720 21615 MT
(The)SH
10 /Courier AF
12173 XM
(object-being-changed)SH
11 /Times-Roman AF
24916 XM
(is the actual object to change, not the feedback)
468 W( object.)467 W
10 /Courier AF
9720 22811 MT
(:Running-action)SH
11 /Times-Roman AF
18995 XM
(was not necessarily called on the point passed to this procedure.)SH
10 /Courier AF
6120 24506 MT
(:Abort-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 25371 MT
(\050lambda \050an-interactor object-being-changed\051\051)SH
11 /Times-Roman AF
9720 26567 MT
(The)SH
10 /Courier AF
11705 XM
(object-being-changed)SH
11 /Times-Roman AF
23980 XM
(is the actual object to change, not the feedback object.)SH
12 /Times-Bold AF
6120 30251 MT
(8.9.4. Two-Point Action Routines)SH
11 /Times-Roman AF
6120 31447 MT
(The parameters to the action routines of two-point interactors are:)SH
10 /Courier AF
6120 33398 MT
(:Start-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 34263 MT
(\050lambda \050an-interactor first-points\051\051)SH
11 /Times-Roman AF
9720 35459 MT
(The)SH
10 /Courier AF
11776 XM
(first-points)SH
11 /Times-Roman AF
19322 XM
(is a list of the initial box or 2 points for the object \050the form is determined)72 W
9720 36655 MT
(by the)64 W
10 /Courier AF
12842 XM
(:line-p)SH
11 /Times-Roman AF
17381 XM
(parameter\051. If)403 W
10 /Courier AF
24167 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
35905 XM
(is non-NIL, then)63 W
10 /Courier AF
43670 XM
(first-points)SH
11 /Times-Roman AF
51208 XM
(will)SH
9720 37851 MT
(be NIL.  Otherwise, the width and height of the object will be the)421 W
10 /Courier AF
44635 XM
(:min-width)SH
11 /Times-Roman AF
51332 XM
(and)SH
10 /Courier AF
9720 39047 MT
(:min-height)SH
11 /Times-Roman AF
16608 XM
(or 0 if)
13 W( there are no minimums.  Note that)12 W
10 /Courier AF
35029 XM
(:running-action)SH
11 /Times-Roman AF
44316 XM
(is not called on this)12 W
9720 40243 MT
(first point; it will not be called until the mouse moves to a new point.)SH
10 /Courier AF
6120 41938 MT
(:Running-action)SH
11 /Times-Roman AF
15395 XM
(-)SH
8 /Courier AF
13320 42803 MT
(\050lambda \050an-interactor new-points\051\051)SH
10 SS 
9720 43999 MT
(New-points)SH
11 /Times-Roman AF
15995 XM
(may be NIL if)SH
10 /Courier AF
22531 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
34206 XM
(and the size is too small.)SH
10 /Courier AF
6120 45694 MT
(:Outside-action)SH
11 /Times-Roman AF
15395 XM
(-)SH
8 /Courier AF
13320 46559 MT
(\050lambda \050an-interactor outside-control\051\051)SH
10 SS 
9720 47755 MT
(Outside-control)SH
11 /Times-Roman AF
18995 XM
(is set with the value of)SH
10 /Courier AF
29199 XM
(:outside)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 49450 MT
(:Back-inside-action)SH
11 /Times-Roman AF
17795 XM
(-)SH
8 /Courier AF
13320 50315 MT
(\050lambda \050an-interactor outside-control new-inside-points\051\051)SH
11 /Times-Roman AF
9720 51511 MT
(Note that the running-action procedure is not called on the point passed)
273 W( to this procedure.)274 W
10 /Courier AF
9720 52707 MT
(New-inside-points)SH
11 /Times-Roman AF
20195 XM
(may be NIL if)SH
10 /Courier AF
26731 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
38406 XM
(is non-NIL.)SH
10 /Courier AF
6120 54402 MT
(:Stop-action)SH
11 /Times-Roman AF
13595 XM
(-)SH
8 /Courier AF
13320 55267 MT
(\050lambda \050an-interactor final-points\051\051)SH
10 SS 
9720 56463 MT
(:Running-action)SH
11 /Times-Roman AF
19522 XM
(was not necessarily called on the)
527 W( point passed to this procedure.)526 W
10 /Courier AF
9720 57659 MT
(Final-points)SH
11 /Times-Roman AF
17195 XM
(may be NIL if)SH
10 /Courier AF
23731 XM
(:abort-if-too-small)SH
11 /Times-Roman AF
35406 XM
(is non-NIL.)SH
10 /Courier AF
6120 59354 MT
(:Abort-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 60219 MT
(\050lambda \050an-interactor\051\051)SH
12 /Times-Bold AF
6120 63903 MT
(8.9.5. Angle Action Routines)SH
11 /Times-Roman AF
6120 65099 MT
(In addition to the standard measure of the)
228 W( angle, the procedures below also provide an incremental)229 W
6120 66295 MT
(measurement of the difference between the current and last values.  This might be used if you just)
10 W( want to)9 W
6120 67491 MT
(have the user give circular gestures to have something rotated.  Then, you)
88 W( would just want to know the)89 W
6120 68687 MT
(angle differences.  An example of this is in)SH
10 /Courier AF
25302 XM
(demo-angle.lisp)SH
11 /Times-Roman AF
(.)SH
6120 70985 MT
(The parameters to the action routines of angle interactors are:)SH
ES
%%Page: 289 70
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 8.9)
SH( Custom)
1800 W( Action Routines)SH
51386 XM
(Page 289)SH
46800 50 8280 4486 UL
/Courier SF
8280 7955 MT
(:Start-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 8820 MT
(\050lambda \050an-interactor object-being-rotated first-angle\051\051)SH
11 /Times-Roman AF
11880 10016 MT
(The)SH
10 /Courier AF
13876 XM
(first-angle)SH
11 /Times-Roman AF
20762 XM
(is the angle from directly to the right of)
11 W( the)10 W
10 /Courier AF
40116 XM
(:center-of-rotation)SH
11 /Times-Roman AF
51801 XM
(that the)10 W
11880 11212 MT
(mouse presses.  This angle is in radians.  The)94 W
10 /Courier AF
32982 XM
(object-being-rotated)SH
11 /Times-Roman AF
45352 XM
(is the actual object to)95 W
11880 12408 MT
(move, not the feedback object.  Note that)56 W
10 /Courier AF
30716 XM
(:running-action)SH
11 /Times-Roman AF
40046 XM
(is not called on)55 W
10 /Courier AF
47232 XM
(first-angle)SH
11 /Times-Roman AF
(; it)55 W
11880 13604 MT
(will not be called until the mouse moves to a new angle.)SH
10 /Courier AF
8280 15299 MT
(:Running-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 16164 MT
(\050lambda \050an-interactor object-being-rotated new-angle angle-delta\051\051)SH
11 /Times-Roman AF
11880 17360 MT
(The)SH
10 /Courier AF
14393 XM
(object-being-rotated)SH
11 /Times-Roman AF
27196 XM
(is the actual object to move, not the feedback object.)529 W
10 /Courier AF
11880 18556 MT
(Angle-delta)SH
11 /Times-Roman AF
18888 XM
(is the difference between the current angle)
133 W( and the last angle.  It will either be)132 W
11880 19752 MT
(positive or negative,)
152 W( with positive being counter-clockwise.  Note that it is always ambiguous)153 W
11880 20948 MT
(which way the mouse is rotating from sampled points, and)
10 W( the system does not)9 W
/Times-Italic SF
46936 XM
(yet)SH
/Times-Roman SF
48502 XM
(implement any)9 W
11880 22144 MT
(hysteresis, so if the user rotates the mouse swiftly \050or too close)
27 W( around the center point\051, the delta)28 W
11880 23340 MT
(may oscillate between positive and negative values, since it will guess wrong about which)
103 W( way)102 W
11880 24536 MT
(the user is going.)30 W
/Times-Italic SF
20096 XM
(In the future, this could be fixed by)
30 W( keeping a history of the last few points and)31 W
11880 25732 MT
(assuming the user is going in the same direction as previously.)SH
10 /Courier AF
8280 27427 MT
(:Outside-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 28292 MT
(\050lambda \050an-interactor outside-control object-being-rotated\051\051)SH
11 /Times-Roman AF
11880 29488 MT
(The)SH
10 /Courier AF
14394 XM
(object-being-rotated)SH
11 /Times-Roman AF
27198 XM
(is the actual object to move, not the)
529 W( feedback object.)528 W
10 /Courier AF
11880 30684 MT
(Outside-control)SH
11 /Times-Roman AF
21155 XM
(is set with the value of)SH
10 /Courier AF
31359 XM
(:outside)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8280 32379 MT
(:Back-inside-action)SH
11 /Times-Roman AF
19955 XM
(-)SH
8 /Courier AF
15480 33244 MT
(\050lambda \050an-interactor outside-control object-being-rotated new-angle\051\051)SH
11 /Times-Roman AF
11880 34440 MT
(The)SH
10 /Courier AF
13951 XM
(object-being-rotated)SH
11 /Times-Roman AF
26312 XM
(is the actual object to move, not the feedback object.  Note that)86 W
11880 35636 MT
(the running-action procedure is not called on the point passed)
167 W( to this procedure.  There is no)166 W
10 /Courier AF
11880 36832 MT
(angle-delta)SH
11 /Times-Roman AF
18792 XM
(since it would be zero if)37 W
10 /Courier AF
29888 XM
(:outside-control)SH
11 /Times-Roman AF
39800 XM
(was)SH
10 /Courier AF
41822 XM
(NIL)SH
11 /Times-Roman AF
43934 XM
(and it would probably be)37 W
11880 38028 MT
(inaccurate for)SH
10 /Courier AF
18230 XM
(:last)SH
11 /Times-Roman AF
21505 XM
(anyway.)SH
10 /Courier AF
8280 39723 MT
(:Stop-action)SH
11 /Times-Roman AF
15755 XM
(-)SH
8 /Courier AF
15480 40588 MT
(\050lambda \050an-interactor object-being-rotated final-angle angle-delta\051\051)SH
11 /Times-Roman AF
11880 41784 MT
(The)SH
10 /Courier AF
14394 XM
(object-being-rotated)SH
11 /Times-Roman AF
27198 XM
(is the actual object to move, not the)
529 W( feedback object.)528 W
10 /Courier AF
11880 42980 MT
(:Running-action)SH
11 /Times-Roman AF
21670 XM
(was not necessarily called)
515 W( on the angle passed to this procedure.)516 W
10 /Courier AF
11880 44176 MT
(Angle-delta)SH
11 /Times-Roman AF
18755 XM
(is the difference from the last call to)SH
10 /Courier AF
34943 XM
(:running-action)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
8280 45871 MT
(:Abort-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 46736 MT
(\050lambda \050an-interactor object-being-rotated\051\051)SH
11 /Times-Roman AF
11880 47932 MT
(The)SH
10 /Courier AF
13865 XM
(object-being-rotated)SH
11 /Times-Roman AF
26140 XM
(is the actual object to move, not the feedback object.)SH
12 /Times-Bold AF
8280 51616 MT
(8.9.6. Text Action Routines)SH
11 /Times-Roman AF
8280 52812 MT
(The parameters to the action routines of text interactors are:)SH
10 /Courier AF
8280 54763 MT
(:Start-action)SH
11 /Times-Roman AF
16355 XM
(-)SH
8 /Courier AF
15480 55628 MT
(\050lambda \050an-interactor new-obj-over start-event\051\051)SH
10 SS 
11880 56824 MT
(New-Obj-over)SH
11 /Times-Roman AF
19845 XM
(is the object to edit, either)490 W
10 /Courier AF
34486 XM
(:obj-to-change)SH
11 /Times-Roman AF
43651 XM
(if it is supplied, or if)489 W
10 /Courier AF
11880 58020 MT
(:obj-to-change)SH
11 /Times-Roman AF
20767 XM
(is NIL, then the)
212 W( object returned from)213 W
10 /Courier AF
38749 XM
(:start-where)SH
11 /Times-Roman AF
(. The)
701 W( definition of)213 W
10 /Courier AF
11880 59216 MT
(event)SH
11 /Times-Roman AF
(s is in section 8.3.)SH
10 /Courier AF
8280 60911 MT
(:Running-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 61776 MT
(\050lambda \050an-interactor obj-over event\051\051)SH
10 SS 
8280 63471 MT
(:Outside-action)SH
11 /Times-Roman AF
17555 XM
(-)SH
8 /Courier AF
15480 64336 MT
(\050lambda \050an-interactor obj-over\051\051)SH
11 /Times-Roman AF
11880 65532 MT
(Often,)SH
10 /Courier AF
14934 XM
(:running-where)SH
11 /Times-Roman AF
23609 XM
(will be T so that this is never called.)SH
10 /Courier AF
8280 67227 MT
(:Back-Inside-action)SH
11 /Times-Roman AF
19955 XM
(-)SH
8 /Courier AF
15480 68092 MT
(\050lambda \050an-interactor obj-over event\051\051)SH
10 SS 
8280 69787 MT
(:Stop-action)SH
11 /Times-Roman AF
15755 XM
(-)SH
8 /Courier AF
15480 70652 MT
(\050lambda \050an-interactor obj-over stop-event\051\051)SH
ES
%%Page: 290 71
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 290)
SH( Interactors)830 W
39512 XM
(Advanced Features)
SH( Chapter)
1550 W( 8)SH
46800 50 6120 4486 UL
/Courier SF
6120 7955 MT
(:Abort-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 8820 MT
(\050lambda \050an-interactor obj-over abort-event\051\051)SH
12 /Times-Bold AF
6120 12504 MT
(8.9.7. Gesture Action Routines)SH
11 /Times-Roman AF
6120 13700 MT
(The parameters to the action routines of gesture interactors are:)SH
10 /Courier AF
6120 15651 MT
(:Start-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 16516 MT
(\050lambda \050an-interactor object-under-mouse point\051\051)SH
11 /Times-Roman AF
9720 17712 MT
(The)SH
10 /Courier AF
11705 XM
(point)SH
11 /Times-Roman AF
14980 XM
(is the first point of the gesture.)SH
10 /Courier AF
6120 19407 MT
(:Running-action)SH
11 /Times-Roman AF
15395 XM
(-)SH
8 /Courier AF
13320 20272 MT
(\050lambda \050an-interactor new-obj-over point\051\051)SH
10 SS 
6120 21967 MT
(:Outside-action)SH
11 /Times-Roman AF
15395 XM
(-)SH
8 /Courier AF
13320 22832 MT
(\050lambda \050an-interactor prev-obj-over\051\051)SH
11 /Times-Roman AF
9720 24028 MT
(This beeps and erases the trace if)SH
10 /Courier AF
24531 XM
(show-trace)SH
11 /Times-Roman AF
30806 XM
(is non-NIL. It also sets)SH
10 /Courier AF
41132 XM
(:went-outside)SH
11 /Times-Roman AF
49207 XM
(to T.)SH
10 /Courier AF
6120 25723 MT
(:Back-inside-action)SH
11 /Times-Roman AF
17795 XM
(-)SH
8 /Courier AF
13320 26588 MT
(\050lambda \050an-interactor new-obj-over\051\051)SH
11 /Times-Roman AF
9720 27784 MT
(This currently does nothing.)SH
10 /Courier AF
6120 29479 MT
(:Stop-action)SH
11 /Times-Roman AF
13595 XM
(-)SH
8 /Courier AF
13320 30344 MT
(\050lambda \050an-interactor final-obj-over point\051\051)SH
10 SS 
9720 31540 MT
(:Running-action)SH
11 /Times-Roman AF
19184 XM
(was not necessarily called on the point passed to this procedure,)
189 W( so it is)188 W
9720 32736 MT
(added to)330 W
10 /Courier AF
14412 XM
(*points*)SH
11 /Times-Roman AF
(. This)
935 W( procedure calls)331 W
10 /Courier AF
30883 XM
(gest-classify)SH
11 /Times-Roman AF
39289 XM
(with the points in the trace,)331 W
10 /Courier AF
9720 33932 MT
(*points*)SH
11 /Times-Roman AF
(, and the classifier given by)SH
10 /Courier AF
26891 XM
(:classifier)SH
11 /Times-Roman AF
(.)SH
10 /Courier AF
6120 35627 MT
(:Abort-action)SH
11 /Times-Roman AF
14195 XM
(-)SH
8 /Courier AF
13320 36492 MT
(\050lambda \050an-interactor\051\051)SH
11 /Times-Roman AF
9720 37688 MT
(This erases the trace if)SH
10 /Courier AF
19889 XM
(:show-trace)SH
11 /Times-Roman AF
26764 XM
(is non-NIL and)SH
10 /Courier AF
33759 XM
(:went-outside)SH
11 /Times-Roman AF
41834 XM
(is NIL.)SH
12 /Times-Bold AF
6120 41372 MT
(8.9.8. Animation Action Routines)SH
11 /Times-Roman AF
6120 42568 MT
(The)SH
10 /Courier AF
8222 XM
(animator-interactor)SH
11 /Times-Roman AF
20014 XM
(does not use these action)
117 W( slots.  All of the work is done by the function)116 W
6120 43764 MT
(supplied in the)SH
10 /Courier AF
12873 XM
(:timer-handler)SH
11 /Times-Roman AF
21548 XM
(slot.)SH
ES
%%Page: 291 72
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 9)
SH( Debugging)1550 W
51386 XM
(Page 291)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(9. Debugging)SH
11 /Times-Roman AF
8280 10524 MT
(There are a number of)
61 W( useful functions that help the programmer debug interactor code.  Since these are)62 W
8280 11720 MT
(most useful in)
33 W( conjunction with the tools that help debug KR structures and Opal graphical objects, all of)32 W
8280 12916 MT
(these are described in a separate Garnet Debugging Manual.)SH
8280 15214 MT
(In summary, the functions provided include:)SH
/Symbol SF
10249 16792 MT
(\267)SH
/Times-Roman SF
11030 XM
(Interactors are KR objects so they can be printed using)SH
10 /Courier AF
35404 XM
(kr:ps)SH
11 /Times-Roman AF
38679 XM
(and)SH
10 /Courier AF
40542 XM
(hemlock-schemas)SH
11 /Times-Roman AF
(.)SH
/Symbol SF
10249 18686 MT
(\267)SH
/Times-Roman SF
11030 XM
(The)SH
10 /Courier AF
13130 XM
(Inter:Trace-Inter)SH
11 /Times-Roman AF
23720 XM
(routine is useful for turning on and off tracing output)
115 W( that tells)116 W
11030 19882 MT
(what interactors are running.)
42 W( Type)357 W
10 /Courier AF
27008 XM
(\050describe 'inter:trace-inter\051)41 W
11 /Times-Roman AF
44765 XM
(for a description.)41 W
11030 21078 MT
(This function is only available when the)326 W
10 /Courier AF
31245 XM
(garnet-debug)SH
11 /Times-Roman AF
39046 XM
(compiling switch is)
326 W( on \050the)327 W
1956 50 11030 21278 UL
3666 50 13587 21278 UL
734 50 17854 21278 UL
1956 50 19189 21278 UL
3970 50 21746 21278 UL
2382 50 26317 21278 UL
1344 50 29300 21278 UL
7200 50 31245 21278 UL
4462 50 39046 21278 UL
2872 50 44109 21278 UL
734 50 47582 21278 UL
1100 50 48918 21278 UL
1710 50 50620 21278 UL
11030 22274 MT
(default\051.)SH
3695 50 11030 22474 UL
/Symbol SF
10249 24168 MT
(\267)SH
10 /Courier AF
11030 XM
(\050garnet-debug:ident\051)SH
11 /Times-Roman AF
23538 XM
(will tell)
233 W( the name of the next event \050keyboard key or mouse)232 W
11030 25364 MT
(button\051 you hit.)SH
/Symbol SF
10249 27258 MT
(\267)SH
10 /Courier AF
11030 XM
(\050garnet-debug:look-inter &optional)
36 W( parameter\051)37 W
11 /Times-Roman AF
38415 XM
(describes the active interactors,)37 W
11030 28454 MT
(or a particular interactor, or the interactors that affect a particular graphic object.)SH
/Symbol SF
10249 30348 MT
(\267)SH
10 /Courier AF
11030 XM
(\050inter:Print-Inter-Levels\051)SH
11 /Times-Roman AF
26985 XM
(will print the names of all of the)
80 W( active interactors in all)79 W
11030 31544 MT
(priority levels.)SH
/Symbol SF
10249 33438 MT
(\267)SH
10 /Courier AF
11030 XM
(\050inter:Print-Inter-Windows\051)SH
11 /Times-Roman AF
27604 XM
(will print the)
99 W( names of all the interactor windows, and)100 W
10 /Courier AF
11030 34634 MT
(\050garnet-debug:Windows\051)SH
11 /Times-Roman AF
24505 XM
(will print all Opal and Interactor windows.)SH
/Symbol SF
10249 36528 MT
(\267)SH
/Times-Roman SF
11030 XM
(Destroying the interactor windows will normally get rid of interactors.)
334 W( You)
941 W( can use)333 W
10 /Courier AF
11030 37724 MT
(\050opal:clean-up :opal\051)SH
11 /Times-Roman AF
23905 XM
(to delete all interactor windows.)SH
/Symbol SF
10249 39618 MT
(\267)SH
/Times-Roman SF
11030 XM
(If for some reason, an interactor is not deleted \050for example, because it is)
99 W( not attached to a)100 W
11030 40814 MT
(window\051, then)SH
8 /Courier AF
12950 42027 MT
(inter:Reset-Inter-Levels &optional)SH
/Times-Italic SF
29750 XM
(level)SH
/Courier SF
46562 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
11030 43448 MT
(will remove)18 W
/Times-Italic SF
16626 XM
(all)SH
/Times-Roman SF
18081 XM
(the existing interactors by simply resetting the queues \050it does not destroy)
18 W( the)17 W
11030 44644 MT
(existing interactors, but they will never be executed\051.  If)
236 W( a level is specified, then only)237 W
11030 45840 MT
(interactors on that level)
66 W( are destroyed.  If level is NIL \050the default\051, then all levels are reset.)65 W
11030 47036 MT
(This procedure should not be used in applications\320only for debugging.  It is pretty drastic.)SH
ES
%%Page: 292 73
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 292)
SH( Interactors)830 W
48478 XM
(References)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(References)SH
11 /Times-Roman AF
6120 11279 MT
([McDonald 87])SH
14370 XM
(David B. McDonald, editor.)SH
/Times-Italic SF
14370 12475 MT
(CMU Common Lisp User's Manual)SH
/Times-Roman SF
(.)SH
14370 13671 MT
(Technical Report CMU-CS-87-156, Carnegie Mellon University Computer Science)SH
16020 14867 MT
(Department, September, 1987.)SH
6120 16818 MT
([Myers 89a])SH
14370 XM
(Brad A. Myers, Dario Giuse, Roger B. Dannenberg, Brad Vander Zanden, David)SH
14370 18014 MT
(Kosbie, Philippe Marchal, and Ed Pervin.)SH
14370 19210 MT
(Comprehensive Support for Graphical, Highly-Interactive User Interfaces: The Garnet)SH
16020 20406 MT
(User Interface Development Environment.)SH
/Times-Italic SF
14370 21602 MT
(The Garnet Toolkit Reference Manuals: Support for Highly-Interactive, Graphical)SH
16020 22798 MT
(User Interfaces in Lisp.)SH
/Times-Roman SF
14370 23994 MT
(Carnegie Mellon University Computer Science Department Technical Report CMU-)SH
16020 25190 MT
(CS-89-196, 1989, pages 13-32.)SH
6120 27141 MT
([Myers 89b])SH
14370 XM
(Brad A. Myers.)SH
14370 28337 MT
(Encapsulating Interactive Behaviors.)SH
14370 29533 MT
(In)SH
/Times-Italic SF
15561 XM
(Human Factors in Computing Systems)SH
/Times-Roman SF
(, pages 319-324.  Proceedings SIGCHI'89,)SH
16020 30729 MT
(Austin, TX, April, 1989.)SH
6120 32680 MT
([Myers 90])SH
14370 XM
(Brad A. Myers.)SH
14370 33876 MT
(A New Model for Handling Input.)SH
/Times-Italic SF
14370 35072 MT
(ACM Transactions on Information Systems)SH
/Times-Roman SF
33651 XM
(8\0503\051:289-320, July, 1990.)SH
6120 37023 MT
([Rubine 91a])SH
14370 XM
(Dean Rubine.)SH
/Times-Italic SF
14370 38219 MT
(The Automatic Recognition of Gestures)SH
/Times-Roman SF
(.)SH
14370 39415 MT
(PhD thesis, School of Computer Science, Carnegie Mellon University, December,)SH
16020 40611 MT
(1991.)SH
14370 41807 MT
(Technical Report CMU-CS-91-202.)SH
6120 43758 MT
([Rubine 91b])SH
14370 XM
(Dean Rubine.)SH
14370 44954 MT
(Specifying Gestures by Example.)SH
14370 46150 MT
(In)SH
/Times-Italic SF
15561 XM
(Computer Graphics)SH
/Times-Roman SF
(, pages 329-337.  Proceedings SIGGRAPH'91, 1991.)SH
ES
%%Page: 293 74
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Index)SH
51386 XM
(Page 293)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(Index)SH
8 /Times-Roman AF
8280 11525 MT
(#\134 \050character prefix\051)
SH( 227)400 W
23880 XM
(Clean-up 291)400 W
40578 XM
(Incrementing Button)
SH( 249)400 W
23880 12449 MT
(Clear 245)400 W
40578 XM
(Menu 242)400 W
8280 13373 MT
(* \050in a ``where''\051)
SH( 233)400 W
23880 XM
(Clear-global-accelerators 237)400 W
40578 XM
(Menu Interactor)
SH( 242)400 W
8280 14297 MT
(*Current-event* 283)400 W
23880 XM
(Clear-window-accelerators 237)400 W
40578 XM
(Move or Change Size)
SH( 284)400 W
8280 15221 MT
(*Garnet-Break-Key* 224,)
400 W( 278)SH
23880 XM
(Clip-And-Map 255)400 W
40578 XM
(Mover for Moving-Rectangle)
SH( 223)400 W
8280 16145 MT
(*ignore-undefined-keys* 229)400 W
23880 XM
(Close-Transcript 278)400 W
40578 XM
(Moving-Line 251)400 W
23880 17069 MT
(CMU CommonLisp)
SH( 224)400 W
40578 XM
(Moving-Rectangle 222,)
400 W( 251)SH
8280 17993 MT
(Abort-action 239)400 W
23880 XM
(Code 282)400 W
40578 XM
(Obj-Over \050slot\051)
SH( 242)400 W
8280 18917 MT
(Abort-event 238)400 W
23880 XM
(Command \050Mac key\051)
SH( 228)400 W
40578 XM
(Priority Levels)
SH( 281)400 W
8280 19841 MT
(Abort-if-too-small 258)400 W
23880 XM
(CommonLisp 224)400 W
40578 XM
(Rotating Line)
SH( 262)400 W
8280 20765 MT
(Abort-interactor 284)400 W
23880 XM
(Continuous 226,)
400 W( 238)SH
40578 XM
(Running-action 286)400 W
8280 21689 MT
(Accelerators 237)400 W
23880 XM
(Control 228)400 W
40578 XM
(Scroll Bar)
SH( 251,)
400 W( 281)SH
8280 22613 MT
(Action Routines)
SH( 286)400 W
23880 XM
(Create-instance 222,)
400 W( 226)SH
40578 XM
(Select objects inside a box)
SH( 283)400 W
9378 23537 MT
(Angle 288)400 W
23880 XM
(Creating new objects)
SH( 259,)
400 W( 273)SH
40578 XM
(Special Slots)
SH( 284)400 W
9378 24461 MT
(Button 287)400 W
23880 XM
(Current-event 283)400 W
40578 XM
(Start-Where 229)400 W
9378 25385 MT
(Gesture 290)400 W
23880 XM
(Current-obj-over 244)400 W
40578 XM
(Text 267)400 W
9378 26309 MT
(Menu 286)400 W
23880 XM
(Current-window 244)400 W
40578 XM
(Two-point-interactor 259,)
400 W( 283)SH
9378 27233 MT
(Move-Grow 287)400 W
23880 XM
(Cursor-index \050slot\051)
SH( 265,)
400 W( 266)SH
40578 XM
(Type in Where)
SH( 231)400 W
9378 28157 MT
(Text 289)400 W
23880 XM
(Cursor-where-press 265)400 W
40578 XM
(Where 229)400 W
9378 29081 MT
(Two-Point 288)400 W
23880 XM
(Custom 231,)
400 W( 233)SH
40578 XM
(Window Creation)
SH( 222)400 W
8280 30005 MT
(Active \050slot of priority-level\051)
SH( 280)400 W
23880 XM
(Custom Action Routines)
SH( 286)400 W
39480 XM
(Except 229)400 W
8280 30929 MT
(Active 239,)
400 W( 282)SH
39480 XM
(Exit-main-event-loop 224)400 W
8280 31853 MT
(Add-global-accelerator 237)400 W
23880 XM
(Debugging 291)400 W
8280 32777 MT
(Add-window-accelerator 237)400 W
23880 XM
(Default-global-accelerators 237)400 W
39480 XM
(F1 224)400 W
8280 33701 MT
(Agate 275)400 W
23880 XM
(DeSelectObj 244)400 W
39480 XM
(Feedback 227)400 W
8280 34625 MT
(Aggregadget 242)400 W
23880 XM
(Destroy 226)400 W
39480 XM
(Feedback-obj 227,)
400 W( 238, 242)SH
8280 35549 MT
(Aggrelist 242)400 W
23880 XM
(Double clicking)
SH( 228)400 W
39480 XM
(Feedback-rect 242)400 W
8280 36473 MT
(Always 280)400 W
23880 XM
(Double-click-time 228)400 W
39480 XM
(Final Feedback \050for buttons\051)
SH( 248)400 W
8280 37397 MT
(Angle \050slot\051)
SH( 261,)
400 W( 262)SH
23880 XM
(Downp 282)400 W
39480 XM
(Final Feedback \050for menus\051)
SH( 243)400 W
8280 38321 MT
(Angle action routines)
SH( 288)400 W
39480 XM
(Final-feed-inuse 244)400 W
8280 39245 MT
(Angle-Interactor 240,)
400 W( 260)SH
23880 XM
(Edit-Func 270)400 W
39480 XM
(Final-feedback-obj 243)400 W
8280 40169 MT
(Animator-bounce 277)400 W
23880 XM
(Editable String)
SH( 267)400 W
39480 XM
(Final-function 239)400 W
8280 41093 MT
(Animator-Interactor 240,)
400 W( 277)SH
23880 XM
(Editing Commands)
SH( 264)400 W
40578 XM
(Angle-Interactor 262)400 W
8280 42017 MT
(Animator-wrap 277)400 W
23880 XM
(Element \050in a ``where''\051)
SH( 230)400 W
40578 XM
(Button-Interactor 248)400 W
8280 42941 MT
(Any-keyboard 227)400 W
23880 XM
(Element-of 232)400 W
40578 XM
(Gesture-Interactor 272)400 W
8280 43865 MT
(Any-leftdown 227)400 W
23880 XM
(Element-of-or-none 232)400 W
40578 XM
(Menu-Interactor 245)400 W
8280 44789 MT
(Any-leftup 227)400 W
23880 XM
(Event-Char 282)400 W
40578 XM
(Move-Grow-Interactor 254)400 W
8280 45713 MT
(Any-middledown 227)400 W
23880 XM
(Event-Code 282)400 W
40578 XM
(Text-Interactor 266)400 W
8280 46637 MT
(Any-middleup 227)400 W
23880 XM
(Event-Downp 282)400 W
40578 XM
(Two-Point-Interactor 258)400 W
8280 47561 MT
(Any-mousedown 227)400 W
23880 XM
(Event-Mousep 282)400 W
39480 XM
(Flip-if-change-side 258)400 W
8280 48485 MT
(Any-mouseup 227)400 W
23880 XM
(Event-Timestamp 282)400 W
39480 XM
(Functions 234)400 W
8280 49409 MT
(Any-rightdown 227)400 W
23880 XM
(Event-window 282)400 W
8280 50333 MT
(Any-rightup 227)400 W
23880 XM
(Event-X 282)400 W
39480 XM
(Garnet-Break-Key 224,)
400 W( 278)SH
8280 51257 MT
(Attach-point 252,)
400 W( 254)SH
23880 XM
(Event-Y 282)400 W
39480 XM
(Gest-attributes-abs-th 272)400 W
8280 52181 MT
(Auto-Repeat 249)400 W
23880 XM
(Events 227,)
400 W( 282)SH
39480 XM
(Gest-attributes-dx2 272)400 W
23880 53105 MT
(Example Program)
SH( 223)400 W
39480 XM
(Gest-attributes-dy2 272)400 W
8280 54029 MT
(Back-inside-action 239)400 W
23880 XM
(Examples)SH
39480 XM
(Gest-attributes-endx 272)400 W
8280 54953 MT
(Backquote 229)400 W
24978 XM
(Aggregadget 242,)
400 W( 267)SH
39480 XM
(Gest-attributes-endy 272)400 W
8280 55877 MT
(Beep 286)400 W
24978 XM
(Aggrelist 242)400 W
39480 XM
(Gest-attributes-initial-cos 272)400 W
8280 56801 MT
(Bell 286)400 W
24978 XM
(Binding Keys)
SH( 269)400 W
39480 XM
(Gest-attributes-initial-sin 272)400 W
8280 57725 MT
(Bind-Key 268)400 W
24978 XM
(Box \050slot\051)
SH( 222,)
400 W( 251)SH
39480 XM
(Gest-attributes-magsq2 272)400 W
8280 58649 MT
(Box \050slot\051)
SH( 222,)
400 W( 227, 251, 259, 266)SH
24978 XM
(Button 249)400 W
39480 XM
(Gest-attributes-maxx 272)400 W
8280 59573 MT
(Box 255)400 W
24978 XM
(Changing Label Button)
SH( 249)400 W
39480 XM
(Gest-attributes-maxy 272)400 W
8280 60497 MT
(Button action routines)
SH( 287)400 W
24978 XM
(Clip-And-Map 256)400 W
39480 XM
(Gest-attributes-minx 272)400 W
8280 61421 MT
(Button-Interactor 240,)
400 W( 246)SH
24978 XM
(Complete Program)
SH( 223)400 W
39480 XM
(Gest-attributes-miny 272)400 W
8280 62345 MT
(Button-outside-stop? 265)400 W
24978 XM
(Create or edit string)
SH( 267)400 W
39480 XM
(Gest-attributes-path-r 272)400 W
24978 63269 MT
(Creating Interactor Window)
SH( 222)400 W
39480 XM
(Gest-attributes-path-th 272)400 W
8280 64193 MT
(Center-of-rotation 262)400 W
24978 XM
(Creating new objects)
SH( 259,)
400 W( 273)SH
39480 XM
(Gest-attributes-sharpness 272)400 W
8280 65117 MT
(Change-Active 282)400 W
24978 XM
(Custom \050Start-Where\051)
SH( 231)400 W
39480 XM
(Gest-attributes-startx 272)400 W
8280 66041 MT
(Changing Label Button)
SH( 249)400 W
24978 XM
(Editable String)
SH( 267)400 W
39480 XM
(Gest-attributes-starty 272)400 W
8280 66965 MT
(Char 282)400 W
24978 XM
(Events 229,)
400 W( 283)SH
39480 XM
(Gesture action routines)
SH( 290)400 W
8280 67889 MT
(Check-leaf-but-return-element 233)400 W
24978 XM
(Feedback 267)400 W
39480 XM
(Gesture-Interactor 240,)
400 W( 270)SH
8280 68813 MT
(Check-leaf-but-return-element-or-none 233)400 W
24978 XM
(Feedback Rectangle)
SH( 242)400 W
39480 XM
(Gestures)SH
8280 69737 MT
(Child vs. leaf)
SH( 230)400 W
24978 XM
(Final Feedback Objs)
SH( 244)400 W
40578 XM
(training new gestures)
SH( 275)400 W
8280 70661 MT
(Classifier \050slot\051)
SH( 273)400 W
24978 XM
(Gesture-Interactor 273)400 W
39480 XM
(Goodbye World)
SH( 223)400 W
8280 71585 MT
(Classifier 271)400 W
24978 XM
(Goodbye World)
SH( 223)400 W
39480 XM
(Gravity 255)400 W
ES
%%Page: 294 75
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 294)
SH( Interactors)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
8 SS 
6120 7749 MT
(Gridding 255)400 W
21720 XM
(Move-Grow-Interactor 240,)
400 W( 250)SH
37320 XM
(Text 263)400 W
6120 8673 MT
(Grow-p 253)400 W
21720 XM
(Moving-Line 251)400 W
37320 XM
(Text action routines)
SH( 289)400 W
21720 9597 MT
(Moving-Rectangle 222,)
400 W( 251)SH
37320 XM
(Text Editing Commands)
SH( 264)400 W
6120 10521 MT
(High-priority-level 280)400 W
21720 XM
(Multi-Point-Interactor 240)400 W
37320 XM
(Text-Interactor 240,)
400 W( 263)SH
6120 11445 MT
(Hit-threshold 234)400 W
21720 XM
(Multiple selection)
SH( 244)400 W
37320 XM
(Timer functions)
SH( 277)400 W
6120 12369 MT
(How-set 245)400 W
21720 XM
(Multiple Windows)
SH( 285)400 W
37320 XM
(Timer-handler slot \050animation\051)
SH( 277)400 W
37320 13293 MT
(Timer-initial-wait 249)400 W
6120 14217 MT
(Ident 291)400 W
21720 XM
(None 230)400 W
37320 XM
(Timer-repeat-p 249)400 W
6120 15141 MT
(If-any 280)400 W
21720 XM
(Normal-priority-level 280)400 W
37320 XM
(Timestamp 282)400 W
6120 16065 MT
(Ignore-undefined-keys 229)400 W
21720 XM
(Numbers \050used in :how-set slot\051)
SH( 245)400 W
37320 XM
(Toggle 245)400 W
6120 16989 MT
(In 232)400 W
37320 XM
(Trace-Inter 291)400 W
6120 17913 MT
(In-box 232)400 W
21720 XM
(Obj-Over \050slot\051)
SH( 242,)
400 W( 248, 254, 262)SH
37320 XM
(Trace-Interactor 240)400 W
6120 18837 MT
(In-but-not-on 232)400 W
21720 XM
(Obj-to-change 253,)
400 W( 262, 265)SH
37320 XM
(Training gestures)
SH( 275)400 W
6120 19761 MT
(Incrementing Button)
SH( 249)400 W
21720 XM
(Outside 233,)
400 W( 238)SH
37320 XM
(Transcript-Events-From-File 278)400 W
6120 20685 MT
(Input-filter 254,)
400 W( 258)SH
21720 XM
(Outside stop)
SH( 265)400 W
37320 XM
(Transcript-Events-To-File 278)400 W
6120 21609 MT
(Insert-Text-Into-String 266)400 W
21720 XM
(Outside-action 239)400 W
37320 XM
(Transcripts 278)400 W
6120 22533 MT
(Inter Package)
SH( 222)400 W
37320 XM
(Triple clicking)
SH( 228)400 W
6120 23457 MT
(Interaction-complete 285)400 W
21720 XM
(Playback 278)400 W
37320 XM
(Two-Point action routines)
SH( 288)400 W
6120 24381 MT
(Interactor-window 222,)
400 W( 226)SH
21720 XM
(Points \050slot\051)
SH( 251,)
400 W( 259)SH
37320 XM
(Two-Point-Interactor 240,)
400 W( 256)SH
6120 25305 MT
(Interactors \050slot of priority-level\051)
SH( 280)400 W
21720 XM
(Points 255)400 W
37320 XM
(Type 231)400 W
6120 26229 MT
(Interim Feedback \050for buttons\051)
SH( 248)400 W
21720 XM
(Pretend-to-be-Leaf 231,)
400 W( 234)SH
6120 27153 MT
(Interim Feedback \050for menus\051)
SH( 242)400 W
21720 XM
(Print-Inter-Levels 291)400 W
37320 XM
(Unbind-All-Keys 269)400 W
6120 28077 MT
(Interim-Selected \050slot\051)
SH( 242,)
400 W( 248)SH
21720 XM
(Print-Inter-Windows 291)400 W
37320 XM
(Unbind-Key 269)400 W
6120 29001 MT
(Interim-selected 242)400 W
21720 XM
(Priorities 279)400 W
21720 29925 MT
(Priority levels)
SH( 281)400 W
37320 XM
(Visible \050slot\051)
SH( 242,)
400 W( 254, 259, 266)SH
6120 30849 MT
(Key Bindings)
SH( 268)400 W
21720 XM
(Priority-level 279)400 W
6120 31773 MT
(Key Translation Tables)
SH( 268)400 W
21720 XM
(Priority-level-list 279)400 W
37320 XM
(Wait-interaction-complete 285)400 W
6120 32697 MT
(Keyboard keys)
SH( 227)400 W
21720 XM
(PS 291)400 W
37320 XM
(Waiting-priority 238,)
400 W( 279)SH
6120 33621 MT
(Kill-main-event-loop-process 224)400 W
37320 XM
(Warp-pointer 286)400 W
21720 34545 MT
(Recording 278)400 W
37320 XM
(Where 229)400 W
6120 35469 MT
(Last 233)400 W
21720 XM
(Remove-global-accelerator 237)400 W
37320 XM
(Window 222,)
400 W( 238, 282, 285)SH
6120 36393 MT
(Launch-main-event-loop-process 224)400 W
21720 XM
(Remove-window-accelerator 237)400 W
37320 XM
(Window-Enter event)
SH( 228)400 W
6120 37317 MT
(Launch-process-p 225)400 W
21720 XM
(Reset-Inter-Levels 291)400 W
37320 XM
(Window-Leave event)
SH( 228)400 W
6120 38241 MT
(Leaf Objects)
SH( 231)400 W
21720 XM
(Return-Final-Selection-Objs 244)400 W
37320 XM
(Windows \050debugging function\051)
SH( 291)400 W
6120 39165 MT
(Leaf vs. child)
SH( 230)400 W
21720 XM
(Rightdown 227)400 W
6120 40089 MT
(Leaf-element-of 232)400 W
21720 XM
(Rotating Line)
SH( 262)400 W
37320 XM
(X 282)400 W
6120 41013 MT
(Leaf-element-of-or-none 232)400 W
21720 XM
(Running-action 239)400 W
6120 41937 MT
(Leftdown 227)400 W
21720 XM
(Running-priority 239,)
400 W( 279)SH
37320 XM
(Y 282)400 W
6120 42861 MT
(Line-p 253,)
400 W( 258)SH
21720 XM
(Running-priority-level 280)400 W
6120 43785 MT
(Lispworks 224)400 W
21720 XM
(Running-where 230,)
400 W( 238)SH
37320 XM
(` \050in a ``where''\051)
SH( 229)400 W
6120 44709 MT
(List-add 245)400 W
6120 45633 MT
(List-check-leaf-but-return-element 233)400 W
21720 XM
(Scroll Bar)
SH( 251,)
400 W( 281)SH
6120 46557 MT
(List-check-leaf-but-return-element-or... 233)400 W
21720 XM
(Select objects inside a box)
SH( 283)400 W
6120 47481 MT
(List-element-of 232)400 W
21720 XM
(Select-outline-only 234)400 W
6120 48405 MT
(List-element-of-or-none 233)400 W
21720 XM
(Selected \050slot\051)
SH( 222,)
400 W( 243, 245, 248)SH
6120 49329 MT
(List-leaf-element-of 233)400 W
21720 XM
(Selected 243,)
400 W( 248)SH
6120 50253 MT
(List-leaf-element-of-or-none 233)400 W
21720 XM
(Selecting in a rectangle)
SH( 283)400 W
6120 51177 MT
(List-remove 245)400 W
21720 XM
(SelectObj 244)400 W
6120 52101 MT
(List-toggle 245)400 W
21720 XM
(Self-deactivate 239)400 W
6120 53025 MT
(Look-inter 291)400 W
21720 XM
(Set 245)400 W
6120 53949 MT
(Lucid 224)400 W
21720 XM
(Set-Default-Key-Translations 270)400 W
21720 54873 MT
(Shift 228)400 W
6120 55797 MT
(Mac mouse buttons)
SH( 227)400 W
21720 XM
(Show-trace 271,)
400 W( 273)SH
6120 56721 MT
(Main-event-loop 224)400 W
21720 XM
(Single selection)
SH( 244)400 W
6120 57645 MT
(Main-event-loop-process-running-p 225)400 W
21720 XM
(Slots \050of interactors\051)
SH( 238)400 W
6120 58569 MT
(Make-Event 283)400 W
21720 XM
(Slots-to-set 246,)
400 W( 255)SH
6120 59493 MT
(Max-dist-to-mean 272)400 W
21720 XM
(Start-action 239)400 W
6120 60417 MT
(Menu action routines)
SH( 286)400 W
21720 XM
(Start-Animator 277)400 W
6120 61341 MT
(Menu-Interactor 240)400 W
21720 XM
(Start-event 238)400 W
6120 62265 MT
(Meta 228)400 W
21720 XM
(Start-interactor 283)400 W
6120 63189 MT
(Middledown 227)400 W
21720 XM
(Start-where 229,)
400 W( 238)SH
6120 64113 MT
(Min-height 254,)
400 W( 258)SH
21720 XM
(States \050of interactors\051)
SH( 234)400 W
6120 65037 MT
(Min-length 254,)
400 W( 258)SH
21720 XM
(Stop-action 239)400 W
6120 65961 MT
(Min-non-ambig-prob 271)400 W
21720 XM
(Stop-Animator 277)400 W
6120 66885 MT
(Min-width 254,)
400 W( 258)SH
21720 XM
(Stop-event 238)400 W
6120 67809 MT
(Modal windows)
SH( 281)400 W
21720 XM
(Stop-Interactor 284)400 W
6120 68733 MT
(Modes 281)400 W
21720 XM
(Stop-when \050slot of priority-level\051)
SH( 280)400 W
6120 69657 MT
(Mouse buttons)
SH( 227)400 W
21720 XM
(String \050slot\051)
SH( 265,)
400 W( 266)SH
6120 70581 MT
(Mousep 282)400 W
21720 XM
(String 267)400 W
6120 71505 MT
(Move-Grow action routines)
SH( 287)400 W
ES
%%Page: i 76
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Interactors)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
25591 8272 MT
(Table of Contents)SH
12 SS 
8280 9796 MT
(1. Introduction)SH
53280 XM
(221)SH
10 SS 
9780 11186 MT
(1.1. Advantages of Interactors)SH
53580 XM
(221)SH
9780 12266 MT
(1.2. Overview of Interactor Operation)SH
53580 XM
(222)SH
9780 13346 MT
(1.3. Simple Interactor Creation)SH
53580 XM
(222)SH
9780 14426 MT
(1.4. Overview of Manual)SH
53580 XM
(223)SH
12 SS 
8280 15950 MT
(2. The Main Event Loop)SH
53280 XM
(224)SH
10 SS 
9780 17340 MT
(2.1. Main-Event-Loop)SH
53580 XM
(224)SH
9780 18420 MT
(2.2. Main-Event-Loop Process)SH
53580 XM
(224)SH
11780 19500 MT
(2.2.1. Launching and Killing the Main-Event-Loop-Process)SH
53580 XM
(225)SH
11780 20580 MT
(2.2.2. Launch-Process-P)SH
53580 XM
(225)SH
11780 21660 MT
(2.2.3. Main-Event-Loop-Process-Running-P)SH
53580 XM
(225)SH
12 SS 
8280 23184 MT
(3. Operation)SH
53280 XM
(226)SH
10 SS 
9780 24574 MT
(3.1. Creating and Destroying)SH
53580 XM
(226)SH
9780 25654 MT
(3.2. Continuous)SH
53580 XM
(226)SH
9780 26734 MT
(3.3. Feedback)SH
53580 XM
(227)SH
9780 27814 MT
(3.4. Events)SH
53580 XM
(227)SH
11780 28894 MT
(3.4.1. Keyboard and Mouse Events)SH
53580 XM
(227)SH
11780 29974 MT
(3.4.2. "Middledown" and "Rightdown" on the Mac)SH
53580 XM
(227)SH
11780 31054 MT
(3.4.3. Modifiers \050Shift, Control, Meta\051)SH
53580 XM
(228)SH
11780 32134 MT
(3.4.4. Window Enter and Leave Events)SH
53580 XM
(228)SH
11780 33214 MT
(3.4.5. Double-Clicking)SH
53580 XM
(228)SH
11780 34294 MT
(3.4.6. Function Keys, Arrows Keys, and Others)SH
53580 XM
(229)SH
11780 35374 MT
(3.4.7. Multiple Events)SH
53580 XM
(229)SH
11780 36454 MT
(3.4.8. Special Values T and NIL)SH
53580 XM
(229)SH
9780 37534 MT
(3.5. Values for the ``Where'' slots)SH
53580 XM
(229)SH
11780 38614 MT
(3.5.1. Introduction)SH
53580 XM
(229)SH
11780 39694 MT
(3.5.2. Running-where)SH
53580 XM
(230)SH
11780 40774 MT
(3.5.3. Kinds of ``where'')SH
53580 XM
(230)SH
11780 41854 MT
(3.5.4. Type Parameter)SH
53580 XM
(231)SH
11780 42934 MT
(3.5.5. Custom)SH
53580 XM
(231)SH
11780 44014 MT
(3.5.6. Full List of Options for Where)SH
53580 XM
(232)SH
11780 45094 MT
(3.5.7. Same Object)SH
53580 XM
(233)SH
11780 46174 MT
(3.5.8. Outside while running)SH
53580 XM
(233)SH
11780 47254 MT
(3.5.9. Thresholds, Outlines, and Leaves)SH
53580 XM
(234)SH
9780 48334 MT
(3.6. Details of the Operation)SH
53580 XM
(234)SH
12 SS 
8280 49858 MT
(4. Mouse and Keyboard Accelerators)SH
53280 XM
(237)SH
8280 51382 MT
(5. Slots of All Interactors)SH
53280 XM
(238)SH
8280 52906 MT
(6. Specific Interactors)SH
53280 XM
(240)SH
10 SS 
9780 54296 MT
(6.1. Menu-Interactor)SH
53580 XM
(241)SH
11780 55376 MT
(6.1.1. Default Operation)SH
53580 XM
(241)SH
13780 56456 MT
(6.1.1.1. Interim Feedback)SH
53580 XM
(242)SH
13780 57536 MT
(6.1.1.2. Final Feedback)SH
53580 XM
(243)SH
13780 58616 MT
(6.1.1.3. Final Feedback Objects)SH
53580 XM
(243)SH
13780 59696 MT
(6.1.1.4. Items Selected)SH
53580 XM
(244)SH
13780 60776 MT
(6.1.1.5. Application Notification)SH
53580 XM
(245)SH
13780 61856 MT
(6.1.1.6. Normal Operation)SH
53580 XM
(245)SH
11780 62936 MT
(6.1.2. Slots-To-Set)SH
53580 XM
(246)SH
9780 64016 MT
(6.2. Button-Interactor)SH
53580 XM
(247)SH
11780 65096 MT
(6.2.1. Default Operation)SH
53580 XM
(248)SH
13780 66176 MT
(6.2.1.1. Interim Feedback)SH
53580 XM
(248)SH
13780 67256 MT
(6.2.1.2. Final Feedback)SH
53580 XM
(248)SH
13780 68336 MT
(6.2.1.3. Items Selected)SH
53580 XM
(248)SH
ES
%%Page: ii 77
BS
0 SI
10 /Times-Bold AF
11620 7870 MT
(6.2.1.4. Application Notification)SH
51420 XM
(248)SH
11620 8950 MT
(6.2.1.5. Normal Operation)SH
51420 XM
(248)SH
9620 10030 MT
(6.2.2. Auto-Repeat for Buttons)SH
51420 XM
(249)SH
9620 11110 MT
(6.2.3. Examples)SH
51420 XM
(249)SH
11620 12190 MT
(6.2.3.1. Single button)SH
51420 XM
(249)SH
11620 13270 MT
(6.2.3.2. Single button with a changing label)SH
51420 XM
(249)SH
7620 14350 MT
(6.3. Move-Grow-Interactor)SH
51420 XM
(250)SH
9620 15430 MT
(6.3.1. Default Operation)SH
51420 XM
(251)SH
11620 16510 MT
(6.3.1.1. Attach-Point)SH
51420 XM
(252)SH
11620 17590 MT
(6.3.1.2. Running where)SH
51420 XM
(253)SH
11620 18670 MT
(6.3.1.3. Extra Parameters)SH
51420 XM
(253)SH
11620 19750 MT
(6.3.1.4. Application Notification)SH
51420 XM
(254)SH
11620 20830 MT
(6.3.1.5. Normal Operation)SH
51420 XM
(254)SH
9620 21910 MT
(6.3.2. Gridding)SH
51420 XM
(255)SH
9620 22990 MT
(6.3.3. Setting Slots)SH
51420 XM
(255)SH
9620 24070 MT
(6.3.4. Useful Function: Clip-And-Map)SH
51420 XM
(255)SH
7620 25150 MT
(6.4. Two-Point-Interactor)SH
51420 XM
(256)SH
9620 26230 MT
(6.4.1. Default Operation)SH
51420 XM
(257)SH
11620 27310 MT
(6.4.1.1. Minimum sizes)SH
51420 XM
(257)SH
11620 28390 MT
(6.4.1.2. Extra Parameters)SH
51420 XM
(258)SH
11620 29470 MT
(6.4.1.3. Application Notification)SH
51420 XM
(258)SH
11620 30550 MT
(6.4.1.4. Normal Operation)SH
51420 XM
(259)SH
9620 31630 MT
(6.4.2. Examples)SH
51420 XM
(260)SH
11620 32710 MT
(6.4.2.1. Creating New Objects)SH
51420 XM
(260)SH
7620 33790 MT
(6.5. Angle-Interactor)SH
51420 XM
(261)SH
9620 34870 MT
(6.5.1. Default Operation)SH
51420 XM
(261)SH
11620 35950 MT
(6.5.1.1. Extra Parameters)SH
51420 XM
(262)SH
11620 37030 MT
(6.5.1.2. Application Notification)SH
51420 XM
(262)SH
11620 38110 MT
(6.5.1.3. Normal Operation)SH
51420 XM
(262)SH
7620 39190 MT
(6.6. Text-interactor)SH
51420 XM
(263)SH
9620 40270 MT
(6.6.1. Default Editing Commands)SH
51420 XM
(264)SH
9620 41350 MT
(6.6.2. Default Operation)SH
51420 XM
(265)SH
11620 42430 MT
(6.6.2.1. Multi-line text strings)SH
51420 XM
(265)SH
11620 43510 MT
(6.6.2.2. Extra Parameters)SH
51420 XM
(265)SH
11620 44590 MT
(6.6.2.3. Application Notification)SH
51420 XM
(266)SH
11620 45670 MT
(6.6.2.4. Normal Operation)SH
51420 XM
(266)SH
9620 46750 MT
(6.6.3. Useful Functions)SH
51420 XM
(266)SH
9620 47830 MT
(6.6.4. Examples)SH
51420 XM
(267)SH
11620 48910 MT
(6.6.4.1. Editing a particular string)SH
51420 XM
(267)SH
11620 49990 MT
(6.6.4.2. Editing an existing or new string)SH
51420 XM
(267)SH
9620 51070 MT
(6.6.5. Key Translation Tables)SH
51420 XM
(268)SH
9620 52150 MT
(6.6.6. Editing Function)SH
51420 XM
(270)SH
7620 53230 MT
(6.7. Gesture-Interactor)SH
51420 XM
(270)SH
9620 54310 MT
(6.7.1. Default Operation)SH
51420 XM
(271)SH
11620 55390 MT
(6.7.1.1. Rejecting Gestures)SH
51420 XM
(271)SH
11620 56470 MT
(6.7.1.2. Extra Parameters)SH
51420 XM
(271)SH
11620 57550 MT
(6.7.1.3. Application Notification)SH
51420 XM
(272)SH
11620 58630 MT
(6.7.1.4. Normal Operation)SH
51420 XM
(273)SH
9620 59710 MT
(6.7.2. Example - Creating new Objects)SH
51420 XM
(274)SH
9620 60790 MT
(6.7.3. Agate)SH
51420 XM
(275)SH
11620 61870 MT
(6.7.3.1. End-User Interface)SH
51420 XM
(276)SH
11620 62950 MT
(6.7.3.2. Programming Interface)SH
51420 XM
(276)SH
9620 64030 MT
(6.7.4. Gesture Demos)SH
51420 XM
(277)SH
7620 65110 MT
(6.8. Animator-Interactor)SH
51420 XM
(277)SH
ES
%%Page: iii 78
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Interactors)SH
47914 XM
(Table of Contents)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(7. Transcripts)SH
53280 XM
(278)SH
8280 9528 MT
(8. Advanced Features)SH
53280 XM
(279)SH
10 SS 
9780 10918 MT
(8.1. Priority Levels)SH
53580 XM
(279)SH
11780 11998 MT
(8.1.1. Example)SH
53580 XM
(281)SH
11780 13078 MT
(8.1.2. Sorted-Order Priority Levels)SH
53580 XM
(281)SH
9780 14158 MT
(8.2. Modes and Change-Active)SH
53580 XM
(281)SH
11780 15238 MT
(8.2.1. Modal Windows)SH
53580 XM
(281)SH
11780 16318 MT
(8.2.2. Change-Active)SH
53580 XM
(282)SH
9780 17398 MT
(8.3. Events)SH
53580 XM
(282)SH
11780 18478 MT
(8.3.1. Example of using an event)SH
53580 XM
(283)SH
9780 19558 MT
(8.4. Starting and Stopping Interactors Explicitly)SH
53580 XM
(283)SH
9780 20638 MT
(8.5. Special slots of interactors)SH
53580 XM
(284)SH
11780 21718 MT
(8.5.1. Example of using the special slots)SH
53580 XM
(284)SH
9780 22798 MT
(8.6. Multiple Windows)SH
53580 XM
(285)SH
9780 23878 MT
(8.7. Wait-Interaction-Complete)SH
53580 XM
(285)SH
9780 24958 MT
(8.8. Useful Procedures)SH
53580 XM
(286)SH
9780 26038 MT
(8.9. Custom Action Routines)SH
53580 XM
(286)SH
11780 27118 MT
(8.9.1. Menu Action Routines)SH
53580 XM
(286)SH
11780 28198 MT
(8.9.2. Button Action Routines)SH
53580 XM
(287)SH
11780 29278 MT
(8.9.3. Move-Grow Action Routines)SH
53580 XM
(287)SH
11780 30358 MT
(8.9.4. Two-Point Action Routines)SH
53580 XM
(288)SH
11780 31438 MT
(8.9.5. Angle Action Routines)SH
53580 XM
(288)SH
11780 32518 MT
(8.9.6. Text Action Routines)SH
53580 XM
(289)SH
11780 33598 MT
(8.9.7. Gesture Action Routines)SH
53580 XM
(290)SH
11780 34678 MT
(8.9.8. Animation Action Routines)SH
53580 XM
(290)SH
12 SS 
8280 36202 MT
(9. Debugging)SH
53280 XM
(291)SH
8280 37726 MT
(References)SH
53280 XM
(292)SH
8280 39250 MT
(Index)SH
53280 XM
(293)SH
ES
%%Trailer
%%Pages: 78
%%DocumentFonts: Times-Roman Times-Bold Symbol Times-Italic Courier Times-BoldItalic
