%!PS-Adobe-2.0
%%Title: shapes
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 12:04 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 236 119 376 674
%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {	% stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
	findfont exch scalefont setfont
	/s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
	/x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
	newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
	  left base-y moveto
	  x-dist 0 s ashow
        grestore
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
	  x y translate
          gsave
	    xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
	    fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
	  savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {	% stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
	newpath
	  moveto
	  num-points -2 0 {pop lineto} for
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
	moveto		        % Go to the left,top corner
	w 0 rlineto	        % top side
	0 h neg rlineto		% right side
	w neg 0 rlineto		% bottom side
	closepath		% left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {	% stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
	/height exch def  /width exch def
        newpath
	  moveto		% Go to the left,top corner
	  width 0 rlineto	% top side
	  0 height neg rlineto	% right side
	  width neg 0 rlineto	% bottom side
	  closepath		% left side
	gsave 1 setgray fill grestore
	clip newpath
        end
   } def

/FillShape
   {	% stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
	{ pop pop pop 
	  dup 0 ge
	    % if fill-halftone >= 0, then fill the shape with a halftone
	    { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {	% stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
	% If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
	dup 0 ge
	  % if line-thickness >= 0, then draw the outline
	  {gsave
	   setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
	   stroke
	   grestore}
	  {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
164 -46 translate
gsave
0 648 140 555 ClipToRectangle
0 0 translate
gsave
13 635 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 638 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 635 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 93 620 43 620 DrawLine
13 590 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 593 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 590 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 82 575 43 575 DrawLine
83 580 93 575 83 570 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
13 545 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 548 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 545 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 82 530 53 530 DrawLine
53 525 43 530 53 535 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
83 535 93 530 83 525 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
13 500 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 503 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 500 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
43 495 50 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
13 455 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 458 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 455 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
43 450 50 20 4 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
13 410 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 413 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 410 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
68.0 395.0 10.0 10.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
13 365 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 368 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 365 111 31 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
55 357 346 27 14 1 false 0 0 0 false 0 0 0 false (text) 12 /Courier DrawText
13 320 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 323 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 320 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
33 312 301 70 14 0 false 0 0 0 false 0 0 0 false (multi-text) 12 /Courier DrawText
13 275 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 278 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 275 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
47 267 256 42 14 0 false 0 0 0 false 0 0 0 false (window) 12 /Courier DrawText
13 230 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 233 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 230 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
48 222 211 41 14 0 false 0 0 0 false 0 0 0 false (bitmap) 12 /Courier DrawText
13 185 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 188 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 185 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
16 177 166 105 14 0 false 0 0 0 false 0 0 0 false (horizontal list) 12 /Courier DrawText
13 140 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 143 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 140 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
23 132 121 91 14 0 false 0 0 0 false 0 0 0 false (vertical list) 12 /Courier DrawText
grestore

grestore

0 648 140 555 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 236 119 376 674
