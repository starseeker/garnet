%!PS-Adobe-2.0
%%Title: lapidary-manual.mss
%%DocumentFonts: (atend)
%%Creator: Garnet and Scribe 7(1700)
%%CreationDate: 22 September 1993 12:28
%%Pages: (atend)
%%EndComments
% PostScript Prelude for Scribe.
/BS {/SV save def 0.0 792.0 translate .01 -.01 scale} bind def
/ES {showpage SV restore} bind def
/SC {setrgbcolor} bind def
/FMTX matrix def
/RDF {WFT SLT 0.0 eq 
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT neg sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont} bind def
/SLT 0.0 def
/SI { /SLT exch cvr def RDF} bind def
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF} bind def
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF} bind def
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF} bind def
/MT /moveto load def
/XM {currentpoint exch pop moveto} bind def
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore} bind def
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore} bind def
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore} bind def
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore} bind def
/BX1 {grestore} bind def
/BX2 {setlinewidth 1 setgray stroke grestore} bind def
/PB {/PV save def newpath translate
    100.0 -100.0 scale pop /showpage {} def} bind def
/PE {PV restore} bind def
/GB {/PV save def newpath translate rotate
    div dup scale 100.0 -100.0 scale
    /showpage {} def
    /letter {} def
    /lettersmall {} def
    /note {} def
    } bind def
/GE {PV restore} bind def
/FB {dict dup /FontMapDict exch def begin} bind def
/FM {cvn exch cvn exch def} bind def
/FE {end /original-findfont /findfont load def  /findfont
   {dup FontMapDict exch known{FontMapDict exch get} if
   original-findfont} def} bind def
/BC {gsave moveto dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath clip} bind def
/EC /grestore load def
/SH /show load def
/MX {exch show 0.0 rmoveto} bind def
/W {0 32 4 -1 roll widthshow} bind def
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto} bind def
/RC {100.0 -100.0 scale
612.0 0.0 translate
-90.0 rotate
.01 -.01 scale} bind def
/URC {100.0 -100.0 scale
90.0 rotate
-612.0 0.0 translate
.01 -.01 scale} bind def
/RCC {100.0 -100.0 scale
0.0 -792.0 translate 90.0 rotate
.01 -.01 scale} bind def
/URCC {100.0 -100.0 scale
-90.0 rotate 0.0 792.0 translate
.01 -.01 scale} bind def
%%EndProlog
%%Page: 0 1
BS
0 SI
16 /Times-Bold AF
21992 18976 MT
(Lapidary Reference Manual)SH
11 SS 
25995 21368 MT
(Brad T. Vander Zanden)SH
29158 22564 MT
(David Bolt)SH
/Times-Roman SF
28090 24490 MT
(September 1993)SH
/Times-Bold SF
29634 44214 MT
(Abstract)SH
/Times-Roman SF
8280 45966 MT
(This document describes the features and operations provided by)
81 W( Lapidary, a graphical interface builder)80 W
8280 47262 MT
(that allows a user to pictorially specify all graphical aspects of an)
157 W( application and interactively create)158 W
8280 48558 MT
(much of the behavior. Lapidary allows a user to draw most)
283 W( of opal's objects, combine them into)282 W
8280 49854 MT
(aggregadgets, align them using iconic constraint menus or custom constraints, and create behaviors)
134 W( by)135 W
8280 51150 MT
(entering appropriate parameters in dialog boxes representing each)
401 W( of Garnet's interactors, or by)400 W
8280 52446 MT
(demonstrating the appropriate behavior for feedback objects.)SH
21010 56724 MT
(Copyright)SH
/Symbol SF
25747 XM
(\323)SH
/Times-Roman SF
26891 XM
(1993 - Carnegie Mellon University)SH
8280 60318 MT
(This research was sponsored by)
453 W( the Avionics Lab, Wright Research and Development Center,)454 W
8280 61614 MT
(Aeronautical Systems Division \050AFSC\051, U. S. Air Force,)
84 W( Wright-Patterson AFB, OH 45433-6543 under)83 W
8280 62910 MT
(Contract F33615-90-C-1465, Arpa Order No. 7597.  Additional support for)
50 W( Garnet has been provided by)51 W
8280 64206 MT
(NEC, Apple, Adobe, and General Electric.)SH
8280 67800 MT
(The views and conclusions contained in this document are those of)
260 W( the authors and should not be)259 W
8280 69096 MT
(interpreted as representing the official policies, either expressed or implied, of the U.S. Government.)SH
ES
%%Page: 539 2
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.1)
SH( Object)
1800 W( Creation)SH
51386 XM
(Page 539)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(1. Getting Started)SH
11 /Times-Roman AF
8280 10524 MT
(To load Lapidary, type)92 W
/Courier SF
19003 XM
(\050load garnet-lapidary-loader)92 W
/Times-Roman SF
(\051 after Garnet)
92 W( has been loaded, or type)93 W
/Courier SF
8280 11720 MT
(\050defvar load-lapidary-p t)323 W
/Times-Roman SF
(\051 before Garnet is loaded, and Garnet will automatically load)322 W
8280 12916 MT
(Lapidary when the)
97 W( Garnet loader file is invoked.  To start Lapidary, type)98 W
/Courier SF
41837 XM
(\050lapidary:do-go)SH
/Times-Roman SF
(\051. This)471 W
8280 14112 MT
(will cause Lapidary to come up in its initial state with the following windows:)SH
/Symbol SF
10249 15690 MT
(\267)SH
/Times-Roman SF
11030 XM
(editor-menu: This menu contains a)
82 W( set of functions that deal with aggregadgets, constraints,)81 W
11030 16886 MT
(saving and restoring objects, deleting objects, and setting properties of objects.)SH
/Symbol SF
10249 18780 MT
(\267)SH
/Times-Roman SF
11030 XM
(shapes menu: This menu allows the designer to create opal graphical objects and windows.)SH
/Symbol SF
10249 20674 MT
(\267)SH
/Times-Roman SF
11030 XM
(box-constraint menu: This menu allows the designer to attach)
138 W( constraints to an object that)139 W
11030 21870 MT
(control its left, top, width, and height.)SH
/Symbol SF
10249 23764 MT
(\267)SH
/Times-Roman SF
11030 XM
(drawing window: This window allows the designer)
5 W( to create new objects or load objects from)4 W
11030 24960 MT
(existing files.)SH
14 /Times-Bold AF
8280 28778 MT
(1.1. Object Creation)SH
11 /Times-Roman AF
8280 29974 MT
(Lapidary allows new objects to be created from)
35 W( scratch, loaded from pre-defined gadgets files, or created)36 W
8280 31170 MT
(directly in Garnet and then linked to a Lapidary window.  The shapes menu)
235 W( displays the primitive)234 W
8280 32366 MT
(graphical objects that can be created in Lapidary.)SH
5 10 0 16380 67262 GB 
%%BeginDocument: lapidary/shapes.PS
%!PS-Adobe-2.0
%%Title: shapes
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 12:04 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 236 119 376 674
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
164 -46 translate
gsave
0 648 140 555 ClipToRectangle
0 0 translate
gsave
13 635 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 638 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 635 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 93 620 43 620 DrawLine
13 590 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 593 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 590 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 82 575 43 575 DrawLine
83 580 93 575 83 570 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
13 545 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 548 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 545 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
0 0 0 0 false 0 0 [] 1 82 530 53 530 DrawLine
53 525 43 530 53 535 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
83 535 93 530 83 525 6 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawPolyline
13 500 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 503 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 500 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
43 495 50 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
13 455 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 458 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 455 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
43 450 50 20 4 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRoundtangle
13 410 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 413 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 410 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
68.0 395.0 10.0 10.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
13 365 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 368 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 365 111 31 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
55 357 346 27 14 1 false 0 0 0 false 0 0 0 false (text) 12 /Courier DrawText
13 320 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 323 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 320 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
33 312 301 70 14 0 false 0 0 0 false 0 0 0 false (multi-text) 12 /Courier DrawText
13 275 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 278 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 275 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
47 267 256 42 14 0 false 0 0 0 false 0 0 0 false (window) 12 /Courier DrawText
13 230 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 233 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 230 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
48 222 211 41 14 0 false 0 0 0 false 0 0 0 false (bitmap) 12 /Courier DrawText
13 185 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 188 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 185 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
16 177 166 105 14 0 false 0 0 0 false 0 0 0 false (horizontal list) 12 /Courier DrawText
13 140 117 37 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
10 143 117 37 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 140 111 31 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
23 132 121 91 14 0 false 0 0 0 false 0 0 0 false (vertical list) 12 /Courier DrawText
grestore

grestore

0 648 140 555 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 236 119 376 674

%%EndDocument
 GE /Times-Bold SF
8280 63064 MT
(Figure 1-1:)SH
/Times-Roman SF
14053 XM
(Shapes menu)SH
8280 65362 MT
(The first six geometric shapes can be created by selecting the)
104 W( appropriate menu-item and sweeping out)105 W
8280 66558 MT
(the item in a drawing window with the right mouse button down.  Feedback corresponding to)
18 W( the selected)17 W
8280 67754 MT
(shape will be shown as the object)
161 W( is swept out.  Properties such as line-style, filling-style, and draw-)162 W
8280 68950 MT
(function can be set from the corresponding property menus \050see section 2.3\051.)SH
8280 71248 MT
(To create a single line of text, select text and then click where you want the text)
81 W( to start.  A cursor will)80 W
ES
%%Page: 540 3
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 540)
SH( Lapidary)830 W
41121 XM
(Getting Started)
SH( Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(appear and one line)
218 W( of text can be entered from the keyboard.  For more than one line of text use)219 W
6120 9151 MT
(multi-text. Single-line)
665 W( text can be terminated)
195 W( with either a mouse click or by hitting RETURN but,)194 W
6120 10347 MT
(multi-line text can only be terminated by a mouse click.)SH
6120 12645 MT
(To create a)
47 W( window, select the)48 W
/Courier SF
20057 XM
(window)SH
/Times-Roman SF
24340 XM
(menu-item and Lapidary will create a new window.  Since, new)48 W
6120 13841 MT
(windows initially have the same size and location as the)
87 W( draw window, they must be moved in order to)86 W
6120 15037 MT
(expose the original draw window.)SH
6120 17335 MT
(Bitmaps can be loaded by selecting)
40 W( the)41 W
/Courier SF
23845 XM
(bitmap)SH
/Times-Roman SF
28121 XM
(menu-item. Lapidary brings up a dialog box that allows)41 W
6120 18531 MT
(the user)
132 W( to enter the name of an image file and the window that the bitmap should be placed in.  The)131 W
6120 19727 MT
(window name is obtained from the title border that)
81 W( surrounds a window or the name that appears in the)82 W
6120 20923 MT
(icon for the window.)SH
6120 23221 MT
(To create a horizontal or vertical list, first select)
28 W( a prototype object.  Then select horizontal or vertical list)27 W
6120 24417 MT
(and sweep out the list.  A property sheet will appear that)
96 W( can be used to set parameters that control the)97 W
6120 25613 MT
(list's appearance.  A)
202 W( description of the parameters can be found in the chapter on aggregadgets and)201 W
6120 26809 MT
(aggrelists.)SH
14 /Times-Bold AF
6120 30627 MT
(1.2. Selecting Objects)SH
11 /Times-Roman AF
6120 31823 MT
(Lapidary permits two types)
4 W( of selections: primary selections and secondary selections.  Primary selections)5 W
6120 33019 MT
(are denoted by)
74 W( black grow boxes that sprout around the perimeter of an object; secondary selections are)73 W
6120 34215 MT
(denoted by)
58 W( white grow boxes.  Most operations do not distinguish between these two types of selections)59 W
6120 35411 MT
(and will operate in the same way on both types of selections.  However, two operations,)
180 W( attaching a)179 W
6120 36607 MT
(constraint to an object and defining parameters for an object, do make this distinction.)SH
6120 38905 MT
(Lapidary provides the usual range of selection operations including selecting an object, deselecting an)146 W
6120 40101 MT
(object, and adding new selections.  In addition, Lapidary allows the user)
159 W( to select covered objects by)158 W
6120 41297 MT
(pointing at an already selected object and requesting that the object directly covered)
4 W( by the selected object)5 W
6120 42493 MT
(be selected.  Finally Lapidary allows the user to select an object's aggregadget \050i.e., its parent in the)171 W
6120 43689 MT
(aggregadget hierarchy\051 by pointing at a selected object and selecting it)
61 W( again \050using the selection button,)62 W
6120 44885 MT
(not the add to selection button\051.  Lapidary will cycle around to a leaf if the selected object)
179 W( is at the)178 W
6120 46081 MT
(top-level of the aggregadget hierarchy.)SH
6120 48379 MT
(The type of grow boxes that appear around the perimeter of an object)
197 W( depend on the type of object)198 W
6120 49575 MT
(selected. Primitive)
1066 W( opal objects sprout rectangular grow boxes around their perimeters whereas)395 W
6120 50771 MT
(aggregadgets sprout)
46 W( circular grow boxes \050Figure 1-2\051.  If an object is too small to accommodate all eight)47 W
6120 51967 MT
(grow boxes \050whether it is)
73 W( a primitive object or aggregadget object\051, then an arrow appears that points at)72 W
6120 53163 MT
(the object.)SH
6120 55461 MT
(Section 1.3 provides specific details on each of the selection operations.)SH
14 /Times-Bold AF
6120 59279 MT
(1.3. Mouse-Based Commands)SH
11 /Times-Roman AF
6120 60475 MT
(Lapidary is primarily a mouse-based system so it is important to know which mouse)
67 W( buttons correspond)66 W
6120 61671 MT
(to which operation.  These)
53 W( bindings are set in the file mouse-bindings.lisp and may be edited.  Currently)54 W
6120 62867 MT
(the following operations can be bound to mouse buttons \050the pair)
50 W( following each entry shows the default)49 W
6120 64063 MT
(and the variable that must be changed to modify the default\051:)SH
/Symbol SF
8089 65641 MT
(\267)SH
/Times-Roman SF
8870 XM
(Primary Selection \050leftdown, *prim-select-one-obj*\051: The user can either point at)
28 W( a particular)29 W
8870 66837 MT
(object and make it the primary selection, or sweep out)
41 W( a rectangular region of the screen and)40 W
8870 68033 MT
(make all objects that)128 W
/Times-Italic SF
18731 XM
(intersect)SH
/Times-Roman SF
22923 XM
(the region be primary selections.  This operation causes the)129 W
8870 69229 MT
(previous primary selections to be)
80 W( deselected. If the mouse is not pointing at any objects, all)79 W
8870 70425 MT
(primary selections are deselected.)SH
ES
%%Page: 541 4
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.3)
SH( Mouse-Based)
1800 W( Commands)SH
51386 XM
(Page 541)SH
46800 50 8280 4486 UL
11 SS 
1 1 0 1080 54000 GB 
%%BeginDocument: lapidary/selections.PS
%!PS-Adobe-1.0
%%Creator: OYSTER.GARNET.CS.CMU.EDU:bvz (Brad Vander Zanden)
%%Title: selections.bmt (Drawing Window 1)
%%CreationDate: Fri Jul 27 20:14:00 1990
%%EndComments
%%%Pages: 1
%%BoundingBox: 198 324 414 468
%%EndProlog
%%%Page: 1 1

/bitdump % stk: width, height, iscale
% dump a bit image with lower left corner at current origin,
% scaling by iscale (iscale=1 means 1/300 inch per pixel)
{
        % read arguments
        /iscale exch def
        /height exch def
        /width exch def

        % scale appropriately
        width iscale mul height iscale mul scale

        % allocate space for one scanline of input
        /picstr % picstr holds one scan line
                width 7 add 8 idiv % width of image in bytes = ceiling(width/8)
                string
                def

        % read and dump the image
        width height 1 [width 0 0 height neg 0 height]
        { currentfile picstr readhexstring pop }
        image
} def
%%BoundingBox: 198 324 414 468
72 300 div dup scale
825 1350 translate
300 200 3 bitdump
000000000000000000000000000000000000000000000000000000000000000000000000000f
000000000000000000000000000000000000000000000000000000000000000000000000000f
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff19ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff1dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffff0efffffffffffffffffffff803fffffffe00ffffffff007fffffffffffffffffcf
3fffffffff027ffffffffffffffffffff001fffffffc007ffffffe003fffffffffffffffffcf
3ffffffffffe3fffffffffffffffffffe000fffffff8003ffffffc001fffffffffffffffffcf
3fffffffffff0fffffffffffffffffffc0007ffffff0001ffffff8000fffffffffffffffffcf
3fffffffffffc7ffffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffcf
3fffffffffffe3ffffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffcf
3ffffffffffff0ffffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffcf
3ffffffffffffc7fffffffffffffffff80000000000000000000000007ffffffffffffffffcf
3ffffffffffffe3fffffffffffffffff80000000000000000000000007ffffffffffffffffc0
3fffffffffffff0fffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffcf
3fffffffffffffc7ffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffc5
3fffffffffffffe3ffffffffffffffff80003fffffe0000ffffff00007ffffffffffffffffca
3ffffffffffffff0ffffffffffffffffc0007ffffff0001ffffff0000fffffffffffffffffcf
3ffffffffffffffc7fffffffffffffffe000fffffff8003ffffff0001fffffffffffffffffc0
3ffffffffffffffe3ffffffffffffffff001fffffffc007ffffff0003fffffffffffffffffcf
3fffffffffffffff0ffffffffffffffff803fffffffe00fffffff0007fffffffffffffffffcf
3fffffffffffffffc7ffffffffffffffff3ffffffffffffffffff2a7ffffffffffffffffffcf
3fffffffffffffffe3ffffffffffffffff3ffffffffffffffffff147ffffffffffffffffffcf
3ffffffffffffffff0ffffffffffffffff3ffffffffffffffffff2a7ffffffffffffffffffcf
3ffffffffffffffffc81ffffffffffffff3ffffffffffffffffff147ffffffffffffffffffcf
3ffffffffffffffffec1fffffffffffff803fffffffffffffffff2007fffffffffffffffffcf
3ffffffffffffffffff1fffffffffffff001fffffffffffffffff0003fffffffffffffffffcf
3fffffffffffffffff39ffffffffffffe000fffffffffffffffff0001fffffffffffffffffcf
3fffffffffffffffff1dffffffffffffc0007ffffffffffffffff0000fffffffffffffffffcf
3fffffffffffffffff0effffffffffff80003ffffffffffffffff00007ffffffffffffffffcf
3fffffffffffffffff027fffffffffff80003ffffffffffffffff00007ffffffffffffffffcb
3ffffffffffffffffffe3fffffffffff80003ffffffffffffffff00007ffffffffffffffffcf
3fffffffffffffffffff0fffffffffff80003ffffffffffffffff00007ffffffffffffffffcf
3fffffffffffffffffffc7ffffffffff80003ffffffffffffffff00007ffffffffffffffffcd
3fffffffffffffffffffe3ffffffffff80003ffffffffffffffff00007ffffffffffffffffcf
3ffffffffffffffffffff0ffffffffff80003ffffffffffffffff00007ffffffffffffffffcf
3ffffffffffffffffffffc7fffffffff80003ffffffffffffffff00007ffffffffffffffffce
3ffffffffffffffffffffe3fffffffffc0007ffffffffffffffff0000fffffffffffffffffcf
3fffffffffffffffffffff0fffffffffe000fffffffffffffffff0001fffffffffffffffffcf
3ffffffc0000ffffffffffc7fffffffff001fffffffffffffffff2003fffffffffffffffffcf
3ffffffc0000ffffffffffe3fffffffff803fffffffffffffffff1007fffffffffffffffffcf
3ffff3fc0000fffffffffff0ffffffffff3ffffffffffffffffff2a7ffffffffffffffffffcf
3ffff0fc0000fffffffffffc7fffffffff3ffffffffffffffffff147ffffffffffffffffffcf
3ffff03c0000fffffffffffe3fffffffff3ffffffffffffffffff2a7ffffffffffffffffffc0
3ffff00c0000ffffffffffff0ffffffff803fffffffe00fffffff1007fffffffffffffffffcf
3ffff0000000ffffffffffffc7fffffff001fffffffc007ffffff2003fffffffffffffffffc5
3fc000000000ffffffffffffe3ffffffe000fffffff8003ffffff0001fffffffffffffffffca
3ffff0000000fffffffffffff0ffffffc000000000000000000000000fffffffffffffffffcf
3ffff00c0000fffffffffffffc7fffff80000000000000000000000007ffffffffffffffffc0
3ffff03c0000fffffffffffffe40ffff80000aaaaaa0000aaaaaa00007ffffffffffffffffc0
3ffff0fc0000ffffffffffffff70ffff80001555554000055555500007ffffffffffffffffcf
3ffff3fc0000ffffffffffffffb8ffff80000000000000000000000007ffffffffffffffffc0
3ffffffc0000ffffffffffffff90ffff80000000000000000000000007ffffffffffffffffc0
3fffffffffffffffffffffffff80ffff80003fffffe0000ffffff00007ffffffffffffffffcf
3fffffffffffffffffffffffff80ffff80003fffffe0000ffffff00007ffffffffffffffffc0
3fffffffffffffffffffffffff80ffff80003fffffe0000ffffff00007ffffffffffffffffc0
3fffffffffffffffffffffffffffffffc0007ffffff0001ffffff8000fffffffffffffffffcf
3fffffffffffffffffffffffffffffffe000fffffff8003ffffffc001fffffffffffffffffcf
3ffffffffffffffffffffffffffffffff001fffffffc007ffffffe003fffffffffffffffffcf
3ffffffffffffffffffffffffffffffff803fffffffe00ffffffff007fffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3ffffffffffffffffffffffffffffffffffffffffffffffffc07fffffffff01fffffffff80ce
3ffffffffffffffffffffffffffffffffffffffffffffffffc07fffffffff01fffffffff80ce
3ffffffffffffffffffffffffffffffffffffffffffffffffc07fffffffff01fffffffff80ce
3ffffffffffffffffffffffffffffffffffffffffffffffffc000000000000000000000000ce
3ffffffffffffffffffe03fffffff80fffffff80fffffffffc000000000000000000000000ce
3ffffffffffffffffffefbfffffffbefffffffbefffffffffc055555555550155555555500ce
3ffffffffffffffffffefbfffffffbefffffffbefffffffffc02aaaaaaaaa00aaaaaaaaa80ce
3ffffffffffffffffffef800000003e00000003effffffffff955555555555555555555547ce
3ffffffffffffffffffef800000003e00000003effffffffff8aaaaaaaaaaaaaaaaaaaaaa7ce
3ffffffffffffffffffef955555553e55555553effffffffff955555555555555555555547ce
3ffffffffffffffffffe02aaaaaaa80aaaaaaa80ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547c0
3fffffff80000fffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3fffffff80000fffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffe7f9fffcfffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffe9f9fffcfffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffee79fffcfffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffef99fffcfffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffefe1fffcfffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ff800ff9fffcfffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffefe1fffcfffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffef99fffcfffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffee79fffcfffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffe9f9fffcfffffffc5555555555555555547ffffffffff955555555555555555555547c0
3ffffe7f80000fffffffcaaaaaaaaaaaaaaaaaa7fffffffffc02aaaaaaaaaaaaaaaaaaaa80c0
3fffffff80000fffffffc5555555555555555547fffffffffc055555555555555555555500c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7fffffffffc02aaaaaaaaaaaaaaaaaaaa80c0
3fffffffffffffffffffc5555555555555555547fffffffffc055555555555555555555500c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7fffffffffc02aaaaaaaaaaaaaaaaaaaa80c0
3fffffffffffffffffffc5555555555555555547fffffffffc055555555555555555555500c0
3ffffffffffffffffffe02aaaaaaaaaaaaaaaa80fffffffffc02aaaaaaaaaaaaaaaaaaaa80c0
3ffffffffffffffffffef955555555555555553effffffffff955555555555555555555547c0
3ffffffffffffffffffefaaaaaaaaaaaaaaaaabeffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffffffffffffffffef955555555555555553effffffffff955555555555555555555547c0
3ffffffffffffffffffefaaaaaaaaaaaaaaaaabeffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3ffffffffffffffffffef955555555555555553effffffffff955555555555555555555547c0
3ffffffffffffffffffe02aaaaaaaaaaaaaaaa80ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7cf
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547cf
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c5
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c0
3fffffffffffffffffffc5555555555555555547ffffffffff955555555555555555555547c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7ffffffffff8aaaaaaaaaaaaaaaaaaaaaa7c4
3fffffffffffffffffffc5555555555555555547fffffffffc055555555550155555555500c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7fffffffffc02aaaaaaaaa00aaaaaaaaa80c0
3fffffffffffffffffffc5555555555555555547fffffffffc000000000000000000000000c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7fffffffffc000000000000000000000000c0
3fffffffffffffffffffc5555555555555555547fffffffffc07fffffffff01fffffffff80c0
3fffffffffffffffffffcaaaaaaaaaaaaaaaaaa7fffffffffc07fffffffff01fffffffff80c0
3fffffffffffffffffffc5555555555555555547fffffffffc07fffffffff01fffffffff80c0
3ffffffffffffffffffe02aaaaaaa80aaaaaaa80ffffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffef955555553e55555553effffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffef800000003e00000003effffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffef800000003e00000003effffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffefbfffffffbefffffffbeffffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffefbfffffffbefffffffbeffffffffffffffffffffffffffffffffffc0
3ffffffffffffffffffe03fffffff80fffffff80ffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffce
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc2
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc2
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc2
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0
0000000000000000000000000000000000000000000000000000000000000000000000000002
0000000000000000000000000000000000000000000000000000000000000000000000000000

showpage
%%Trailer

%%EndDocument
 GE /Times-Bold SF
8280 23352 MT
(Figure 1-2:)SH
/Times-Roman SF
14053 XM
(Different types of selection objects.)
80 W( Squares)
436 W( are for primitive graphical objects, circles are)81 W
14053 24548 MT
(for aggregadgets, and arrows are for objects too small to accommodate grow boxes.)SH
/Symbol SF
10249 26624 MT
(\267)SH
/Times-Roman SF
11030 XM
(Secondary Selection \050middledown, *sec-select-one-obj*\051:)
286 W( Same as primary selection but)287 W
11030 27820 MT
(makes a secondary selection.)SH
/Symbol SF
10249 29714 MT
(\267)SH
/Times-Roman SF
11030 XM
(Add to Primary Selection \050shift-leftdown,)
75 W( *prim-add-to-select*\051: Same as Primary Selection)74 W
11030 30910 MT
(except previously selected objects remain selected.)SH
/Symbol SF
10249 32804 MT
(\267)SH
/Times-Roman SF
11030 XM
(Add to Secondary Selection \050shift-middledown, *sec-add-to-select*\051: Same as)
9 W( add to primary)10 W
11030 34000 MT
(selection but adds to secondary selection.)SH
/Symbol SF
10249 35894 MT
(\267)SH
/Times-Roman SF
11030 XM
(Deselect Primary Selection \050control-leftdown, *primary-deselection-button*\051:  This)
9 W( operation)8 W
11030 37090 MT
(allows the user to deselect primary)
13 W( selections. The user can either point at a specific object or)14 W
11030 38286 MT
(sweep out a rectangular region, in which case all objects that intersect this region will)
155 W( be)154 W
11030 39482 MT
(deselected \050if they are primary selections\051.)SH
/Symbol SF
10249 41376 MT
(\267)SH
/Times-Roman SF
11030 XM
(Deselect Secondary)
122 W( Selection \050control-middledown, *secondary-deselection-button*\051: Same)123 W
11030 42572 MT
(as Deselect Primary Selection except secondary selections are deselected.)SH
/Symbol SF
10249 44466 MT
(\267)SH
/Times-Roman SF
11030 XM
(Primary Select Covered Object)
87 W( \050shift-control-leftdown, *prim-push-sel-under-button*\051: This)86 W
11030 45662 MT
(operation allows the user to select covered)
61 W( objects. When the user points at a particular area)62 W
11030 46858 MT
(of the screen, Lapidary determines which object is currently selected, and then deselects it)125 W
11030 48054 MT
(and primary selects the first object that it covers.)
118 W( If no object under the mouse is selected,)119 W
11030 49250 MT
(Lapidary primary selects the top object.  If multiple objects under the mouse)
140 W( are selected,)139 W
11030 50446 MT
(Lapidary finds the first unselected object which is under a selected object, selects)
301 W( the)302 W
11030 51642 MT
(unselected object, and deselects the topmost selected object.)SH
/Symbol SF
10249 53536 MT
(\267)SH
/Times-Roman SF
11030 XM
(Secondary Select)
148 W( Covered Object \050shift-control-middledown, *sec-push-sel-under-button*\051:)147 W
11030 54732 MT
(Same as Primary Select Covered Object except a secondary selection is made.)SH
/Symbol SF
10249 56626 MT
(\267)SH
/Times-Roman SF
11030 XM
(Move Object \050leftdown, *move-button*\051: This operation allows the)
114 W( user to move an object)115 W
11030 57822 MT
(around the window. The user must point at one of the eight "grow" boxes around the)270 W
11030 59018 MT
(perimeter of box objects, or one of the three "grow" boxes attached to line objects or)
156 W( the)157 W
11030 60214 MT
(arrow if the object is too small to contain)
97 W( grow boxes. If the object is a box object and the)96 W
11030 61410 MT
(user points at one of the corner boxes, the object can)
20 W( move in any direction, if the user points)21 W
11030 62606 MT
(at one of the side boxes, the object can move in only one direction)
10 W( \050along the x-axis if the left)9 W
11030 63802 MT
(or right side is chosen and along the y-axis if the top or bottom)
1 W( side is chosen\051. If the object is)2 W
11030 64998 MT
(a line object, Lapidary will attach the mouse cursor to the point designated by the grow)
63 W( box)62 W
11030 66194 MT
(\050either an endpoint of the line or its midpoint\051 and)
147 W( move the line in any direction.  If the)148 W
11030 67390 MT
(object is undersized)
60 W( so that the object does not have grow boxes but instead is pointed at by)59 W
11030 68586 MT
(an arrow, then pointing at the arrow will cause the cursor to be attached to the)
151 W( northwest)152 W
11030 69782 MT
(corner of the object and the object can be moved in any direction.)SH
/Symbol SF
10249 71676 MT
(\267)SH
/Times-Roman SF
11030 XM
(Grow Object)
262 W( \050middledown, *grow-button*\051: This operation allows the user to resize an)261 W
ES
%%Page: 542 5
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 542)
SH( Lapidary)830 W
41121 XM
(Getting Started)
SH( Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
11 SS 
8870 7955 MT
(object. The user must point at)
159 W( one of the eight "grow" boxes around the perimeter of the)160 W
8870 9151 MT
(object if the object)
102 W( is a box, one of the endpoint "grow" boxes attached to the object if the)101 W
8870 10347 MT
(object is a line, or the arrow that points at the object)
65 W( if the object is too small to contain the)66 W
8870 11543 MT
(grow boxes. If the object is a box object and the user points at one of the corner boxes,)
50 W( both)49 W
8870 12739 MT
(the object's width and height)
23 W( can change, if the user points at one of the side boxes, only one)24 W
8870 13935 MT
(of the object's dimensions will change \050the width if the left or right side is chosen, the)
25 W( height)24 W
8870 15131 MT
(if the top or bottom side is)
135 W( chosen\051. If the object is a line object, Lapidary will attach the)136 W
8870 16327 MT
(mouse cursor to the point designated by the)
47 W( grow box and move that endpoint while holding)46 W
8870 17523 MT
(the other endpoint fixed.  If the object is undersized so that the object does not have)
115 W( grow)116 W
8870 18719 MT
(boxes but)
6 W( instead is pointed at by an arrow, then pointing at the arrow will cause the cursor to)5 W
8870 19915 MT
(be attached to the northwest corner of the object and the object's width and height)
61 W( will both)62 W
8870 21111 MT
(change.)SH
/Symbol SF
8089 23005 MT
(\267)SH
/Times-Roman SF
8870 XM
(Object Creation \050rightdown, *obj-creation-button*\051: The)
223 W( user sweeps out a region of the)222 W
8870 24201 MT
(screen and Lapidary creates the object selected in the shapes menu.)SH
/Symbol SF
8089 26095 MT
(\267)SH
/Times-Roman SF
8870 XM
(Text Editing \050rightdown, *obj-creation-button*\051: The user can edit a selected)
94 W( text object by)95 W
8870 27291 MT
(pointing at it and clicking with)
58 W( the object creation button.  The user can use any text editing)57 W
8870 28487 MT
(command described in the interactors manual and clicks down on the mouse button)
270 W( to)271 W
8870 29683 MT
(indicate that editing is complete.)SH
14 /Times-Bold AF
6120 33501 MT
(1.4. Selection Techniques)SH
11 /Times-Roman AF
6120 34697 MT
(A number of features have)
513 W( been added to make it easier to select objects and to perform)512 W
6120 35893 MT
(instancing/duplication on selected objects. The most obvious change is that users can now select either)
57 W( a)58 W
6120 37089 MT
(``leaves'' or ``top-level objects'' selection mode in the editor menu \050Figure 1-3\051. ``Leaves'' mode)
38 W( causes)37 W
6120 38285 MT
(Lapidary to select leaf elements of an aggregate,)
177 W( while ``top-level objects'' mode causes Lapidary to)178 W
6120 39481 MT
(select top-level aggregates \050objects)
110 W( that do not belong to an aggregate will be selected in either mode\051.)109 W
6120 40677 MT
(Additional clicks over an object will cause Lapidary to cycle through the aggregate hierarchy)
82 W( as before.)83 W
6120 41873 MT
(For example, when the user clicks on the label shown in Figure 1-4.a, and Lapidary is)
193 W( in "top-level)192 W
6120 43069 MT
(objects" mode, the entire list element is selected \050Figure 1-5.a\051.)
80 W( If the user clicks on the label again, the)81 W
6120 44265 MT
(label is selected \050Figure 1-5.b\051. Clicking once more with the)
247 W( mouse causes the key-box to become)246 W
6120 45461 MT
(selected \050Figure 1-5.c\051. Finally,)
73 W( one more click causes the list element to be selected, at which point the)74 W
6120 46657 MT
(cycle repeats itself. In "leaves" mode, the label would)
80 W( be the first object selected, then the key box, and)79 W
6120 47853 MT
(finally the list element.)SH
46800 50 6120 50004 UL
7 10 0 8100 85177 GB 
%%BeginDocument: lapidary/editor-win.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: editor menu
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 14, 1993, 8:00 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 134 319 478 474
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
62 402 translate

%
% Begin new window
%
gsave
0 0 344 155 ClipToRectangle
gsave
0 0 344 155 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(editor menu) 0 0 340 130 2 23 2 2 DrawGenericWindowFrame
0 0 340 130 ClipToRectangle
gsave
0 0 37 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
5 0 -11 27 14 false [1 1 1] [1 1 1] (File) 12 /Courier DrawText
37 0 38 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
42 0 -11 28 14 false [1 1 1] [1 1 1] (Edit) 12 /Courier DrawText
75 0 79 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
80 0 -11 69 14 false [1 1 1] [1 1 1] (Properties) 12 /Courier DrawText
154 0 58 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
159 0 -11 48 14 false [1 1 1] [1 1 1] (Arrange) 12 /Courier DrawText
212 0 85 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 0 -11 75 14 false [1 1 1] [1 1 1] (Constraints) 12 /Courier DrawText
297 0 43 14 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
302 0 -11 33 14 false [1 1 1] [1 1 1] (Other) 12 /Courier DrawText
180 -30 -41 109 14 false [0 0 0] [1 1 1] (Test/Build Mode:) 12 /Courier DrawText
201.5 -69.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
196.5 -64.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
196.5 -64.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
218 -60 -71 27 14 false [0 0 0] [1 1 1] (test) 12 /Courier DrawText
201.5 -102.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
196.5 -97.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
196.5 -97.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
218 -93 -104 35 14 false [0 0 0] [1 1 1] (build) 12 /Courier DrawText
196.5 -97.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
[0 0 0] 0 0 [] 1 170 -130 170 0 DrawLine
10 -30 -41 101 14 false [0 0 0] [1 1 1] (Selection Mode:) 12 /Courier DrawText
31.5 -69.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
26.5 -64.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
26.5 -64.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
48 -60 -71 40 14 false [0 0 0] [1 1 1] (leaves) 12 /Courier DrawText
31.5 -102.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
26.5 -97.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
26.5 -97.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
48 -93 -104 117 14 false [0 0 0] [1 1 1] (top-level objects) 12 /Courier DrawText
26.5 -97.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier Helvetica-Bold 
%%BoundingBox: 134 319 478 474

%%EndDocument
 GE /Times-Bold SF
6120 64599 MT
(Figure 1-3:)SH
/Times-Roman SF
12406 XM
(The user can)
238 W( cause Lapidary to select leaves of aggregates or top-level aggregates by)239 W
11893 65795 MT
(choosing the appropriate selection mode in the editor menu window.)SH
46800 50 6120 67747 UL
6120 71041 MT
(The user can also select the aggregates of covered objects. Previously only leaf elements)
192 W( of covered)193 W
ES
%%Page: 543 6
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 1.4)
SH( Selection)
1800 W( Techniques)SH
51386 XM
(Page 543)SH
46800 50 8280 4486 UL
11 SS 
7 10 0 -6085 51650 GB 
%%BeginDocument: lapidary/agg-hierarchy-a.PS
%!PS-Adobe-2.0
%%Title: Drawing Window 1
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Feb 22, 1993, 10:26 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 212 351 399 442
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
140 -278 translate
gsave
0 648 187 91 ClipToRectangle
0 0 translate
gsave
14 635 91 47 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
104 635 23 47 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 160 584 115 612 DrawLine
155 593 160 584 149 585 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
50 622 607 19 20 0 false 0 0 0 false 0 0 0 false (24) 18 /Courier-Bold DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold 
%%BoundingBox: 212 351 399 442

%%EndDocument
 GE 7 10 0 16805 44860 GB 
%%BeginDocument: lapidary/agg-hierarchy-b.PS
%!PS-Adobe-2.0
%%Title: Drawing Window 2
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Feb 22, 1993, 10:50 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 254 540 538
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.9397590361445783 0.9397590361445783 scale

%
% Begin new window
%
0 -194 translate
gsave
0 690 498 302 ClipToRectangle
0 0 translate
gsave
138 670 655 130 20 0 false 0 0 0 false 0 0 0 false (list element) 18 /Courier-Bold DrawText
76 601 586 77 20 0 false 0 0 0 false 0 0 0 false (key-box

) 18 /Courier-Bold DrawText
244 601 586 121 20 0 false 0 0 0 false 0 0 0 false (pointer-box) 18 /Courier-Bold DrawText
211 532 517 53 20 0 false 0 0 0 false 0 0 0 false (frame) 18 /Courier-Bold DrawText
330 532 517 76 20 0 false 0 0 0 false 0 0 0 false (pointer) 18 /Courier-Bold DrawText
41 532 517 53 20 0 false 0 0 0 false 0 0 0 false (frame) 18 /Courier-Bold DrawText
125 532 517 52 20 0 false 0 0 0 false 0 0 0 false (label) 18 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 114 601 203 651 DrawLine
125 602 114 601 121 610 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 304 601 203 651 DrawLine
297 609 304 601 293 601 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 67 532 114 582 DrawLine
78 536 67 532 70 542 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 151 532 114 582 DrawLine
149 543 151 532 141 537 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 237 532 304 582 DrawLine
248 534 237 532 242 542 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 368 532 304 582 DrawLine
363 542 368 532 357 534 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
223 499 23 47 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
16 499 91 47 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
142 486 471 19 20 0 false 0 0 0 false 0 0 0 false (24) 18 /Courier-Bold DrawText
427 427 430 416 419 419 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 323 463 368 513 DrawLine
334 467 323 463 326 473 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 429 463 368 513 DrawLine
424 473 429 463 418 465 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
302 463 448 42 20 0 false 0 0 0 false 0 0 0 false (line) 18 /Courier-Bold DrawText
380 463 448 98 20 0 false 0 0 0 false 0 0 0 false (arrowhead) 18 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 342 408 304 434 DrawLine
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold 
%%BoundingBox: 72 254 540 538

%%EndDocument
 GE 12960 28832 MT
(\050a\051)SH
33480 XM
(\050b\051)SH
/Times-Bold SF
8280 30584 MT
(Figure 1-4:)SH
/Times-Roman SF
14328 XM
(A list element \050a\051 and the objects used to build this list element \050b\051.)SH
46800 50 8280 32536 UL
46800 50 8280 34487 UL
6 10 0 13320 62284 GB 
%%BeginDocument: lapidary/selection.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 7
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 15, 1993, 3:12 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 343 540 450
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.84 0.84 scale
0 448 translate

%
% Begin new window
%
gsave
0 0 555 127 ClipToRectangle
gsave
0 0 555 127 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 555 127 ClipToRectangle
gsave
14 -26 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
53 -43 -60 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
108 -26 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 165 -106 122 -53 DrawLine
163 -95 {
  { 155 -101 165 -106 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
196 -26 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
235 -43 -60 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
290 -26 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 347 -106 304 -53 DrawLine
345 -95 {
  { 337 -101 347 -106 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
378 -26 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
417 -43 -60 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
472 -26 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 529 -106 486 -53 DrawLine
527 -95 {
  { 519 -101 529 -106 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
14.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
91.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
166.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
166.5 -67.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
166.5 -107.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
91.5 -107.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
14.5 -107.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
14.5 -67.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
[0 0 0] 0 0 [] 1 225 -53 215 -53 DrawLine
225 -48 {
  { 225 -58 235 -53 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
378.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
426.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
472.5 -26.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
472.5 -53.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
472.5 -79.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
426.5 -79.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
378.5 -79.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
378.5 -53.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold 
%%BoundingBox: 72 343 540 450

%%EndDocument
 GE 21780 43456 MT
(\050a\051)SH
29880 XM
(\050b\051)SH
39780 XM
(\050c\051)SH
/Times-Bold SF
8280 45208 MT
(Figure 1-5:)SH
/Times-Roman SF
14392 XM
(As the user repeatedly clicks the)
64 W( mouse button over an object, the selection cycles through)63 W
14053 46404 MT
(the aggregate)
16 W( hierarchy shown in Figure 1-4. If Lapidary is in "top-level objects" mode, then)17 W
14053 47600 MT
(the list element is initially selected)
44 W( \050a\051. A second click selects the label \050b\051, and a third click)43 W
14053 48796 MT
(selects the key-box \050c\051.)SH
46800 50 8280 50748 UL
8280 52499 MT
(objects could be selected. As)
20 W( explained in the Lapidary reference manual, covered objects can be selected)19 W
8280 53695 MT
(using either)2620 W
/Courier SF
18958 XM
(shift-control-leftdown)SH
/Times-Roman SF
36374 XM
(for primary selections or)2621 W
/Courier SF
8280 54891 MT
(shift-control-middledown)SH
/Times-Roman SF
24914 XM
(for secondary selections \050these bindings can be changed by)518 W
8280 56087 MT
(modifying the mouse-bindings.lisp file in the)
98 W( lapidary directory\051. In ``top-level objects'' mode, the top-)99 W
8280 57283 MT
(level aggregate of a covered aggregate will now be chosen.  If the add to selection)
60 W( mouse buttons \050shift-)59 W
8280 58479 MT
(leftdown for primary selections and shift-middledown for secondary selections\051 are clicked while the)194 W
8280 59675 MT
(mouse cursor is over one of the covered object's selection handles, then the selection will cycle)
71 W( through)70 W
8280 60871 MT
(the aggregate hierarchy \050Figure 1-6\051.)SH
8280 63169 MT
(Finally, Lapidary now supports duplicating and instancing operations on the selection handles \050as)
40 W( before,)39 W
8280 64365 MT
(the operations can also be performed by selecting them from the pulldown ``edit'' menu in)
149 W( the editor)150 W
8280 65561 MT
(menu window\051. If the user clicks)
172 W( the appropriate mouse button while over a selection handle \050Figure)171 W
8280 66757 MT
(1-7.a\051, either a duplicate \050)10 W
/Courier SF
(shift-rightdown)SH
/Times-Roman SF
(\051 or instance \050)11 W
/Courier SF
(control-rightdown)SH
/Times-Roman SF
(\051 of the object will)11 W
8280 67953 MT
(be created and the user can move the object to the appropriate location in the window,)
36 W( or even to another)35 W
8280 69149 MT
(window \050Figures 1-7.b and 1-7.c\051.)
203 W( The)
683 W( selection handle constrains the initial movement of the new)204 W
8280 70345 MT
(object, which facilitates the alignment of objects.)SH
ES
%%Page: 544 7
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 544)
SH( Lapidary)830 W
41121 XM
(Getting Started)
SH( Chapter)
1550 W( 1)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
6 10 0 11160 35712 GB 
%%BeginDocument: lapidary/covered-selection.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 8
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 15, 1993, 3:40 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 345 540 446
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.84 0.84 scale
0 447 translate

%
% Begin new window
%
gsave
0 0 558 121 ClipToRectangle
gsave
0 0 558 121 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 558 121 ClipToRectangle
gsave
21 -22 95 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
60 -39 -56 17 21 false [1 1 1] [1 1 1] (24) 18 /Times-Bold DrawText
115 -22 29 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
[0 0 0] 0 0 [] 1 172 -102 129 -49 DrawLine
170 -91 {
  { 162 -97 172 -102 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
203 -22 95 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
242 -39 -56 17 21 false [1 1 1] [1 1 1] (24) 18 /Times-Bold DrawText
297 -22 29 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
[0 0 0] 0 0 [] 1 354 -102 311 -49 DrawLine
352 -91 {
  { 344 -97 354 -102 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
385 -22 95 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
424 -39 -56 17 21 false [1 1 1] [1 1 1] (24) 18 /Times-Bold DrawText
479 -22 29 54 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
[0 0 0] 0 0 [] 1 536 -102 493 -49 DrawLine
534 -91 {
  { 526 -97 536 -102 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[1 1 1] 0 0 [] 1 143 -66 129 -49 DrawLine
[1 1 1] 0 0 [] 1 115 -75 115 -22 DrawLine
[1 1 1] 0 0 [] 1 297 -75 297 -22 DrawLine
[1 1 1] 0 0 [] 1 326 -66 311 -49 DrawLine
[1 1 1] 0 0 [] 1 479 -75 479 -22 DrawLine
[1 1 1] 0 0 [] 1 508 -66 493 -49 DrawLine
18 -19 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
80 -19 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
140 -19 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
140 -46 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
140 -72 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
80 -72 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
18 -72 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
18 -46 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
385.5 -22.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
433.5 -22.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
479.5 -22.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
479.5 -49.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
479.5 -75.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
433.5 -75.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
385.5 -75.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
385.5 -49.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
[1 1 1] 0 0 [] 1 232 -49 222 -49 DrawLine
232 -44 {
  { 232 -54 242 -49 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold 
%%BoundingBox: 72 345 540 446

%%EndDocument
 GE 19206 16764 MT
(\050a\051)SH
28620 XM
(\050b\051)SH
36720 XM
(\050c\051)SH
/Times-Bold SF
6120 18516 MT
(Figure 1-6:)SH
/Times-Roman SF
11893 XM
(Selecting a covered object in ``leaves'' mode.  The label is covered by an xor)
182 W( feedback)183 W
11893 19712 MT
(object, so the feedback object is the initial selection)
989 W( \050a\051. Clicking the)988 W
/Courier SF
11893 20908 MT
(shift-control-leftdown)SH
/Times-Roman SF
26907 XM
(mouse button pushes the)
219 W( selection down to the covered)220 W
11893 22104 MT
(label \050b\051. Clicking the add to selection button \050)25 W
/Courier SF
(shift-leftdown)SH
/Times-Roman SF
42193 XM
(over the feedback arrow)24 W
11893 23300 MT
(causes the selection to cycle up)
50 W( to the next level in the aggregate hierarchy, in this case, the)51 W
11893 24496 MT
(key-box \050c\051.)SH
46800 50 6120 26448 UL
46800 50 6120 28399 UL
35 100 0 3760 45996 GB 
%%BeginDocument: lapidary/duplicating-a.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 4
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 11, 1993, 9:24 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 91 311 521 480
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
19 408 translate

%
% Begin new window
%
gsave
0 0 430 169 ClipToRectangle
gsave
0 0 430 169 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(Drawing Window 4) 0 0 426 144 2 23 2 2 DrawGenericWindowFrame
0 0 426 144 ClipToRectangle
gsave
[0 0 0] 0 0 [] 1 175 -72 179 -79 DrawLine
171 -74 {
  { 179 -70 171 -63 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
12 -19 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
51 -36 -53 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
106 -19 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 163 -99 120 -46 DrawLine
161 -88 {
  { 153 -94 163 -99 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
12.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
89.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
89.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
12.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
12.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold Helvetica-Bold 
%%BoundingBox: 91 311 521 480

%%EndDocument
 GE 35 100 0 18810 45996 GB 
%%BeginDocument: lapidary/duplicating-b.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 4
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 11, 1993, 9:25 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 91 311 521 480
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
19 408 translate

%
% Begin new window
%
gsave
0 0 430 169 ClipToRectangle
gsave
0 0 430 169 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(Drawing Window 4) 0 0 426 144 2 23 2 2 DrawGenericWindowFrame
0 0 426 144 ClipToRectangle
gsave
[0 0 0] 0 0 [] 1 387 -69 391 -76 DrawLine
383 -71 {
  { 391 -67 383 -60 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
12 -19 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
51 -36 -53 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
106 -19 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 163 -99 120 -46 DrawLine
161 -88 {
  { 153 -94 163 -99 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
228 -19 153 82 [0 0 0] 0 0 [4 4] 1 null DrawRectangle
12.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
89.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
164.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
89.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
12.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
12.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold Helvetica-Bold 
%%BoundingBox: 91 311 521 480

%%EndDocument
 GE 35 100 0 33860 45996 GB 
%%BeginDocument: lapidary/duplicating-c.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 4
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 11, 1993, 9:26 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 91 311 521 480
%%%Pages: 1
%%EndComments


/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
19 408 translate

%
% Begin new window
%
gsave
0 0 430 169 ClipToRectangle
gsave
0 0 430 169 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(Drawing Window 4) 0 0 426 144 2 23 2 2 DrawGenericWindowFrame
0 0 426 144 ClipToRectangle
gsave
[0 0 0] 0 0 [] 1 393 -72 397 -79 DrawLine
389 -74 {
  { 397 -70 389 -63 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
12 -19 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
51 -36 -53 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
106 -19 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 163 -99 120 -46 DrawLine
161 -88 {
  { 153 -94 163 -99 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
228 -19 95 54 [0 0 0] 0 0 [] 1 null DrawRectangle
267 -36 -53 17 21 false [0 0 0] [1 1 1] (24) 18 /Times-Bold DrawText
322 -19 29 54 [0 0 0] 0 0 [] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 379 -99 336 -46 DrawLine
377 -88 {
  { 369 -94 379 -99 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
228.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
305.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
380.5 -19.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
380.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
380.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
305.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
228.5 -100.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
228.5 -60.5 8.5 8.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold Helvetica-Bold 
%%BoundingBox: 91 311 521 480

%%EndDocument
 GE 14220 36863 MT
(\050a\051)SH
29520 XM
(\050b\051)SH
43920 XM
(\050c\051)SH
/Times-Bold SF
6120 38615 MT
(Figure 1-7:)SH
/Times-Roman SF
12366 XM
(Objects can be duplicated or instanced by clicking on one of the selection handles)
198 W( \050a\051,)197 W
11893 39811 MT
(dragging the new object to the appropriate location \050b\051, and dropping it \050c\051.)SH
46800 50 6120 41763 UL
ES
%%Page: 545 8
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.1)
SH( File)1800 W
51386 XM
(Page 545)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(2. Editor Menu Commands)SH
11 /Times-Roman AF
8280 10524 MT
(The commands in Lapidary's pull)
133 W( down menu \050Figure 2-1\051 provide a set of commands for saving and)134 W
8280 11720 MT
(restoring objects, manipulating aggregadgets, applying constraints, and editing properties.)SH
7 10 0 10260 42736 GB 
%%BeginDocument: lapidary/editor-menu.PS
%!PS-Adobe-2.0 EPSF 2.0
%%Title: editor menu
%%Creator: Make-PS-File -- Garnet Version 2.1beta
%%CreationDate: Nov 2, 1992, 2:45 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 136 366 476 426
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
64 -294 translate
gsave
0 648 340 60 ClipToRectangle
0 0 translate
gsave
0 648 37 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
5 648 637 27 14 1 false 0 0 0 false 0 0 0 false (File) 12 /Courier DrawText
37 648 38 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
42 648 637 28 14 1 false 0 0 0 false 0 0 0 false (Edit) 12 /Courier DrawText
75 648 79 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
80 648 637 69 14 1 false 0 0 0 false 0 0 0 false (Properties) 12 /Courier DrawText
154 648 58 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
159 648 637 48 14 1 false 0 0 0 false 0 0 0 false (Arrange) 12 /Courier DrawText
212 648 85 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
217 648 637 75 14 1 false 0 0 0 false 0 0 0 false (Constraints) 12 /Courier DrawText
297 648 43 14 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
302 648 637 33 14 1 false 0 0 0 false 0 0 0 false (Other) 12 /Courier DrawText
156.5 604.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
151.5 609.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
151.5 609.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
108 614 603 27 14 0 false 0 0 0 false 0 0 0 false (test) 12 /Courier DrawText
229.5 604.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
224.5 609.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
224.5 609.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
173 614 603 35 14 0 false 0 0 0 false 0 0 0 false (build) 12 /Courier DrawText
224.5 609.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
grestore

grestore

0 648 340 60 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 136 366 476 426

%%EndDocument
 GE /Times-Bold SF
8280 18868 MT
(Figure 2-1:)SH
/Times-Roman SF
14053 XM
(Lapidary's editor menu)SH
14 /Times-Bold AF
8280 22686 MT
(2.1. File)SH
11 /Symbol AF
10249 24264 MT
(\267)SH
/Courier SF
11030 XM
(Save Gadget:)7 W
/Times-Roman SF
19239 XM
(Objects are written out using)7 W
/Courier SF
32257 XM
(opal:write-gadget)SH
/Times-Roman SF
(, so the file contains)6 W
11030 25460 MT
(a series of create-instance)
76 W( calls. The value in the object's)77 W
/Courier SF
37114 XM
(:known-as)SH
/Times-Roman SF
43406 XM
(slot is passed as the)77 W
11030 26656 MT
(name parameter to create-instance. For)
408 W( example, if the object's)407 W
/Courier SF
42702 XM
(:known-as)SH
/Times-Roman SF
49324 XM
(slot is)407 W
/Courier SF
11030 27852 MT
(:white-rect)SH
/Times-Roman SF
18565 XM
(and the object is a rectangle, the first line of the create-instance would be)SH
8 /Courier AF
12950 29017 MT
(\050create-instance 'white-rect opal:rectangle\051)SH
11 /Times-Roman AF
11030 30911 MT
(Primary selections are saved before secondary)
164 W( selections, so it is best to make prototypes)165 W
11030 32107 MT
(primary selections and instances of these prototypes secondary selections.)
43 W( The)
359 W( user can also)42 W
11030 33303 MT
(save an entire window by having no objects selected and typing in the string that)
16 W( appears in a)17 W
11030 34499 MT
(window's title bar or icon in the corresponding area of the dialog box.)SH
11030 36393 MT
(Lapidary looks at each saved object to)
68 W( determine if the object has any links which Lapidary)67 W
11030 37589 MT
(thinks should be)
54 W( parameters. If Lapidary finds any such links, it pops up the link parameters)55 W
11030 38785 MT
(dialog box and asks the user if these links should be)
50 W( made into parameters \050see Section 2.3\051.)49 W
11030 39981 MT
(Pressing either the)32 W
/Courier SF
19528 XM
(OK)SH
/Times-Roman SF
21156 XM
(or)SH
/Courier SF
22380 XM
(CANCEL)SH
/Times-Roman SF
26648 XM
(buttons in the link parameters dialog box allows Lapidary)33 W
11030 41177 MT
(to continue. The)17 W
/Courier SF
18535 XM
(CANCEL)SH
/Times-Roman SF
22787 XM
(button in the link parameters dialog box will not)
17 W( cause Lapidary to)16 W
11030 42373 MT
(discontinue the save operation, it will simply cause Lapidary to proceed to the next object.)SH
7 10 0 10260 77869 GB 
%%BeginDocument: lapidary/saving.PS
%!PS-Adobe-2.0
%%Title: Save File
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 2:13 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 148 302 464 490
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
76 -230 translate
gsave
0 648 316 188 ClipToRectangle
0 0 translate
gsave
9 640 625 94 20 0 false 0 0 0 false 0 0 0 false (Saving...) 18 /Courier-BoldOblique DrawText
20 606 595 60 14 0 false 0 0 0 false 0 0 0 false (Filename:) 12 /Courier-Bold DrawText
85 608 220 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 576 565 151 14 0.50 false 0 0 0 false 0 0 0 false (Top-level Gadget name:) 12 /Courier-Bold DrawText
176 578 129 18 0.50 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
185 576 565 77 14 0.50 false 0 0 0 false 0 0 0 false (TEMP-GADGET) 12 /Courier DrawText
20 516 505 89 14 0.50 false 0 0 0 false 0 0 0 false (Window Title:) 12 /Courier-Bold DrawText
114 518 191 18 0.50 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 486 475 89 14 0 false 0 0 0 false 0 0 0 false (Package name:) 12 /Courier-Bold DrawText
114 488 191 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
123 486 475 28 14 0 false 0 0 0 false 0 0 0 false (USER) 12 /Courier DrawText
193 637 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
188 642 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
191 639 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
207 637 626 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
254 637 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
249 642 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
252 639 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
254 637 626 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
134 543 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
129 548 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
132 545 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
20 543 532 104 14 0 false 0 0 0 false 0 0 0 false (Export Gadgets?) 12 /Courier-Bold DrawText
grestore

grestore

0 648 316 188 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Courier-BoldOblique 
%%BoundingBox: 148 302 464 490

%%EndDocument
 GE /Times-Bold SF
8280 58481 MT
(Figure 2-2:)SH
/Times-Roman SF
14053 XM
(Save file dialog box)SH
/Symbol SF
10249 60557 MT
(\267)SH
/Courier SF
11030 XM
(Add Gadget:)2 W
/Times-Roman SF
18569 XM
(Users may create objects in the)
2 W( lisp listener and then link them to a Lapidary)3 W
11030 61753 MT
(window.)SH
/Courier SF
15724 XM
(add-gadget)SH
/Times-Roman SF
22761 XM
(pops up a dialog box that requests the name of the object to be)162 W
11030 62949 MT
(added and the name)
38 W( of a window to place the object in \050Figure 2-3\051.  The name of the object)39 W
11030 64145 MT
(should be the one used in the call to)
165 W( create-instance.  For example, the object created by)164 W
/Courier SF
11030 65341 MT
(\050create-instance 'my-gadget opal:rectangle\051)397 W
/Times-Roman SF
40876 XM
(is named)
397 W( ``my-gadget''.)398 W
11030 66537 MT
(The name of the window)
72 W( should be the name that appears in the window's title bar or in its)71 W
11030 67733 MT
(icon.)SH
11030 69627 MT
(The user has the option of either adding the object itself or an instance of the)
203 W( object to)204 W
11030 70823 MT
(Lapidary. If the user decides to)
113 W( add the object itself and the object has instances, Lapidary)112 W
ES
%%Page: 546 9
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 546)
SH( Lapidary)830 W
37315 XM
(Editor Menu Commands)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 8100 41080 GB 
%%BeginDocument: lapidary/add-gadget.PS
%!PS-Adobe-2.0
%%Title: Add Gadget
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jul 22, 1992, 3:41 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 148 309 464 484
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def
        /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
76 -236 translate
gsave
0 648 316 175 ClipToRectangle
0 0 translate
gsave
9 640 625 172 20 0 false 0 0 0 false 0 0 0 false (Adding Gadget...) 18 /Courier-BoldOblique DrawText
20 606 595 74 14 0 false 0 0 0 false 0 0 0 false (Gadgetname:) 12 /Courier-Bold DrawText
99 608 206 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 578 567 75 14 0 false 0 0 0 false 0 0 0 false (Windowname:) 12 /Courier-Bold DrawText
100 580 205 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
109 578 567 111 14 0 false 0 0 0 false 0 0 0 false (Drawing Window 1) 12 /Courier DrawText
36.5 526.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
31.5 531.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
31.5 531.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
53 536 525 104 14 0 false 0 0 0 false 0 0 0 false (add this object) 12 /Courier DrawText
36.5 493.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
31.5 498.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
31.5 498.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
53 503 492 209 14 0 false 0 0 0 false 0 0 0 false (add an instance of this object) 12 /Courier DrawText
31.5 531.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
193 637 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
188 642 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
191 639 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
207 637 626 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
254 637 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
249 642 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
252 639 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
254 637 626 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
grestore

grestore

0 648 316 175 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Courier-BoldOblique 
%%BoundingBox: 148 309 464 484

%%EndDocument
 GE /Times-Bold SF
6120 21202 MT
(Figure 2-3:)SH
/Times-Roman SF
11893 XM
(Add gadget dialog box)SH
8870 23153 MT
(will pop up a)
363 W( warning box indicating that editing this object could have unintended)364 W
8870 24349 MT
(consequences on other applications)
129 W( that use this object. For example, it is better to add an)128 W
8870 25545 MT
(instance of)
99 W( a garnet gadgets text button rather than the actual button defined in the gadgets)100 W
8870 26741 MT
(package, since editing the actual button is likely)
173 W( to cause Lapidary to fail \050Lapidary uses)172 W
8870 27937 MT
(garnet gadgets text buttons\051.)SH
/Symbol SF
8089 29831 MT
(\267)SH
/Courier SF
8870 XM
(Quit:)SH
/Times-Roman SF
12497 XM
(Allows the user to exit Lapidary. It is suggested that)
52 W( before rebooting Lapidary, that)53 W
8870 31027 MT
(the user create a new lisp listener and reload Garnet.)SH
14 /Times-Bold AF
6120 34845 MT
(2.2. Edit)SH
11 /Symbol AF
8089 36423 MT
(\267)SH
/Courier SF
8870 XM
(Make Instance:)126 W
/Times-Roman SF
18637 XM
(Creates an instance of the selected object.  The selected object)
126 W( is the)125 W
8870 37619 MT
(new object's prototype.)SH
/Symbol SF
8089 39513 MT
(\267)SH
/Courier SF
8870 XM
(Make Copy:)73 W
/Times-Roman SF
15892 XM
(Creates a copy of the selected object.  The value of each slot in the selected)74 W
8870 40709 MT
(object will be copied to the new-object.  The new object will have the same)
47 W( prototype as the)46 W
8870 41905 MT
(selected object,)
206 W( and thus will inherit from the selected object's prototype rather than the)207 W
8870 43101 MT
(selected object.)SH
/Symbol SF
8089 44995 MT
(\267)SH
/Courier SF
8870 XM
(Delete Object:)SH
/Times-Roman SF
18385 XM
(Destroys all selected objects.)SH
/Symbol SF
8089 46889 MT
(\267)SH
/Courier SF
8870 XM
(Delete Window:)64 W
/Times-Roman SF
18513 XM
(Pops up a dialog box and asks the user to)
64 W( input the name of a window)63 W
8870 48085 MT
(that appears in a window's title bar or icon.  Lapidary then destroys the window.)SH
14 /Times-Bold AF
6120 51903 MT
(2.3. Properties)SH
11 /Times-Roman AF
6120 53099 MT
(Lapidary contains four property menus that control an object's line-style, filling-style, draw-function,)
23 W( and)24 W
6120 54295 MT
(font. The)
351 W( line-style and filling-style menus \050Figures 2-4 and 2-5\051)
38 W( provide a set of commonly used styles,)37 W
6120 55491 MT
(an "Other" option which prompts the)
81 W( user for the name of a style, and a "Constraint" option that allows)82 W
6120 56687 MT
(the user to enter a custom constraint)
10 W( that defines the style \050see Section 3 for information on how to enter a)9 W
6120 57883 MT
(custom constraint\051.  The color button pops up a color menu that allows the user to select a)
107 W( pre-defined)108 W
6120 59079 MT
(color or create a new color by mixing hues of red, green, and blue.)SH
/Symbol SF
8089 60657 MT
(\267)SH
/Courier SF
8870 XM
(Filling Style:)SH
/Times-Roman SF
18385 XM
(Allows the user to set the filling style of selected objects.)SH
/Symbol SF
8089 62551 MT
(\267)SH
/Courier SF
8870 XM
(Line Style:)SH
/Times-Roman SF
16405 XM
(Allows the user to set the line style of selected objects.)SH
/Symbol SF
8089 64445 MT
(\267)SH
/Courier SF
8870 XM
(Draw Function:)128 W
/Times-Roman SF
18641 XM
(Allows the user to set)
128 W( the draw function of all selected objects.  The)127 W
8870 65641 MT
(Opal chapter describes draw functions in more detail.)SH
/Symbol SF
8089 67535 MT
(\267)SH
/Courier SF
8870 XM
(Name Object:)28 W
/Times-Roman SF
17121 XM
(Requests a name from the user \050no quotes should be used\051, converts it)
28 W( to a)29 W
8870 68731 MT
(keyword, and stores it in the :known-as)
69 W( slot of the selected object \050if there is more than one)68 W
8870 69927 MT
(selected object,)
67 W( Lapidary will rename the last object the user selected; name object does not)68 W
8870 71123 MT
(distinguish between primary)
15 W( and secondary selections\051.  Lapidary also creates a link with this)14 W
ES
%%Page: 547 10
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.3)
SH( Properties)1800 W
51386 XM
(Page 547)SH
46800 50 8280 4486 UL
11 SS 
7 10 0 10260 43880 GB 
%%BeginDocument: lapidary/filling-properties.PS
%!PS-Adobe-2.0
%%Title: Filling Properties
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 5:30 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 269 431 524
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -196 translate
gsave
0 648 250 255 ClipToRectangle
0 0 translate
gsave
10 638 623 117 20 0 false 0 0 0 false 0 0 0 false (Fill-Style:) 18 /Courier-BoldOblique DrawText
45 606 595 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
38 425 414 38 14 0 false 0 0 0 false 0 0 0 false (Other:) 12 /Courier DrawText
93 428 142 18 0.50 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
125 593 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
120 598 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
123 595 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
139 593 582 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
186 593 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
181 598 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
184 595 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
186 593 582 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
150 523 55 35 0 0 0 0 false 0 0 [] 1 0 1.00 1.00 1.00 true DrawRectangle
165 638 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
141 555 79 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
136 560 79 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
139 557 73 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
141 555 544 69 14 0 false 0 0 0 false 0 0 0 false (Constraint) 12 /Courier DrawText
155 468 57 30 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
150 473 57 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
153 470 51 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
162 465 454 33 14 0 false 0 0 0 false 0 0 0 false (Color) 12 /Courier DrawText
30 608 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 578 55 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
30 548 55 20 0 0 0 0 false 0 0 [] 1 0.75 0 0 0 false DrawRectangle
30 518 55 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
30 488 55 20 0 0 0 0 false 0 0 [] 1 0.25 0 0 0 false DrawRectangle
30 458 55 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 428 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
28 610 59 24 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 250 255 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-BoldOblique 
%%BoundingBox: 181 269 431 524

%%EndDocument
 GE /Times-Bold SF
8280 26802 MT
(Figure 2-4:)SH
/Times-Roman SF
14053 XM
(Filling styles that can be attached to objects in Lapidary)SH
7 10 0 10260 66218 GB 
%%BeginDocument: lapidary/line-properties.PS
%!PS-Adobe-2.0
%%Title: Line Properties
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 5:29 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 181 246 431 546
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
109 -174 translate
gsave
0 648 250 300 ClipToRectangle
0 0 translate
gsave
125 593 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
120 598 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
123 595 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
139 593 582 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
186 593 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
181 598 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
184 595 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
186 593 582 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
10 638 623 117 20 0 false 0 0 0 false 0 0 0 false (Line-Style:) 18 /Courier-BoldOblique DrawText
141 555 79 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
136 560 79 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
139 557 73 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
141 555 544 69 14 0 false 0 0 0 false 0 0 0 false (Constraint) 12 /Courier DrawText
150 498 55 35 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
155 443 57 30 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
150 448 57 30 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
153 445 51 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
162 440 429 33 14 0 false 0 0 0 false 0 0 0 false (Color) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 80 598 35 598 DrawLine
0 0 0 0 false 0 0 [] 2 80 568 35 568 DrawLine
0 0 0 0 false 0 0 [] 4 80 538 35 538 DrawLine
0 0 0 0 false 0 0 [] 8 80 508 35 508 DrawLine
45 486 475 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
38 395 384 38 14 0 false 0 0 0 false 0 0 0 false (Other:) 12 /Courier DrawText
0 0 0 0 false 0 0 [1 1] 1 80 448 35 448 DrawLine
0 0 0 0 false 0 0 [4 4] 1 80 418 35 418 DrawLine
30 608 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 578 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 548 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 518 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 488 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 458 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 428 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 398 55 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
93 398 142 18 0.50 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
28 490 59 24 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 250 300 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-BoldOblique /Courier 
%%BoundingBox: 181 246 431 546

%%EndDocument
 GE /Times-Bold SF
8280 50750 MT
(Figure 2-5:)SH
/Times-Roman SF
14053 XM
(Line styles that can be attached to objects in Lapidary)SH
11030 52701 MT
(name in the object's parent that points to this object.  When an)
142 W( object is saved, it will be)143 W
11030 53897 MT
(assigned this name.)SH
/Symbol SF
10249 55791 MT
(\267)SH
/Courier SF
11030 XM
(List Properties:)291 W
/Times-Roman SF
22447 XM
(Brings up a property list for horizontal)
291 W( and vertical lists. This)290 W
11030 56987 MT
(property list allows the user to)
62 W( modify any of the customizable slots of an aggrelist. The list)63 W
11030 58183 MT
(of customizable slots can be found in the Aggrelists chapter.)SH
/Symbol SF
10249 60077 MT
(\267)SH
/Courier SF
11030 XM
(Text Properties:)158 W
/Times-Roman SF
22181 XM
(Allows the user to choose a standard Opal font, to request)
158 W( a font)157 W
11030 61273 MT
(from one of the directories on the user's font path,)
250 W( to request a font from an arbitrary)251 W
11030 62469 MT
(directory, or to enter a custom constraint that determines the font \050Figure 2-7\051.)
27 W( It)
327 W( also allows)26 W
11030 63665 MT
(the user to enter a custom constraint that determines the string of a text object.)SH
/Symbol SF
10249 65559 MT
(\267)SH
/Courier SF
11030 XM
(Parameters:)SH
/Times-Roman SF
18734 XM
(Allows the user to specify that one)
169 W( or more slots in an object should be)170 W
11030 66755 MT
(parameters \050Figure 2-8\051. A slot that)
18 W( is a parameter will have its value provided at run-time by)17 W
11030 67951 MT
(the application.  To create parameters, the user must make both)
104 W( a primary and a secondary)105 W
11030 69147 MT
(selection. The primary selection is the object whose slots are being made)
20 W( into parameters and)19 W
11030 70343 MT
(the secondary selection is the object that the parameters will retrieve their values from.)240 W
11030 71539 MT
(Typically the secondary selection)
90 W( will be the top-level aggregadget that contains the object,)89 W
ES
%%Page: 548 11
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 548)
SH( Lapidary)830 W
37315 XM
(Editor Menu Commands)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 7997 45420 GB 
%%BeginDocument: lapidary/draw-function.PS
%!PS-Adobe-2.0
%%Title: draw-function
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 12:53 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 88 246 523 546
%%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
16 -174 translate
gsave
0 648 435 300 ClipToRectangle
0 0 translate
gsave
13 538 409 169 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
58.5 570.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
53.5 575.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
53.5 575.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
10 580 569 27 14 0 false 0 0 0 false 0 0 0 false (Copy) 12 /Courier DrawText
123.5 570.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
118.5 575.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
118.5 575.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
82 580 569 20 14 0 false 0 0 0 false 0 0 0 false (Xor) 12 /Courier DrawText
188.5 570.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
183.5 575.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
183.5 575.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
146 580 569 21 14 0 false 0 0 0 false 0 0 0 false (And) 12 /Courier DrawText
253.5 570.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
248.5 575.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
248.5 575.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
220 580 569 12 14 0 false 0 0 0 false 0 0 0 false (Or) 12 /Courier DrawText
53.5 575.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
131.5 501.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
126.5 506.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
126.5 506.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
77 511 500 33 14 0 false 0 0 0 false 0 0 0 false (Clear) 12 /Courier DrawText
259.5 501.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
254.5 506.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
254.5 506.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
218 511 500 20 14 0 false 0 0 0 false 0 0 0 false (Set) 12 /Courier DrawText
387.5 501.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
382.5 506.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
382.5 506.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
332 511 500 34 14 0 false 0 0 0 false 0 0 0 false (No-Op) 12 /Courier DrawText
131.5 468.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
126.5 473.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
126.5 473.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
20 478 467 90 14 0 false 0 0 0 false 0 0 0 false (Copy-Inverted) 12 /Courier DrawText
259.5 468.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
254.5 473.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
254.5 473.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
197 478 467 41 14 0 false 0 0 0 false 0 0 0 false (Invert) 12 /Courier DrawText
387.5 468.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
382.5 473.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
382.5 473.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
331 478 467 35 14 0 false 0 0 0 false 0 0 0 false (Equiv) 12 /Courier DrawText
131.5 435.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
126.5 440.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
126.5 440.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
82 445 434 28 14 0 false 0 0 0 false 0 0 0 false (Nand) 12 /Courier DrawText
259.5 435.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
254.5 440.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
254.5 440.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
218 445 434 20 14 0 false 0 0 0 false 0 0 0 false (Nor) 12 /Courier DrawText
387.5 435.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
382.5 440.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
382.5 440.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
282 445 434 84 14 0 false 0 0 0 false 0 0 0 false (And-Inverted) 12 /Courier DrawText
131.5 402.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
126.5 407.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
126.5 407.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
34 412 401 76 14 0 false 0 0 0 false 0 0 0 false (And-Reverse) 12 /Courier DrawText
259.5 402.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
254.5 407.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
254.5 407.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
162 412 401 76 14 0 false 0 0 0 false 0 0 0 false (Or-Inverted) 12 /Courier DrawText
387.5 402.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
382.5 407.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
382.5 407.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
298 412 401 68 14 0 false 0 0 0 false 0 0 0 false (Or-Reverse) 12 /Courier DrawText
10 633 611 155 28 0 false 0 0 0 false 0 0 0 false (Draw Function) 24 /Times-BoldItalic DrawText
45 550 52 24 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
50 546 535 40 14 0 false 0 0 0 false 0 0 0 false (Others) 12 /Courier DrawText
202 630 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
197 635 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
200 632 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
216 630 619 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
263 630 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
258 635 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
261 632 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
266 630 619 35 14 0 false 0 0 0 false 0 0 0 false (Apply) 12 /Courier DrawText
324 630 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
319 635 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
322 632 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
324 630 619 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
grestore

grestore

0 648 435 300 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Times-BoldItalic /Courier 
%%BoundingBox: 88 246 523 546

%%EndDocument
 GE /Times-Bold SF
6120 29952 MT
(Figure 2-6:)SH
/Times-Roman SF
11893 XM
(Draw functions that can be attached to objects in Lapidary)SH
7 10 0 8100 72098 GB 
%%BeginDocument: lapidary/text-properties.PS
%!PS-Adobe-2.0
%%Title: text properties
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 12:58 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 206 540 585
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.9957447 0.9957447 scale

%
% Begin new window
%
0 -136 translate
gsave
0 651 470 380 ClipToRectangle
0 0 translate
gsave
10 641 619 163 28 0 false 0 0 0 false 0 0 0 false (Text-Properties) 24 /Times-BoldItalic DrawText
402 636 44 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
397 641 44 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
400 638 38 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
413 636 625 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
20 597 427 250 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 604 42 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 604 593 32 14 0 false 0 0 0 false 0 0 0 false (:font) 12 /Courier-Bold DrawText
42 584 573 97 14 0 false 0 0 0 false 0 0 0 false (Standard Fonts) 12 /Courier-Bold DrawText
62 559 548 42 14 0 false 0 0 0 false 0 0 0 false (Family) 12 /Courier-Bold DrawText
172.5 549.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
167.5 554.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
167.5 554.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
118 559 548 33 14 0 false 0 0 0 false 0 0 0 false (Serif) 12 /Courier DrawText
278.5 549.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
273.5 554.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
273.5 554.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
189 559 548 68 14 0 false 0 0 0 false 0 0 0 false (Sans-Serif) 12 /Courier DrawText
351.5 549.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
346.5 554.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
346.5 554.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
295 559 548 35 14 0 false 0 0 0 false 0 0 0 false (Fixed) 12 /Courier DrawText
346.5 554.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
62 527 516 27 14 0 false 0 0 0 false 0 0 0 false (Size) 12 /Courier-Bold DrawText
158.5 517.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
153.5 522.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
153.5 522.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
103 527 516 34 14 0 false 0 0 0 false 0 0 0 false (Small) 12 /Courier DrawText
238.5 517.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
233.5 522.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
233.5 522.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
175 527 516 42 14 0 false 0 0 0 false 0 0 0 false (Medium) 12 /Courier DrawText
310.5 517.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
305.5 522.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
305.5 522.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
255 527 516 34 14 0 false 0 0 0 false 0 0 0 false (Large) 12 /Courier DrawText
417.5 517.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
412.5 522.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
412.5 522.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
327 527 516 69 14 0 false 0 0 0 false 0 0 0 false (Very-Large) 12 /Courier DrawText
233.5 522.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
62 495 484 27 14 0 false 0 0 0 false 0 0 0 false (Face) 12 /Courier-Bold DrawText
159.5 485.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
154.5 490.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
154.5 490.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
103 495 484 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
237.5 485.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
232.5 490.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
232.5 490.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
176 495 484 40 14 0 false 0 0 0 false 0 0 0 false (Italic) 12 /Courier DrawText
303.5 485.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
298.5 490.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
298.5 490.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
254 495 484 28 14 0 false 0 0 0 false 0 0 0 false (Bold) 12 /Courier DrawText
417.5 485.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
412.5 490.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
412.5 490.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
320 495 484 76 14 0 false 0 0 0 false 0 0 0 false (Bold-Italic) 12 /Courier DrawText
154.5 490.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
42 465 454 97 14 0 false 0 0 0 false 0 0 0 false (Font From File) 12 /Courier-Bold DrawText
62 445 434 62 14 0 false 0 0 0 false 0 0 0 false (Font-Name) 12 /Courier DrawText
129 447 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
166.5 403.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
161.5 408.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
161.5 408.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
26 413 402 119 14 0 false 0 0 0 false 0 0 0 false (Default Font Path) 12 /Courier DrawText
192 413 402 90 14 0 false 0 0 0 false 0 0 0 false (or  Font-Path) 12 /Courier DrawText
287 415 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
146.5 366.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
141.5 371.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
141.5 371.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
63 376 365 62 14 0 false 0 0 0 false 0 0 0 false (<Formula>) 12 /Courier-Bold DrawText
177 378 87 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
172 383 87 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
175 380 81 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
177 378 367 77 14 0 false 0 0 0 false 0 0 0 false (Unconstrain) 12 /Courier DrawText
20 331 427 49 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 338 57 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 338 327 47 14 0 false 0 0 0 false 0 0 0 false (:string) 12 /Courier-Bold DrawText
45 313 191 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
40 318 191 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
43 315 185 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
45 313 302 181 14 0 false 0 0 0 false 0 0 0 false (Generate Text from Formula) 12 /Courier DrawText
246 313 191 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
241 318 191 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
244 315 185 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
270 313 302 133 14 0 false 0 0 0 false 0 0 0 false (Remove Text Formula) 12 /Courier DrawText
grestore

grestore

0 651 470 380 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier /Times-BoldItalic 
%%BoundingBox: 72 206 540 585

%%EndDocument
 GE /Times-Bold SF
6120 59430 MT
(Figure 2-7:)SH
/Times-Roman SF
11893 XM
(Lapidary's text properties menu)SH
8870 61381 MT
(since the top-level aggregadget is the only object that the application)
52 W( should know about \050an)53 W
8870 62577 MT
(application should not be required to)
121 W( know the parts of an aggregadget\051. For example, if a)120 W
8870 63773 MT
(rectangle belongs to an aggregadget, the user might make the rectangle the primary selection)38 W
8870 64969 MT
(and the aggregadget the secondary selection.  If the)
20 W( object is already at the top-level, then the)19 W
8870 66165 MT
(object should be both the primary and secondary selection.)SH
8870 68059 MT
(To turn a slot into a parameter, select)
62 W( the text box next to the slot and enter the name of the)63 W
8870 69255 MT
(slot in the secondary selection that the)
73 W( slot should retrieve its value from. In Figure 2-8, the)72 W
8870 70451 MT
(rectangle's)SH
/Courier SF
14236 XM
(:filling-style)SH
/Times-Roman SF
24018 XM
(slot retrieves its value from the top-level aggregadget's)267 W
/Courier SF
8870 71647 MT
(:color)SH
/Times-Roman SF
13657 XM
(slot, and the)552 W
/Courier SF
20935 XM
(:line-style)SH
/Times-Roman SF
29022 XM
(slot retrieves its)
552 W( value from the top-level)551 W
ES
%%Page: 549 12
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.3)
SH( Properties)1800 W
51386 XM
(Page 549)SH
46800 50 8280 4486 UL
11 SS 
8 10 0 7240 52480 GB 
%%BeginDocument: lapidary/parameters.PS
%!PS-Adobe-2.0
%%Title: Parameters
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Jul 22, 1992, 3:50 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 82 226 529 566
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
10 -154 translate
gsave
0 648 447 340 ClipToRectangle
0 0 translate
gsave
85 342 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
80 347 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
83 344 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
99 342 331 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
146 342 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
141 347 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
144 344 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
146 342 331 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
10 638 627 357 14 0 false 0 0 0 false 0 0 0 false (To make a slot a parameter, select its text box and) 12 /Courier DrawText
10 624 613 405 14 0 false 0 0 0 false 0 0 0 false (enter the name of the slot in the secondary selection that) 12 /Courier DrawText
10 610 599 427 14 0 false 0 0 0 false 0 0 0 false (the slot should retrieve its value from. To deselect a slot, ) 12 /Courier DrawText
10 596 585 182 14 0 false 0 0 0 false 0 0 0 false (make its text box be blank) 12 /Courier DrawText
10 561 550 94 14 0 false 0 0 0 false 0 0 0 false (:FILLING-STYLE) 12 /Courier DrawText
10 533 522 73 14 0 false 0 0 0 false 0 0 0 false (:LINE-STYLE) 12 /Courier DrawText
10 505 494 95 14 0 false 0 0 0 false 0 0 0 false (:DRAW-FUNCTION) 12 /Courier DrawText
128 561 550 38 14 0 false 0 0 0 false 0 0 0 false (:color) 12 /Courier DrawText
122 563 50 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
128 533 522 73 14 0 false 0 0 0 false 0 0 0 false (:line-style) 12 /Courier DrawText
122 535 85 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
122 507 15 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 470 459 362 14 0 false 0 0 0 false 0 0 0 false (Select the following button to get a list of objects) 12 /Courier DrawText
10 456 445 342 14 0 false 0 0 0 false 0 0 0 false (that are referenced by the primary selection, and) 12 /Courier DrawText
10 442 431 363 14 0 false 0 0 0 false 0 0 0 false (which lapidary thinks should be parameters. If there) 12 /Courier DrawText
10 428 417 278 14 0 false 0 0 0 false 0 0 0 false (are no such objects, nothing will appear) 12 /Courier DrawText
15 390 113 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
10 395 113 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 392 107 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
15 390 379 103 14 0 false 0 0 0 false 0 0 0 false (link parameters) 12 /Courier DrawText
grestore

grestore

0 648 447 340 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 82 226 529 566

%%EndDocument
 GE /Times-Bold SF
8280 36152 MT
(Figure 2-8:)SH
/Times-Roman SF
14053 XM
(Parameters dialog box)SH
11030 38103 MT
(aggregadget's)SH
/Courier SF
17631 XM
(:line-style)SH
/Times-Roman SF
25324 XM
(slot. To make the slot)
158 W( no longer be a parameter, make the)159 W
11030 39299 MT
(slot's text box be blank.  Lapidary maintains)
26 W( a list of slots for each objects that can be turned)25 W
11030 40495 MT
(into parameters. If the user wants to parameterize a slot that is not displayed)
338 W( in the)339 W
11030 41691 MT
(parameters dialog box, the user can bring up C32 and place a)
40 W( formula in the desired slot that)39 W
11030 42887 MT
(retrieves its value from the top-level aggregadget.)SH
8 10 0 7200 87523 GB 
%%BeginDocument: lapidary/link-parameters.PS
%!PS-Adobe-2.0
%%Title: Opal 13
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: Aug 19, 1992, 11:08 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 250 540 543
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub
          width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.670487106017192 0.670487106017192 scale

%
% Begin new window
%
0 -264 translate
gsave
0 966 698 437 ClipToRectangle
0 0 translate
gsave
520 951 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
515 956 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
518 953 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
534 951 940 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
581 951 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
576 956 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
579 953 45 18 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
581 951 940 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
10 888 877 635 14 0 false 0 0 0 false 0 0 0 false (Some of the slots in the object labeled 'object:' reference objects that it seems should be) 12 /Courier DrawText
10 874 863 678 14 0 false 0 0 0 false 0 0 0 false (parameters. These objects are listed below, along with the slots that reference them. If you make) 12 /Courier DrawText
10 860 849 644 14 0 false 0 0 0 false 0 0 0 false (any of these objects into parameters, Lapidary will create formulas that cause the slots to ) 12 /Courier DrawText
10 846 835 471 14 0 false 0 0 0 false 0 0 0 false (retrieve the parameters from the object labeled 'parameters object'.) 12 /Courier DrawText
10 818 807 658 14 0 false 0 0 0 false 0 0 0 false (If you want to see the object labeled 'object:', select the object's name with the left mouse ) 12 /Courier DrawText
10 804 793 367 14 0 false 0 0 0 false 0 0 0 false (button and the object will be flashed on the display.) 12 /Courier DrawText
10 776 765 678 14 0 false 0 0 0 false 0 0 0 false (If you want to make an object a parameter, enter the parameter name in the blank box next to each) 12 /Courier DrawText
10 762 751 672 14 0 false 0 0 0 false 0 0 0 false (object. This name must be a slot name \050e.g., :string\051. If the user has already provided a name, ) 12 /Courier DrawText
10 748 737 346 14 0 false 0 0 0 false 0 0 0 false (Lapidary guesses that name and puts it in the box.) 12 /Courier DrawText
10 720 709 657 14 0 false 0 0 0 false 0 0 0 false (If you do not want an object to be a parameter, just leave its parameter box blank \050or make it) 12 /Courier DrawText
10 706 695 297 14 0 false 0 0 0 false 0 0 0 false (blank if Lapidary has put a name in there\051.) 12 /Courier DrawText
10 678 667 665 14 0 false 0 0 0 false 0 0 0 false (If you want to see one of the referenced objects, select the object's name with the left mouse ) 12 /Courier DrawText
10 664 653 367 14 0 false 0 0 0 false 0 0 0 false (button and the object will be flashed on the display.) 12 /Courier DrawText
10 636 625 514 14 0 false 0 0 0 false 0 0 0 false (For more information on this operation, see the Lapidary reference manual.) 12 /Courier DrawText
10 951 936 72 20 0 false 0 0 0 false 0 0 0 false (object:) 18 /Courier-Bold DrawText
10 927 912 193 20 0 false 0 0 0 false 0 0 0 false (parameters object:) 18 /Courier-Bold DrawText
91 951 936 405 20 0 false 0 0 0 false 0 0 0 false (TRANSPARENT-THIN-LINE-RECTANGLE-15102) 18 /Courier-Bold DrawText
212 927 912 186 20 0 false 0 0 0 false 0 0 0 false (AGGREGADGET-16242) 18 /Courier-Bold DrawText
419 578 567 66 14 0 false 0 0 0 false 0 0 0 false (:SCALE-OBJ) 12 /Courier DrawText
413 580 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
413 557 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
10 580 569 258 14 0 false 0 0 0 false 0 0 0 false (TRANSPARENT-THIN-LINE-RECTANGLE-15159) 12 /Courier DrawText
10 556 545 258 14 0 false 0 0 0 false 0 0 0 false (TRANSPARENT-THIN-LINE-RECTANGLE-15161) 12 /Courier DrawText
284 580 569 105 14 0 false 0 0 0 false 0 0 0 false ( :HEIGHT :WIDTH) 12 /Courier DrawText
284 556 545 42 14 0 false 0 0 0 false 0 0 0 false ( :LEFT) 12 /Courier DrawText
10 603 592 140 14 0 false 0 0 0 false 0 0 0 false (object referenced by) 12 /Courier-Bold DrawText
287 603 592 34 14 0 false 0 0 0 false 0 0 0 false (slots) 12 /Courier-Bold DrawText
408 603 592 98 14 0 false 0 0 0 false 0 0 0 false (parameter name) 12 /Courier-Bold DrawText
grestore

grestore

0 966 698 437 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier 
%%BoundingBox: 72 250 540 543

%%EndDocument
 GE /Times-Bold SF
8280 69275 MT
(Figure 2-9:)SH
/Times-Roman SF
14053 XM
(Link parameters dialog box)SH
11030 71226 MT
(The link parameters)
54 W( button in the parameters dialog box allows the user to specify links that)55 W
ES
%%Page: 550 13
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 550)
SH( Lapidary)830 W
37315 XM
(Editor Menu Commands)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
11 SS 
8870 7955 MT
(should be parameters. Links are used by Lapidary-generated)
407 W( constraints to indirectly)406 W
8870 9151 MT
(reference other objects. For example, when the user creates a constraint that left aligns one)101 W
8870 10347 MT
(rectangle, say)240 W
/Courier SF
15671 XM
(rect1)SH
/Times-Roman SF
(, with another rectangle, say)240 W
/Courier SF
32846 XM
(rect2)SH
/Times-Roman SF
(, Lapidary)
240 W( generates a link in)239 W
/Courier SF
8870 11543 MT
(rect1)SH
/Times-Roman SF
12459 XM
(that points to)14 W
/Courier SF
18522 XM
(rect2)SH
/Times-Roman SF
(. When a link references an object that)
14 W( is not part of the primary)15 W
8870 12739 MT
(selection's top-level aggregadget, Lapidary)
85 W( guesses that this link should be a parameter and)84 W
8870 13935 MT
(displays it in the link parameters dialog box \050Figure 2-9\051. For each such)
231 W( link, Lapidary)232 W
8870 15131 MT
(displays the value of the link, the slots that reference the link, and a parameter name, if)
56 W( any,)55 W
8870 16327 MT
(that the user has assigned to this link. The)
30 W( user can change this parameter name by editing it,)31 W
8870 17523 MT
(or can indicate that this link should not be a parameter by making the parameter name blank.)SH
8 10 0 5000 61679 GB 
%%BeginDocument: lapidary/ParamItems.PS
%!PS-Adobe-1.0
%%Creator: thud:bolt (David W. Bolt)
%%Title: ParamItems.bmt (xwdump)
%%CreationDate: Tue Aug 18 20:30:09 1992
%%EndComments
%%%Pages: 1
%%BoundingBox: 144 254 469 537
%%EndProlog
%%%Page: 1 1

/bitdump % stk: width, height, iscale
% dump a bit image with lower left corner at current origin,
% scaling by iscale (iscale=1 means 1/300 inch per pixel)
{
        % read arguments
        /iscale exch def
        /height exch def
        /width exch def

        % scale appropriately
        width iscale mul height iscale mul scale

        % allocate space for one scanline of input
        /picstr % picstr holds one scan line
                width 7 add 8 idiv % width of image in bytes = ceiling(width/8)
                string
                def

        % read and dump the image
        width height 1 [width 0 0 height neg 0 height]
        { currentfile picstr readhexstring pop }
        image
} def
72 300 div dup scale
598 1060 translate
451 393 3 bitdump
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffff555555555555555555555555555555555555555555555555555555555555555555555555557fffff80
38003c001fe07ffffffffffffffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaff800380
3bffbdffdfe73ffffffffff9ffffffff555555555555555555555555555555555555555555555555555555555555555555555555557fbbbb80
3a3ebdffdfe73ffffffffff9fffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffbbbb80
3b1dbdf1dfe730e0c382383060c187ff555555555555555555555555555555555555555555555555555555555555555555555555557fbbbb80
3b1bbde0dfe7266499999399ce4933feaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaff83bb80
3b8bbdecdfe07e67f9999399ce4f1fff555555555555555555555555555555555555555555555555555555555555555555555555557fbfbb80
3bd7bdf9dfe7f067c1999019c04f87feaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffbfbb80
3ba3bdf3dfe7e667999993f9cfcfe3ff555555555555555555555555555555555555555555555555555555555555555555555555557fbfbb80
3b63bdffdfe7e66799999399ce4f33feaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaff803b80
3b71bdf3dfe7f127c499983c60cf87ff555555555555555555555555555555555555555555555555555555555555555555555555557fbffb80
3af8bdf3dffffffffffffffffffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffbffb80
3bffbdffdfffffffffffffffffffffff555555555555555555555555555555555555555555555555555555555555555555555555557fbffb80
38003c001ffffffffffffffffffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaff800380
3fffffffffffffffffffffffffffffff555555555555555555555555555555555555555555555555555555555555555555555555557fffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffe7fffffffffc7fffffffffffffffffffffffffffffffe3ffffffff7ffffffffffffff3ffffffffffcffffffffffffffffffff80
3ff01fffffff7ffffffffff7ffbffffffffffffffffeffffffffffffbffffbffffdffffefffff7ffbffffffffffeffffffffffffffffffff80
3ff6dfffffff7ffffffffff7ffbffffffffffffffffeffffffffffffbffffbffffdffffefffff7ffbffffffffffeffffffffffffffffffff80
3ff6d8ff8b87671ff87ff1f7c707fc3fe8e1d1862f1c1c747fffc78fbe3c707fc7838ffc1c6220ff878c47f868f0ffffffffffffffffffff80
3ffef77fd5fb5eefffbfeef7bbbfffdff77eeffb56eefbbbffffbb77bddbbbfff7df77fefbbaf7ffbb775fffb36effffffffffffffffffff80
3ffef77fd5c33e0ffc3ff1f7bbbffe1ff770efc3560ef83bffffc707bc1bfbfff7df8ffef83df7ffbb77bffc376effffffffffffffffffff80
3ffef77fd5bb5efffbbffef7bbbffddff76eefbb56fefbfbfffffb7fbdfbfbfff7dff7fefbfaf7ffbb775ffbb76effffffffffffffffffff80
3ffef77fd5bb6eeffbbfeef7bbbbfddff76eefbb56eeebbbf7ffbb77bddbbbbff7dd77feebb7777fbb76effbb76effffffffffffffffffff80
3ff838ff94c4731ffc5ff1c0c7c7fe2ff0f143c4531f1c70f7ffc78e063c7c7fc1e38fff1c6738ff478ce7fc43317fffffffffffffffffff80
3ffffffffffffffffffffffffffffffff7ffffffffffffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffe3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffff3fffffffffffffffc7fff3ffffff8ffffffeffffff3ffffffffffffff3ffffffffffc7ffffff7fffffff3ffffffffffff80
3fffffeffffffefbfffffffffffffffbffefbffffffefff7fffffffefbffffffffffffffbfffffffffff7ffff7fffffffefbfff7ffffffff80
3fffffeffffffefbfffffffffffffffbffefbffffffefff7fffffffefbffffffffffffffbfffffffffff7ffff7fffffffefbfff7ffffffff80
3ff8d1c1c747fc1a78ffa3862f1ffc707fc1a78ffe3ef8e0ff8e8ffc1a78ffe3c78f1a3c30e888ff8f1f7c78e0c7c68ffc1a70e0ffffffff80
3ff766efbbbffef9b77fcdfb56effbbbffef9b77fddef777ffef37fef9b77fddbb76ecdbbf77ddff76ef7bb777f7bb37fef9bf77ffffffff80
3ff06eef83bffefbb07fddc3560ffbbbffefbb07fe3ef777ffef77fefbb07fe3837eeddbb877ddff8e0f7837f7f7bb77fefbb877ffffffff80
3ff7eeefbfbffefbb7ffddbb56fffbbbffefbb7fffdef777ffef77fefbb7fffdbf7eeddbb777ebfff6ff7bf7f7f7bb77fefbb777ffffffff80
3ff76eeebbbffeebb77fddbb56effbbbffeebb77fddef7777fef77feebb77fddbb76eddbb777e3ff76ef7bb77777bb77feebb7777fffffff80
3ff8c671c70fff1118ff8cc4531ffc70fff1118ffe3818f8ff8233ff1118ffe3c78f18cc58a1f7ff8f1c0c78f8c1c633ff1118b8ffffffff80
3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffcffffffe3fffffff9ffffe3f9fffffffffdffffffffbfffffffff8ffffffe3ffffffffffffffe7fffff1fffffffffffff1ffffffffff80
3ffbefffffffbffdffffdfffffbfdfffffefffffffffffffeffffffffeffffffdfffffffffc07ffff7fffffdffffdffffffffdffefffffff80
3ffbefffffffbffdffffdfffffbfdfffffefffffffffffffeffffffffeffffffdfffffffffdb7ffff7fffffdffffdffffffffdffefffffff80
3ff069e3ff8fbe383ff1d3c667be1ff471c1a31f188c7fe3c1c7fc443ee671ff834718bfffdb63ff871e3c7df1e383fe1ffc7df1c1ffffff80
3ffbe6ddff77bdddffeecdbb77bddffbeeefdfdeeddbbffbefbbfeefdef76effdfbeed5ffffbddff76eddbbdeedddfffeffbbdeeefffffff80
3ffbeec1ff8fbdddfff1ddbb77bddffbe0efdfde0dd83ffbefc7feee1ef760ffdfbeed5ffffbddff760e383de0dfdfff0ffc7deeefffffff80
3ffbeedffff7bdddfffeddbb77bddffbefefdfdefebbfffbeffbff5ddef76fffdfbeed5ffffbddff76ffdbfdefdfdffeefffbdeeefffffff80
3ffbaeddff77bddddfeeddbb77bddffbeeeedfdeee3bbffbeebbff1ddef76effdfbeed5ffffbddff76eddbbdeeddddfeeffbbdeeeedfffff80
3ffc4463ff8e063e3ff188c78a062ff0f1f187071f7c7fe0f1c7ffbe2818b1ff870f194dffe0e3ff8b1e3c7031e3e3ff17fc7031f1dfffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffcfffffdffffffffffffffcffffffcffffe7e3fffe7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffefffffff7ffffbffffdffeffffffefffff7fbffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffefffffff7ffffbffffdffeffffffefffff7fbffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff170ece3ff1e0e3ff0718883fe1e311fe1e3ff0fbc34767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffabf6bddffdf7ddffbeeebdffeeddd7feeddff77bfd9b5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffab867c1ffdf7e3ffbe0f7dffeeddeffeec1ff77be1bb3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffab76bdfffdf7fdffbefebdffeeddd7feedfff77bddbb5ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffab76dddffdf75dffbaeddddfeeddbbfeeddff77bddbb6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2988e63ff078e3ffc719ce3fd1e339fd1e3fe8e0621873fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffbffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff038cc00ffffffffffffffffffff7fffefffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb766b6ffffffffffffffffffff7fffefffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffab766b6ffffffffffffffffffff7fe3c1c62f1fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff78f76af7ffffffffffffffffffff7dfbefbb56efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffaf76af7ffffffffffffffffffff7ffbef83571fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbf76cf7ffffffffffffffffffff7ffbefbf57efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbf76cf7ffffffffffffffffffff7ffbeebb56efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff70f8c6c1ffffffffffffffffffff7de0f1c6531fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffbffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffc2001c1318fffffffffffffffff7fffefffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbadaef79b77ffffffffffffffff7fffefffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbedaef79b77ffffffffffffffff7fe3c1c62f1fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff78fde1f7ab7fffffffffffffffff7dfbefbb56efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffe3dedf7ab67ffffffffffffffff7ffbef83571fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffbdeef7b377ffffffffffffffff7ffbefbf57efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbbdeef7b377ffffffffffffffff7ffbeebb56efbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff787046411b8fffffffffffffffff7de0f1c6531fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7fffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff1f04c01ff840081e07fffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbfde6ddff75b5dbf77fffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbfde6d7ff7db6bbf5ffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff7bfdeac7ff1fbebbf1ffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbfdead783c7bf7bf5ffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbbdecdffff7bf7bb7ffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbbdecddff77bf7bb77fffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff70304681ff0e0e30207fffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff060e388fe04418c6020e331ffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb77bddff76ecdbadbbdd9bffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb775d5ff56ecdbadbbdd9bffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff7bb0f5d5ff1eed5bfdfbddabffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb6e0d5835eed5bfdfbddabffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb76ec9ff7eed9bbdfbddb3ffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffbb76eebff7e4d9bbdfbddb3ffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff7063046bfe1f18dc7060e31bffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff7ffdfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffff0001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffc7ffffffffe7ffffe3fe3c7ffffbfffffcfffffffffffffffffffffffffffe3f7fffffffe3fff9ff7fffffffffffffffffffffffff80
3ff87ff7ffff7ffdf7ffffdfffbf7ffffffffffefffdfbffffffbffffffff7ffffffbffffbffffdffffdffffffefffffffffffffffffffff80
3ff77ff7ffff7ffdf7ffffdfffbf7ffffffffffefffdfbffffffbffffffff7ffffffbffffbffffdffffdffffffefffffffffffffffffffff80
3ff7f1f7c78e0ff834f1ff838fbf7c6223a3c5fe19983071a3ff071ffc58e0ff87ffbc7c707fe383ff1c3878f1c1c7ffffffffffffffffff80
3ff1eef7bb777ffdf36effdf77bf7bb77bcdbbfeedddfbeecdffbeeffbb777fffbffbf7bbbffdddffeeddf776eefbbffffffffffffffffff80
3ffc60f7837f7ffdf760ffdf77bf7bb57bddbbfeedddfbeeddffbeeffbb077ffc3ffbf7c7bffdddffeeddf706fefc7ffffffffffffffffff80
3fff6ff7bf7f7ffdf76fffdf77bf7bb57bddbbfeedddfbeeddffbeeffbb7f7ffbbffbf7fbbffdddffeeddf77efeffbffffffffffffffffff80
3ff76ef7bb7777fdd76effdf77bf7bbafbddbbfeeddddbaeddffbaeffbb7777fbbffbf7bbbbfdddffeeddf776eeebbffffffffffffffffff80
3ff0f1c0c78f8ffe2231ff878e040c7ae08cc3fd1e2e3c718cffc71ffc38f8ffc5fe041c7c7fe387ff1a3f78f1f1c7ffffffffffffffffff80
3ffffffffffffffffffffffffffffffffffffbffffffffffffffffffffbfffffffffffffffffffffffffff7fffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffffffffffbffffffffffffffffffffbfffffffffffffffffffffffffff7fffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffc7fffffffffffffffffffc7ffffffffffffffffffffffffff8ffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffcfffffffffffffffffe3fffffffffff9fe7fffffe7ffffffffbffffffffffffe3ffffffbfffffffffffe7fffffffffffffffffffffff80
3ffbefffdfffffffffffffdffffffffffffdff7ffffdf7ffffffffffffffffffffffbffffbffffffffffffff7fffffffffffffffffffffff80
3ffbefffdfffffffffffffdffffffffffffdff7ffffdf7ffffffffffffffffffffffbffffbffffffffffffff7fffffffffffffffffffffff80
3ff069c383fe1d1c7fe8e3838e8e3478f1e1ff0c47f834f1ff474638b874447fc78fbe3c7063e347fffc34787fffffffffffffffffffffff80
3ffbe6fddfffeefbbff7dddf777dd9b76eddff76effdf36effbbbfbd5fbbeeffbb77bddbbbfbdd9bffffd9b77fffffffffffffffffffffff80
3ffbeee1dfff0ef83ff7c1df077c1bb7e0ddff76effdf760ffbbbfbd5c3beeffc707bc1bfbfbddbbfffe1bb77fffffffffffffffffffffff80
3ffbeedddffeeefbfff7dfdf7f7dfbb7efddff775ffdf76fffbbbfbd5bbbf5fffb7fbdfbfbfbddbbfffddbb77fffffffffffffffffffffff80
3ffbaeddddfeeefbbff7dddf777ddbb76eddff771ffdd76effbbbfbd5bbbf1ffbb77bddbbbbbddbbbffddbb77fffffffffffffffffffffff80
3ffc4462e3ff143c7fe1e3878e1e3198f1e2fe8fbffe2231ff870e094c50fbffc78e063c7c60e319bffe2198bfffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffbfffffffffbffffffffffbffffffffffffffffff7fffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffbfffffffffbffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffffffffffffffe7fffffffff1fffffffffe7ffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffe7fbff3ffe3ffffdfcfffffffff3fdff9ffffff9ffffe3f9fe7fffffffffffffffffffffffffffc7fff3ffffffffffffffffffffffff80
3ffff7ffffbfffbffffffefffffffefbffffdffffffdfffffbfdff7fffffffffffffff7fffffffff83bffefbffffffffffffffffffffffff80
3ffff7ffffbfffbffffffefffffffefbffffdffffffdfffffbfdff7fffffffffffffff7fffffffffefbffefbffffffffffffffffffffffff80
3ff114e3e3a7ffbc3471f0c3a223fc1a71d1d9c7ff1d3c667be1ff0f1ff470e8c3178e0e3a38ffffef07fc1a78e8e3ffffffffffffffffff80
3ffbb37bdd9bffbfdbbdeefddf77fef9bde6d7bbfeecdbb77bddff76effbbf77fdab777dddf77fffefbffef9b777ddffffffffffffffffff80
3ffab77bdfbbffbe1bbdeee1df77fefbbdeecfc7ff1ddbb77bddff760ffbb877e1ab077c1df8ffffefbffefbb077c1ffffffffffffffffff80
3ffab77bdfbbffbddbbdeedddfaffefbbdeed7fbffeddbb77bddff76fffbb777ddab7f7dfdff7fffefbffefbb7f7dfffffffffffffffffff80
3ffd777bddbbffbddbbdeedddf8ffeebbdeedbbbfeeddbb77bddff76effbb777ddab7775ddf77fffefbffeebb777ddffffffffffffffffff80
3ffd6220e311fe062870716287dfff1110461cc7ff188c78a062fe8f1ff878a1e2298f8e3878f7ff830fff1118e1e3ffffffffffffffffff80
3ffffffffffffffffbffffffffdffffffffffffffffffffffffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffbffffffffdffffffffffffffffffffffffffffffffbffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffff1ffffffff3ffffffffffffffffffffffffffffffff1ffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffff9ffffcffbfffffffffffffffe7fbffffffff78f1ffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffdffffefffffff7fffffffffdf7fffffffffffefdffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffdffffefffffff7fffffffffdf7fffffffffffefdffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff0e8e3fe8f1ffc6671d3ff8e1c3c78e0e3fffd1e3834e3a3c5fc447efdffc3468f1c3a3fffffffffffffffffffffffffffffffffffffff80
3fff77ddff36effbb76ecdff76efbbb777ddfffe6dddf37bcdbbfeef7efdfffdbb76efddffffffffffffffffffffffffffffffffffffffff80
3ff877c1ff76effc776fddff76efb837f7e3fffeedddf77bddbbfeaf7efdffe1bb760e1dffffffffffffffffffffffffffffffffffffffff80
3ff777dfff76efffb76fddff76efbbf7f7fdfffeedddf77bddbbfeaf7efdffddbb76fdddffffffffffffffffffffffffffffffffffffffff80
3ff777ddff76effbb76eddff76efbbb7775ddffeedddd77bddbbff5f7efdffddbb76edddffffffffffffffffffffffffffffffffffffffff80
3ff8a1e3fe331ffc78b188ff8d1fbc78f8e3dffc663e22208cc3ff5c18103fe2870f1e287fffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffbfffffffbffffffffffffffbffffffffffffbf7fffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffbffffffffffffffffffffffbffffffffffffbf7fffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffffffffc7fffffffffffffffffffffc7ffffffffffff1e3fffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff00000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff55555555555555555555555555557ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2aaaaaaaaaaaaaaaaaaaaaaaaaaa7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff40000000000000000000000000017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2ffffffffffffffffffffffffffa7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4ffffffffffffffffffffffffff903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2ffffffffffffffffffffffffffa03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff48fdff9ffffffffffffffffffff903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2effffdfffffffffffffeffffffa03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4effffdfffffffffffffeffffff903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2ef1d1d9fe8e1d1862f1c1c7471a03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4efde6d7ff77eeffb56eefbbbee903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2efdeecfff770efc3560ef83bf1a03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4efdeed7ff76eefbb56fefbfbfe903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2efdeedbff76eefbb56eeebbbeea03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4810461cff0f143c4531f1c70f1903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2fffffffff7ffffffffffffffffa03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4fffffffff7ffffffffffffffff903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2ffffffffe3ffffffffffffffffa03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff4ffffffffffffffffffffffffff903fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff200000000000000000000000000203fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff555555555555555555555555555503fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff2aaaaaaaaaaaaaaaaaaaaaaaaaaa03fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ff000000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff80000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff80000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff80000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff80000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fff80000000000000000000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffc0000000000007fe0000000000003fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd5555555555557fe5555555555553fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcaaaaaaaaaaaa7feaaaaaaaaaaaabfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd0000000000017fe4000000000013fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbffffffffffa7fe9ffffffffffcbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3ffffffffff903e5ffffffffffd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbffffffffffa03e9ffffffffffc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3ffffffffff903e5ffffffffe3d01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbfffc627fffa03e98ffffffffbc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3fffbb6ffff903e577fffffffbd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbfffbb5ffffa03e9761a3c78fbc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3fffbb3ffff903e57fecdbb77bd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbfffbb1ffffa03e97f0ddbf07bc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3fffbb6ffff903e576eddbf7fbd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbfffbb77fffa03e976eddbb77bc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3fffc633fff903e58f10cc78e0501ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbffffffffffa03e9ffffffffffc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3ffffffffff903e5ffffffffffd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcbffffffffffa03e9ffffffffffc81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd3ffffffffff903e5ffffffffffd01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffc80000000000203e80000000000081ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffd55555555555503e55555555555501ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffcaaaaaaaaaaaa03eaaaaaaaaaaaa81ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffc00000000000003e00000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffe0000000000003ff0000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffe0000000000003ff0000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffe0000000000003ff0000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffe0000000000003ff0000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3ffffffffffffffffffffe0000000000003ff0000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

showpage
%%Trailer

%%EndDocument
 GE /Times-Bold SF
6120 43111 MT
(Figure 2-10:)SH
/Times-Roman SF
12443 XM
(Parameters dialog box for an Aggrelist)SH
8870 45062 MT
(To make a)
49 W( slot depend on an :items list in an aggrelist, make any object in the aggrelist be a)48 W
8870 46258 MT
(primary selection and make the aggrelist)
41 W( be the secondary selection. Then enter :items in the)42 W
8870 47454 MT
(labeled box for any slot on the parameters menu that should get its value from)
97 W( :items.  For)96 W
8870 48650 MT
(example, suppose the prototype object for a list is a text object and the)
8 W( string and font slots of)9 W
8870 49846 MT
(the text object should retrieve their values from the aggrelist's)82 W
/Courier SF
37304 XM
(:items)SH
/Times-Roman SF
41621 XM
(slot. To do this the)82 W
8870 51042 MT
(user makes the aggrelist the secondary selection and one of the text objects in the aggrelist a)46 W
8870 52238 MT
(primary selection. The user then selects the)46 W
/Courier SF
28496 XM
(parameters)SH
/Times-Roman SF
35417 XM
(option, which causes)
46 W( Lapidary to)45 W
8870 53434 MT
(pop up the parameters menu. Typing :items in the type-in fields next to)
239 W( the)240 W
/Courier SF
45427 XM
(font)SH
/Times-Roman SF
48582 XM
(and)SH
/Courier SF
8870 54630 MT
(string)SH
/Times-Roman SF
13174 XM
(slots creates the necessary formulas that link)
69 W( these slots to the)68 W
/Courier SF
41391 XM
(:items)SH
/Times-Roman SF
45694 XM
(slot in the)68 W
8870 55826 MT
(aggrelist \050Figure 2-10\051. The :items slot of the aggrelist will)
131 W( now contain a list of the form)132 W
8870 57022 MT
(\050\050string1 font1\051 \050string2 font2\051...\050stringN fontN\051\051.)SH
8870 58916 MT
(If the prototype object is)
47 W( an aggregadget \050such as a labeled box that contains a rectangle and)46 W
8870 60112 MT
(a piece of text\051, then)
25 W( any of the parts of the aggregadget, and the aggregadget itself, can have)26 W
8870 61308 MT
(slots that depend on the aggrelist's :items slot.)
6 W( This is done by parameterizing the parts one at)5 W
8870 62504 MT
(a time. For example, if the string)
220 W( slot of the text object and the filling-style slot of the)221 W
8870 63700 MT
(rectangle should be parameters, the user)
93 W( could first select the rectangle and parameterize it,)92 W
8870 64896 MT
(then select the text)
41 W( object and parameterize it. Lapidary does not follow any easily described)42 W
8870 66092 MT
(rules in constructing)
131 W( the :items list \050e.g., the string and font values could easily have been)130 W
8870 67288 MT
(reversed in the above list\051, so users should look at the :items list)
73 W( Lapidary constructs before)74 W
8870 68484 MT
(writing their own.)SH
8870 70378 MT
(If a slotname besides :items \050e.g., :string\051 is)
49 W( entered in a type-in field, then the slot is treated)48 W
8870 71574 MT
(as an ordinary parameter,)
11 W( and all items in the list will have a formula that accesses this slot in)12 W
ES
%%Page: 551 14
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 2.6)
SH( Other)1800 W
51386 XM
(Page 551)SH
46800 50 8280 4486 UL
11 SS 
11030 7955 MT
(the aggrelist. For example, if a)
74 W( list consists of rectangles, and the rectangles should all have)73 W
11030 9151 MT
(the line-style that is passed to the aggrelist, then the user would)
78 W( select one of the rectangles)79 W
11030 10347 MT
(and enter the an appropriate name, such)
36 W( as)35 W
/Courier SF
30281 XM
(:line-style)SH
/Times-Roman SF
(, next to the :line-style slot of the)35 W
11030 11543 MT
(rectangle.)SH
14 /Times-Bold AF
8280 15361 MT
(2.4. Arrange)SH
11 /Symbol AF
10249 16939 MT
(\267)SH
/Courier SF
11030 XM
(Bring to Front:)45 W
/Times-Roman SF
21340 XM
(Brings the selected objects to the front of their aggregadget \050i.e., they)46 W
11030 18135 MT
(will cover all)
1 W( other objects in their aggregadget\051.  If multiple objects are selected, it brings the)SH
11030 19331 MT
(objects to the front in their current order.)SH
/Symbol SF
10249 21225 MT
(\267)SH
/Courier SF
11030 XM
(Send to Back:)22 W
/Times-Roman SF
19951 XM
(Sends the selected objects to the back of their aggregadget \050i.e., they will)23 W
11030 22421 MT
(be covered by all other objects in their aggregadget\051. If multiple objects are selected,)
31 W( it sends)30 W
11030 23617 MT
(the objects to the back in their current order.)SH
/Symbol SF
10249 25511 MT
(\267)SH
/Courier SF
11030 XM
(Make Aggregadget:)241 W
/Times-Roman SF
23007 XM
(Creates a new aggregadget and adds all)
241 W( selected objects \050both)242 W
11030 26707 MT
(primary and secondary selections\051 to it.  The selected objects must initially)
168 W( belong to the)167 W
11030 27903 MT
(same aggregadget or else Lapidary will print)
61 W( an error message and abort the operation.  The)62 W
/Courier SF
11030 29099 MT
(:left)SH
/Times-Roman SF
14871 XM
(and)SH
/Courier SF
17000 XM
(:top)SH
/Times-Roman SF
20181 XM
(slots of the objects)
266 W( added to the aggregadget are constrained to the)265 W
11030 30295 MT
(aggregadget unless)
25 W( they were already constrained \050if the object is a line, the)26 W
/Courier SF
44963 XM
(:x1)SH
/Times-Roman SF
(,)SH
/Courier SF
47519 XM
(:y1)SH
/Times-Roman SF
(,)SH
/Courier SF
50075 XM
(:x2)SH
/Times-Roman SF
(,)SH
11030 31491 MT
(and)SH
/Courier SF
12932 XM
(:y2)SH
/Times-Roman SF
15226 XM
(slots are constrained\051.  The constraints tie the objects to)
39 W( the northwest corner of the)38 W
11030 32687 MT
(aggregadget and use absolute offsets based on the current position of the objects.  Thus if)
44 W( an)45 W
11030 33883 MT
(object is 10 pixels from the left)
16 W( side of the aggregadget \050the bounding box of the aggregadget)15 W
11030 35079 MT
(is computed from the initial bounding boxes of)
56 W( the objects\051, the object's)57 W
/Courier SF
43694 XM
(:left)SH
/Times-Roman SF
47326 XM
(slot will be)57 W
11030 36275 MT
(constrained to be 10 pixels from the left side of the aggregadget.  If the object is a)
79 W( line, the)78 W
11030 37471 MT
(object's endpoints will be tied to the aggregadget's northwest corner by absolute fixed)275 W
11030 38667 MT
(offsets. These)
971 W( constraints cause the objects to move with the aggregadget when the)348 W
11030 39863 MT
(aggregadgets moves.  If the user wants)
122 W( different constraints to apply, the user can primary)123 W
11030 41059 MT
(select an object, secondary select the aggregadget, and attach a different)
189 W( constraint.  The)188 W
11030 42255 MT
(aggregadget derives its width)
64 W( and height from its children, so the :width and :height slots of)65 W
11030 43451 MT
(the children are not)
114 W( constrained to the aggregadget.  Because the aggregadget computes its)113 W
11030 44647 MT
(width and height from its children, it is not permitted to resize an aggregadget.)SH
/Symbol SF
10249 46541 MT
(\267)SH
/Courier SF
11030 XM
(Ungroup:)SH
/Times-Roman SF
17284 XM
(Destroys selected aggregadgets and moves their components to the)700 W
11030 47737 MT
(aggregadgets' parents.)SH
14 /Times-Bold AF
8280 51555 MT
(2.5. Constraints)SH
11 /Symbol AF
10249 53133 MT
(\267)SH
/Courier SF
11030 XM
(Line Constraints:)SH
/Times-Roman SF
22525 XM
(Brings up the line constraints dialog box \050Figure 3-2\051.)SH
/Symbol SF
10249 55027 MT
(\267)SH
/Courier SF
11030 XM
(Box Constraints:)SH
/Times-Roman SF
21865 XM
(Brings up the box constraints dialog box \050Figure 3-1\051)SH
/Symbol SF
10249 56921 MT
(\267)SH
/Courier SF
11030 XM
(C32:)SH
/Times-Roman SF
14003 XM
(Brings up C32. Each primary and secondary selection is displayed)
58 W( in the spreadsheet,)57 W
11030 58117 MT
(and additional)
37 W( Lapidary objects can be displayed using the)38 W
/Courier SF
37428 XM
(Point to Object)38 W
/Times-Roman SF
47717 XM
(command.)SH
11030 59313 MT
(While Lapidary is running, only)
57 W( objects in Lapidary's drawing windows can be displayed in)56 W
11030 60509 MT
(the spreadsheet. Nothing will happen if the user attempts to execute the)334 W
/Courier SF
46715 XM
(Point to)335 W
11030 61705 MT
(Object)SH
/Times-Roman SF
15495 XM
(command on an object which is not in a Lapidary drawing)
230 W( window. The C32)229 W
11030 62901 MT
(chapter describes how to use C32 and Section)
244 W( 3.3 describes a number of modifications)245 W
11030 64097 MT
(Lapidary makes to C32.)SH
14 /Times-Bold AF
8280 67915 MT
(2.6. Other)SH
11 /Symbol AF
10249 69493 MT
(\267)SH
/Courier SF
11030 XM
(Interactors:)SH
/Times-Roman SF
19339 XM
(Displays a menu of interactors that the user can choose to look at. Once)113 W
11030 70689 MT
(the user selects an interactor, the)
150 W( information from that interactor will be displayed in the)151 W
11030 71885 MT
(appropriate interactor dialog box \050see)
10 W( Section 4\051 and the user is free to change it.  In addition,)9 W
ES
%%Page: 552 15
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 552)
SH( Lapidary)830 W
37315 XM
(Editor Menu Commands)
SH( Chapter)
1550 W( 2)SH
46800 50 6120 4486 UL
11 SS 
8870 7955 MT
(menu items are provided for the five Garnet-defined interactor types:)
81 W( choice \050encompassing)82 W
8870 9151 MT
(both menu and button interactors\051, move/grow, two-point, text, and angle.  If)
142 W( the user has)141 W
8870 10347 MT
(selected a set of objects, then the interactors)
28 W( menu will contain all interactors associated with)29 W
8870 11543 MT
(these objects.  Lapidary will display all interactors whose)108 W
/Courier SF
35380 XM
(:start-where)SH
/Times-Roman SF
43682 XM
(slot references)107 W
8870 12739 MT
(these objects, or whose)185 W
/Courier SF
20087 XM
(:feedback-obj)SH
/Times-Roman SF
29127 XM
(or)SH
/Courier SF
30503 XM
(:final-feedback-obj)SH
/Times-Roman SF
43504 XM
(points at these)186 W
8870 13935 MT
(objects. If)
411 W( no objects are selected,)
68 W( then the interactors menu will contain all interactors that)67 W
8870 15131 MT
(have been created in Lapidary.)SH
/Symbol SF
8089 17025 MT
(\267)SH
/Courier SF
8870 XM
(Clear Workspace:)146 W
/Times-Roman SF
19997 XM
(Deletes all objects from Lapidary but)
146 W( does not destroy any of the)147 W
8870 18221 MT
(drawing windows.)SH
14 /Times-Bold AF
6120 22039 MT
(2.7. Test and Build Radio Buttons)SH
11 /Symbol AF
8089 23617 MT
(\267)SH
/Courier SF
8870 XM
(Test:)SH
/Times-Roman SF
12754 XM
(Deactivates the Lapidary interactors that operate on)
309 W( the drawing windows and)308 W
8870 24813 MT
(activates all user-defined interactors. This allows)
104 W( the user to experiment with the look-and-)105 W
8870 26009 MT
(feel that the user has created.)SH
/Symbol SF
8089 27903 MT
(\267)SH
/Courier SF
8870 XM
(Build:)SH
/Times-Roman SF
13325 XM
(Deactivates all user-defined interactors and)
220 W( reactivates the Lapidary interactors,)219 W
8870 29099 MT
(allowing the user to modify the look-and-feel.)SH
ES
%%Page: 553 16
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.1)
SH( Box)
1800 W( Constraints)SH
51386 XM
(Page 553)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(3. Creating Constraints)SH
11 /Times-Roman AF
8280 10524 MT
(Lapidary provides two menus)
90 W( for creating constraints, one that deals with "box" constraints \050constraints)91 W
8280 11720 MT
(on non-line objects\051 and one that deals with line constraints.  In addition, several of the)
81 W( property menus)80 W
8280 12916 MT
(provide a custom constraint option that allows the)
47 W( user to input a constraint that determines the property.)48 W
8280 14112 MT
(Each of the menus contains buttons labeled with tiny rectangular boxes that indicate how an)
2 W( object will be)1 W
8280 15308 MT
(positioned if the constraint associated with)
10 W( that button is chosen.  The rectangular boxes in the buttons are)11 W
8280 16504 MT
(colored black to indicate that the primary object is the object that will be)
180 W( constrained, and the white)179 W
8280 17700 MT
(rectangular boxes positioned at the four corners of the rectangle in the box)
65 W( constraint menu indicate that)66 W
8280 18896 MT
(the secondary selection is the object that will be referenced in the constraint.)SH
8280 21194 MT
(The Box and Line Constraint dialog boxes, can be used separately from Lapidary \050see section 3.4\051.)SH
8280 23492 MT
(The constraint menus can display the current position and size of a primary selection.)
132 W( By pressing the)131 W
/Courier SF
8280 24688 MT
(Show Constraints)58 W
/Times-Roman SF
19231 XM
(button in the constraint menus, the user can see what types of constraints are on)58 W
8280 25884 MT
(the slots of an object.  If two objects are selected, Lapidary will display the)
187 W( types of the constraints)186 W
8280 27080 MT
(between the two objects.)SH
8280 29378 MT
(Finally, both box-like and line-like objects can be constrained to the center of a line by)
39 W( selecting the new)40 W
8280 30574 MT
(centering button in the)SH
/Courier SF
18484 XM
(obj-to-reference)SH
/Times-Roman SF
29319 XM
(section of the Line Constraint dialog box.)SH
14 /Times-Bold AF
8280 34392 MT
(3.1. Box Constraints)SH
11 /Times-Roman AF
8280 35588 MT
(The box constraint menu allows constraints to be attached to)
14 W( the)13 W
/Courier SF
36995 XM
(:left)SH
/Times-Roman SF
(,)SH
/Courier SF
40858 XM
(:top)SH
/Times-Roman SF
(,)SH
/Courier SF
44061 XM
(:width)SH
/Times-Roman SF
(, and)13 W
/Courier SF
50460 XM
(:height)SH
/Times-Roman SF
8280 36784 MT
(of an object \050see Figure 3-1\051.  The user attaches constraints by first selecting the object)
46 W( to be constrained)47 W
8280 37980 MT
(\050a primary selection\051 and the object to be)
84 W( referenced in the constraint \050a secondary selection\051.  The user)83 W
8280 39176 MT
(then selects the appropriate buttons in)
66 W( the box constraint menu.  The possible constraints for the)67 W
/Courier SF
51780 XM
(:left)SH
/Times-Roman SF
8280 40372 MT
(slot are:)SH
/Symbol SF
10249 41950 MT
(\267)SH
/Times-Roman SF
11030 XM
(left-outside: The right side of the primary selection)
259 W( is aligned with the left side of the)258 W
11030 43146 MT
(secondary selection.)SH
/Symbol SF
10249 45040 MT
(\267)SH
/Times-Roman SF
11030 XM
(left-inside: The left side of the primary selection is aligned with the left side of)
19 W( the secondary)20 W
11030 46236 MT
(selection.)SH
/Symbol SF
10249 48130 MT
(\267)SH
/Times-Roman SF
11030 XM
(center: The center of the primary selection is aligned with the)
267 W( center of the secondary)266 W
11030 49326 MT
(selection.)SH
/Symbol SF
10249 51220 MT
(\267)SH
/Times-Roman SF
11030 XM
(right-inside: The right side of the primary selection)
213 W( is aligned with the right side of the)214 W
11030 52416 MT
(secondary selection.)SH
/Symbol SF
10249 54310 MT
(\267)SH
/Times-Roman SF
11030 XM
(right-outside: The left side of the primary selection is aligned with)
218 W( the right side of the)217 W
11030 55506 MT
(secondary selection.)SH
8280 57804 MT
(The possible constraints for the)SH
/Courier SF
22363 XM
(:top)SH
/Times-Roman SF
25278 XM
(slot are:)SH
/Symbol SF
10249 59382 MT
(\267)SH
/Times-Roman SF
11030 XM
(top-outside: The bottom side of the primary selection is aligned with the top side)
197 W( of the)198 W
11030 60578 MT
(secondary selection.)SH
/Symbol SF
10249 62472 MT
(\267)SH
/Times-Roman SF
11030 XM
(top-inside: The top side of the primary)
31 W( selection is aligned with the top side of the secondary)30 W
11030 63668 MT
(selection.)SH
/Symbol SF
10249 65562 MT
(\267)SH
/Times-Roman SF
11030 XM
(center: The center of the)
266 W( primary selection is aligned with the center of the secondary)267 W
11030 66758 MT
(selection.)SH
/Symbol SF
10249 68652 MT
(\267)SH
/Times-Roman SF
11030 XM
(bottom-inside: The bottom side of the primary selection is)
6 W( aligned with the bottom side of the)5 W
11030 69848 MT
(secondary selection.)SH
/Symbol SF
10249 71742 MT
(\267)SH
/Times-Roman SF
11030 XM
(bottom-outside: The top side of the primary selection is aligned with the bottom side of the)83 W
ES
%%Page: 554 17
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 554)
SH( Lapidary)830 W
38954 XM
(Creating Constraints)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 8135 52350 GB 
%%BeginDocument: lapidary/box-constraints.PS
%!PS-Adobe-2.0
%%Title: box constraints
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 1:35 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 118 147 493 645
%%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {    % stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
        newpath
          moveto
          num-points -2 0 {pop lineto} for
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
46 -75 translate
gsave
0 648 375 498 ClipToRectangle
0 0 translate
gsave
10 638 621 169 21 0 false 0 0 0 false 0 0 0 false (Box Constraint Menu) 18 /Times-BoldItalic DrawText
200 620 603 31 21 0 false 0 0 0 false 0 0 0 false (:left) 18 /Times-BoldItalic DrawText
242 615 604 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
236 617 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
195 591 580 41 14 0 false 0 0 0 false 0 0 0 false (offset) 12 /Courier DrawText
247 591 580 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
241 593 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
142 566 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
137 571 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
140 568 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
143 565 554 77 14 0 false 0 0 0 false 0 0 0 false (unconstrain) 12 /Courier DrawText
241 566 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
236 571 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
239 568 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
250 565 554 61 14 0 false 0 0 0 false 0 0 0 false (customize) 12 /Courier DrawText
45 489 472 30 21 0 false 0 0 0 false 0 0 0 false (:top) 18 /Times-BoldItalic DrawText
86 484 473 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
80 486 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
39 460 449 41 14 0 false 0 0 0 false 0 0 0 false (offset) 12 /Courier DrawText
91 460 449 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
85 462 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
35 435 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 440 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
33 437 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
36 434 423 77 14 0 false 0 0 0 false 0 0 0 false (unconstrain) 12 /Courier DrawText
35 399 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 404 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
33 401 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
44 398 387 61 14 0 false 0 0 0 false 0 0 0 false (customize) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 313 341 180 341 DrawLine
187 338 180 341 187 344 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
306 344 313 341 306 338 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 246 331 246 321 DrawLine
242 331 246 341 250 331 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
239 317 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
235 321 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
239 317 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
242 314 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
142 294 277 47 21 0 false 0 0 0 false 0 0 0 false (:width) 18 /Times-BoldItalic DrawText
200 291 280 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
194 293 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
149 267 256 33 14 0 false 0 0 0 false 0 0 0 false (Scale) 12 /Courier DrawText
193 267 256 5 14 0 false 0 0 0 false 0 0 0 false (1) 12 /Courier DrawText
187 269 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
131 252 241 69 14 0 false 0 0 0 false 0 0 0 false (Difference) 12 /Courier DrawText
131 238 227 61 14 0 false 0 0 0 false 0 0 0 false (in pixels) 12 /Courier DrawText
211 245 234 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
205 247 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
141 218 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
136 223 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
139 220 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
142 217 206 77 14 0 false 0 0 0 false 0 0 0 false (unconstrain) 12 /Courier DrawText
141 182 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
136 187 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
139 184 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
150 181 170 61 14 0 false 0 0 0 false 0 0 0 false (customize) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 321 349 321 482 DrawLine
318 475 321 482 324 475 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
324 356 321 349 318 356 6 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 331 415 341 415 DrawLine
331 412 321 415 331 418 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
345 422 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
341 426 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
345 422 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
348 419 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
264 296 279 55 21 0 false 0 0 0 false 0 0 0 false (:height) 18 /Times-BoldItalic DrawText
330 291 280 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
324 293 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
275 267 256 33 14 0 false 0 0 0 false 0 0 0 false (Scale) 12 /Courier DrawText
319 267 256 5 14 0 false 0 0 0 false 0 0 0 false (1) 12 /Courier DrawText
313 269 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
257 252 241 69 14 0 false 0 0 0 false 0 0 0 false (Difference) 12 /Courier DrawText
257 238 227 61 14 0 false 0 0 0 false 0 0 0 false (in pixels) 12 /Courier DrawText
337 245 234 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
331 247 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
267 218 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
262 223 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
265 220 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
268 217 206 77 14 0 false 0 0 0 false 0 0 0 false (unconstrain) 12 /Courier DrawText
267 182 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
262 187 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
265 184 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
276 181 170 61 14 0 false 0 0 0 false 0 0 0 false (customize) 12 /Courier DrawText
180 482 133 133 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
176 486 10 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
307 486 10 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
176 355 10 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
307 355 10 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
160 525 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
156 529 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
160 525 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
163 522 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
182 525 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
178 529 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
182 525 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
185 522 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
240 525 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
236 529 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
240 525 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
243 522 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
291 525 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
287 529 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
291 525 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
294 522 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
314 525 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
310 529 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
314 525 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
317 522 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 180 496 180 506 DrawLine
184 496 180 486 176 496 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 247 496 247 506 DrawLine
250 496 247 486 244 496 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 312 496 312 506 DrawLine
316 496 312 486 308 496 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
137 502 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
133 506 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
137 502 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
140 499 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
137 480 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
133 484 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
137 480 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
140 477 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
137 422 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
133 426 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
137 422 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
140 419 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
137 371 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
133 375 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
137 371 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
140 368 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
137 348 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
133 352 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
137 348 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
140 345 5 5 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
0 0 0 0 false 0 0 [] 1 165 482 155 482 DrawLine
165 486 175 482 165 478 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 165 415 155 415 DrawLine
165 418 175 415 165 412 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
0 0 0 0 false 0 0 [] 1 165 350 155 350 DrawLine
165 354 175 350 165 346 6 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawPolyline
grestore

grestore

0 648 375 498 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Times-BoldItalic 
%%BoundingBox: 118 147 493 645

%%EndDocument
 GE /Times-Bold SF
6120 43812 MT
(Figure 3-1:)SH
/Times-Roman SF
11893 XM
(Lapidary menu for attaching constraints to box objects)SH
8870 45763 MT
(secondary selection.)SH
6120 48061 MT
(The only option for the)28 W
/Courier SF
16739 XM
(:width)SH
/Times-Roman SF
21002 XM
(slot is to constrain the width of the primary selection to)
28 W( the width of the)27 W
6120 49257 MT
(secondary selection and the only option)
103 W( for the)104 W
/Courier SF
27841 XM
(:height)SH
/Times-Roman SF
32840 XM
(slot is to constrain the height of the primary)104 W
6120 50453 MT
(selection to)
67 W( the height of the secondary selection.  In addition, each of the four slots may have a custom)66 W
6120 51649 MT
(constraint attached to them \050see Section 3.3\051.  Each of the)
21 W( four slots also has an "Unconstrain" option that)22 W
6120 52845 MT
(destroys the constraint attached to that slot.)SH
6120 55143 MT
(The constraints in the box constraint menu can be fine-tuned by entering offsets for the constraints, and)
11 W( in)10 W
6120 56339 MT
(the case of the size slots \050width and height\051, scale factors)
3 W( as well.  When an object is centered with respect)4 W
6120 57535 MT
(to another object, the offset field changes to a percent field denoting an)
141 W( interval where 0% causes the)140 W
6120 58731 MT
(center point of the constrained object to be attached to the)
61 W( left or top side of the object referenced in the)62 W
6120 59927 MT
(constraint and 100%)
18 W( causes the center point of the constrained object to be attached to the right or bottom)17 W
6120 61123 MT
(side of the object referenced in the constraint.  By default this percentage is 50.  The)48 W
/Courier SF
44291 XM
(Difference in)49 W
6120 62319 MT
(pixels)SH
/Times-Roman SF
10375 XM
(and)SH
/Courier SF
12258 XM
(Scale)SH
/Times-Roman SF
15853 XM
(factors cause the width and height constraints to be computed as)20 W
/Times-Italic SF
44634 XM
(Scale * Dimension)19 W
6120 63515 MT
(+ Difference in pixels)SH
/Times-Roman SF
(.)SH
6120 65813 MT
(Finally, each of the slots has a labeled box next to its)
48 W( name that allows the user to type in an integer that)49 W
6120 67009 MT
(will be placed in that slot.  If there is already a constraint in the slot, the)
54 W( constraint will not be destroyed)53 W
6120 68205 MT
(so the value will only temporarily override)
217 W( the value computed by the constraint \050the next time the)218 W
6120 69401 MT
(constraint is recomputed, the value will be lost\051.)
103 W( This)
479 W( operation works only when there is one primary)102 W
6120 70597 MT
(selection and no secondary selections.)SH
ES
%%Page: 555 18
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.2)
SH( Line)
1800 W( Constraints)SH
51386 XM
(Page 555)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(3.2. Line Constraints)SH
11 /Times-Roman AF
8280 9334 MT
(The line constraint menu)
49 W( allows the endpoints of a line to be attached to other objects or the)50 W
/Courier SF
49867 XM
(:left)SH
/Times-Roman SF
53492 XM
(and)SH
/Courier SF
8280 10530 MT
(:top)SH
/Times-Roman SF
11282 XM
(slots of a box object to be constrained to the endpoint of)
87 W( a line \050Figure 3-2\051.  The buttons on the)86 W
8280 11726 MT
(box and line object in Figure 3-2 indicate the various locations where the endpoint of a line can be)197 W
8280 12922 MT
(attached to a box or)
195 W( line object or where a point of a box can be attached to a line.  Thus the two)194 W
8280 14118 MT
(endpoints of a line can be attached to any of the corners, sides, or center of a box object)
78 W( and any of the)79 W
8280 15314 MT
(corners, sides, or center of a box object can be attached to the endpoints of a line.)SH
7 10 0 10295 61870 GB 
%%BeginDocument: lapidary/line-constraints.PS
%!PS-Adobe-2.0
%%Title: line constraints
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 15, 1992, 10:39 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 144 143 467 648
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
72 -72 translate
gsave
0 648 323 505 ClipToRectangle
0 0 translate
gsave
10 638 621 172 21 0 false 0 0 0 false 0 0 0 false (Line Constraint Menu) 18 /Times-BoldItalic DrawText
10 591 294 142 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 598 129 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
25 598 587 119 14 0 false 0 0 0 false 0 0 0 false (primary-selection) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 102 470 70 570 DrawLine
63 577 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
59 581 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
63 577 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
66 574 5 5 1.00 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
95 477 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
91 481 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
95 477 11 11 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
178 570 100 100 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
171 577 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
167 581 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 577 11 11 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
174 574 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
171 527 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
167 531 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 527 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
174 524 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
171 477 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
167 481 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 477 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
174 474 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
221 577 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
217 581 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 577 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
224 574 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
221 527 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
217 531 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 527 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
224 524 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
221 477 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
217 481 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 477 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
224 474 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
271 577 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
267 581 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 577 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 574 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
271 527 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
267 531 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 527 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 524 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
271 477 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
267 481 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 477 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 474 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
10 423 294 142 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 430 142 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
25 430 419 132 14 0 false 0 0 0 false 0 0 0 false (secondary-selection) 12 /Courier-Bold DrawText
0 0 0 0 false 0 0 [] 1 136 302 36 402 DrawLine
29 409 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 413 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
29 409 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
32 406 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
129 309 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
125 313 19 19 0.50 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
129 309 11 11 0.50 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
132 306 5 5 0 0 0 0 false 0 0 [] -1 0.50 0 0 0 false DrawRectangle
178 402 100 100 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
171 409 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
167 413 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 409 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
174 406 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
171 359 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
167 363 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 359 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
174 356 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
171 309 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
167 313 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
171 309 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
174 306 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
221 409 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
217 413 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 409 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
224 406 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
221 359 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
217 363 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 359 11 11 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
221 309 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
217 313 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
221 309 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
224 306 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
271 409 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
267 413 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 409 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 406 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
271 359 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
267 363 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 359 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 356 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
271 309 19 19 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
267 313 19 19 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
271 309 11 11 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
274 306 5 5 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
15 257 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
10 262 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 259 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
16 256 245 77 14 0 false 0 0 0 false 0 0 0 false (unconstrain) 12 /Courier DrawText
15 221 89 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
10 226 89 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
13 223 83 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
24 220 209 61 14 0 false 0 0 0 false 0 0 0 false (customize) 12 /Courier DrawText
259 633 44 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
254 638 44 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
257 635 38 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
270 633 622 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
123 260 249 55 14 0 false 0 0 0 false 0 0 0 false (x-offset) 12 /Courier-Bold DrawText
189 260 249 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
183 262 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
123 233 222 56 14 0 false 0 0 0 false 0 0 0 false (y-offset) 12 /Courier-Bold DrawText
190 233 222 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
184 235 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
233 260 249 13 14 0 false 0 0 0 false 0 0 0 false (x1) 12 /Courier-Bold DrawText
257 260 249 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
251 262 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
233 233 222 14 14 0 false 0 0 0 false 0 0 0 false (y1) 12 /Courier-Bold DrawText
258 233 222 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
252 235 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
233 196 185 13 14 0 false 0 0 0 false 0 0 0 false (x2) 12 /Courier-Bold DrawText
257 196 185 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
251 198 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
233 169 158 14 14 0 false 0 0 0 false 0 0 0 false (y2) 12 /Courier-Bold DrawText
258 169 158 5 14 0 false 0 0 0 false 0 0 0 false (0) 12 /Courier DrawText
252 171 17 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
grestore

grestore

0 648 323 505 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic 
%%BoundingBox: 144 143 467 648

%%EndDocument
 GE /Times-Bold SF
8280 53612 MT
(Figure 3-2:)SH
/Times-Roman SF
14053 XM
(Lapidary menu for attaching constraints to line objects)SH
8280 55910 MT
(The line object in the constraint menu is oriented in the same)
31 W( direction as the selected line in the drawing)30 W
8280 57106 MT
(window, so that the user knows which endpoint is)
133 W( being constrained.  The buttons with the blackened)134 W
8280 58302 MT
(rectangles indicate the points that can be constrained in the primary selection.)
23 W( Similarly,)
320 W( the buttons with)22 W
8280 59498 MT
(the white rectangles indicate the points in the secondary selection that)
226 W( the primary selection can be)227 W
8280 60694 MT
(attached to.)SH
8280 62992 MT
(The)SH
/Courier SF
10390 XM
(Unconstrain)SH
/Times-Roman SF
18050 XM
(button at the bottom of the)
125 W( menu allows the user to destroy the constraint on the)124 W
8280 64188 MT
(selected point and the)172 W
/Courier SF
18804 XM
(Customize)SH
/Times-Roman SF
25191 XM
(button allows the user to input a custom constraint \050described)
172 W( in)173 W
8280 65384 MT
(Section 3.3\051. Finally the)32 W
/Courier SF
19286 XM
(x-offset)SH
/Times-Roman SF
24872 XM
(and)SH
/Courier SF
26766 XM
(y-offset)SH
/Times-Roman SF
32352 XM
(labeled boxes allow the user to enter offsets for the)31 W
8280 66580 MT
(constraint. All)
345 W( offsets are added to the value)
35 W( computed by the constraint.  For example, an x-offset of 10)36 W
8280 67776 MT
(causes an)
51 W( endpoint constrained to the northwest corner of a box object to appear 10 pixels to the right of)50 W
8280 68972 MT
(that corner.)SH
8280 71270 MT
(The end points of a line can be set directly by typing in values for x1, y1, x2 and y2.  This)
1 W( function is only)2 W
ES
%%Page: 556 19
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 556)
SH( Lapidary)830 W
38954 XM
(Creating Constraints)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(active if there is a single line as the primary selection and no secondary selections.)SH
14 /Times-Bold AF
6120 11773 MT
(3.3. Custom Constraints)SH
11 /Times-Roman AF
6120 12969 MT
(When the user selects the custom constraint option in any)
75 W( of the constraint or property menus, Lapidary)74 W
6120 14165 MT
(brings up the C32 spreadsheet and a formula window for)
15 W( the desired slot. The user should enter a formula)16 W
6120 15361 MT
(and press OK \050or cancel to stop the operation\051. Both the OK and cancel)
87 W( buttons in the formula window)86 W
6120 16557 MT
(will make C32 disappear.)SH
6120 18855 MT
(Information on C32 can be found in the C32 chapter. However, Lapidary modifies C32 in a number of)99 W
6120 20051 MT
(ways that are important for a user to know. First, it generates indirect references to objects)
121 W( rather than)120 W
6120 21247 MT
(direct references. A direct reference explicitly lists an)
19 W( object in a constraint, whereas an indirect reference)20 W
6120 22443 MT
(accesses the object)
21 W( indirectly through a link. For example,)20 W
/Courier SF
32175 XM
(\050gv rect1 :left\051)20 W
/Times-Roman SF
43070 XM
(is a direct reference to)20 W
/Courier SF
6120 23639 MT
(rect1)SH
/Times-Roman SF
(, whereas)236 W
/Courier SF
14319 XM
(\050gvl :link0 :left\051)236 W
/Times-Roman SF
27182 XM
(is an indirect reference to)236 W
/Courier SF
39813 XM
(rect1)SH
/Times-Roman SF
43624 XM
(\050this assumes that a)237 W
6120 24835 MT
(pointer to)61 W
/Courier SF
10764 XM
(rect1)SH
/Times-Roman SF
14400 XM
(is stored in)60 W
/Courier SF
19683 XM
(:link0)SH
/Times-Roman SF
(\051. If the user always generates references using the C32 functions)60 W
/Courier SF
6120 26031 MT
(Insert Ref)
111 W( from Mouse)112 W
/Times-Roman SF
20702 XM
(and)SH
/Courier SF
22677 XM
(Insert Ref from Spread)112 W
/Times-Roman SF
(, then Lapidary will automatically)112 W
6120 27227 MT
(generate indirect references and create appropriate link names. The user can edit these link)
164 W( names by)163 W
6120 28423 MT
(bringing up the parameters menu and hitting the link parameters button \050see Section)
7 W( 2.3\051.  However, if the)8 W
6120 29619 MT
(user inserts the references by typing them in, then the user should take care)
144 W( to use the)143 W
/Courier SF
46378 XM
(gvl)SH
/Times-Roman SF
48776 XM
(form and)143 W
6120 30815 MT
(create the appropriate links. When the formula is completed, Lapidary checks whether there are any direct)7 W
6120 32011 MT
(references in the formula and generates a warning if there are.  At this point the user has)
106 W( the option of)105 W
6120 33207 MT
(editing the formula or continuing with the formula as is.)
66 W( If the user chooses to leave direct references in)67 W
6120 34403 MT
(the formula, Lapidary may not be able to generalize it, so the formula)
194 W( may behave strangely if it is)193 W
6120 35599 MT
(inherited.)SH
6120 37897 MT
(The second change Lapidary makes is in copying formulas. Lapidary)
36 W( copies all the links that the formula)37 W
6120 39093 MT
(references to the object which is receiving the copied formula. If)
4 W( the links should point to new objects, the)3 W
6120 40289 MT
(user must manually change them by selecting the)155 W
/Courier SF
29294 XM
(Show All Slots)155 W
/Times-Roman SF
39275 XM
(option in C32 and editing the)156 W
6120 41485 MT
(appropriate links \050the names of the links that need to be modified can be found by looking at the formula\051.)SH
14 /Times-Bold AF
6120 45303 MT
(3.4. The Constraint Gadget)SH
11 /Times-Roman AF
6120 46499 MT
(The constraint gadget allows a set of standard constraints to be attached to various Garnet objects.)
83 W( The)440 W
6120 47695 MT
(constraint gadget provides two menus: a box constraint menu for)
49 W( specifying box-type constraints \050Figure)50 W
6120 48891 MT
(3-3\051 and a line constraint menu for specifying line-type constraints)
163 W( \050Figure 3-4\051.  The module can be)162 W
6120 50087 MT
(loaded independently of Lapidary with)803 W
10 /Courier AF
27516 XM
(\050garnet-load "lapidary:constraint-gadget-)804 W
6120 51283 MT
(loader"\051)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
6120 54967 MT
(3.4.1. Box Constraint Menu)SH
11 /Times-Roman AF
6120 56163 MT
(The box constraint menu allows the)95 W
10 /Courier AF
22698 XM
(:left)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
26343 XM
(:top)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
29389 XM
(:width)SH
11 /Times-Roman AF
(, and)96 W
10 /Courier AF
35594 XM
(:height)SH
11 /Times-Roman AF
40165 XM
(of objects to be constrained.)96 W
6120 57359 MT
(Constraints on the left slot may include:)SH
/Symbol SF
8089 58937 MT
(\267)SH
/Times-Roman SF
8870 XM
(Left-Outside - attach the right side of the constrained object to)
81 W( the left side of the reference)80 W
8870 60133 MT
(object;)SH
/Symbol SF
8089 62027 MT
(\267)SH
/Times-Roman SF
8870 XM
(Left-Inside - align the)
5 W( left side of the constrained object to the left side of the reference object)6 W
8870 63223 MT
(\050this is left alignment\051;)SH
/Symbol SF
8089 65117 MT
(\267)SH
/Times-Roman SF
8870 XM
(Center - center the constrained object with respect to the reference object's center;)SH
/Symbol SF
8089 67011 MT
(\267)SH
/Times-Roman SF
8870 XM
(Right-Inside - attach the right side of the constrained object to the right side of)
50 W( the reference)49 W
8870 68207 MT
(object \050this is right alignment\051; and)SH
/Symbol SF
8089 70101 MT
(\267)SH
/Times-Roman SF
8870 XM
(Right-Outside - attach the left side of the constrained object to the right)
42 W( side of the reference)43 W
8870 71297 MT
(object.)SH
ES
%%Page: 557 20
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.4)
SH( The)
1800 W( Constraint Gadget)SH
51386 XM
(Page 557)SH
46800 50 8280 4486 UL
46800 50 8280 8155 UL
11 SS 
7 10 0 10260 50561 GB 
%%BeginDocument: lapidary/box-constraint-menu.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jul 6, 1993, 2:43 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 211 540 581
%%%Pages: 1
%%EndComments


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.69 0.69 scale
0 736 translate

%
% Begin new window
%
gsave
0 0 676 535 ClipToRectangle
gsave
0 0 676 535 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
380 -396 translate
(Drawing Window 2) 0 0 294 137 2 23 2 2 DrawGenericWindowFrame
0 0 294 137 ClipToRectangle
gsave
49 -28 118 73 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
186 -28 57 24 [0 0 0] 0 0 [] 1 null DrawRectangle
183 -25 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
212 -25 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
239 -25 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
239 -37 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
239 -48 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
212 -48 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
183 -48 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
183 -37 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
46 -25 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
105 -25 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
163 -25 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
163 -62 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
163 -97 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
105 -97 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
46 -97 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
46 -62 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
grestore

grestore


%
% Begin new window
%
gsave
2 -23 translate
(box constraints) 0 0 375 510 2 23 2 2 DrawGenericWindowFrame
0 0 375 510 ClipToRectangle
gsave
10 -10 -27 169 21 false [0 0 0] [1 1 1] (Box Constraint Menu) 18 /Times-BoldItalic DrawText
217 -10 120 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
212 -5 120 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
215 -8 114 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
217 -10 -21 110 14 false [0 0 0] [1 1 1] (Show Constraints) 12 /Courier DrawText
347 -10 23 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
342 -5 23 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
345 -8 17 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
347 -10 -21 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
200 -38 -55 31 21 false [0 0 0] [1 1 1] (:left) 18 /Times-BoldItalic DrawText
242 -43 -54 19 14 false [0 0 0] [1 1 1] (186) 12 /Courier DrawText
236 -41 31 18 [0 0 0] 0 0 [] 1 null DrawRectangle
195 -67 -78 41 14 false [0 0 0] [1 1 1] (offset) 12 /Courier DrawText
247 -67 -78 12 14 false [0 0 0] [1 1 1] (20) 12 /Courier DrawText
241 -65 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
142 -92 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
137 -87 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
140 -90 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
143 -93 -104 77 14 false [0 0 0] [1 1 1] (unconstrain) 12 /Courier DrawText
241 -92 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
236 -87 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
239 -90 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
250 -93 -104 61 14 false [0 0 0] [1 1 1] (customize) 12 /Courier DrawText
45 -169 -186 30 21 false [0 0 0] [1 1 1] (:top) 18 /Times-BoldItalic DrawText
86 -174 -185 12 14 false [0 0 0] [1 1 1] (28) 12 /Courier DrawText
80 -172 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
39 -198 -209 41 14 false [0 0 0] [1 1 1] (offset) 12 /Courier DrawText
91 -198 -209 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
85 -196 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
35 -223 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
30 -218 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
33 -221 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
36 -224 -235 77 14 false [0 0 0] [1 1 1] (unconstrain) 12 /Courier DrawText
35 -259 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
30 -254 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
33 -257 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
44 -260 -271 61 14 false [0 0 0] [1 1 1] (customize) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 313 -317 180 -317 DrawLine
187 -320 {
  { 187 -314 180 -317 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
306 -314 {
  { 306 -320 313 -317 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 246 -327 246 -337 DrawLine
242 -327 {
  { 250 -327 246 -317 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
239 -341 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
235 -337 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
239 -341 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
242 -344 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
142 -364 -381 47 21 false [0 0 0] [1 1 1] (:width) 18 /Times-BoldItalic DrawText
200 -367 -378 13 14 false [0 0 0] [1 1 1] (57) 12 /Courier DrawText
194 -365 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
149 -391 -402 33 14 false [0 0 0] [1 1 1] (Scale) 12 /Courier DrawText
193 -391 -402 5 14 false [0 0 0] [1 1 1] (1) 12 /Courier DrawText
187 -389 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
131 -406 -417 69 14 false [0 0 0] [1 1 1] (Difference) 12 /Courier DrawText
131 -420 -431 61 14 false [0 0 0] [1 1 1] (in pixels) 12 /Courier DrawText
211 -413 -424 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
205 -411 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
141 -438 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
136 -433 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
139 -436 83 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
142 -439 -450 77 14 false [1 1 1] [1 1 1] (unconstrain) 12 /Courier DrawText
141 -474 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
136 -469 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
139 -472 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
150 -475 -486 61 14 false [0 0 0] [1 1 1] (customize) 12 /Courier DrawText
[0 0 0] 0 0 [] 1 321 -309 321 -176 DrawLine
318 -183 {
  { 324 -183 321 -176 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
324 -302 {
  { 318 -302 321 -309 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 331 -243 341 -243 DrawLine
331 -246 {
  { 331 -240 321 -243 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
345 -236 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
341 -232 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
345 -236 11 11 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
264 -362 -379 55 21 false [0 0 0] [1 1 1] (:height) 18 /Times-BoldItalic DrawText
330 -367 -378 12 14 false [0 0 0] [1 1 1] (24) 12 /Courier DrawText
324 -365 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
275 -391 -402 33 14 false [0 0 0] [1 1 1] (Scale) 12 /Courier DrawText
319 -391 -402 26 14 false [0 0 0] [1 1 1] (0.33) 12 /Courier DrawText
313 -389 38 18 [0 0 0] 0 0 [] 1 null DrawRectangle
257 -406 -417 69 14 false [0 0 0] [1 1 1] (Difference) 12 /Courier DrawText
257 -420 -431 61 14 false [0 0 0] [1 1 1] (in pixels) 12 /Courier DrawText
337 -413 -424 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
331 -411 30 18 [0 0 0] 0 0 [] 1 null DrawRectangle
267 -438 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
262 -433 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
265 -436 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
268 -439 -450 77 14 false [0 0 0] [1 1 1] (unconstrain) 12 /Courier DrawText
267 -474 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
262 -469 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
265 -472 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
276 -475 -486 61 14 false [0 0 0] [1 1 1] (customize) 12 /Courier DrawText
180 -176 133 133 [0 0 0] 0 0 [] 1 null DrawRectangle
176 -172 10 10 [0 0 0] 0 0 [] 1 null DrawRectangle
307 -172 10 10 [0 0 0] 0 0 [] 1 null DrawRectangle
176 -303 10 10 [0 0 0] 0 0 [] 1 null DrawRectangle
307 -303 10 10 [0 0 0] 0 0 [] 1 null DrawRectangle
160 -133 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
156 -129 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
160 -133 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
163 -136 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
182 -133 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
178 -129 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
182 -133 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
185 -136 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
240 -133 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
236 -129 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
240 -133 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
243 -136 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
291 -133 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
287 -129 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
291 -133 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
294 -136 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
314 -133 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
310 -129 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
314 -133 11 11 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
[0 0 0] 0 0 [] 1 180 -162 180 -152 DrawLine
184 -162 {
  { 176 -162 180 -172 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
[0 0 0] 0 0 [] 1 247 -162 247 -152 DrawLine
250 -162 {
  { 244 -162 247 -172 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
[0 0 0] 0 0 [] 1 312 -162 312 -152 DrawLine
316 -162 {
  { 308 -162 312 -172 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
137 -156 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
133 -152 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
137 -156 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
140 -159 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
137 -178 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
133 -174 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
137 -178 11 11 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
137 -236 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
133 -232 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
137 -236 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
140 -239 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
137 -287 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
133 -283 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
137 -287 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
140 -290 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
137 -310 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
133 -306 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
137 -310 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
140 -313 5 5 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
[0 0 0] 0 0 [] 1 165 -176 155 -176 DrawLine
165 -172 {
  { 165 -180 175 -176 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
[0 0 0] 0 0 [] 1 165 -243 155 -243 DrawLine
165 -240 {
  { 165 -246 175 -243 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
[0 0 0] 0 0 [] 1 165 -308 155 -308 DrawLine
165 -304 {
  { 165 -312 175 -308 }
} [0 0 0] 0 0 [] 1 [0 0 0] DrawPolyline
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Times-BoldItalic Helvetica-Bold 
%%BoundingBox: 72 211 540 581

%%EndDocument
 GE /Times-Bold SF
8280 37543 MT
(Figure 3-3:)SH
/Times-Roman SF
14359 XM
(The constraint gadget's menu for box-like objects on the left, and a)
31 W( drawing window on the)30 W
14053 38739 MT
(right. The white)
7 W( rectangle in the drawing window is the object to be constrained and the gray)8 W
14053 39935 MT
(rectangle is the object to be referenced in the)
52 W( constraint.  The white rectangle is constrained)51 W
14053 41131 MT
(to be offset from the right of the gray rectangle by 20 pixels,)
27 W( and aligned at the top-inside of)28 W
14053 42327 MT
(the gray rectangle.  The white rectangle's width is not constrained and it is 33%)
14 W( as tall as the)13 W
14053 43523 MT
(gray rectangle. If the gray rectangle changes, the white one will be adjusted automatically.)SH
46800 50 8280 45475 UL
8280 47573 MT
(Constraints on the top slot may include:)SH
/Symbol SF
10249 49151 MT
(\267)SH
/Times-Roman SF
11030 XM
(Top-Outside - attach)
24 W( the bottom side of the constrained object to the top side of the reference)23 W
11030 50347 MT
(object;)SH
/Symbol SF
10249 52241 MT
(\267)SH
/Times-Roman SF
11030 XM
(Top-Inside - align the top side of the constrained object to)
16 W( the top side of the reference object)17 W
11030 53437 MT
(\050this is top alignment\051;)SH
/Symbol SF
10249 55331 MT
(\267)SH
/Times-Roman SF
11030 XM
(Center - center the constrained object with respect to the reference object's center;)SH
/Symbol SF
10249 57225 MT
(\267)SH
/Times-Roman SF
11030 XM
(Bottom-Inside - attach the bottom side)
149 W( of the constrained object to the bottom side of the)148 W
11030 58421 MT
(reference object \050this is bottom alignment\051; and)SH
/Symbol SF
10249 60315 MT
(\267)SH
/Times-Roman SF
11030 XM
(Bottom-Outside - attach the top side of the)
213 W( constrained object to the bottom side of the)214 W
11030 61511 MT
(reference object.)SH
8280 63809 MT
(An object may be constrained to another object's width or height using the width and height portions)
70 W( of)69 W
8280 65005 MT
(the box constraint menu.)SH
8280 67303 MT
(The offset boxes for the left and top slots, and the scale and difference boxes for the width)
116 W( and height)117 W
8280 68499 MT
(slots provide ways of fine-tuning the constraints. The offset boxes for the left and top slots)
29 W( allow the user)28 W
8280 69695 MT
(to add a constant pixel offset to a constraint. For example, the value of 20 in the left offset box)
45 W( in Figure)46 W
8280 70891 MT
(3-3, causes the white)
109 W( rectangle to be placed 20 pixels to the right of the gray rectangle. When the user)108 W
ES
%%Page: 558 21
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 558)
SH( Lapidary)830 W
38954 XM
(Creating Constraints)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
7 10 0 8100 52101 GB 
%%BeginDocument: lapidary/line-constraint-menu.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 11, 1993, 5:00 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 190 540 603
%%%Pages: 1
%%EndComments


/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.78 0.78 scale
0 681 translate

%
% Begin new window
%
gsave
0 0 601 530 ClipToRectangle
gsave
0 0 601 530 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(line constraints) 0 0 356 505 2 23 2 2 DrawGenericWindowFrame
0 0 356 505 ClipToRectangle
gsave
10 -10 -27 172 21 false [0 0 0] [1 1 1] (Line Constraint Menu) 18 /Times-BoldItalic DrawText
10 -57 294 142 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -50 121 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
25 -50 -61 111 14 false [0 0 0] [1 1 1] (obj-to-constrain) 12 /Courier-Bold DrawText
[0 0 0] 0 0 [] 1 136 -154 36 -101 DrawLine
29 -94 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
25 -90 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
29 -94 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
32 -97 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
129 -147 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
125 -143 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
129 -147 11 11 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
166 -66 125 125 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
178 -78 100 100 [0 0 0] 0 0 [] 1 null DrawRectangle
171 -71 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -67 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -71 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
174 -74 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
171 -121 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -117 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -121 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
174 -124 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
171 -171 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -167 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -171 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
174 -174 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
221 -71 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -67 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -71 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -74 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
221 -121 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -117 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -121 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -124 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
221 -171 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -167 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -171 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -174 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
271 -71 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -67 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -71 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -74 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
271 -121 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -117 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -121 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -124 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
271 -171 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -167 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -171 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -174 5 5 [1 1 1] 0 0 [] 1 [0 0 0] DrawRectangle
10 -225 294 142 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -218 121 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
25 -218 -229 111 14 false [0 0 0] [1 1 1] (obj-to-reference) 12 /Courier-Bold DrawText
24 -234 125 125 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
[0 0 0] 0 0 [] 1 36 -318 136 -274 DrawLine
129 -267 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
125 -263 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
129 -267 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
132 -270 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
79 -289 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
75 -285 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
79 -289 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
82 -292 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
29 -311 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
25 -307 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
29 -311 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
32 -314 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
178 -246 100 100 [0 0 0] 0 0 [] 1 null DrawRectangle
171 -239 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -235 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -239 11 11 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
171 -289 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -285 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -289 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
174 -292 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
171 -339 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
167 -335 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
171 -339 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
174 -342 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
221 -239 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -235 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -239 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -242 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
221 -289 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -285 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -289 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -292 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
221 -339 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
217 -335 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
221 -339 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
224 -342 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
271 -239 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -235 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -239 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -242 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
271 -289 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -285 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -289 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -292 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
271 -339 19 19 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
267 -335 19 19 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
271 -339 11 11 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
274 -342 5 5 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
15 -391 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
10 -386 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
13 -389 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
16 -392 -403 77 14 false [0 0 0] [1 1 1] (unconstrain) 12 /Courier DrawText
15 -427 89 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
10 -422 89 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
13 -425 83 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
24 -428 -439 61 14 false [0 0 0] [1 1 1] (customize) 12 /Courier DrawText
196 -15 120 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
191 -10 120 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
194 -13 114 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
196 -15 -26 110 14 false [0 0 0] [1 1 1] (Show Constraints) 12 /Courier DrawText
326 -15 23 24 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
321 -10 23 24 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
324 -13 17 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
326 -15 -26 13 14 false [0 0 0] [1 1 1] (OK) 12 /Courier DrawText
123 -388 -399 55 14 false [0 0 0] [1 1 1] (x-offset) 12 /Courier-Bold DrawText
189 -388 -399 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
183 -386 17 18 [0 0 0] 0 0 [] 1 null DrawRectangle
123 -415 -426 56 14 false [0 0 0] [1 1 1] (y-offset) 12 /Courier-Bold DrawText
190 -415 -426 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
184 -413 17 18 [0 0 0] 0 0 [] 1 null DrawRectangle
233 -388 -399 13 14 false [0 0 0] [1 1 1] (x1) 12 /Courier-Bold DrawText
257 -388 -399 13 14 false [0 0 0] [1 1 1] (40) 12 /Courier DrawText
251 -386 25 18 [0 0 0] 0 0 [] 1 null DrawRectangle
233 -415 -426 14 14 false [0 0 0] [1 1 1] (y1) 12 /Courier-Bold DrawText
258 -415 -426 12 14 false [0 0 0] [1 1 1] (20) 12 /Courier DrawText
252 -413 24 18 [0 0 0] 0 0 [] 1 null DrawRectangle
233 -452 -463 13 14 false [0 0 0] [1 1 1] (x2) 12 /Courier-Bold DrawText
257 -452 -463 19 14 false [0 0 0] [1 1 1] (152) 12 /Courier DrawText
251 -450 31 18 [0 0 0] 0 0 [] 1 null DrawRectangle
233 -479 -490 14 14 false [0 0 0] [1 1 1] (y2) 12 /Courier-Bold DrawText
258 -479 -490 12 14 false [0 0 0] [1 1 1] (79) 12 /Courier DrawText
252 -477 24 18 [0 0 0] 0 0 [] 1 null DrawRectangle
grestore

grestore


%
% Begin new window
%
gsave
360 -371 translate
(Drawing Window 4) 0 0 239 157 2 23 2 2 DrawGenericWindowFrame
0 0 239 157 ClipToRectangle
gsave
169.5 -96.5 24.5 24.5 0 360 [0 0 0] 0 0 [] 1 null DrawEllipse
[0 0 0] 0 0 [] 1 152 -79 40 -20 DrawLine
142 -69 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
167 -69 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
190 -69 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
190 -94 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
190 -117 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
167 -117 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
142 -117 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
142 -94 7 7 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
37 -17 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
149 -76 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
93 -46 7 7 [0 0 0] 0 0 [] -1 [0 0 0] DrawRectangle
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic Helvetica-Bold 
%%BoundingBox: 72 190 540 603

%%EndDocument
 GE /Times-Bold SF
6120 40553 MT
(Figure 3-4:)SH
/Times-Roman SF
12247 XM
(The constraint-gadget menu for line-like)
79 W( objects on the left, and a drawing window on the)80 W
11893 41749 MT
(right. The)
379 W( arrow in the drawing window is the object to be constrained and the circle is the)51 W
11893 42945 MT
(object to be referenced in the constraint.)
48 W( In)
373 W( the ``obj-to-constrain'' section of the constraint)49 W
11893 44141 MT
(menu, the line feedback object has been)
146 W( rotated so that it has the same orientation as the)145 W
11893 45337 MT
(selected arrow, and the)
66 W( box feedback object has been disabled \050grayed-out\051. In the ``obj-to-)67 W
11893 46533 MT
(reference'' section the line feedback object has been disabled since the object to be)344 W
11893 47729 MT
(referenced in the constraint is a box-like object. The darkened buttons on the right endpoint)57 W
11893 48925 MT
(of the line feedback object and)
114 W( the left corner of the box feedback object indicate that the)113 W
11893 50121 MT
(right endpoint of the arrow is attached to the left corner of the circle.)SH
46800 50 6120 52073 UL
6120 53824 MT
(presses a center button, the label for the)
37 W( offset box turns to percent, since the user enters a percentage for)38 W
6120 55020 MT
(the center \05050% is the default\051.)
107 W( In this case the constraint has the form ``reference-obj.left + \050percent *)106 W
6120 56216 MT
(reference-obj.width\051 - constrained-obj.width /)
203 W( 2''.  The scale and difference boxes for the width and)204 W
6120 57412 MT
(height slots allow the user to create constraints of the form ``scale * {width, height} + difference''.)SH
6120 59710 MT
(Pressing an)109 W
10 /Courier AF
11654 XM
(unconstrain)SH
11 /Times-Roman AF
18638 XM
(button will remove a constraint from the appropriate slot of the constrained)109 W
6120 60906 MT
(object, if there is one. Pressing a)212 W
10 /Courier AF
22175 XM
(customize)SH
11 /Times-Roman AF
28062 XM
(button will bring up C32)
212 W( with a formula box for the)213 W
6120 62102 MT
(appropriate slot. More information on using C32 with the constraint gadget is included in Section 3.4.4.)SH
6120 64400 MT
(The boxes next to the slot names allow the user to enter specific values)
2 W( for an object's left, top, width, and)1 W
6120 65596 MT
(height. This option is useful when the designer wants specific values for these)
206 W( slots, rather than the)207 W
6120 66792 MT
(approximate values obtained using direct manipulation. When a value is entered in one of these boxes, the)4 W
6120 67988 MT
(constraint in that slot is destroyed if one exists. When an)
37 W( object is selected, these boxes reflect the values)38 W
6120 69184 MT
(of the object's bounding box.)SH
ES
%%Page: 559 22
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.4)
SH( The)
1800 W( Constraint Gadget)SH
51386 XM
(Page 559)SH
46800 50 8280 4486 UL
12 /Times-Bold AF
8280 8004 MT
(3.4.2. Line Constraint Menu)SH
11 /Times-Roman AF
8280 9200 MT
(The line constraint menu supports three types of constraints: line to line, line to box, and box to line.)
41 W( To)356 W
8280 10396 MT
(make it clear what type of constraint is to be applied, the line constraint menu displays the types of the)90 W
8280 11592 MT
(object to be constrained and the object to be referenced in the constraint \050either a line or a box\051. It does)
15 W( so)14 W
8280 12788 MT
(by displaying two sections, an obj-to-constrain section)
229 W( and an obj-to-reference section. Each section)230 W
8280 13984 MT
(displays both a line and a box. The)
40 W( line objects have buttons indicating that endpoints can be constrained)39 W
8280 15180 MT
(and the box objects have buttons indicating that edges, corners, and the center can be constrained.)
113 W( The)114 W
8280 16376 MT
(line in)
129 W( the obj-to-reference section has an additional button in its center, indicating that objects can be)128 W
8280 17572 MT
(constrained to the center of a line \050the line in the)
19 W( obj-to-constrain menu does not have a center button, but)20 W
8280 18768 MT
(the user can stll constrain the center of a line by pressing the)91 W
/Courier SF
36312 XM
(customize)SH
/Times-Roman SF
42618 XM
(button in the)
91 W( line constraint)90 W
8280 19964 MT
(menu\051. When)
473 W( an object)
99 W( is selected, the line constraint menu grays out whichever feedback object does)100 W
8280 21160 MT
(not correspond to the type of the selected object. In addition, if the selected)
158 W( object is a line, then the)157 W
8280 22356 MT
(appropriate feedback line is rotated, so that its alignment matches the alignment of)
38 W( the selected line. This)39 W
8280 23552 MT
(rotation makes it clear which endpoint of the selected line is)
227 W( being constrained, or being used as a)226 W
8280 24748 MT
(reference in a constraint.)SH
8280 27046 MT
(The line constraint menu allows either endpoint of)
15 W( a line to be constrained, and any corner, side, or center)16 W
8280 28242 MT
(of a box object to be constrained.  To create a)
89 W( constraint, the designer pushes the appropriate button on)88 W
8280 29438 MT
(the enabled feedback)
357 W( objects in both the obj-to-constrain and the obj-to-reference sections.  The)358 W
8280 30634 MT
(connection between)
320 W( two points can be fine-tuned using the)319 W
10 /Courier AF
37269 XM
(x-offset)SH
11 /Times-Roman AF
42663 XM
(and)SH
10 /Courier AF
44845 XM
(y-offset)SH
11 /Times-Roman AF
50239 XM
(fields. For)319 W
8280 31830 MT
(example, if the designer wanted a line to be connected to the left side)
15 W( of a box, 10 pixels from the top, the)16 W
8280 33026 MT
(designer could constrain the line to the left corner of the box, and enter a y-offset of 10.)SH
8280 35324 MT
(The)SH
10 /Courier AF
10308 XM
(x1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
12101 XM
(y1)SH
11 /Times-Roman AF
(,)SH
10 /Courier AF
13894 XM
(x2)SH
11 /Times-Roman AF
(, and)43 W
10 /Courier AF
17593 XM
(y2)SH
11 /Times-Roman AF
19111 XM
(boxes allow the designer to specify an exact)
43 W( pixel position for the endpoints of a)42 W
8280 36520 MT
(line. When an object is selected, these boxes are updated to reflect the values of the line's endpoints.)SH
8280 38818 MT
(The)SH
10 /Courier AF
10316 XM
(unconstrain)SH
11 /Times-Roman AF
17242 XM
(button destroys the constraints on the endpoint of a line or the position)
51 W( of a box. If a)52 W
8280 40014 MT
(line is selected,)
221 W( then a button in the)220 W
10 /Courier AF
25837 XM
(obj-to-constrain)SH
11 /Times-Roman AF
35932 XM
(section denoting the appropriate endpoint)220 W
8280 41210 MT
(should be selected. If neither endpoint button is selected,)
95 W( the constraint gadget tries to figure out which)96 W
8280 42406 MT
(endpoint to unconstrain by checking if only one)
318 W( endpoint is constrained. If only one endpoint is)317 W
8280 43602 MT
(constrained, it)
147 W( unconstrains this endpoint.  Otherwise, if both endpoints are constrained, the constraint)148 W
8280 44798 MT
(gadget asks the user)
211 W( to select one of the endpoint buttons in the obj-to-constrain section of the line)210 W
8280 45994 MT
(constraint menu.)SH
8280 48292 MT
(The)SH
10 /Courier AF
10314 XM
(customize)SH
11 /Times-Roman AF
16038 XM
(button brings)
49 W( up C32. Since it is unclear whether the user will constrain both endpoints)50 W
8280 49488 MT
(of a line, or just one of the x and y coordinates, the constraint gadget does not bring)
25 W( up formula boxes for)24 W
8280 50684 MT
(the slots.)SH
12 /Times-Bold AF
8280 54368 MT
(3.4.3. Programming Interface)SH
11 /Times-Roman AF
8280 55564 MT
(The constraint gadget can be created \050or made visible, if already)
15 W( created\051 by executing one of the)16 W
10 /Courier AF
51480 XM
(-do-go)SH
11 /Times-Roman AF
8280 56760 MT
(or)SH
10 /Courier AF
9515 XM
(show-)SH
11 /Times-Roman AF
12834 XM
(functions described in section 3.4.3.2.)
44 W( Certain)
362 W( slots of the gadget, described in section 3.4.3.1,)43 W
8280 57956 MT
(are then set with the objects to be constrained.)
133 W( When)
542 W( the user operates the buttons in the dialog box,)134 W
8280 59152 MT
(constraints will be set up among the indicated objects.)SH
12 /Times-Bold AF
8280 62116 MT
(3.4.3.1. Slots of the Constraint Gadget)SH
11 /Times-Roman AF
8280 63312 MT
(The constraint gadget exports one object called)14 W
10 /Courier AF
29423 XM
(gg::*constraint-gadget*)SH
11 /Times-Roman AF
(. This)
301 W( object contains four)13 W
8280 64508 MT
(settable slots:)SH
10 /Courier AF
10780 66459 MT
(:obj-to-constrain)SH
11 /Times-Roman AF
21307 XM
(- The object which should be constrained. This slot)
52 W( expects only one object)53 W
11880 67655 MT
(\320 it will not take a list.)SH
10 /Courier AF
10780 69350 MT
(:obj-to-reference)SH
11 /Times-Roman AF
21317 XM
(- The object which should be referenced in the constraint. This slot expects)62 W
11880 70546 MT
(only one object \320 it will not take a list.)SH
ES
%%Page: 560 23
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 560)
SH( Lapidary)830 W
38954 XM
(Creating Constraints)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
/Courier SF
8620 7955 MT
(:top-level-agg)SH
11 /Times-Roman AF
17543 XM
(- The top level aggregate containing constrainable)
248 W( objects. If the aggregate)249 W
9720 9151 MT
(associated with a window is the top level aggregate, this slot)
207 W( may be left NIL \050the default\051.)206 W
9720 10347 MT
(However, if, for)
158 W( example, the window contains an editor aggregate and a feedback aggregate,)159 W
9720 11543 MT
(then the)SH
10 /Courier AF
13508 XM
(:top-level-agg)SH
11 /Times-Roman AF
22183 XM
(slot should be set to the editor aggregate.)SH
10 /Courier AF
8620 13238 MT
(:custom-function)SH
11 /Times-Roman AF
18565 XM
(- A function that is)
70 W( executed whenever a constraint is attached to a slot. The)69 W
9720 14434 MT
(function should take three parameters: an object, a slot, and)
6 W( a formula. The function is called after)7 W
9720 15630 MT
(the formula has been installed)
215 W( on the slot, but before the formula has been evaluated.)214 W
/Times-Italic SF
51024 XM
(This)SH
9720 16826 MT
(function is not called when the user calls the)
30 W( c32 function and provides a c32-custom-function as)31 W
9720 18022 MT
(a parameter \050see Section 3.4.3.2 for details)
88 W( on this function and its parameters)87 W
/Times-Roman SF
(. The function is)87 W
9720 19218 MT
(not called in this case since the constraint gadget does not install the formula if the c32-custom-)69 W
9720 20414 MT
(function is provided.\051)SH
6120 22712 MT
(It is also possible to prevent either the)
27 W( box-constraint or line-constraint menus from attaching a constraint)26 W
6120 23908 MT
(to a slot by adding the slot's name to a list)
44 W( in the)45 W
10 /Courier AF
28298 XM
(:do-not-alter-slots)SH
11 /Times-Roman AF
40018 XM
(of an object. For example, to)45 W
6120 25104 MT
(prevent a constraint from being attached to the)242 W
10 /Courier AF
28826 XM
(:width)SH
11 /Times-Roman AF
32943 XM
(or)SH
10 /Courier AF
34376 XM
(:height)SH
11 /Times-Roman AF
39093 XM
(slots of a text object, the list)242 W
10 /Courier AF
6120 26300 MT
('\050:width :height)68 W
11 /Times-Roman AF
(\051 could be placed in the object's)68 W
10 /Courier AF
30589 XM
(:do-not-alter-slots)SH
11 /Times-Roman AF
42333 XM
(slot. If)
413 W( the user tries to)69 W
6120 27496 MT
(attach a constraint to that slot, an error box will be popped)
182 W( up indicating that a constraint cannot be)181 W
6120 28692 MT
(attached to that slot. C32 does not)
286 W( recognize the)287 W
10 /Courier AF
30081 XM
(:do-not-alter-slots)SH
11 /Times-Roman AF
(, and therefore the box-)287 W
6120 29888 MT
(constraint and line-constraint menus)
7 W( cannot prevent the user from inserting a formula into a forbidden slot)6 W
6120 31084 MT
(if a customize button is chosen.)SH
12 /Times-Bold AF
6120 34048 MT
(3.4.3.2. Exported Functions)SH
11 /Times-Roman AF
6120 35244 MT
(The following functions are exported from the constraint gadget module:)SH
8 /Courier AF
8040 36457 MT
(lapidary:Box-Constraint-Do-Go)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 38187 MT
(lapidary:Line-Constraint-Do-Go)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 40485 MT
(These functions create the Box and Line Constraint dialog boxes.  They)
55 W( should not be executed multiple)56 W
1406 50 41907 40685 UL
6120 41681 MT
(times, since there is only one)122 W
10 /Courier AF
19897 XM
(constraint-gadget)SH
11 /Times-Roman AF
30494 XM
(object. If)
519 W( the user clicks)
122 W( on an "OK" button and)121 W
6120 42877 MT
(makes the dialog boxes invisible, then the following functions can be called to make them visible again:)SH
8 /Courier AF
8040 44090 MT
(lapidary:Show-Box-Constraint-Menu)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
8040 45820 MT
(lapidary:Show-Line-Constraint-Menu)SH
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
6120 48118 MT
(These function)
28 W( make the Box and Line Constraint dialog boxes visible.  They can only be called after the)29 W
10 /Courier AF
6120 49314 MT
(-do-go)SH
11 /Times-Roman AF
9995 XM
(functions above have been called to create the dialog boxes.)SH
8 /Courier AF
8040 50527 MT
(gg:c32 &optional)SH
/Times-Italic SF
16200 XM
(object slot)200 W
/Courier SF
47152 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11400 51392 MT
(&key)SH
/Times-Italic SF
13800 XM
(left top c32-custom-function prompt)200 W
11 /Times-Roman AF
6120 53690 MT
(This function causes c32 to come up, with the)34 W
/Times-Italic SF
26894 XM
(object)SH
/Times-Roman SF
29891 XM
(displayed in the)
34 W( first panel of the c32 window.  The)33 W
6120 54886 MT
(formula in)125 W
/Times-Italic SF
11258 XM
(slot)SH
/Times-Roman SF
13249 XM
(will be displayed in c32's formula editing dialog box.  The keyword parameters are as)126 W
6120 56082 MT
(follows:)SH
/Times-Italic SF
8620 59470 MT
(left)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
10576 XM
(top)SH
/Times-Roman SF
12257 XM
(- Controls placement of query box that users use to indicate that they are done with C32.)SH
/Times-Italic SF
8620 61165 MT
(c32-custom-function)SH
/Times-Roman SF
18094 XM
(- A function to be executed when the user hits the OK button in a formula)157 W
9720 62361 MT
(window in C32. The function should take three parameters: an object, a slot, and a formula.  If a)48 W
9720 63557 MT
(custom function is provided, the formula will not)
155 W( be installed in the slot \050thus the function in)154 W
9720 64753 MT
(:custom-function will not be called\320it must be called explicitly by the)68 W
/Times-Italic SF
41907 XM
(c32-custom-function)SH
/Times-Roman SF
51292 XM
(if it)69 W
9720 65949 MT
(should be executed\051. This gives)
1 W( the)SH
/Times-Italic SF
25517 XM
(c32-custom-function)SH
/Times-Roman SF
34834 XM
(an opportunity to defer the installation of)SH
9720 67145 MT
(the formula. For example, in Lapidary, the user can create formulas that define the values of)176 W
9720 68341 MT
(various slots)
204 W( in an interactor, but until the user presses the ``create-interactor'' or ``modify'')203 W
9720 69537 MT
(buttons, the formulas)
91 W( should not be installed. Thus the Lapidary)92 W
/Times-Italic SF
39052 XM
(c32-custom-function)SH
/Times-Roman SF
48461 XM
(places the)92 W
9720 70733 MT
(formulas on a queue, but does not install them.)SH
ES
%%Page: 561 24
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 3.4)
SH( The)
1800 W( Constraint Gadget)SH
51386 XM
(Page 561)SH
46800 50 8280 4486 UL
11 SS 
11880 7955 MT
(The constraint gadget stores the links that this formula uses in a meta-slot in the formula called)88 W
10 /Courier AF
11880 9151 MT
(:links)SH
11 /Times-Roman AF
(. Like)
411 W( the formula, the links are not installed. That is, the link slots do not exist \050unless)68 W
11880 10347 MT
(another formula already uses them\051. Because the links have not been installed, the constraint)191 W
11880 11543 MT
(gadget stores the links and the objects)
137 W( they point to in another meta-slot in the formula called)138 W
9 SS 
53989 12401 MT
(*)SH
10 /Courier AF
11880 12764 MT
(:links-and-objs)SH
11 /Times-Roman AF
(. The contents of this)
181 W( slot have the form \050list \050cons \050link-name object\051\051)180 W
54439 XM
(\051.)SH
11880 13960 MT
(Links that already exist because another formula uses them will not be on this list.)SH
11880 15655 MT
(The)SH
/Times-Italic SF
14121 XM
(c32-custom-function)SH
/Times-Roman SF
23694 XM
(or the application can install the links)
256 W( by calling the c32 function)257 W
10 /Courier AF
11880 16851 MT
(install-links)SH
11 /Times-Roman AF
20098 XM
(which takes a formula and the object that the links should be installed in as)142 W
11880 18047 MT
(arguments \050the object that is passed to)47 W
/Times-Italic SF
29286 XM
(c32-custom-function)SH
/Times-Roman SF
38650 XM
(is the object that should be passed to)47 W
11880 19243 MT
(install-links\051. Install-links will create the links, and)
128 W( if the link points to an object that is in the)127 W
11880 20439 MT
(same aggregate as the object containing the link, install-links will)
94 W( create a path to the reference)95 W
11880 21635 MT
(object and store it in the link slot. Install-links destroys the)221 W
10 /Courier AF
40405 XM
(:links-and-objs)SH
11 /Times-Roman AF
49901 XM
(slot, so the)221 W
/Times-Italic SF
11880 22831 MT
(c32-custom-function)SH
/Times-Roman SF
21268 XM
(or application should take care)
71 W( to save the contents of this slot if they need)72 W
11880 24027 MT
(to make further use of this information.)SH
/Times-Italic SF
10780 25722 MT
(cg-destroy-constraint)SH
/Times-Roman SF
20588 XM
(- Destroys)
63 W( a constraint created by the constraint gadget. Required parameters)62 W
11880 26918 MT
(are an object and a slot.)SH
/Times-Italic SF
10780 28613 MT
(valid-integer-p)SH
/Times-Roman SF
17718 XM
(- Determines if a string input by a Garnet gadget contains a valid integer.)
65 W( If it does)66 W
11880 29809 MT
(not, the gadget's original value is restored and an error message is printed. Required parameters)75 W
11880 31005 MT
(are a gadget and a string.)SH
8 /Courier AF
10200 34610 MT
(c32::Install-Links)SH
/Times-Italic SF
19320 XM
(formula obj)200 W
/Courier SF
49312 XM
([)SH
/Times-Italic SF
(Function)SH
/Courier SF
(])SH
11 /Times-Roman AF
8280 36908 MT
(This function is provided by c32, though it is not exported.)
12 W( As)
300 W( mentioned above, it is useful for installing)13 W
8280 38104 MT
(links when a custom function is provided in c32.  The)102 W
/Times-Italic SF
33353 XM
(formula)SH
/Times-Roman SF
37213 XM
(should have a)101 W
10 /Courier AF
43839 XM
(:links-and-objs)SH
11 /Times-Roman AF
53215 XM
(slot,)SH
8280 39300 MT
(whose value should be a list of)
76 W( the form \050\050)77 W
/Times-Italic SF
(link-slot-name object)77 W
/Times-Roman SF
(\051 \050)77 W
/Times-Italic SF
(link-slot-name object)77 W
/Times-Roman SF
(\051 ...\051.  The)77 W
/Times-Italic SF
52392 XM
(object)SH
/Times-Roman SF
8280 40496 MT
(parameter names the object which the links should be installed in.)SH
12 /Times-Bold AF
8280 43460 MT
(3.4.3.3. Programming with Links)SH
11 /Times-Roman AF
8280 44656 MT
(Each constraint contains indirect references to objects rather)
7 W( than direct references. The set of links it uses)6 W
8280 45852 MT
(to make these indirect references is contained in the)14 W
10 /Courier AF
31465 XM
(:links)SH
11 /Times-Roman AF
35354 XM
(meta-slot of the formula and)
14 W( the name of the)15 W
8280 47048 MT
(offset slot it uses is contained in)
6 W( the)5 W
10 /Courier AF
24336 XM
(:offset)SH
11 /Times-Roman AF
28816 XM
(meta-slot. If)
285 W( the formula involves the width or height slots,)5 W
8280 48244 MT
(there is also a)217 W
10 /Courier AF
15440 XM
(:scale)SH
11 /Times-Roman AF
19532 XM
(meta-slot, containing the name)
217 W( of the scale slot that the formula uses.  The)218 W
8280 49440 MT
(constraint gadget generates link)
77 W( and offset names by appending the suffixes)76 W
10 /Courier AF
42688 XM
(-over)SH
11 /Times-Roman AF
46039 XM
(and)SH
10 /Courier AF
47978 XM
(-offset)SH
11 /Times-Roman AF
52529 XM
(to the)76 W
8280 50636 MT
(name of the slot that is being constrained. For example, if the left slot is being constrained, the link name)32 W
8280 51832 MT
(will be)173 W
10 /Courier AF
11926 XM
(:left-over)SH
11 /Times-Roman AF
18374 XM
(and the offset name will be)173 W
10 /Courier AF
31629 XM
(:left-offset)SH
11 /Times-Roman AF
(. These)
619 W( slot names are stored in a)172 W
8280 53028 MT
(formula's)SH
10 /Courier AF
12952 XM
(:links)SH
11 /Times-Roman AF
16948 XM
(and)SH
10 /Courier AF
18932 XM
(:offset)SH
11 /Times-Roman AF
23528 XM
(meta-slots. For)
518 W( width and height slots, scale names are generated by)122 W
8280 54224 MT
(appending the suffix)23 W
10 /Courier AF
17666 XM
(-scale)SH
11 /Times-Roman AF
21564 XM
(to the)
23 W( slot name. Thus the scale slot for a height constraint would be named)22 W
10 /Courier AF
8280 55420 MT
(:height-scale)SH
11 /Times-Roman AF
(. When C32 generates link names, it generates them by appending a number to the)198 W
8280 56616 MT
(prefix)SH
10 /Courier AF
11181 XM
(link-)SH
11 /Times-Roman AF
(. Thus it generates links such as)SH
10 /Courier AF
28417 XM
(:link-0)SH
11 /Times-Roman AF
32892 XM
(and)SH
10 /Courier AF
34755 XM
(:link-1)SH
11 /Times-Roman AF
(.)SH
12 /Times-Bold AF
8280 60300 MT
(3.4.4. Custom Constraints)SH
11 /Times-Roman AF
8280 61496 MT
(When the user selects the custom constraint option)
75 W( in any of the constraint menus, the constraint gadget)74 W
8280 62692 MT
(brings up the C32 spreadsheet and a formula window for)
15 W( the desired slot. The user should enter a formula)16 W
8280 63888 MT
(and press OK \050or cancel to stop the operation\051. Both the OK and cancel)
87 W( buttons in the formula window)86 W
8280 65084 MT
(will make C32 disappear.)SH
8280 67382 MT
(The constraint gadget modifies C32 in a number of ways that are important)
88 W( for a user to know. First, it)89 W
8280 68578 MT
(generates indirect references to)
61 W( objects rather than direct references. A direct reference explicitly lists an)60 W
8280 69774 MT
(object in a constraint, whereas an)
169 W( indirect reference accesses the object indirectly through a link. For)170 W
8280 70970 MT
(example,)SH
10 /Courier AF
12693 XM
(\050gv RECT1 :left\051)137 W
11 /Times-Roman AF
22979 XM
(is a direct reference to)137 W
10 /Courier AF
33709 XM
(RECT1)SH
11 /Times-Roman AF
(, whereas)137 W
10 /Courier AF
41410 XM
(\050gvl :link0 :left\051)137 W
11 /Times-Roman AF
52896 XM
(is an)137 W
ES
%%Page: 562 25
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 562)
SH( Lapidary)830 W
38954 XM
(Creating Constraints)
SH( Chapter)
1550 W( 3)SH
46800 50 6120 4486 UL
11 SS 
6120 7955 MT
(indirect reference to)18 W
10 /Courier AF
15303 XM
(RECT1)SH
11 /Times-Roman AF
18596 XM
(\050this assumes that a pointer to)18 W
10 /Courier AF
32087 XM
(RECT1)SH
11 /Times-Roman AF
35381 XM
(is stored in)19 W
10 /Courier AF
40541 XM
(:link0)SH
11 /Times-Roman AF
(\051. If the user always)19 W
6120 9151 MT
(generates references using the C32 functions)238 W
10 /Courier AF
27522 XM
(Insert Ref)
238 W( from Mouse)237 W
11 /Times-Roman AF
41346 XM
(and)SH
10 /Courier AF
43446 XM
(Insert Ref from)237 W
6120 10347 MT
(Spread)SH
11 /Times-Roman AF
(, then the constraint)
49 W( gadget will automatically generate indirect references and create appropriate)50 W
6120 11543 MT
(link names. The user can edit these link names by finding them in the)
81 W( spreadsheet and modifying them.)80 W
6120 12739 MT
(However, if the user inserts the references by typing them in, then the user should take care to use the)2 W
10 /Courier AF
51120 XM
(gvl)SH
11 /Times-Roman AF
6120 13935 MT
(form and create the appropriate links. When)
228 W( the formula is completed, the constraint gadget checks)227 W
6120 15131 MT
(whether there are any direct references in the formula and generates a warning if there are.  At this)
49 W( point)50 W
6120 16327 MT
(the user has the option of editing the formula or)
57 W( continuing with the formula as is. If the user chooses to)56 W
6120 17523 MT
(leave direct references in the formula, the constraint)
203 W( gadget may not be able to generalize it, so the)204 W
6120 18719 MT
(formula may behave strangely if it is inherited.)SH
6120 21017 MT
(The second change the constraint gadget makes is in copying)
78 W( formulas. The constraint gadget copies all)77 W
6120 22213 MT
(the links that the formula references to the object which is receiving)
176 W( the copied formula. If the links)177 W
6120 23409 MT
(should point to new objects, the)
138 W( user must manually change them by selecting the)137 W
10 /Courier AF
44246 XM
(Show All Slots)137 W
11 /Times-Roman AF
6120 24605 MT
(option in)
97 W( C32 and editing the appropriate links \050the names of the links that need to be modified can be)98 W
6120 25801 MT
(found by looking at the formula\051.)SH
12 /Times-Bold AF
6120 29485 MT
(3.4.5. Feedback)SH
11 /Times-Roman AF
6120 30681 MT
(The user can determine)
21 W( which constraints are attached to an object by selecting the object and an optional)20 W
6120 31877 MT
(second object that the object may)
64 W( be constrained to, and then selecting the)65 W
10 /Courier AF
39828 XM
(Show Constraints)65 W
11 /Times-Roman AF
49833 XM
(option.)SH
6120 33073 MT
(The appropriate constraint buttons will be highlighted and the offset fields set)
136 W( to the correct values. If)135 W
6120 34269 MT
(only one object is selected, then all constraints that)
48 W( the constraint menu can represent will be shown. For)49 W
6120 35465 MT
(example, the box constraint menu would display the constraints on the left,)
18 W( top, width, and height slots. If)17 W
6120 36661 MT
(there are two selections, a constrained object and a)
191 W( reference object, then only the constraints in the)192 W
6120 37857 MT
(constrained object that depend on the reference object are shown.)SH
ES
%%Page: 563 26
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.2)
SH( Events)1800 W
51386 XM
(Page 563)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(4. Interactors)SH
11 /Times-Roman AF
8280 10524 MT
(Lapidary provides a set of dialog boxes that allow a)
139 W( user to define new interactors or modify existing)138 W
8280 11720 MT
(ones. To create or modify an interactor, select the)123 W
/Courier SF
31469 XM
(Interactors)SH
/Times-Roman SF
39128 XM
(command from the Lapidary editor)124 W
8280 12916 MT
(menu. Lapidary)
665 W( will display a menu listing)
195 W( Garnet-defined and user-defined interactors that may be)194 W
8280 14112 MT
(viewed. Select)
275 W( the desired interactor and Lapidary will display the appropriate interactor dialog box.)SH
8280 16410 MT
(All interactor dialog boxes have a number of standard items, including a set of action buttons, a)
124 W( name)125 W
8280 17606 MT
(box, a)57 W
/Courier SF
11357 XM
(:start-where)SH
/Times-Roman SF
19609 XM
(field, and buttons for events. In addition, each dialog box allows the user to set)57 W
8280 18802 MT
(the most commonly changed slots associated with that interactor.  Other slots may)
57 W( be set using C32 \050see)58 W
8280 19998 MT
(section 3.3\051.)SH
8280 22296 MT
(The name field allows the user to type in a name for the)
117 W( interactor. The name is not used to name the)116 W
8280 23492 MT
(interactor, but instead is converted to a keyword and stored in the)
167 W( interactor's :known-as slot.  If the)168 W
8280 24688 MT
(interactor is saved, the user-provided name will be placed in the name parameter field for create-instance.)SH
14 /Times-Bold AF
8280 28506 MT
(4.1. Action Buttons)SH
11 /Times-Roman AF
8280 29702 MT
(The action buttons permit the following types of operations:)SH
/Symbol SF
10249 31280 MT
(\267)SH
/Times-Roman SF
11030 XM
(Create Instance: This operation creates an instance of the displayed interactor and, if the)
29 W( user)28 W
11030 32476 MT
(has modified any of the slot values, overrides)
102 W( the values inherited from this interactor with)103 W
11030 33672 MT
(the modified values.  In)
80 W( addition, Lapidary examines the)79 W
/Courier SF
36886 XM
(:start-where)SH
/Times-Roman SF
45160 XM
(field of the new)79 W
11030 34868 MT
(interactor and if the)
425 W( start-where includes an aggregadget, adds the interactor to the)426 W
11030 36064 MT
(aggregadget's behavior slot.)SH
/Symbol SF
10249 37958 MT
(\267)SH
/Times-Roman SF
11030 XM
(Modify: This operation)
68 W( stores any changes that the user has made to the interactor's slots in)67 W
11030 39154 MT
(the interactor.)SH
/Symbol SF
10249 41048 MT
(\267)SH
/Times-Roman SF
11030 XM
(Destroy: This operation destroys the interactor.)SH
/Symbol SF
10249 42942 MT
(\267)SH
/Times-Roman SF
11030 XM
(Save: This operation prompts the user for a file name and then writes out the interactor.)SH
/Symbol SF
10249 44836 MT
(\267)SH
/Times-Roman SF
11030 XM
(C32: This operation brings up C32 and displays the)
145 W( interactor in the spreadsheet window.)146 W
11030 46032 MT
(The user can then edit any slot in)
128 W( the interactor.  Any changes the user makes will not be)127 W
11030 47228 MT
(discarded by the)105 W
/Courier SF
18828 XM
(Cancel)SH
/Times-Roman SF
23168 XM
(button. It)
485 W( is generally advisable)
105 W( to bring up the C32 menu only)106 W
/Times-Italic SF
11030 48424 MT
(after)SH
/Times-Roman SF
13466 XM
(the interactor has been created. \050the one)
83 W( exception to this rule is when C32 appears as)82 W
11030 49620 MT
(the result of pressing a formula button.  If the user enters a formula in)
70 W( the formula window,)71 W
11030 50816 MT
(the formula will be installed in the instance\051.  Otherwise the user will end up editing)
166 W( the)165 W
11030 52012 MT
(prototype for the interactor to)
128 W( be created, instead of the interactor itself.  The C32 chapter)129 W
11030 53208 MT
(describes how to operate C32 and Section 3.3 describes the modifications Lapidary makes)
33 W( to)32 W
11030 54404 MT
(C32.)SH
/Symbol SF
10249 56298 MT
(\267)SH
/Times-Roman SF
11030 XM
(Cancel: This operation discards any changes the user has made to the dialog)
116 W( box since the)117 W
11030 57494 MT
(last create-instance or modify command.)SH
14 /Times-Bold AF
8280 61312 MT
(4.2. Events)SH
11 /Times-Roman AF
8280 62508 MT
(Lapidary allows the user to define the start, stop,)
159 W( and abort events of an interactor using event cards.)158 W
8280 63704 MT
(Each card defines one event and a list)
72 W( of events can be generated from a deck of cards.  Each interactor)73 W
8280 64900 MT
(dialog box contains)
54 W( buttons that pop up a window for each event that defines a start, stop or abort event.)53 W
8280 66096 MT
(A sample)
46 W( event card is shown in Figure 4-1.  Selecting)47 W
/Courier SF
33174 XM
(Delete this event)47 W
/Times-Roman SF
44810 XM
(will cause this event to)47 W
8280 67292 MT
(be deleted.  However, Lapidary will not allow you to delete an event card if it)
44 W( is the only one that exists.)43 W
/Courier SF
8280 68488 MT
(Add an event)69 W
/Times-Roman SF
16682 XM
(causes a new event to be created.)69 W
/Courier SF
32349 XM
(OK)SH
/Times-Roman SF
34014 XM
(makes the window disappear and generates the)70 W
8280 69684 MT
(event list for the desired event.)SH
8280 71982 MT
(Any combination of)25 W
/Courier SF
17490 XM
(shift)SH
/Times-Roman SF
(,)SH
/Courier SF
21365 XM
(control)SH
/Times-Roman SF
(, and)25 W
/Courier SF
28448 XM
(meta)SH
/Times-Roman SF
31388 XM
(can be selected, but if the)25 W
/Courier SF
42991 XM
(any modifier)25 W
/Times-Roman SF
51235 XM
(button is)24 W
ES
%%Page: 564 27
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 564)
SH( Lapidary)830 W
42928 XM
(Interactors Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
1 1 0 -1080 58100 GB 
%%BeginDocument: lapidary/event-cards.PS
%!PS-Adobe-2.0
%%Title: event-window
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 2:29 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 282 540 509
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.78655463 0.78655463 scale

%
% Begin new window
%
0 -268 translate
gsave
0 824 595 289 ClipToRectangle
0 0 translate
gsave
21 786 550 239 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
35 768 757 68 14 0 false 0 0 0 false 0 0 0 false (Modifiers:) 12 /Courier-Bold DrawText
35 706 695 89 14 0 false 0 0 0 false 0 0 0 false (Mouse Action:) 12 /Courier-Bold DrawText
35 644 633 61 14 0 false 0 0 0 false 0 0 0 false (Keyboard:) 12 /Courier-Bold DrawText
200 768 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
195 773 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
198 770 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
156 768 757 34 14 0 false 0 0 0 false 0 0 0 false (shift) 12 /Courier DrawText
288 768 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
283 773 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
286 770 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
230 768 757 48 14 0 false 0 0 0 false 0 0 0 false (control) 12 /Courier DrawText
356 768 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
351 773 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
354 770 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
318 768 757 28 14 0 false 0 0 0 false 0 0 0 false (meta) 12 /Courier DrawText
478 768 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
473 773 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
476 770 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
386 768 757 82 14 0 false 0 0 0 false 0 0 0 false (any modifier) 12 /Courier DrawText
232.5 712.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
227.5 717.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
227.5 717.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
156 722 711 55 14 0 false 0 0 0 false 0 0 0 false (leftdown) 12 /Courier DrawText
345.5 712.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
340.5 717.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
340.5 717.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
254 722 711 70 14 0 false 0 0 0 false 0 0 0 false (middledown) 12 /Courier DrawText
450.5 712.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
445.5 717.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
445.5 717.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
367 722 711 62 14 0 false 0 0 0 false 0 0 0 false (rightdown) 12 /Courier DrawText
556.5 712.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
551.5 717.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
551.5 717.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
472 722 711 63 14 0 false 0 0 0 false 0 0 0 false (mousedown) 12 /Courier DrawText
217.5 679.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
212.5 684.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
212.5 684.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
156 689 678 40 14 0 false 0 0 0 false 0 0 0 false (leftup) 12 /Courier DrawText
315.5 679.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
310.5 684.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
310.5 684.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
239 689 678 55 14 0 false 0 0 0 false 0 0 0 false (middleup) 12 /Courier DrawText
405.5 679.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
400.5 684.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
400.5 684.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
337 689 678 47 14 0 false 0 0 0 false 0 0 0 false (rightup) 12 /Courier DrawText
496.5 679.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
491.5 684.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
491.5 684.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
427 689 678 48 14 0 false 0 0 0 false 0 0 0 false (mouseup) 12 /Courier DrawText
227.5 717.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
292 644 633 122 14 0 false 0 0 0 false 0 0 0 false (Specific keypress:) 12 /Courier DrawText
419 646 15 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
265.5 634.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
260.5 639.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
260.5 639.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
156 644 633 88 14 0 false 0 0 0 false 0 0 0 false (Any keypress:) 12 /Courier DrawText
457 816 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
452 821 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
455 818 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
471 816 805 13 14 0 false 0 0 0 false 0 0 0 false (OK) 12 /Courier DrawText
518 816 51 24 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
513 821 51 24 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
516 818 45 18 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
518 816 805 41 14 0 false 0 0 0 false 0 0 0 false (Cancel) 12 /Courier DrawText
45 594 139 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
35 604 139 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
40 599 129 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
62 594 583 84 14 0 false 0 0 0 false 0 0 0 false (Add an event) 12 /Courier DrawText
199 594 139 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
189 604 139 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
194 599 129 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
199 594 583 119 14 0 false 0 0 0 false 0 0 0 false (Delete this event) 12 /Courier DrawText
grestore

grestore

0 824 595 289 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold 
%%BoundingBox: 72 282 540 509

%%EndDocument
 GE /Times-Bold SF
6120 31652 MT
(Figure 4-1:)SH
/Times-Roman SF
11893 XM
(A sample event card deck)SH
6120 33603 MT
(selected then the other modifier buttons will become unselected.  The mouse actions and keyboard)
53 W( items)54 W
6120 34799 MT
(are all mutually exclusive, so selecting one will cause the previously selected item)
202 W( to be deselected.)201 W
6120 35995 MT
(Events like #\134Return can be generated by simply)
144 W( typing "Return" in the)145 W
/Courier SF
39485 XM
(Specific keypress)145 W
/Times-Roman SF
51270 XM
(box)SH
6120 37191 MT
(\050quotes are not needed\051.)SH
14 /Times-Bold AF
6120 41009 MT
(4.3. :Start Where)SH
11 /Times-Roman AF
6120 42205 MT
(Every interactor dialog box displays)
145 W( two commonly used start-wheres for an interactor and allows the)144 W
6120 43401 MT
(user to select an alternative one using the)24 W
/Courier SF
24700 XM
(other)SH
/Times-Roman SF
28299 XM
(button \050Figure 4-2\051.  If)24 W
/Courier SF
38683 XM
(other)SH
/Times-Roman SF
42282 XM
(is selected,)
24 W( a dialog box)25 W
6120 44597 MT
(will appear which)
58 W( lists all possible :start-where's. Once the desired start-where is selected, Lapidary will)57 W
6120 45793 MT
(incorporate the selected object in the drawing window into the start-where if it is appropriate \050which)
45 W( it is)46 W
6120 46989 MT
(in all cases but)10 W
/Courier SF
12942 XM
(t)SH
/Times-Roman SF
13887 XM
(and)SH
/Courier SF
15760 XM
(nil)SH
/Times-Roman SF
(\051. If the start-where requires a slot \050which the)9 W
/Courier SF
37977 XM
(list)SH
/Times-Roman SF
40901 XM
(start-where's do\051, Lapidary)9 W
6120 48185 MT
(will request the name of a slot.)SH
6120 50483 MT
(If the)
63 W( user wants a type restriction, then pressing the)64 W
/Courier SF
30004 XM
(type restriction)64 W
/Times-Roman SF
40967 XM
(button will cause Lapidary)64 W
6120 51679 MT
(to request a type restriction. A type restriction)
131 W( can be either an atom \050e.g., opal:text\051 or a list of items)130 W
6120 52875 MT
(\050e.g., \050list opal:text opal:rectangle\051\051. The type restriction button is)
217 W( a toggle button so if it is already)218 W
6120 54071 MT
(selected, selecting it again will cause the type restriction to)
18 W( be removed. Also, selecting a new start-where)17 W
6120 55267 MT
(will cause the type restriction to be removed.)SH
14 /Times-Bold AF
6120 59085 MT
(4.4. Formulas)SH
11 /Times-Roman AF
6120 60281 MT
(Selecting a formula button in any of the interactor dialog boxes causes the interactor to be displayed)
SH( in the)1 W
6120 61477 MT
(C32 spreadsheet window and the current value)
226 W( of the slot associated with the formula button to be)225 W
6120 62673 MT
(displayed in a C32 formula window.)
31 W( This value can then be edited into a formula. When the)32 W
/Courier SF
47440 XM
(OK)SH
/Times-Roman SF
49067 XM
(button is)32 W
6120 63869 MT
(pressed in the formula window, C32 disappears and the formula is batched with the)
113 W( other changes that)112 W
6120 65065 MT
(have been made)
SH( to the interactor since the last)1 W
/Courier SF
26682 XM
(Create Instance)1 W
/Times-Roman SF
36859 XM
(or)SH
/Courier SF
38051 XM
(Modify)SH
/Times-Roman SF
42287 XM
(command. The)
277 W( formula)1 W
6120 66261 MT
(is not actually installed until the)211 W
/Courier SF
21747 XM
(Create Instance)210 W
/Times-Roman SF
32342 XM
(or)SH
/Courier SF
33743 XM
(Modify)SH
/Times-Roman SF
38188 XM
(buttons are selected. If the user)210 W
6120 67457 MT
(selects)SH
/Courier SF
9492 XM
(Cancel)SH
/Times-Roman SF
13892 XM
(in the interactor dialog box, the formula will be discarded. The formula will also be)165 W
6120 68653 MT
(discarded if the user selects)SH
/Courier SF
18489 XM
(Cancel)SH
/Times-Roman SF
22724 XM
(in the C32 formula window.)SH
ES
%%Page: 565 28
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.5)
SH( Specific)
1800 W( Interactors)SH
51386 XM
(Page 565)SH
46800 50 8280 4486 UL
14 /Times-Bold AF
8280 8138 MT
(4.5. Specific Interactors)SH
12 SS 
8280 11822 MT
(4.5.1. Choice Interactor)SH
11 /Times-Roman AF
8280 13018 MT
(The choice interactor dialog)
114 W( box allows the user to create either a button interactor or menu interactor,)113 W
8280 14214 MT
(depending on whether the)100 W
/Courier SF
20348 XM
(menu)SH
/Times-Roman SF
23363 XM
(or)SH
/Courier SF
24654 XM
(button)SH
/Times-Roman SF
28989 XM
(radio button is selected \050Figure 4-2\051.  The other slots that)101 W
8280 15410 MT
(can be set using this dialog box are:)SH
7 10 0 10260 62526 GB 
%%BeginDocument: lapidary/choice-inter.PS
%!PS-Adobe-2.0
%%Title: choice interactor
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 2:30 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 136 540 656
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.8666667 0.8666667 scale

%
% Begin new window
%
0 -74 translate
gsave
0 748 540 600 ClipToRectangle
0 0 translate
gsave
10 738 716 267 28 0 false 0 0 0 false 0 0 0 false (Choice of Items Interactor) 24 /Times-BoldItalic DrawText
20 699 688 109 14 0 false 0 0 0 false 0 0 0 false (Interactor Name:) 12 /Courier-Bold DrawText
134 701 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 667 368 137 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 674 91 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 674 663 81 14 0 false 0 0 0 false 0 0 0 false (:start-where) 12 /Courier-Bold DrawText
181.5 637.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
176.5 642.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
176.5 642.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 647 636 125 14 0 false 0 0 0 false 0 0 0 false (Aggregate of items) 12 /Courier DrawText
202 650 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
132.5 595.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
127.5 600.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
127.5 600.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 605 594 76 14 0 false 0 0 0 false 0 0 0 false (Single item) 12 /Courier DrawText
153 608 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
50 627 616 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
50 585 574 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
40 562 45 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
35 567 45 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
38 564 39 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
41 561 550 33 14 0 false 0 0 0 false 0 0 0 false (Other) 12 /Courier DrawText
94 562 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
354 559 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
349 564 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
352 561 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
228 559 548 116 14 0 false 0 0 0 false 0 0 0 false (Type restriction:) 12 /Courier DrawText
412 733 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 738 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 734 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
414 731 720 103 14 0 false 0 0 0 false 0 0 0 false (CREATE INSTANCE) 12 /Courier DrawText
412 695 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 700 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 696 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
444 693 682 42 14 0 false 0 0 0 false 0 0 0 false (MODIFY) 12 /Courier DrawText
412 657 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 662 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 658 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
441 655 644 49 14 0 false 0 0 0 false 0 0 0 false (DESTROY) 12 /Courier DrawText
412 619 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 624 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 620 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
452 617 606 26 14 0 false 0 0 0 false 0 0 0 false (SAVE) 12 /Courier DrawText
412 581 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 586 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 582 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
420 579 568 90 14 0 false 0 0 0 false 0 0 0 false (PRINT KR NAME) 12 /Courier DrawText
412 543 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 548 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 544 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
445 541 530 40 14 0 false 0 0 0 false 0 0 0 false (CANCEL) 12 /Courier DrawText
20 514 454 51 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 521 96 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 521 510 86 14 0 false 0 0 0 false 0 0 0 false (:feedback-obj) 12 /Courier-Bold DrawText
167.5 483.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
162.5 488.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
162.5 488.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 493 482 111 14 0 false 0 0 0 false 0 0 0 false (Interim Feedback) 12 /Courier DrawText
188 496 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
338 496 60 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
333 501 60 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
336 498 54 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
339 495 484 48 14 0 false 0 0 0 false 0 0 0 false (By Demo) 12 /Courier DrawText
455.5 483.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
450.5 488.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
450.5 488.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
407 493 482 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
450.5 488.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
20 447 441 51 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 454 138 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 454 443 128 14 0 false 0 0 0 false 0 0 0 false (:final-feedback-obj) 12 /Courier-Bold DrawText
154.5 416.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
149.5 421.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
149.5 421.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 426 415 98 14 0 false 0 0 0 false 0 0 0 false (Final Feedback) 12 /Courier DrawText
175 429 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
325 429 60 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
320 434 60 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
323 431 54 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
326 428 417 48 14 0 false 0 0 0 false 0 0 0 false (By Demo) 12 /Courier DrawText
442.5 416.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
437.5 421.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
437.5 421.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
394 426 415 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
437.5 421.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
79.5 370.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
74.5 375.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
74.5 375.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
30 380 369 28 14 0 false 0 0 0 false 0 0 0 false (Menu) 12 /Courier DrawText
159.5 370.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
154.5 375.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
154.5 375.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
96 380 369 42 14 0 false 0 0 0 false 0 0 0 false (Button) 12 /Courier DrawText
74.5 375.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
30 348 337 102 14 0 false 0 0 0 false 0 0 0 false (Final Function:) 12 /Courier-Bold DrawText
137 350 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 316 404 109 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 323 63 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 323 312 53 14 0 false 0 0 0 false 0 0 0 false (:how-set) 12 /Courier-Bold DrawText
76.5 286.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
71.5 291.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
71.5 291.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 296 285 20 14 0 false 0 0 0 false 0 0 0 false (Set) 12 /Courier DrawText
147.5 286.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
142.5 291.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
142.5 291.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
93 296 285 33 14 0 false 0 0 0 false 0 0 0 false (Clear) 12 /Courier DrawText
226.5 286.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
221.5 291.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
221.5 291.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
164 296 285 41 14 0 false 0 0 0 false 0 0 0 false (Toggle) 12 /Courier DrawText
325.5 286.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
320.5 291.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
320.5 291.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
243 296 285 61 14 0 false 0 0 0 false 0 0 0 false (<formula>) 12 /Courier DrawText
112.5 253.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
107.5 258.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
107.5 258.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 263 252 56 14 0 false 0 0 0 false 0 0 0 false (List-Add) 12 /Courier DrawText
226.5 253.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
221.5 258.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
221.5 258.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
129 263 252 76 14 0 false 0 0 0 false 0 0 0 false (List-Toggle) 12 /Courier DrawText
340.5 253.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
335.5 258.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
335.5 258.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
243 263 252 76 14 0 false 0 0 0 false 0 0 0 false (List-Remove) 12 /Courier DrawText
71.5 291.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
35 236 225 87 14 0 false 0 0 0 false 0 0 0 false (increment by:) 12 /Courier DrawText
127 238 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
241 236 225 67 14 0 false 0 0 0 false 0 0 0 false (max value:) 12 /Courier DrawText
313 238 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
40 188 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 198 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
35 193 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
40 188 177 76 14 0 false 0 0 0 false 0 0 0 false (Start-Event) 12 /Courier DrawText
152 188 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
142 198 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
147 193 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
156 188 177 69 14 0 false 0 0 0 false 0 0 0 false (Stop-Event) 12 /Courier DrawText
264 188 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
254 198 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
259 193 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
264 188 177 77 14 0 false 0 0 0 false 0 0 0 false (Abort-Event) 12 /Courier DrawText
grestore

grestore

0 748 540 600 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic 
%%BoundingBox: 72 136 540 656

%%EndDocument
 GE /Times-Bold SF
8280 54758 MT
(Figure 4-2:)SH
/Times-Roman SF
14053 XM
(Choice interactor dialog box)SH
/Symbol SF
10249 56834 MT
(\267)SH
/Times-Roman SF
11030 XM
(:start-where. If the user selects either)83 W
/Courier SF
28049 XM
(aggregadget of items)82 W
/Times-Roman SF
41770 XM
(or)SH
/Courier SF
43043 XM
(single item)82 W
/Times-Roman SF
50742 XM
(and)SH
11030 58030 MT
(there is a least one)
84 W( selection in a drawing window \050it may be either a primary or secondary)85 W
11030 59226 MT
(selection\051, then start-where's with)203 W
/Courier SF
27083 XM
(:element-of)SH
/Times-Roman SF
34821 XM
(and)SH
/Courier SF
36886 XM
(:in-box)SH
/Times-Roman SF
41983 XM
(are generated with the)202 W
11030 60422 MT
(selected object.)SH
/Symbol SF
10249 62316 MT
(\267)SH
/Times-Roman SF
11030 XM
(:feedback-obj. Selecting the radio button associated with)80 W
/Courier SF
36823 XM
(interim feedback)81 W
/Times-Roman SF
47820 XM
(will cause)81 W
11030 63512 MT
(the selected object)
36 W( in the Lapidary drawing windows to become the interim feedback for this)35 W
11030 64708 MT
(interactor. If this object is constrained to one)
32 W( of the objects that satisfies the start-where or to)33 W
11030 65904 MT
(a component of)
1 W( one of these objects, Lapidary will automatically generalize the constraints so)SH
11030 67100 MT
(that the object can appear with any of the objects in the start-where.)SH
11030 68994 MT
(The user can also)
73 W( use the)74 W
/Courier SF
22771 XM
(by-demo)SH
/Times-Roman SF
27740 XM
(option to demonstrate interim feedback.  Lapidary will)74 W
11030 70190 MT
(pop up an OK/Cancel box when an object that satisfies the start-where is selected.)
52 W( The)
377 W( user)51 W
11030 71386 MT
(can then use the various)
112 W( Lapidary menus to modify this object so that it looks as it should)113 W
ES
%%Page: 566 29
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 566)
SH( Lapidary)830 W
42928 XM
(Interactors Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
8870 7955 MT
(when the object's)11 W
/Courier SF
16936 XM
(:interim-selected)SH
/Times-Roman SF
28442 XM
(slot is set.  Once the desired look is achieved, the)10 W
8870 9151 MT
(user selects)
33 W( OK and the changes will be installed so that the object looks like its original self)34 W
8870 10347 MT
(when it is not interim selected, and will look like the by-demo copy when it is)
223 W( interim)222 W
8870 11543 MT
(selected.)SH
8870 13437 MT
(Lapidary implements the by-demo operation by comparing the values of the)
81 W( following slots)82 W
8870 14633 MT
(in the original object and the copied object:)210 W
/Courier SF
30403 XM
(:left, :top, :width, :height,)209 W
8870 15829 MT
(:visible, :draw-function, :font, :string, :line-style,)1415 W
8870 17025 MT
(:filling-style, :x1, :x2, :y1, :y2)SH
/Times-Roman SF
(.)SH
8870 18919 MT
(The last option the user can choose is)307 W
/Courier SF
28065 XM
(none)SH
/Times-Roman SF
31286 XM
(in which case nil will be stored in the)306 W
/Courier SF
8870 20115 MT
(:feedback-obj)SH
/Times-Roman SF
17732 XM
(slot. This will not undo the effects of a by-demo)
7 W( operation since by-demo)8 W
8870 21311 MT
(also places nil in the)SH
/Courier SF
18127 XM
(:feedback-obj)SH
/Times-Roman SF
26982 XM
(slot.)SH
/Symbol SF
8089 23205 MT
(\267)SH
/Times-Roman SF
8870 XM
(:final-feedback. The)
63 W( options for final feedback are identical to those for)62 W
/Courier SF
41315 XM
(:feedback-obj)SH
/Times-Roman SF
(.)SH
8870 24401 MT
(The by-demo changes will appear when the object's)SH
/Courier SF
32082 XM
(:selected)SH
/Times-Roman SF
38297 XM
(slot is set to)SH
/Courier SF
43799 XM
(t)SH
/Times-Roman SF
(.)SH
/Symbol SF
8089 26295 MT
(\267)SH
/Times-Roman SF
8870 XM
(:final-function. The user can type in the name of a function that should be)
105 W( called when the)106 W
8870 27491 MT
(interactor completes.)SH
/Symbol SF
8089 29385 MT
(\267)SH
/Times-Roman SF
8870 XM
(:how-set. The user can set the)271 W
/Courier SF
23843 XM
(:how-set)SH
/Times-Roman SF
29669 XM
(slot by selecting a radio button or)
271 W( entering)270 W
8870 30581 MT
(numbers in the)SH
/Courier SF
15683 XM
(increment-by)SH
/Times-Roman SF
23878 XM
(and \050optionally\051)SH
/Courier SF
31210 XM
(max value)SH
/Times-Roman SF
37425 XM
(fields.)SH
12 /Times-Bold AF
6120 34265 MT
(4.5.2. Move/Grow Interactor)SH
11 /Times-Roman AF
6120 35461 MT
(The move/grow)
32 W( interactor dialog box \050Figure 4-3\051 allows the user to specify a move/grow interactor. The)33 W
6120 36657 MT
(slots that can be set using this dialog box are:)SH
/Symbol SF
8089 38235 MT
(\267)SH
/Times-Roman SF
8870 XM
(:start-where. If the user selects either)220 W
/Courier SF
26711 XM
(Object to Press Over)219 W
/Times-Roman SF
41062 XM
(or)SH
/Courier SF
42472 XM
(One of This)219 W
8870 39431 MT
(Aggregate)SH
/Times-Roman SF
15256 XM
(and there is at least one selection in a drawing window \050it may be)
171 W( either a)172 W
8870 40627 MT
(primary or secondary selection\051, then start-where's)
438 W( with :in-box and :element-of are)437 W
8870 41823 MT
(generated with the selected object.)SH
/Symbol SF
8089 43717 MT
(\267)SH
/Times-Roman SF
8870 XM
(:line-p. This slot is)
80 W( set by the)81 W
/Courier SF
22452 XM
(Line)SH
/Times-Roman SF
25448 XM
(and)SH
/Courier SF
27392 XM
(Box)SH
/Times-Roman SF
29728 XM
(buttons. If)
437 W( a formula is selected, the formula)81 W
8870 44913 MT
(should return)36 W
/Courier SF
15051 XM
(t)SH
/Times-Roman SF
16021 XM
(if the interactor is moving/growing a line, and)35 W
/Courier SF
36800 XM
(nil)SH
/Times-Roman SF
39090 XM
(if it is moving/growing a)35 W
8870 46109 MT
(box object.)SH
/Symbol SF
8089 48003 MT
(\267)SH
/Times-Roman SF
8870 XM
(:grow-p. This slot is set by the)10 W
/Courier SF
22568 XM
(Grow)SH
/Times-Roman SF
25493 XM
(and)SH
/Courier SF
27366 XM
(Move)SH
/Times-Roman SF
30291 XM
(buttons. If)
295 W( a)
10 W( formula is selected, the formula)11 W
8870 49199 MT
(should return)SH
/Courier SF
14980 XM
(t)SH
/Times-Roman SF
15915 XM
(if the interactor is growing an object, and)SH
/Courier SF
34334 XM
(nil)SH
/Times-Roman SF
36589 XM
(if it is moving an object.)SH
/Symbol SF
8089 51093 MT
(\267)SH
/Times-Roman SF
8870 XM
(:min-length. Specifies a minimum length for lines.)SH
/Symbol SF
8089 52987 MT
(\267)SH
/Times-Roman SF
8870 XM
(:min-width. Specifies a minimum width for box objects.)SH
/Symbol SF
8089 54881 MT
(\267)SH
/Times-Roman SF
8870 XM
(:min-height. Specifies a minimum height for box objects.)SH
/Symbol SF
8089 56775 MT
(\267)SH
/Times-Roman SF
8870 XM
(:obj-to-change. The user can either let the move/grow)
268 W( interactor modify the object that)267 W
8870 57971 MT
(satisfies the start-where or use a formula to compute the object to change.)
67 W( The)
410 W( formula can)68 W
8870 59167 MT
(be computed automatically \050see below\051.  This slot would)
41 W( be set if the interaction should start)40 W
8870 60363 MT
(over a feedback object such as)
76 W( selection handles, but should actually move the object under)77 W
8870 61559 MT
(the feedback object.)SH
/Symbol SF
8089 63453 MT
(\267)SH
/Times-Roman SF
8870 XM
(:final-function. The user can)
106 W( type in the name of a function that should be called when the)105 W
8870 64649 MT
(interactor completes.)SH
/Symbol SF
8089 66543 MT
(\267)SH
/Times-Roman SF
8870 XM
(:feedback-obj. An interim feedback)
80 W( object can be created by creating the desired object and)81 W
8870 67739 MT
(pressing the interim-feedback button.  Constraints)
278 W( will be automatically attached to the)277 W
8870 68935 MT
(feedback object that cause it to move or grow appropriately, and that)
15 W( make it visible/invisible)16 W
8870 70131 MT
(at the appropriate times. Alternatively a formula can be entered)
62 W( that selects among feedback)61 W
8870 71327 MT
(objects. Multiple feedback objects can be created)
39 W( by selecting objects one at a time, pressing)40 W
ES
%%Page: 567 30
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.5)
SH( Specific)
1800 W( Interactors)SH
51386 XM
(Page 567)SH
46800 50 8280 4486 UL
11 SS 
11030 7955 MT
(the interim feedback button,)
203 W( and then hitting either)202 W
/Courier SF
35286 XM
(create-instance)SH
/Times-Roman SF
45663 XM
(\050the first time,)202 W
11030 9151 MT
(when the interactor is being created\051 or)17 W
/Courier SF
28648 XM
(modify)SH
/Times-Roman SF
32900 XM
(\050once the interactor has been created\051.)
17 W( Once)18 W
11030 10347 MT
(the multiple)
30 W( feedback objects have been created, a formula can be entered that selects among)29 W
11030 11543 MT
(the feedback objects.)SH
/Symbol SF
10249 13437 MT
(\267)SH
/Times-Roman SF
11030 XM
(:attach-point. Controls where the mouse will attach to the object.)SH
8280 15735 MT
(The grow and move parameters allow the user to control which slots in the object that is being)
53 W( grown or)54 W
8280 16931 MT
(moved will actually be set. If a formula is)
136 W( entered, it must return a value that can be used by the slot)135 W
8280 18127 MT
(:slots-to-set \050see the Interactors chapter for more details on this slot\051.)SH
8280 20425 MT
(The user can directly choose an)
290 W( obj-to-change in the move/grow and text interactor dialog boxes.)291 W
8280 21621 MT
(Lapidary will automatically construct a formula)
105 W( so that the interactor changes the correct object at run-)104 W
8280 22817 MT
(time. For example, in Figure 4-3, the user wants the move interactor to start over one)
134 W( of the selection)135 W
8280 24013 MT
(handles, but wants the object highlighted by the selection)
96 W( handles moved. The user can specify that the)95 W
8280 25209 MT
(interactor should start over the selection)
237 W( handles by selecting the aggregate containing the selection)238 W
8280 26405 MT
(handles and pressing the)68 W
/Courier SF
19610 XM
(One of This Aggregate)68 W
/Times-Roman SF
34017 XM
(radio button in)
68 W( the move/grow dialog box. The)67 W
8280 27601 MT
(user can specify that the object highlighted by the)
179 W( selection handles at run-time should be the object)180 W
8280 28797 MT
(changed by selecting the example)
123 W( object that the selection handles currently highlight and pressing the)122 W
/Courier SF
8280 29993 MT
(Change this object)12 W
/Times-Roman SF
20471 XM
(button in the move/grow dialog box Occasionally Lapidary)
12 W( may not be able to)13 W
8280 31189 MT
(determine from the start-where objects which object should be changed at run-time.  In)
14 W( this case Lapidary)13 W
8280 32385 MT
(will give the user the choice of entering a formula or of having the example object selected as the)221 W
8280 33581 MT
(obj-to-change be the actual object changed at run-time.)SH
8280 35879 MT
(Example: To create an interactor that moves a box,)SH
10481 37332 MT
(1.)SH
11581 XM
(Create the box and leave it selected)SH
10481 39226 MT
(2.)SH
11581 XM
(Select interactors from the editor menu and then select move/grow)SH
10481 41120 MT
(3.)SH
11581 XM
(In :start-where click on "Object to Press Over".  This will cause the selected rectangle's)
26 W( KR)25 W
11580 42316 MT
(name to be displayed.)SH
10481 44210 MT
(4.)SH
11581 XM
(Press the CREATE INSTANCE action button)SH
8280 46508 MT
(To test the interactor press test button in the editor menu and drag it around.)SH
12 /Times-Bold AF
8280 50192 MT
(4.5.3. Two Point Interactor)SH
11 /Times-Roman AF
8280 51388 MT
(The two point interactor dialog box)
69 W( \050Figure 4-4\051 allows a user to create a two point interactor. The slots)70 W
8280 52584 MT
(that can be set using this dialog box are:)SH
/Symbol SF
10249 54162 MT
(\267)SH
/Times-Roman SF
11030 XM
(:start-where. If the user selects)31 W
/Courier SF
24927 XM
(Start Anywhere in Window)31 W
/Times-Roman SF
41166 XM
(then a start-where with)30 W
/Courier SF
51670 XM
(t)SH
/Times-Roman SF
11030 55358 MT
(is generated. if the user selects)177 W
/Courier SF
25805 XM
(Start in Box)178 W
/Times-Roman SF
34534 XM
(and there is at least one selection in a)178 W
11030 56554 MT
(drawing window \050it may be either a primary or secondary)
51 W( selection\051, then a start-where with)50 W
11030 57750 MT
(:in-box is generated with the selected object.)SH
/Symbol SF
10249 59644 MT
(\267)SH
/Times-Roman SF
11030 XM
(:line-p. This slot is set by the)
244 W( buttons)245 W
/Courier SF
29517 XM
(Create Line)245 W
/Times-Roman SF
37542 XM
(and)SH
/Courier SF
39650 XM
(Create Non-Line)245 W
/Times-Roman SF
(. If a)245 W
11030 60840 MT
(formula is selected, the formula should return)23 W
/Courier SF
31535 XM
(t)SH
/Times-Roman SF
32493 XM
(if the interactor is creating a)
23 W( line, and)22 W
/Courier SF
49381 XM
(nil)SH
/Times-Roman SF
51658 XM
(if)SH
11030 62036 MT
(it is creating a box object.)SH
/Symbol SF
10249 63930 MT
(\267)SH
/Times-Roman SF
11030 XM
(:min-length. Specifies a minimum length for lines.)SH
/Symbol SF
10249 65824 MT
(\267)SH
/Times-Roman SF
11030 XM
(:min-width. Specifies a minimum width for box objects.)SH
/Symbol SF
10249 67718 MT
(\267)SH
/Times-Roman SF
11030 XM
(:min-height. Specifies a minimum height for box objects.)SH
/Symbol SF
10249 69612 MT
(\267)SH
/Times-Roman SF
11030 XM
(:flip-if-change-side. Indicates whether a box may flip over when it is being created.)SH
/Symbol SF
10249 71506 MT
(\267)SH
/Times-Roman SF
11030 XM
(:abort-if-too-small. Indicates whether the operation should be aborted if the)
206 W( object is too)207 W
ES
%%Page: 568 31
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 568)
SH( Lapidary)830 W
42928 XM
(Interactors Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
46800 50 6120 8155 UL
11 SS 
6 10 0 840 68048 GB 
%%BeginDocument: lapidary/move-behavior-a.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Drawing Window 2
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Jul 5, 1993, 12:07 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 188 317 423 476
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/RoundtanglePath { % left top width height radius => -
    /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
    /right l w add def  /bottom t h sub def
    l r add t moveto                         % origin
    right t right t r sub r arcto            % top side
    right bottom right r sub bottom r arcto  % right side
    l bottom l bottom r add r arcto          % bottom side
    l t l r add t r arcto                    % left side
    16 {pop} repeat  % each arcto accumulates 4 stack parameters
} def

/RoundtangleDict 27 dict def
/DrawRoundtangle { % left top width height radius line-color
                   % cap join dash thickness fill-color => -
    gsave RoundtangleDict begin
        /fill-color exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        
        % Draw filling
        newpath
        left thickness add top thickness sub
        width thickness 2 mul sub height thickness 2 mul sub
        radius thickness sub dup 0 lt { pop 0 } if RoundtanglePath
        fill-color FillShape

        left thickness 2 div add top thickness 2 div sub
        width thickness sub height thickness sub
        radius thickness 2 div sub dup 0 lt { pop 0 } if RoundtanglePath

        % Draw border
        line-color line-cap line-join dash-pattern thickness
        StrokeShape
    end grestore
} def


/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
1 1 scale
116 404 translate

%
% Begin new window
%
gsave
0 0 235 159 ClipToRectangle
gsave
0 0 235 159 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
0 0 235 159 ClipToRectangle
gsave
16 -48 102 51 [0 0 0] 0 0 [] 1 null DrawRectangle
10 -42 13 13 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
111 -42 13 13 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
10 -92 13 13 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
111 -92 13 13 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
58 -67 102 51 [0 0 0] 0 0 [4 4] 1 null DrawRectangle
[0 0 0] 0 0 [] 1 138 -67 179 -35 DrawLine
149 -65 {
  { 143 -57 138 -67 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
138 -18 -30 82 15 false [0 0 0] [1 1 1] (interim feedback) 12 /Times-Roman DrawText
6 -130 -142 75 15 false [0 0 0] [1 1 1] (obj-to-change) 12 /Times-Roman DrawText
15 -6 -18 100 15 false [0 0 0] [1 1 1] (objects to start over) 12 /Times-Roman DrawText
[0 0 0] 0 0 [] 1 21 -92 65 -23 DrawLine
30 -87 {
  { 22 -81 21 -92 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 111 -93 65 -23 DrawLine
110 -82 {
  { 102 -88 111 -93 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 107 -43 65 -23 DrawLine
100 -34 {
  { 96 -44 107 -43 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 24 -42 65 -23 DrawLine
35 -43 {
  { 31 -33 24 -42 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
[0 0 0] 0 0 [] 1 48 -99 43 -130 DrawLine
41 -108 {
  { 51 -110 48 -99 }
} [0 0 0] 0 0 [] 1 null DrawPolyline
grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Roman 
%%BoundingBox: 188 317 423 476

%%EndDocument
 GE 6 10 0 18240 53348 GB 
%%BeginDocument: lapidary/move-inter.PS
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Move/Grow Interactor
%%Creator: Make-PS-File -- Garnet Version 2.2
%%CreationDate: Aug 14, 1993, 7:51 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 133 72 478 720
%%%Pages: 1
%%EndComments


/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse { % x y xrad yrad startangle endangle line-color
               % cap join dash thickness fill-color => -
    EllipseDict begin
        /fill-color exch def /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color exch def  /endangle exch def /startangle exch def
        /yrad exch def  /xrad exch def /y exch def /x exch def
        /savematrix mtrx currentmatrix def
        % Draw the filling
        gsave
            newpath
            x y translate
            xrad thickness sub yrad thickness sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-color FillShape
            newpath
            x y translate
            xrad thickness 2 div sub yrad thickness 2 div sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            line-color
            0 % line-cap
            line-join dash-pattern thickness
            StrokeShape
        grestore
    end
} def

/AdjustLineDict 20 dict def
/AdjustLine { % x1 y1 x2 y2 width => x1 y1 x2 y2
  AdjustLineDict begin
    /width exch cvi def
    /hw width 2 div def
    /oddwidth? width 1 and 1 eq def
    /y2 exch def /x2 exch def /y1 exch def /x1 exch def
    /dx x2 x1 sub def /dy y2 y1 sub def
    dy 0 eq {
      dx 0 eq {
        % point
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } {
        % horizontal
        oddwidth? {
          /y1 y1 .5 sub def
          /y2 y2 .5 sub def
        } if
      } ifelse
    } {
      dx 0 eq {
        % vertical
        oddwidth? {
          /x1 x1 .5 add def
          /x2 x2 .5 add def
        } if
      } {
        % diagonal
        oddwidth? {
          /x1 x1 .5 add def /y1 y1 .5 sub def
          /x2 x2 .5 add def /y2 y2 .5 sub def
        } if
      } ifelse
    } ifelse
    x1 y1 x2 y2
  end
} def

/DrawLineDict 20 dict def
/DrawLine { % line-color cap join dash thickness x2 y2 x1 y1 => -
    gsave DrawLineDict begin
        4 index AdjustLine
        moveto lineto
        StrokeShape
    end grestore
} def

/TextDict 40 dict def
/DrawText { % left top base-y opal-width height fill-p
            % fore-color back-color string size font-name => -
    TextDict begin
        gsave
            findfont exch scalefont setfont
            /s exch def
            /back-color exch def /fore-color exch def /fill-p exch def
            /height exch def  /opal-width exch def
            /base-y exch def  /top exch def
            /left exch 1 sub def % XXX: I don't know why!

            % Calculate distance to add between each character, based on the 
            % width expected by Opal, the width expected by postscript, and 
            % the number of characters to distribute the change over.
            /x-dist opal-width s stringwidth pop sub s length div def

            % Draw background of text if appropriate
            fill-p {
                gsave
                    newpath
                    left top opal-width height RectanglePath
                    back-color FillShape
                grestore
            } if

            % Draw text in the appropriate color
            newpath
            s length 0 ne {
                left base-y moveto
                fore-color aload length 3 eq {
                    setrgbcolor
                    x-dist 0 s ashow
                } { % Halftone pattern:
                    %   fgR fgG fgB bgR bgG bgB top pattern
                    %   fgR fgG fgB false top pattern
                    /pattern exch def /top exch def /opaque? exch def
                    opaque? not { .5 .5 .5 } if
                    /bgB exch def /bgG exch def /bgR exch def
                    /fgB exch def /fgG exch def /fgR exch def

                    fgR bgR add 2 div
                    fgG bgG add 2 div
                    fgB bgB add 2 div
                    setrgbcolor

                    opaque? {
                        x-dist 0 s ashow
                    } {
                        mark
                        /ch 1 string def
                        /space { /space { x-dist 0 rmoveto } def } def
%                       /jt statusdict begin jobtimeout end def
                        gsave { % try really hard to do it right
                            s {
                                % don't take more than 2 seconds a character
%                               statusdict begin 2 setjobtimeout end
                                space
                                ch 0 3 -1 roll put
                                ch true charpath
                                currentpoint /yy exch def /xx exch def
                                fgR fgG fgB false top pattern FillPattern
                                newpath xx yy moveto
                            } forall
                        } stopped grestore { % fall back in case we fail
                            x-dist 0 s ashow
                        } if
%                       statusdict begin jt setjobtimeout end
                        cleartomark
                    } ifelse
                } ifelse
            } if
        grestore
    end
} def

/DefImage { % image-name font-name w h string => -
  20 dict begin
    /ImageString exch def /ImageHeight exch def /ImageWidth exch def
    /FontName exch def
    /ImageName exch def
    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def
    /Encoding [
      /image 255 { /.notdef } repeat
    ] def
    /BuildChar { % font char => -
      pop begin
        1 0
        0 0 1 1 setcachedevice
        gsave
          ImageWidth ImageHeight false
          [ ImageWidth 0 0 ImageHeight 0 0 ]
          {ImageString} imagemask
        grestore
      end
    } def
    ImageName currentdict definefont
    FontName exch
    ImageName ImageString
  end
  def def
} def


/FillPattern { % fgR fgG fgB [bgR bgG bgB] opaque? top font => -
  50 dict begin gsave
    /font exch def
    /top exch def
    /opaque? exch def
    /w font /ImageWidth get def
    /h font /ImageHeight get def
    font [w 0 0 h 0 0] makefont setfont
    pathbbox
    /y1 exch def /x1 exch def
    /y0 exch def /x0 exch def
    clip
    opaque? {
      gsave
        setrgbcolor
        fill
      grestore
    } if
    newpath
    setrgbcolor
    /y0 y0 top sub h div floor h mul top add cvi def
    /x0 x0 w div floor w mul cvi def
    x0 y0 translate
    /W x1 x0 sub w div ceiling cvi 1 add def
    /H y1 y0 sub h div ceiling cvi def
    /s W string def
    H {
      0 0 moveto
      s show
      0 h translate
    } repeat
  grestore end
  newpath
} def


/PolylineDict 20 dict def
/DrawPolyline { % x1 y1 {{x y ...} ...} line-color
                % join cap dash thickness fill-color => -
    gsave PolylineDict begin
        /fill-color exch def  /thickness exch def  /dash-pattern exch def
        /line-join exch def  /line-cap exch def  /line-color exch def
        % Don't draw the path of the fill if the filling-style is null.
        fill-color null eq not {
                3 copy
                newpath
                3 1 roll moveto
                { aload length 2 idiv { lineto } repeat } forall
                fill-color FillShape
                } if

        newpath
        .5 -.5 translate

        % Stroke after every sub-array to avoid a limitcheck error
        2 index 2 index moveto
        { aload length 2 sub 2 idiv { lineto } repeat
        2 copy lineto
        line-color line-cap line-join dash-pattern thickness StrokeShape
        moveto
        } forall

        currentpoint
        3 -1 roll sub abs .01 lt
        3 1 roll sub abs .01 lt and {
          0 0 rlineto closepath
        } if

        line-color line-cap line-join dash-pattern
        thickness
%       dup -1 ne { .5 add } if % fudge outline width thicker
        StrokeShape

    end grestore
} def

/RectanglePath { % left top width height => -
    /h exch def  /w exch def
    moveto                      % Go to the left,top corner
    w 0 rlineto                 % top side
    0 h neg rlineto             % right side
    w neg 0 rlineto             % bottom side
    closepath                   % left side
} def

/RectangleDict 21 dict def
/DrawRectangle { % left top width height line-color
                 % cap join dash thickness fill-color => -
    RectangleDict begin
        /fill-color exch def  /thickness exch def /dash-pattern exch def
        /line-join exch def  /line-cap exch def /line-color exch def
        /height exch def /width exch def  /top exch def  /left exch def
        /thickness-for-fill thickness 0 lt {0} {thickness} ifelse def
        % Draw filling
        newpath
        left thickness-for-fill add top thickness-for-fill sub
        width thickness-for-fill 2 mul sub height thickness-for-fill 2 mul sub
        RectanglePath
        fill-color FillShape
        % Draw border
        newpath
        left thickness 2 div add  top thickness 2 div sub
        width thickness sub  height thickness sub
        RectanglePath
        line-color line-cap line-join dash-pattern thickness StrokeShape
    end
} def

/DrawGenericWindowFrame { % label left top w h
                          % leftmargin topmargin rightmargin bottommargin => -
  30 dict begin

  { % setup
    /bottommargin exch def /rightmargin exch def
    /topmargin exch def /leftmargin exch def
    /h exch def /w exch def /y exch h sub def /x exch def
    /label exch def
    /pointsize
      topmargin 1 sub
      dup 1 lt { pop 1 } if
      dup 12 gt { 12 sub 3 div 12 add } if
    def

    /bottom y def /top y h add def
    /left x def /right  x w add def
    1 setlinewidth
    0 setlinecap
  } exec

  { % background
    newpath
    left leftmargin sub bottom bottommargin sub moveto
    left leftmargin sub top topmargin add lineto
    right rightmargin add top topmargin add lineto
    right rightmargin add bottom bottommargin sub lineto
    closepath
    0 setgray fill

    left bottom moveto
    left top lineto
    right top lineto
    right bottom lineto
    closepath
    1 setgray fill
  } exec

  topmargin 8 ge {
    /Helvetica-Bold findfont pointsize scalefont setfont
    label stringwidth pop
    left right add 2 div
    exch 2 div sub
    top topmargin 2 div add pointsize 2 div sub 2 add moveto
    1 setgray
    label show
  } if

  end
} def

/FillShape { % [halftone] | [r g b] | null => -
    gsave
        dup null eq { pop } {
          aload length 3 eq { setrgbcolor fill } {
              FillPattern
          } ifelse
        } ifelse
    grestore
    newpath
} def

/StrokeShape { % line-color cap join dash thickness => -
    % If no line is desired, pass -1 for line-thickness
    dup 0 ge 5 index null ne and {
        % if line-thickness >= 0, then draw the outline
        gsave
            setlinewidth 0 setdash setlinejoin setlinecap
            aload length 3 eq { setrgbcolor stroke } {
                strokepath FillPattern
            } ifelse
        grestore
    } {
        pop pop pop pop pop
    } ifelse
    newpath
} def

/ClipDict 2 dict def
/ClipToRectangle { % left top width height => -
    ClipDict begin
        /height exch def  /width exch def
        newpath
            moveto                      % Go to the left,top corner
            width 0 rlineto             % top side
            0 height neg rlineto        % right side
            width neg 0 rlineto         % bottom side
            closepath                   % left side
        gsave 1 setgray fill grestore
        clip newpath
    end
} def

/image-1 /image-1-font 4 4 <
00 00 00 00>
DefImage


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.61 0.61 scale
100 1059 translate

%
% Begin new window
%
gsave
0 0 564 1059 ClipToRectangle
gsave
0 0 564 1059 [0 0 0] 0 0 [] -1 [1 1 1] DrawRectangle
grestore


%
% Begin new window
%
gsave
2 -23 translate
(Move/Grow Interactor) 0 0 560 1034 2 23 2 2 DrawGenericWindowFrame
0 0 560 1034 ClipToRectangle
gsave
540 -40 20 954 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
540 0 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
550 -3 {
  { 550 -3 557 -10 553 -10 553 -17 547 -17 547 -10 543 -10 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
540 -1014 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
550 -1031 {
  { 550 -1031 557 -1024 553 -1024 553 -1017 547 -1017 547 -1024 543 -1024 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
540 -20 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
550 -24 {
  { 550 -24 557 -31 543 -31 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
550 -28 {
  { 550 -28 557 -35 543 -35 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
540 -994 20 20 [0 0 0] 0 0 [] 1 null DrawRectangle
550 -1010 {
  { 550 -1010 557 -1003 543 -1003 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
550 -1006 {
  { 550 -1006 557 -999 543 -999 }
} [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawPolyline
541 -40 18 18 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
grestore


%
% Begin new window
%
gsave
0 0 translate
() 0 0 540 1034 0 0 0 0 DrawGenericWindowFrame
0 0 540 1034 ClipToRectangle
gsave
grestore


%
% Begin new window
%
gsave
0 0 translate
() 0 0 539 1039 0 0 0 0 DrawGenericWindowFrame
0 0 539 1039 ClipToRectangle
gsave
10 -10 -32 229 28 false [0 0 0] [1 1 1] (Move/Grow Interactor) 24 /Times-BoldItalic DrawText
20 -49 -60 109 14 false [0 0 0] [1 1 1] (Interactor Name:) 12 /Courier-Bold DrawText
140 -49 -60 77 14 false [0 0 0] [1 1 1] (MYMOVEINTER) 12 /Courier DrawText
134 -47 150 18 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -81 368 137 [0 0 0] 0 0 [] 1 null DrawRectangle
30 -74 91 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
35 -74 -85 81 14 false [0 0 0] [1 1 1] (:start-where) 12 /Courier-Bold DrawText
194.5 -110.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
189.5 -105.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
189.5 -105.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
35 -101 -112 138 14 false [0 0 0] [1 1 1] (Object to Press Over) 12 /Courier DrawText
215 -98 160 20 [0 0 0] 0 0 [] 1 null DrawRectangle
201.5 -152.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
196.5 -147.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
196.5 -147.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
35 -143 -154 145 14 false [0 0 0] [1 1 1] (One of This Aggregate) 12 /Courier DrawText
196.5 -147.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
222 -140 160 20 [0 0 0] 0 0 [] 1 null DrawRectangle
225 -142 -153 146 14 false [0 0 0] [1 1 1] (BOX-SELECTION-HANDLES) 12 /Courier DrawText
50 -121 -132 12 14 false [0 0 0] [1 1 1] (or) 12 /Courier DrawText
50 -163 -174 12 14 false [0 0 0] [1 1 1] (or) 12 /Courier DrawText
40 -186 45 26 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
35 -181 45 26 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
38 -184 39 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
41 -187 -198 33 14 false [0 0 0] [1 1 1] (Other) 12 /Courier DrawText
94 -186 125 20 [0 0 0] 0 0 [] 1 null DrawRectangle
354 -189 20 20 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
349 -184 20 20 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
352 -187 14 14 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
228 -189 -200 116 14 false [0 0 0] [1 1 1] (Type restriction:) 12 /Courier DrawText
412 -15 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -10 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -14 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
414 -17 -28 103 14 false [0 0 0] [1 1 1] (CREATE INSTANCE) 12 /Courier DrawText
412 -53 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -48 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -52 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
444 -55 -66 42 14 false [0 0 0] [1 1 1] (MODIFY) 12 /Courier DrawText
412 -91 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -86 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -90 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
441 -93 -104 49 14 false [0 0 0] [1 1 1] (DESTROY) 12 /Courier DrawText
412 -129 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -124 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -128 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
452 -131 -142 26 14 false [0 0 0] [1 1 1] (SAVE) 12 /Courier DrawText
412 -167 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -162 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -166 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
456 -169 -180 19 14 false [0 0 0] [1 1 1] (C32) 12 /Courier DrawText
412 -205 117 28 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
407 -200 117 28 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
411 -204 109 20 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
445 -207 -218 40 14 false [0 0 0] [1 1 1] (CANCEL) 12 /Courier DrawText
78.5 -243.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
73.5 -238.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
73.5 -238.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
30 -234 -245 27 14 false [0 0 0] [1 1 1] (Line) 12 /Courier DrawText
137.5 -243.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
132.5 -238.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
132.5 -238.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
95 -234 -245 21 14 false [0 0 0] [1 1 1] (Box) 12 /Courier DrawText
236.5 -243.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
231.5 -238.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
231.5 -238.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
154 -234 -245 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
132.5 -238.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
78.5 -280.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
73.5 -275.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
73.5 -275.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
30 -271 -282 27 14 false [0 0 0] [1 1 1] (Grow) 12 /Courier DrawText
143.5 -280.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
138.5 -275.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
138.5 -275.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
95 -271 -282 27 14 false [0 0 0] [1 1 1] (Move) 12 /Courier DrawText
242.5 -280.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
237.5 -275.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
237.5 -275.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
160 -271 -282 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
138.5 -275.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
20 -301 213 327 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
30 -311 -322 104 14 false [0 0 0] [1 1 1] (Grow Parameters) 12 /Courier-Bold DrawText
211.5 -360.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
206.5 -355.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
206.5 -355.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
107 -351 -362 83 14 false [0 0 0] [1 1 1] (Change Width) 12 /Courier DrawText
211.5 -393.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
206.5 -388.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
206.5 -388.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
100 -384 -395 90 14 false [0 0 0] [1 1 1] (Change Height) 12 /Courier DrawText
211.5 -426.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
206.5 -421.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
206.5 -421.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
30 -417 -428 160 14 false [0 0 0] [1 1 1] (Change Width and Height) 12 /Courier DrawText
211.5 -459.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
206.5 -454.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
206.5 -454.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
129 -450 -461 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
206.5 -421.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
30 -490 -501 82 14 false [0 0 0] [1 1 1] (Growing Line) 12 /Courier DrawText
50 -515 -526 70 14 false [0 0 0] [1 1 1] (Min-Length) 12 /Courier DrawText
125 -513 50 18 [0 0 0] 0 0 [] 1 null DrawRectangle
30 -550 -561 110 14 false [0 0 0] [1 1 1] (Growing Non-Line) 12 /Courier DrawText
50 -575 -586 77 14 false [0 0 0] [1 1 1] (Min-Width  ) 12 /Courier DrawText
138 -575 -586 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
132 -573 50 18 [0 0 0] 0 0 [] 1 null DrawRectangle
50 -602 -613 70 14 false [0 0 0] [1 1 1] (Min-Height) 12 /Courier DrawText
131 -602 -613 5 14 false [0 0 0] [1 1 1] (0) 12 /Courier DrawText
125 -600 50 18 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -301 213 327 [0 0 0] 0 0 [] 1 null DrawRectangle
262 -311 -322 105 14 false [0 0 0] [1 1 1] (Move Parameters) 12 /Courier-Bold DrawText
414.5 -360.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
409.5 -355.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
409.5 -355.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
317 -351 -362 76 14 false [0 0 0] [1 1 1] (Change Left) 12 /Courier DrawText
414.5 -393.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
409.5 -388.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
409.5 -388.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
325 -384 -395 68 14 false [0 0 0] [1 1 1] (Change Top) 12 /Courier DrawText
414.5 -426.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
409.5 -421.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
409.5 -421.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
262 -417 -428 131 14 false [0 0 0] [1 1 1] (Change Left and Top) 12 /Courier DrawText
414.5 -459.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
409.5 -454.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
409.5 -454.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
332 -450 -461 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
409.5 -421.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
252 -301 184 180 [0 0 0] 0 0 [] 1 null DrawRectangle
252 -497 216 114 [0 0 0] 0 0 [] 1 null DrawRectangle
262 -490 105 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
267 -490 -501 95 14 false [0 0 0] [1 1 1] (:obj-to-change) 12 /Courier-Bold DrawText
441.5 -526.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
436.5 -521.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
436.5 -521.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
267 -517 -528 153 14 false [0 0 0] [1 1 1] (Result of :start-where) 12 /Courier DrawText
441.5 -559.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
436.5 -554.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
436.5 -554.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
295 -550 -561 125 14 false [0 0 0] [1 1 1] (Change this object) 12 /Courier DrawText
441.5 -592.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
436.5 -587.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
436.5 -587.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
359 -583 -594 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
436.5 -554.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
30 -639 -650 102 14 false [0 0 0] [1 1 1] (Final Function:) 12 /Courier-Bold DrawText
137 -637 150 18 [0 0 0] 0 0 [] 1 null DrawRectangle
20 -671 456 81 [0 0 0] 0 0 [] 1 null DrawRectangle
30 -664 96 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
35 -664 -675 86 14 false [0 0 0] [1 1 1] (:feedback-obj) 12 /Courier-Bold DrawText
167.5 -700.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
162.5 -695.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
162.5 -695.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
35 -691 -702 111 14 false [0 0 0] [1 1 1] (Interim Feedback) 12 /Courier DrawText
162.5 -695.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
188 -688 125 20 [0 0 0] 0 0 [] 1 null DrawRectangle
191 -690 -701 112 14 false [0 0 0] [1 1 1] (DASHED-LINE-RECT) 12 /Courier DrawText
448.5 -700.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
443.5 -695.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
443.5 -695.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
323 -691 -702 104 14 false [0 0 0] [1 1 1] (Change Original) 12 /Courier DrawText
448.5 -733.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
443.5 -728.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
443.5 -728.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
366 -724 -735 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
20 -768 341 208 [0 0 0] 0 0 [] 1 null DrawRectangle
30 -761 98 14 [0 0 0] 0 0 [] -1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
35 -761 -772 88 14 false [0 0 0] [1 1 1] (:attach-point) 12 /Courier-Bold DrawText
51 -797 112 112 [0 0 0] 0 0 [] 1 null DrawRectangle
51.5 -797.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
46.5 -792.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
46.5 -792.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
105.5 -797.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
100.5 -792.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
100.5 -792.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
159.5 -797.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
154.5 -792.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
154.5 -792.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
51.5 -851.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
46.5 -846.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
46.5 -846.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
105.5 -851.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
100.5 -846.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
100.5 -846.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
159.5 -851.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
154.5 -846.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
154.5 -846.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
51.5 -905.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
46.5 -900.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
46.5 -900.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
105.5 -905.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
100.5 -900.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
100.5 -900.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
159.5 -905.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
154.5 -900.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
154.5 -900.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
[0 0 0] 0 0 [] 1 332 -894 232 -794 DrawLine
235.5 -797.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
230.5 -792.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
230.5 -792.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
285.5 -847.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
280.5 -842.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
280.5 -842.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
335.5 -897.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
330.5 -892.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
330.5 -892.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
66.5 -958.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
61.5 -953.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
61.5 -953.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
87 -951 -962 91 14 false [0 0 0] [1 1 1] (Nearest Point) 12 /Courier DrawText
232.5 -958.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0 0 0] DrawEllipse
227.5 -953.5 11.5 11.5 0 360 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawEllipse
227.5 -953.5 8.5 8.5 0 360 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawEllipse
253 -951 -962 61 14 false [0 0 0] [1 1 1] (<Formula>) 12 /Courier DrawText
61.5 -953.5 5.5 5.5 0 360 [0 0 0] 0 0 [] -1 [0 0 0] DrawEllipse
40 -995 97 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
30 -985 97 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
35 -990 87 24 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
40 -995 -1006 76 14 false [0 0 0] [1 1 1] (Start-Event) 12 /Courier DrawText
152 -995 97 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
142 -985 97 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
147 -990 87 24 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
156 -995 -1006 69 14 false [0 0 0] [1 1 1] (Stop-Event) 12 /Courier DrawText
264 -995 97 34 [0 0 0] 0 0 [] 1 [0 0 0] DrawRectangle
254 -985 97 34 [0 0 0] 0 0 [] 1 [0.50 dup dup] DrawRectangle
259 -990 87 24 [0 0 0] 0 0 [] 1 [ 1 1 1 1 1 1 true 0 image-1-font ] DrawRectangle
264 -995 -1006 77 14 false [0 0 0] [1 1 1] (Abort-Event) 12 /Courier DrawText
grestore

grestore

grestore

grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic Helvetica-Bold 
%%BoundingBox: 133 72 478 720

%%EndDocument
 GE 16470 50780 MT
(\050a\051)SH
34920 XM
(\050b\051)SH
/Times-Bold SF
6120 53728 MT
(Figure 4-3:)SH
/Times-Roman SF
12426 XM
(\050a\051 The various parts for a move behavior; and \050b\051 the dialog box)
258 W( for specifying the)259 W
11893 54924 MT
(move/grow interactor.)
32 W( The)
338 W( user can now directly select the obj-to-change and Lapidary will)31 W
11893 56120 MT
(create a formula that automatically selects the correct object to change at run-time.)SH
46800 50 6120 58072 UL
8870 59823 MT
(small or whether an object of the minimum size should be created.)SH
/Symbol SF
8089 61717 MT
(\267)SH
/Times-Roman SF
8870 XM
(:feedback-obj. An interim feedback object can be created by creating the)
81 W( desired object and)80 W
8870 62913 MT
(pressing the interim-feedback button.  Constraints will)
277 W( be automatically attached to the)278 W
8870 64109 MT
(feedback object that cause it to sweep out as the mouse cursor is moved, and that)
126 W( make it)125 W
8870 65305 MT
(visible/invisible at the appropriate times.  If the standard feedback option is selected,)
10 W( a box or)11 W
8870 66501 MT
(line feedback object is automatically created according to whether a line or box is being)188 W
8870 67697 MT
(created.)SH
/Symbol SF
8089 69591 MT
(\267)SH
/Times-Roman SF
8870 XM
(:final-function. The user can type in the name of a function that should be)
105 W( called when the)106 W
8870 70787 MT
(interactor completes.)SH
ES
%%Page: 569 32
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.5)
SH( Specific)
1800 W( Interactors)SH
51386 XM
(Page 569)SH
46800 50 8280 4486 UL
11 SS 
8280 7955 MT
(Example: To create a two-point interactor with line feedback)SH
8280 10253 MT
(1\051 select the interactors option from)38 W
/Courier SF
24514 XM
(other)SH
/Times-Roman SF
28126 XM
(in the editor menu and then select two point interactor in the)37 W
8280 11449 MT
(menu that pops up)SH
8280 13747 MT
(2\051 click on Start Anywhere in Window)SH
8280 16045 MT
(3\051 click on Create Line)SH
8280 18343 MT
(4\051 click on Standard Feedback)SH
8280 20641 MT
(5\051 click on CREATE INSTANCE)SH
8280 22939 MT
(To test this interactor, enter test mode, press down on the left mouse button,)
1 W( and sweep out a line.  No line)2 W
8280 24135 MT
(will be created because a final function was not provided.)SH
8 10 0 7200 74851 GB 
%%BeginDocument: lapidary/TwoPoint.PS
%!PS-Adobe-2.0
%%Title: two point interactor
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 4:57 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 172 540 619
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.7488 0.7488 scale

%
% Begin new window
%
0 -134 translate
gsave
0 865 625 597 ClipToRectangle
0 0 translate
gsave
10 855 833 213 28 0 false 0 0 0 false 0 0 0 false (Two Point Interactor) 24 /Times-BoldItalic DrawText
20 816 805 109 14 0 false 0 0 0 false 0 0 0 false (Interactor Name:) 12 /Courier-Bold DrawText
134 818 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 784 368 137 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 791 91 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 791 780 81 14 0 false 0 0 0 false 0 0 0 false (:start-where) 12 /Courier-Bold DrawText
223.5 754.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
218.5 759.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
218.5 759.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 764 753 167 14 0 false 0 0 0 false 0 0 0 false (Start Anywhere in Window) 12 /Courier DrawText
139.5 712.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
134.5 717.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
134.5 717.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 722 711 83 14 0 false 0 0 0 false 0 0 0 false (Start in Box) 12 /Courier DrawText
160 725 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
50 744 733 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
50 702 691 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
40 679 45 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
35 684 45 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
38 681 39 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
41 678 667 33 14 0 false 0 0 0 false 0 0 0 false (Other) 12 /Courier DrawText
94 679 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
354 676 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
349 681 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
352 678 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
228 676 665 116 14 0 false 0 0 0 false 0 0 0 false (Type restriction:) 12 /Courier DrawText
488 850 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 855 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 851 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
490 848 837 103 14 0 false 0 0 0 false 0 0 0 false (CREATE INSTANCE) 12 /Courier DrawText
488 812 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 817 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 813 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
520 810 799 42 14 0 false 0 0 0 false 0 0 0 false (MODIFY) 12 /Courier DrawText
488 774 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 779 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 775 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
517 772 761 49 14 0 false 0 0 0 false 0 0 0 false (DESTROY) 12 /Courier DrawText
488 736 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 741 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 737 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
528 734 723 26 14 0 false 0 0 0 false 0 0 0 false (SAVE) 12 /Courier DrawText
488 698 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 703 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 699 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
496 696 685 90 14 0 false 0 0 0 false 0 0 0 false (PRINT KR NAME) 12 /Courier DrawText
488 660 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
483 665 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
487 661 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
521 658 647 40 14 0 false 0 0 0 false 0 0 0 false (CANCEL) 12 /Courier DrawText
111.5 621.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
106.5 626.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
106.5 626.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
15 631 620 75 14 0 false 0 0 0 false 0 0 0 false (Create Line) 12 /Courier DrawText
252.5 621.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
247.5 626.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
247.5 626.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
128 631 620 103 14 0 false 0 0 0 false 0 0 0 false (Create Non-Line) 12 /Courier DrawText
351.5 621.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
346.5 626.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
346.5 626.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
269 631 620 61 14 0 false 0 0 0 false 0 0 0 false (<Formula>) 12 /Courier DrawText
247.5 626.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
20 601 215 117 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
35 586 575 132 14 0 false 0 0 0 false 0 0 0 false (Non-Line Parameters) 12 /Courier DrawText
35 566 555 63 14 0 false 0 0 0 false 0 0 0 false (Min-Width) 12 /Courier DrawText
103 568 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
35 544 533 70 14 0 false 0 0 0 false 0 0 0 false (Min-Height) 12 /Courier DrawText
110 546 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
135 519 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
130 524 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
133 521 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
35 519 508 90 14 0 false 0 0 0 false 0 0 0 false (May Flip Over) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 2 147 508 133 521 DrawLine
0 0 0 0 false 0 0 [] 2 147 521 133 508 DrawLine
254 601 215 62 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
269 586 575 104 14 0 false 0 0 0 false 0 0 0 false (Line Parameters) 12 /Courier DrawText
269 566 555 70 14 0 false 0 0 0 false 0 0 0 false (Min-Length) 12 /Courier DrawText
344 568 100 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
177.5 448.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
172.5 453.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
172.5 453.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
30 458 447 126 14 0 false 0 0 0 false 0 0 0 false (Abort if Too Small) 12 /Courier DrawText
374.5 448.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
369.5 453.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
369.5 453.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
194 458 447 159 14 0 false 0 0 0 false 0 0 0 false (or Increase to Min Size) 12 /Courier DrawText
369.5 453.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
20 421 470 66 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 428 96 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 428 417 86 14 0 false 0 0 0 false 0 0 0 false (:feedback-obj) 12 /Courier-Bold DrawText
167.5 401.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
162.5 406.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
162.5 406.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 411 400 111 14 0 false 0 0 0 false 0 0 0 false (Interim Feedback) 12 /Courier DrawText
188 414 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
467.5 401.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
462.5 406.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
462.5 406.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
328 411 400 118 14 0 false 0 0 0 false 0 0 0 false (Standard Feedback) 12 /Courier DrawText
376.5 374.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
371.5 379.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
371.5 379.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
328 384 373 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
371.5 379.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
20 344 333 102 14 0 false 0 0 0 false 0 0 0 false (Final Function:) 12 /Courier DrawText
127 346 75 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
40 309 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 319 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
35 314 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
40 309 298 76 14 0 false 0 0 0 false 0 0 0 false (Start-Event) 12 /Courier DrawText
152 309 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
142 319 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
147 314 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
156 309 298 69 14 0 false 0 0 0 false 0 0 0 false (Stop-Event) 12 /Courier DrawText
264 309 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
254 319 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
259 314 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
264 309 298 77 14 0 false 0 0 0 false 0 0 0 false (Abort-Event) 12 /Courier DrawText
grestore

grestore

0 865 625 597 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic 
%%BoundingBox: 72 172 540 619

%%EndDocument
 GE /Times-Bold SF
8280 62843 MT
(Figure 4-4:)SH
/Times-Roman SF
14053 XM
(Two point interactor dialog box)SH
12 /Times-Bold AF
8280 66527 MT
(4.5.4. Text Interactor)SH
11 /Times-Roman AF
8280 67723 MT
(The text interactor dialog box \050Figure 4-5\051 allows)
25 W( the user to create or modify a text interactor and to edit)24 W
8280 68919 MT
(the following slots:)SH
/Symbol SF
10249 70497 MT
(\267)SH
/Times-Roman SF
11030 XM
(:start-where. If the user selects either)219 W
/Courier SF
28865 XM
(object to)
219 W( press over)220 W
/Times-Roman SF
43219 XM
(or)SH
/Courier SF
44630 XM
(one of this)220 W
11030 71693 MT
(aggregadget)SH
/Times-Roman SF
18654 XM
(and there is at least one selection in a drawing)
89 W( window \050it may be either a)88 W
ES
%%Page: 570 33
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 570)
SH( Lapidary)830 W
42928 XM
(Interactors Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 8100 50740 GB 
%%BeginDocument: lapidary/text-inter.PS
%!PS-Adobe-2.0
%%Title: text interactor
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 3:01 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 171 540 622
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.8764045 0.8764045 scale

%
% Begin new window
%
0 -112 translate
gsave
0 739 534 514 ClipToRectangle
0 0 translate
gsave
15 734 712 154 28 0 false 0 0 0 false 0 0 0 false (Text Interactor) 24 /Times-BoldItalic DrawText
15 695 684 109 14 0 false 0 0 0 false 0 0 0 false (Interactor Name:) 12 /Courier-Bold DrawText
129 697 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
407 729 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 734 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 730 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
409 727 716 103 14 0 false 0 0 0 false 0 0 0 false (CREATE INSTANCE) 12 /Courier DrawText
407 691 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 696 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 692 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
439 689 678 42 14 0 false 0 0 0 false 0 0 0 false (MODIFY) 12 /Courier DrawText
407 653 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 658 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 654 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
436 651 640 49 14 0 false 0 0 0 false 0 0 0 false (DESTROY) 12 /Courier DrawText
407 615 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 620 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 616 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
447 613 602 26 14 0 false 0 0 0 false 0 0 0 false (SAVE) 12 /Courier DrawText
407 577 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 582 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 578 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
415 575 564 90 14 0 false 0 0 0 false 0 0 0 false (PRINT KR NAME) 12 /Courier DrawText
407 539 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
402 544 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
406 540 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
440 537 526 40 14 0 false 0 0 0 false 0 0 0 false (CANCEL) 12 /Courier DrawText
15 663 368 137 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
25 670 91 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
30 670 659 81 14 0 false 0 0 0 false 0 0 0 false (:start-where) 12 /Courier-Bold DrawText
218.5 633.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
213.5 638.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
213.5 638.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
30 643 632 167 14 0 false 0 0 0 false 0 0 0 false (Start Anywhere in Window) 12 /Courier DrawText
196.5 591.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
191.5 596.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
191.5 596.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
30 601 590 145 14 0 false 0 0 0 false 0 0 0 false (One of this aggregate) 12 /Courier DrawText
217 604 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
45 623 612 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
45 581 570 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
35 558 45 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 563 45 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
33 560 39 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
36 557 546 33 14 0 false 0 0 0 false 0 0 0 false (Other) 12 /Courier DrawText
89 558 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
349 555 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
344 560 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
347 557 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
223 555 544 116 14 0 false 0 0 0 false 0 0 0 false (Type restriction:) 12 /Courier DrawText
15 510 208 96 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
25 517 126 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
30 517 506 116 14 0 false 0 0 0 false 0 0 0 false (:object-to-change) 12 /Courier-Bold DrawText
191.5 483.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
186.5 488.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
186.5 488.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
25 493 482 145 14 0 false 0 0 0 false 0 0 0 false (result of start-where) 12 /Courier DrawText
191.5 435.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
186.5 440.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
186.5 440.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
67 445 434 61 14 0 false 0 0 0 false 0 0 0 false (<formula>) 12 /Courier DrawText
186.5 488.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
90 469 458 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
15 398 379 48 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
25 405 96 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
30 405 394 86 14 0 false 0 0 0 false 0 0 0 false (:feedback-obj) 12 /Courier-Bold DrawText
162.5 368.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
157.5 373.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
157.5 373.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
30 378 367 111 14 0 false 0 0 0 false 0 0 0 false (Interim Feedback) 12 /Courier DrawText
183 381 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
366.5 368.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
361.5 373.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
361.5 373.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
318 378 367 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
15 334 323 102 14 0 false 0 0 0 false 0 0 0 false (Cursor appears:) 12 /Courier-Bold DrawText
243.5 324.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
238.5 329.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
238.5 329.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
131 334 323 91 14 0 false 0 0 0 false 0 0 0 false (where pressed) 12 /Courier DrawText
392.5 324.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
387.5 329.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
387.5 329.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
260 334 323 111 14 0 false 0 0 0 false 0 0 0 false (at end of string) 12 /Courier DrawText
238.5 329.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
15 302 291 102 14 0 false 0 0 0 false 0 0 0 false (Final Function:) 12 /Courier-Bold DrawText
122 304 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
25 267 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
15 277 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
20 272 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
25 267 256 76 14 0 false 0 0 0 false 0 0 0 false (Start-Event) 12 /Courier DrawText
137 267 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
127 277 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
132 272 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
141 267 256 69 14 0 false 0 0 0 false 0 0 0 false (Stop-Event) 12 /Courier DrawText
249 267 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
239 277 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
244 272 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
249 267 256 77 14 0 false 0 0 0 false 0 0 0 false (Abort-Event) 12 /Courier DrawText
grestore

grestore

0 739 534 514 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic 
%%BoundingBox: 72 171 540 622

%%EndDocument
 GE /Times-Bold SF
6120 40522 MT
(Figure 4-5:)SH
/Times-Roman SF
11893 XM
(Text interactor dialog box)SH
8870 42473 MT
(primary or)
110 W( secondary selection\051, then start-wheres with)111 W
/Courier SF
34202 XM
(:in-box)SH
/Times-Roman SF
39208 XM
(and)SH
/Courier SF
41182 XM
(:element-of)SH
/Times-Roman SF
48828 XM
(are)SH
8870 43669 MT
(generated with the selected object.)SH
/Symbol SF
8089 45563 MT
(\267)SH
/Times-Roman SF
8870 XM
(:obj-to-change. The user can either let the text interactor modify the object that satisfies)
81 W( the)80 W
8870 46759 MT
(start-where or use a formula to compute the object to change.  Lapidary can construct a)196 W
8870 47955 MT
(formula for this slot if necessary \050see section 4.5.2\051.)SH
/Symbol SF
8089 49849 MT
(\267)SH
/Times-Roman SF
8870 XM
(:feedback-obj. An interim feedback object can be created by creating a text object and)264 W
8870 51045 MT
(pressing the interim-feedback button.  Constraints will)
277 W( be automatically attached to the)278 W
8870 52241 MT
(feedback object that cause it)
386 W( to appear at the selected text object and that make it)385 W
8870 53437 MT
(visible/invisible at the appropriate times.)SH
/Symbol SF
8089 55331 MT
(\267)SH
/Times-Roman SF
8870 XM
(:cursor-where-press. This slot is set by the buttons)173 W
/Courier SF
32647 XM
(where pressed)173 W
/Times-Roman SF
41848 XM
(and)SH
/Courier SF
43884 XM
(at end of)173 W
8870 56527 MT
(string)SH
/Times-Roman SF
(. If)202 W
/Courier SF
14790 XM
(where pressed)201 W
/Times-Roman SF
24047 XM
(is selected, the text editing cursor will appear under the)201 W
8870 57723 MT
(mouse cursor. If)212 W
/Courier SF
16958 XM
(at end of string)212 W
/Times-Roman SF
28641 XM
(is selected, the)
212 W( text editing cursor will always)213 W
8870 58919 MT
(appear at the end of the string when editing starts.)SH
/Symbol SF
8089 60813 MT
(\267)SH
/Times-Roman SF
8870 XM
(:final-function. The user can)
106 W( type in the name of a function that should be called when the)105 W
8870 62009 MT
(interactor completes.)SH
12 /Times-Bold AF
6120 65693 MT
(4.5.5. Angle Interactor)SH
11 /Times-Roman AF
6120 66889 MT
(The angle interactor dialog box \050Figure 4-6\051)
25 W( allows the user to create and modify an angle interactor. The)26 W
6120 68085 MT
(slots that can be set by this dialog box are:)SH
/Symbol SF
8089 69663 MT
(\267)SH
/Times-Roman SF
8870 XM
(:start-where. If the user selects)293 W
/Courier SF
24077 XM
(object to press over)293 W
/Times-Roman SF
38723 XM
(and there is a least one)292 W
8870 70859 MT
(selection in a drawing)
138 W( window \050it may be either a primary or secondary selection\051, then a)139 W
ES
%%Page: 571 34
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Section 4.5)
SH( Specific)
1800 W( Interactors)SH
51386 XM
(Page 571)SH
46800 50 8280 4486 UL
11 SS 
11030 7955 MT
(start-where with)360 W
/Courier SF
19202 XM
(:in-box)SH
/Times-Roman SF
24457 XM
(is generated. If the user selects)360 W
/Courier SF
40390 XM
(start anywhere in)360 W
11030 9151 MT
(window)SH
/Times-Roman SF
(, then a start-where of)SH
/Courier SF
24884 XM
(t)SH
/Times-Roman SF
25819 XM
(is generated.)SH
/Symbol SF
10249 11045 MT
(\267)SH
/Times-Roman SF
11030 XM
(:obj-to-change. The user can either let)
28 W( the angle interactor modify the object that satisfies the)29 W
11030 12241 MT
(start-where or use a formula to compute the object to change.)SH
/Symbol SF
10249 14135 MT
(\267)SH
/Times-Roman SF
11030 XM
(:feedback-obj. An interim feedback object can be created by)
81 W( creating an object, selecting it,)80 W
11030 15331 MT
(and pushing the interim feedback button.  The :angle slot of the object will be)
165 W( set as the)166 W
11030 16527 MT
(interactor is operated and the object will be made visible/invisible as appropriate.)
81 W( To)
435 W( make)80 W
11030 17723 MT
(the feedback object or the object)
5 W( that gets the final angle change in response to changes in the)6 W
11030 18919 MT
(:angle slot, custom constraints must be created for the position and size slots.  See)
61 W( the angle)60 W
11030 20115 MT
(interactor section in the Interactors chapter for sample constraints.)SH
/Symbol SF
10249 22009 MT
(\267)SH
/Times-Roman SF
11030 XM
(:final-function. The user can type in the name of a function that should be)
105 W( called when the)106 W
11030 23205 MT
(interactor completes.)SH
/Symbol SF
10249 25099 MT
(\267)SH
/Times-Roman SF
11030 XM
(:center-of-rotation. This is the center of rotation for the interaction.  The user can either enter)27 W
11030 26295 MT
(a list of)117 W
/Courier SF
14956 XM
(\050x,y\051)SH
/Times-Roman SF
(, enter a formula that returns a list of)117 W
/Courier SF
35681 XM
(\050x,y\051)SH
/Times-Roman SF
39373 XM
(or select one)
117 W( of the standard)118 W
11030 27491 MT
(locations for the center of rotation by selecting the appropriate button.)SH
ES
%%Page: 572 35
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 572)
SH( Lapidary)830 W
42928 XM
(Interactors Chapter)
1550 W( 4)SH
46800 50 6120 4486 UL
11 SS 
7 10 0 8100 55710 GB 
%%BeginDocument: lapidary/Angle.PS
%!PS-Adobe-2.0
%%Title: angle interactor
%%Creator: Make-PS-File -- Garnet Version 2.0
%%CreationDate: May 14, 1992, 4:53 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 99 540 693
%%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
          x y translate
          gsave
            xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
            fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
          savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {    % stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
        findfont exch scalefont setfont
        /s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
        /x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
        newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
          left base-y moveto
          x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
        moveto                  % Go to the left,top corner
        w 0 rlineto             % top side
        0 h neg rlineto         % right side
        w neg 0 rlineto         % bottom side
        closepath               % left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {    % stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
        /height exch def  /width exch def
        newpath
          moveto                % Go to the left,top corner
          width 0 rlineto       % top side
          0 height neg rlineto  % right side
          width neg 0 rlineto   % bottom side
          closepath             % left side
        gsave 1 setgray fill grestore
        clip newpath
        end
   } def

/FillShape
   {    % stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
        { pop pop pop 
          dup 0 ge
            % if fill-halftone >= 0, then fill the shape with a halftone
            { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        % If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
        dup 0 ge
          % if line-thickness >= 0, then draw the outline
          {gsave
           setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
           stroke
           grestore}
          {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%%Page: 1 1

gsave
72 72 translate
0.8587156 0.8587156 scale

%
% Begin new window
%
0 -32 translate
gsave
0 755 545 692 ClipToRectangle
0 0 translate
gsave
10 745 723 169 28 0 false 0 0 0 false 0 0 0 false (Angle Interactor) 24 /Times-BoldItalic DrawText
20 706 695 109 14 0 false 0 0 0 false 0 0 0 false (Interactor Name:) 12 /Courier-Bold DrawText
134 708 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 674 368 137 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 681 91 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 681 670 81 14 0 false 0 0 0 false 0 0 0 false (:start-where) 12 /Courier-Bold DrawText
194.5 644.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
189.5 649.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
189.5 649.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 654 643 138 14 0 false 0 0 0 false 0 0 0 false (Object to Press Over) 12 /Courier DrawText
215 657 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
223.5 602.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
218.5 607.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
218.5 607.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 612 601 167 14 0 false 0 0 0 false 0 0 0 false (Start Anywhere in Window) 12 /Courier DrawText
50 634 623 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
50 592 581 12 14 0 false 0 0 0 false 0 0 0 false (or) 12 /Courier DrawText
40 569 45 26 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
35 574 45 26 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
38 571 39 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
41 568 557 33 14 0 false 0 0 0 false 0 0 0 false (Other) 12 /Courier DrawText
94 569 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
354 566 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
349 571 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
352 568 14 14 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
228 566 555 116 14 0 false 0 0 0 false 0 0 0 false (Type restriction:) 12 /Courier DrawText
412 740 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 745 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 741 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
414 738 727 103 14 0 false 0 0 0 false 0 0 0 false (CREATE INSTANCE) 12 /Courier DrawText
412 702 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 707 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 703 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
444 700 689 42 14 0 false 0 0 0 false 0 0 0 false (MODIFY) 12 /Courier DrawText
412 664 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 669 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 665 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
441 662 651 49 14 0 false 0 0 0 false 0 0 0 false (DESTROY) 12 /Courier DrawText
412 626 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 631 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 627 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
452 624 613 26 14 0 false 0 0 0 false 0 0 0 false (SAVE) 12 /Courier DrawText
412 588 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 593 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 589 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
420 586 575 90 14 0 false 0 0 0 false 0 0 0 false (PRINT KR NAME) 12 /Courier DrawText
412 550 117 28 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
407 555 117 28 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
411 551 109 20 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
445 548 537 40 14 0 false 0 0 0 false 0 0 0 false (CANCEL) 12 /Courier DrawText
30 521 216 81 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
40 528 105 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
45 528 517 95 14 0 false 0 0 0 false 0 0 0 false (:obj-to-change) 12 /Courier-Bold DrawText
219.5 491.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
214.5 496.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
214.5 496.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
45 501 490 153 14 0 false 0 0 0 false 0 0 0 false (Result of :start-where) 12 /Courier DrawText
219.5 458.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
214.5 463.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
214.5 463.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
137 468 457 61 14 0 false 0 0 0 false 0 0 0 false (<Formula>) 12 /Courier DrawText
30 424 379 48 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
40 431 96 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
45 431 420 86 14 0 false 0 0 0 false 0 0 0 false (:feedback-obj) 12 /Courier-Bold DrawText
177.5 394.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
172.5 399.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
172.5 399.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
45 404 393 111 14 0 false 0 0 0 false 0 0 0 false (Interim Feedback) 12 /Courier DrawText
198 407 125 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
381.5 394.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
376.5 399.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
376.5 399.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
333 404 393 27 14 0 false 0 0 0 false 0 0 0 false (None) 12 /Courier DrawText
376.5 399.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
30 365 354 102 14 0 false 0 0 0 false 0 0 0 false (Final Function:) 12 /Courier-Bold DrawText
137 367 150 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
20 333 341 208 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
30 340 140 14 0 0 0 0 false 0 0 [] -1 1 1.00 1.00 1.00 true DrawRectangle
35 340 329 130 14 0 false 0 0 0 false 0 0 0 false (:center-of-rotation) 12 /Courier-Bold DrawText
51 304 112 112 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
51.5 303.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
46.5 308.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
46.5 308.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
105.5 303.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
100.5 308.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
100.5 308.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
159.5 303.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
154.5 308.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
154.5 308.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
51.5 249.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
46.5 254.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
46.5 254.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
105.5 249.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
100.5 254.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
100.5 254.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
159.5 249.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
154.5 254.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
154.5 254.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
51.5 195.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
46.5 200.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
46.5 200.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
105.5 195.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
100.5 200.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
100.5 200.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
159.5 195.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
154.5 200.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
154.5 200.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
0 0 0 0 false 0 0 [] 1 332 207 232 307 DrawLine
235.5 303.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
230.5 308.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
230.5 308.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
285.5 253.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
280.5 258.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
280.5 258.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
335.5 203.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
330.5 208.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
330.5 208.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
35 157 146 7 14 0 false 0 0 0 false 0 0 0 false (X) 12 /Courier DrawText
47 159 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
86 157 146 7 14 0 false 0 0 0 false 0 0 0 false (Y) 12 /Courier DrawText
98 159 30 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
262.5 142.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
257.5 147.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
257.5 147.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawEllipse
283 150 139 61 14 0 false 0 0 0 false 0 0 0 false (<Formula>) 12 /Courier DrawText
40 106 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 116 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
35 111 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
40 106 95 76 14 0 false 0 0 0 false 0 0 0 false (Start-Event) 12 /Courier DrawText
152 106 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
142 116 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
147 111 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
156 106 95 69 14 0 false 0 0 0 false 0 0 0 false (Stop-Event) 12 /Courier DrawText
264 106 97 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
254 116 97 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
259 111 87 24 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawRectangle
264 106 95 77 14 0 false 0 0 0 false 0 0 0 false (Abort-Event) 12 /Courier DrawText
grestore

grestore

0 755 545 692 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier /Courier-Bold /Times-BoldItalic 
%%BoundingBox: 72 99 540 693

%%EndDocument
 GE /Times-Bold SF
6120 50532 MT
(Figure 4-6:)SH
/Times-Roman SF
11893 XM
(Angle interactor dialog box)SH
ES
%%Page: 573 36
BS
0 SI
10 /Times-Roman AF
8280 4286 MT
(Chapter 5)
SH( Getting)
1550 W( Applications to Run)SH
51386 XM
(Page 573)SH
46800 50 8280 4486 UL
16 /Times-Bold AF
8280 8272 MT
(5. Getting Applications to Run)SH
11 /Times-Roman AF
8280 10524 MT
(Lapidary-generated files consist of a set of create-instance)
84 W( calls.  The objects created are stored in a list)83 W
8280 11720 MT
(and assigned to the variable *Garnet-Objects-Just-Created*.  The top of a Lapidary-generated)
319 W( file)320 W
8280 12916 MT
(contains code to load the lapidary-functions.lisp file, which provides functionality to support)
73 W( the created)72 W
8280 14112 MT
(objects.)SH
ES
%%Page: 574 37
BS
0 SI
10 /Times-Roman AF
6120 4286 MT
(Page 574)
SH( Lapidary)830 W
50643 XM
(Index)SH
46800 50 6120 4486 UL
16 /Times-Bold AF
6120 8272 MT
(Index)SH
8 /Times-Roman AF
6120 11525 MT
(Add gadget)
SH( 545)400 W
21720 XM
(Resize 541)400 W
6120 12449 MT
(Aggregadget, make)
SH( 551)400 W
21720 XM
(Roundtangle 539)400 W
6120 13373 MT
(Aggregadget, selection)
SH( 540)400 W
21720 XM
(Run Lapidary)
SH( 539)400 W
6120 14297 MT
(Aggrelist 539)400 W
6120 15221 MT
(Arrange 551)400 W
21720 XM
(Save 545)400 W
21720 16145 MT
(Secondary select covered object)
SH( 541)400 W
6120 17069 MT
(Bitmap 539)400 W
21720 XM
(Secondary selection)
SH( 540)400 W
6120 17993 MT
(Box constraint gadget)
SH( 556)400 W
21720 XM
(Secondary selection, add to)
SH( 541)400 W
6120 18917 MT
(Box constraints)
SH( 551)400 W
21720 XM
(Secondary selection, deselect)
SH( 541)400 W
6120 19841 MT
(Box-constraint-do-go 560)400 W
21720 XM
(Selecting objects)
SH( 540)400 W
6120 20765 MT
(Bring to front)
SH( 551)400 W
21720 XM
(Send to back)
SH( 551)400 W
6120 21689 MT
(Build 552)400 W
21720 XM
(Show-box-constraint-menu 560)400 W
21720 22613 MT
(Show-line-constraint-menu 560)400 W
6120 23537 MT
(C32 551)400 W
21720 XM
(Start Lapidary)
SH( 539)400 W
6120 24461 MT
(Choice interactor)
SH( 565)400 W
21720 XM
(Stop 546)400 W
6120 25385 MT
(Circle 539)400 W
6120 26309 MT
(Clear workspace)
SH( 552)400 W
21720 XM
(Test 552)400 W
6120 27233 MT
(Constraint-gadget 556)400 W
21720 XM
(Text 539)400 W
6120 28157 MT
(Constraints 551,)
400 W( 553)SH
21720 XM
(Text interactor)
SH( 569)400 W
6120 29081 MT
(Create object)
SH( 542)400 W
21720 XM
(Text properties)
SH( 547)400 W
21720 30005 MT
(Text, edit)
SH( 542)400 W
6120 30929 MT
(Delete object)
SH( 546)400 W
21720 XM
(Two point interactor)
SH( 567)400 W
6120 31853 MT
(Delete window)
SH( 546)400 W
6120 32777 MT
(Draw function)
SH( 546)400 W
21720 XM
(Ungroup 551)400 W
6120 34625 MT
(Edit 546)400 W
21720 XM
(Window 539)400 W
6120 35549 MT
(Events 563)400 W
6120 36473 MT
(Exit 546)400 W
6120 38321 MT
(Filling style)
SH( 546)400 W
6120 39245 MT
(Formulas 564)400 W
6120 41093 MT
(Grow 541)400 W
6120 42941 MT
(Install-links 561)400 W
6120 43865 MT
(Interactors 551,)
400 W( 563)SH
6120 45713 MT
(Line 539)400 W
6120 46637 MT
(Line constraint gadget)
SH( 559)400 W
6120 47561 MT
(Line constraints)
SH( 551)400 W
6120 48485 MT
(Line style)
SH( 546)400 W
6120 49409 MT
(Line-constraint-do-go 560)400 W
6120 50333 MT
(Link slots)
SH( 561)400 W
6120 51257 MT
(List properties)
SH( 547)400 W
6120 53105 MT
(Make copy)
SH( 546)400 W
6120 54029 MT
(Make instance)
SH( 546)400 W
6120 54953 MT
(Mouse 540)400 W
6120 55877 MT
(Move 541)400 W
6120 56801 MT
(Move/grow interactor)
SH( 566)400 W
6120 57725 MT
(Multi-text 539)400 W
6120 59573 MT
(Name object)
SH( 546)400 W
6120 61421 MT
(Other, menu selection)
SH( 551)400 W
6120 63269 MT
(Parameters 547)400 W
6120 64193 MT
(Primary select covered object)
SH( 541)400 W
6120 65117 MT
(Primary selection)
SH( 540)400 W
6120 66041 MT
(Primary Selection, add to)
SH( 541)400 W
6120 66965 MT
(Primary selection, deselect)
SH( 541)400 W
6120 67889 MT
(Properties 546)400 W
6120 69737 MT
(Quit 546)400 W
6120 71585 MT
(Rectangle 539)400 W
ES
%%Page: i 38
BS
0 SI
16 /Times-Bold AF
25591 8272 MT
(Table of Contents)SH
12 SS 
8280 9796 MT
(1. Getting Started)SH
53280 XM
(539)SH
10 SS 
9780 11186 MT
(1.1. Object Creation)SH
53580 XM
(539)SH
9780 12266 MT
(1.2. Selecting Objects)SH
53580 XM
(540)SH
9780 13346 MT
(1.3. Mouse-Based Commands)SH
53580 XM
(540)SH
9780 14426 MT
(1.4. Selection Techniques)SH
53580 XM
(542)SH
12 SS 
8280 15950 MT
(2. Editor Menu Commands)SH
53280 XM
(545)SH
10 SS 
9780 17340 MT
(2.1. File)SH
53580 XM
(545)SH
9780 18420 MT
(2.2. Edit)SH
53580 XM
(546)SH
9780 19500 MT
(2.3. Properties)SH
53580 XM
(546)SH
9780 20580 MT
(2.4. Arrange)SH
53580 XM
(551)SH
9780 21660 MT
(2.5. Constraints)SH
53580 XM
(551)SH
9780 22740 MT
(2.6. Other)SH
53580 XM
(551)SH
9780 23820 MT
(2.7. Test and Build Radio Buttons)SH
53580 XM
(552)SH
12 SS 
8280 25344 MT
(3. Creating Constraints)SH
53280 XM
(553)SH
10 SS 
9780 26734 MT
(3.1. Box Constraints)SH
53580 XM
(553)SH
9780 27814 MT
(3.2. Line Constraints)SH
53580 XM
(555)SH
9780 28894 MT
(3.3. Custom Constraints)SH
53580 XM
(556)SH
9780 29974 MT
(3.4. The Constraint Gadget)SH
53580 XM
(556)SH
11780 31054 MT
(3.4.1. Box Constraint Menu)SH
53580 XM
(556)SH
11780 32134 MT
(3.4.2. Line Constraint Menu)SH
53580 XM
(559)SH
11780 33214 MT
(3.4.3. Programming Interface)SH
53580 XM
(559)SH
13780 34294 MT
(3.4.3.1. Slots of the Constraint Gadget)SH
53580 XM
(559)SH
13780 35374 MT
(3.4.3.2. Exported Functions)SH
53580 XM
(560)SH
13780 36454 MT
(3.4.3.3. Programming with Links)SH
53580 XM
(561)SH
11780 37534 MT
(3.4.4. Custom Constraints)SH
53580 XM
(561)SH
11780 38614 MT
(3.4.5. Feedback)SH
53580 XM
(562)SH
12 SS 
8280 40138 MT
(4. Interactors)SH
53280 XM
(563)SH
10 SS 
9780 41528 MT
(4.1. Action Buttons)SH
53580 XM
(563)SH
9780 42608 MT
(4.2. Events)SH
53580 XM
(563)SH
9780 43688 MT
(4.3. :Start Where)SH
53580 XM
(564)SH
9780 44768 MT
(4.4. Formulas)SH
53580 XM
(564)SH
9780 45848 MT
(4.5. Specific Interactors)SH
53580 XM
(565)SH
11780 46928 MT
(4.5.1. Choice Interactor)SH
53580 XM
(565)SH
11780 48008 MT
(4.5.2. Move/Grow Interactor)SH
53580 XM
(566)SH
11780 49088 MT
(4.5.3. Two Point Interactor)SH
53580 XM
(567)SH
11780 50168 MT
(4.5.4. Text Interactor)SH
53580 XM
(569)SH
11780 51248 MT
(4.5.5. Angle Interactor)SH
53580 XM
(570)SH
12 SS 
8280 52772 MT
(5. Getting Applications to Run)SH
53280 XM
(573)SH
8280 54296 MT
(Index)SH
53280 XM
(574)SH
ES
%%Trailer
%%Pages: 38
%%DocumentFonts: Times-Roman Times-Bold Symbol Courier Times-Italic
