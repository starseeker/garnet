%!PS-Adobe-2.0
%%Title: Garnet Logo
%%Creator: Make-PS-File -- Garnet Version 2.0.alpha
%%CreationDate: Apr 13, 1992, 4:34 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 171 279 441 514
%%Pages: 1
%%EndComments


/TextDict 19 dict def
/DrawText
   {	% stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
	findfont exch scalefont setfont
	/s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
	/x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
	newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
	  left base-y moveto
	  x-dist 0 s ashow
        grestore
        end
   } def

/PolylineDict 15 dict def
/DrawPolyline
   {	% stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
	newpath
	  moveto
	  num-points -2 0 {pop lineto} for
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
	/height exch def  /width exch def
        newpath
	  moveto		% Go to the left,top corner
	  width 0 rlineto	% top side
	  0 height neg rlineto	% right side
	  width neg 0 rlineto	% bottom side
	  closepath		% left side
	gsave 1 setgray fill grestore
	clip newpath
        end
   } def

/FillShape
   {	% stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
	{ pop pop pop 
	  dup 0 ge
	    % if fill-halftone >= 0, then fill the shape with a halftone
	    { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {	% stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
	% If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
	dup 0 ge
	  % if line-thickness >= 0, then draw the outline
	  {gsave
	   setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
	   stroke
	   grestore}
	  {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%Page: 1 1

gsave
72 72 translate
1 1 scale

%
% Begin new window
%
99 -206 translate
gsave
0 648 270 235 ClipToRectangle
0 0 translate
gsave
83 607 104 593 139 454 126 431 56 414 34 428 0 567 13 589 83 607 18 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
104 593 93 580 85 578 83 586 83 607 104 593 12 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 567 17 560 24 562 22 571 13 589 0 567 12 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
34 428 46 441 53 443 56 435 56 414 34 428 12 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
58 452 53 443 24 562 32 557 58 452 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
139 454 122 461 115 459 116 450 126 431 139 454 12 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
107 464 115 459 85 578 81 569 107 464 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
104 593 139 454 122 461 93 580 104 593 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
0 567 34 428 46 441 17 560 0 567 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
83 607 83 586 22 571 13 589 83 607 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
126 431 116 450 56 435 56 414 126 431 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
85 578 24 562 32 557 81 569 85 578 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
115 459 53 443 58 452 107 464 115 459 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
115 459 122 461 93 580 85 578 115 459 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
93 580 83 586 85 578 93 580 8 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
84 606 55 616 82 610 73 617 82 612 78 648 86 610 92 624 88 608 114 604 88 606 92 580 84 606 26 0 0 0 0 false 0 0 [] 1 1 1.00 1.00 1.00 true DrawPolyline
53 443 115 459 116 450 56 435 53 443 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
46 441 53 443 24 562 17 560 46 441 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
24 562 22 571 83 586 85 578 24 562 10 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
60 512 490 148 56 0 false 0 0 0 false 0 0 0 false (Garnet) 48 /Times-Bold DrawText
grestore

grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Times-Bold 
%%BoundingBox: 171 279 441 514
