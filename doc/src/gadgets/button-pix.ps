%!PS-Adobe-2.0
%%Title: Opal 35
%%Creator: Make-PS-File -- Garnet Version 2.1
%%CreationDate: May 29, 1992, 2:22 PM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 284 540 508
%%Pages: 1
%%EndComments


/BitmapDict 9 dict def
/DrawBitmap
   {    % stack: left top width height pattern transparent-p
        %        red green blue color-p
        BitmapDict begin
        /picstr 256 string def
	/color-p exch def  /blue exch def  /green exch def /red exch def
        /transparent-p exch def
        /pattern exch def  /height exch def  /width exch def
        gsave
          translate
          width height scale
	  color-p {red green blue setrgbcolor} if
          transparent-p
	  % The case where the background is not drawn
	  { width height false
            [ width 0 0 height 0 height ]
            {pattern} imagemask }
	  % The case where the background is drawn
          { width height 1
            [ width 0 0 height 0 height ]
            {pattern} image } ifelse
        grestore
        end
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
	  x y translate
          gsave
	    xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
	    fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
	  savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/TextDict 19 dict def
/DrawText
   {	% stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
	findfont exch scalefont setfont
	/s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
	/x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
	newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
	  left base-y moveto
	  x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
	moveto		        % Go to the left,top corner
	w 0 rlineto	        % top side
	0 h neg rlineto		% right side
	w neg 0 rlineto		% bottom side
	closepath		% left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {	% stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
	/height exch def  /width exch def
        newpath
	  moveto		% Go to the left,top corner
	  width 0 rlineto	% top side
	  0 height neg rlineto	% right side
	  width neg 0 rlineto	% bottom side
	  closepath		% left side
	gsave 1 setgray fill grestore
	clip newpath
        end
   } def

/FillShape
   {	% stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
	{ pop pop pop 
	  dup 0 ge
	    % if fill-halftone >= 0, then fill the shape with a halftone
	    { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {	% stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
	% If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
	dup 0 ge
	  % if line-thickness >= 0, then draw the outline
	  {gsave
	   setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
	   stroke
	   grestore}
	  {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def

/image-2
<ffff ff3f ff3f fe7f ee7f e4ff e0ff e01f e03f e07f e0ff e1ff e3ff e7ff efff
ffff>
def

/image-1
<ff3f fe1f fe1f cc3f c43f c07f c00f c00f c01f c03f c07f c0ff c1ff c3ff c7ff
cfff>
def


%%EndProlog
%%Page: 1 1

gsave
72 72 translate
0.936 0.936 scale

%
% Begin new window
%
0 -226 translate
gsave
0 692 500 240 ClipToRectangle
0 0 translate
gsave
30 672 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 682 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 677 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
47 672 661 28 14 0 false 0 0 0 false 0 0 0 false (Bach) 12 /Courier DrawText
30 623 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 633 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 628 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
25 628 73 24 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawRectangle
30 623 612 63 14 1 false 0 0 0 false 0 0 0 false (Beethoven) 12 /Courier DrawText
30 574 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
30 574 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
35 569 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
50 564 553 42 14 0 false 0 0 0 false 0 0 0 false (Mozart) 12 /Courier DrawText
30 525 83 34 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
20 535 83 34 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
25 530 73 24 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
38 525 514 47 14 0 false 0 0 0 false 0 0 0 false (Strauss) 12 /Courier DrawText
272 562 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 567 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 564 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
234 562 551 28 14 0 false 0 0 0 false 0 0 0 false (Bold) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 2 284 551 270 564 DrawLine
0 0 0 0 false 0 0 [] 2 284 564 270 551 DrawLine
272 532 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 537 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 534 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
222 532 521 40 14 0 false 0 0 0 false 0 0 0 false (Italic) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 2 284 521 270 534 DrawLine
0 0 0 0 false 0 0 [] 2 284 534 270 521 DrawLine
272 502 20 20 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawRectangle
267 507 20 20 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawRectangle
270 504 14 14 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawRectangle
200 502 491 62 14 0 false 0 0 0 false 0 0 0 false (Underline) 12 /Courier DrawText
234.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
229.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
229.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
150 670 659 63 14 0 false 0 0 0 false 0 0 0 false (Helvetica) 12 /Courier DrawText
335.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
330.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
330.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
273 670 659 41 14 0 false 0 0 0 false 0 0 0 false (Geneva) 12 /Courier DrawText
436.5 660.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
431.5 665.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
431.5 665.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
368 670 659 47 14 0 false 0 0 0 false 0 0 0 false (Courier) 12 /Courier DrawText
234.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
229.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
229.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
178 640 629 35 14 0 false 0 0 0 false 0 0 0 false (Roman) 12 /Courier DrawText
335.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
330.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
330.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
280 640 629 34 14 0 false 0 0 0 false 0 0 0 false (Times) 12 /Courier DrawText
436.5 630.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0 0 0 0 false DrawEllipse
431.5 635.5 11.5 11.5 0 360 0 0 0 0 false 0 0 [] 1 0.50 0 0 0 false DrawEllipse
431.5 635.5 8.5 8.5 0 360 0 0 0 0 false 0 0 [] 1 1 0 0 0 false DrawEllipse
374 640 629 41 14 0 false 0 0 0 false 0 0 0 false (Symbol) 12 /Courier DrawText
330.5 635.5 5.5 5.5 0 360 0 0 0 0 false 0 0 [] -1 0 0 0 0 false DrawEllipse
172 105 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
172 105 16 16 image-2 true 0 0 0 false DrawBitmap
100 549 16 16 image-1 true 1.00 1.00 1.00 true DrawBitmap
100 549 16 16 image-2 true 0 0 0 false DrawBitmap
grestore

grestore

0 692 500 240 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 72 284 540 508
