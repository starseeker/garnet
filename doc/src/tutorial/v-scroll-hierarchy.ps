%!PS-Adobe-2.0
%%Title: Aggregraph Demo
%%Creator: Make-PS-File -- Garnet Version 1.4
%%CreationDate: Aug 15, 1991, 2:49 PM
%%For: 
%%DocumentFonts: (atend)
%%BoundingBox: (atend)
%%Pages: 1
%%EndComments


/PolylineDict 15 dict def
/DrawPolyline
   {	% stack: x1, y1, ..., xn, yn, n, line-halftone, line-red, line-blue,
        %        line-green, line-join, line-cap, dash-pattern,
        %        line-thickness, fill-halftone
        PolylineDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /num-points exch 4 sub def
	newpath
	  moveto
	  num-points -2 0 {pop lineto} for
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
	moveto		        % Go to the left,top corner
	w 0 rlineto	        % top side
	0 h neg rlineto		% right side
	w neg 0 rlineto		% bottom side
	closepath		% left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {	% stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 2 dict def
/DrawText
   {	% stack: left bottom opal-width line-halftone red green blue color-p
        %        string size font-name
        TextDict begin
        gsave
	findfont exch scalefont setfont
	/s exch def
        % Color-p is on top of stack, so set color/halftone
          { setrgbcolor pop }
          { pop pop pop setgray } ifelse
        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
	/x-dist exch s stringwidth pop sub s length div def
        newpath
	  moveto
	  x-dist 0 s ashow
          stroke
        grestore
        end
   } def

/RoundtanglePath
   {    % stack: left, top, width, height, radius
        /r exch def  /h exch def  /w exch def  /t exch def  /l exch def
        /right l w add def  /bottom t h sub def
          l r add t moveto                         % origin
          right t right t r sub r arcto            % top side
          right bottom right r sub bottom r arcto  % right side
          l bottom l bottom r add r arcto          % bottom side
          l t l r add t r arcto                    % left side
          16 {pop} repeat  % each arcto accumulates 4 stack parameters
   } def

/RoundtangleDict 27 dict def
/DrawRoundtangle
   {    % stack: left, top, width, height, radius, line-halftone,
        %        line-red, line-green, line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        
        RoundtangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /radius exch def
        /height exch def  /width exch def  /top exch def  /left exch def
        /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub  width thickness sub  height thickness sub
          radius thickness sub RoundtanglePath
          fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height radius thickness-by-2 sub RoundtanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
	/height exch def  /width exch def
        newpath
	  moveto		% Go to the left,top corner
	  width 0 rlineto	% top side
	  0 height neg rlineto	% right side
	  width neg 0 rlineto	% bottom side
	  closepath		% left side
	gsave 1 setgray fill grestore
	clip newpath
        end
   } def

/FillShape
   {	% stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
	{ pop pop pop 
	  dup 0 ge
	    % if fill-halftone >= 0, then fill the shape with a halftone
	    {setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {	% stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
	% If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
	dup 0 ge
	  % if line-thickness >= 0, then draw the outline
	  {gsave
	   setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
	   stroke
	   grestore}
	  {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%Page: 1 1

72 72 translate
1 1 scale

%
% Begin new window
%
39 -189 translate
gsave
0 648 390 270 ClipToRectangle
0 0 translate
gsave
0 0 0 0 false 0 0 [] 1 122 587 86 523 DrawLine
0 0 0 0 false 0 0 [] 1 122 560 86 523 DrawLine
0 0 0 0 false 0 0 [] 1 122 533 86 523 DrawLine
0 0 0 0 false 0 0 [] 1 122 493 86 523 DrawLine
0 0 0 0 false 0 0 [] 1 122 439 86 523 DrawLine
0 0 0 0 false 0 0 [] 1 241 506 221 493 DrawLine
0 0 0 0 false 0 0 [] 1 241 479 221 493 DrawLine
0 0 0 0 false 0 0 [] 1 275 452 242 439 DrawLine
0 0 0 0 false 0 0 [] 1 275 425 242 439 DrawLine
10 534 76 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
14 519 68 0 0 0 0 false (Scroll Bar) 12 /Courier DrawText
122 598 112 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
126 583 104 0 0 0 0 false (Gray Background) 12 /Courier DrawText
122 571 69 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
126 556 61 0 0 0 0 false (Indicator) 12 /Courier DrawText
122 544 36 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
126 529 28 0 0 0 0 false (Text) 12 /Courier DrawText
122 504 99 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
126 489 91 0 0 0 0 false (Top Trill Box) 12 /Courier DrawText
122 450 120 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
126 435 112 0 0 0 0 false (Bottom Trill Box) 12 /Courier DrawText
241 517 42 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
245 502 34 0 0 0 0 false (Frame) 12 /Courier DrawText
241 490 43 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
245 475 35 0 0 0 0 false (Arrow) 12 /Courier DrawText
275 463 42 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
279 448 34 0 0 0 0 false (Frame) 12 /Courier DrawText
275 436 43 22 5 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRoundtangle
279 421 35 0 0 0 0 false (Arrow) 12 /Courier DrawText
350 618 20 210 0 0 0 0 false 0 0 [] 1 0.5 0 0 0 false DrawRectangle
350 638 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
360 635 353 628 357 628 357 621 363 621 363 628 367 628 360 635 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
350 408 20 20 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawRectangle
360 391 353 398 357 398 357 405 363 405 363 398 367 398 360 391 16 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawPolyline
351 570 18 18 0 0 0 0 false 0 0 [] 1 1.0 0 0 0 false DrawRectangle
355 557 10 0 0 0 0 false (25) 10 /Courier DrawText
grestore

grestore


showpage
%%Trailer
%%DocumentFonts: /Courier 
%%BoundingBox: 111 261 501 531
