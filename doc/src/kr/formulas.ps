%!PS-Adobe-2.0
%%Title: FORMULAS FIGURE
%%Creator: Make-PS-File -- Garnet Version 2.0.alpha
%%CreationDate: Apr 28, 1992, 11:04 AM
%%For: 
%%This file does not use real color
%%DocumentFonts: (atend)
%%BoundingBox: 72 289 540 502
%%Pages: 1
%%EndComments


/DrawLine
   {    % stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
        %        x2, y2, x1, y1
        newpath
          moveto
          lineto
          StrokeShape
   } def

/EllipseDict 23 dict def
EllipseDict /mtrx matrix put
/DrawEllipse
   {    EllipseDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def  /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /endangle exch def
        /startangle exch def  /yrad exch def  /xrad exch def  /y exch def
        /x exch def  /savematrix mtrx currentmatrix def  /thickness-by-2 thickness 2 div def
        % Draw the filling
        newpath
	  x y translate
          gsave
	    xrad thickness-by-2 sub  yrad thickness-by-2 sub scale
            0 0 1 startangle endangle arc
            savematrix setmatrix
	    fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
          grestore
        % Draw the border
        newpath
          xrad yrad scale
          0 0 1 startangle endangle arc
	  savematrix setmatrix
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/TextDict 19 dict def
/DrawText
   {	% stack: left top base-y opal-width height line-halftone fill-p
        %        fore-red fore-green fore-blue fore-color-p
        %        back-red back-green back-blue back-color-p
        %        string size font-name
        TextDict begin
        gsave
	findfont exch scalefont setfont
	/s exch def
        /back-color-p exch def  /back-blue exch def  /back-green exch def
        /back-red exch def  /fore-color-p exch def  /fore-blue exch def
        /fore-green exch def  /fore-red exch def  /fill-p exch def
        /line-halftone exch def /height exch def  /opal-width exch def
        /base-y exch def  /top exch def  /left exch def

        % Calculate distance to add between each character, based on the width
        % expected by Opal, the width expected by postscript, and the number
        % of characters to distribute the change over
	/x-dist opal-width s stringwidth pop sub s length div def

        % Draw background of text if appropriate
        fill-p
        { gsave
            newpath
            left top opal-width height RectanglePath
            1 back-red back-green back-blue back-color-p
            FillShape
          grestore } if

        % Draw text in the appropriate color
	newpath
          fore-color-p
          { fore-red fore-green fore-blue setrgbcolor }
          { line-halftone setgray } ifelse
	  left base-y moveto
	  x-dist 0 s ashow
        grestore
        end
   } def

/RectanglePath
   {    % stack: left, top, width, height
        /h exch def  /w exch def
	moveto		        % Go to the left,top corner
	w 0 rlineto	        % top side
	0 h neg rlineto		% right side
	w neg 0 rlineto		% bottom side
	closepath		% left side
   } def

/RectangleDict 21 dict def
/DrawRectangle
   {	% stack: left, top, width, height, line-halftone, line-red, line-green,
        %        line-blue, line-color-p,
        %        line-cap, line-join, dash-pattern, line-thickness,
        %        fill-halftone, fill-red, fill-green, fill-blue, fill-color-p
        RectangleDict begin
        /fill-color-p exch def  /fill-blue exch def  /fill-green exch def
        /fill-red exch def /fill-halftone exch def  /thickness exch def
        /dash-pattern exch def  /line-join exch def  /line-cap exch def
        /line-color-p exch def  /line-blue exch def  /line-green exch def
        /line-red exch def  /line-halftone exch def  /height exch def
        /width exch def  /top exch def  /left exch def  /thickness-by-2 thickness 2 div def
        % Draw filling
        newpath
          left thickness-by-2 add  top thickness-by-2 sub   width thickness sub  height thickness sub
          RectanglePath
	  fill-halftone fill-red fill-green fill-blue fill-color-p FillShape
        % Draw border
        newpath
          left top width height RectanglePath
          line-halftone line-red line-green line-blue line-color-p
          line-cap line-join dash-pattern thickness StrokeShape
        end
   } def

/ClipDict 2 dict def
/ClipToRectangle
   {    % stack: left, top, width, height
        ClipDict begin
	/height exch def  /width exch def
        newpath
	  moveto		% Go to the left,top corner
	  width 0 rlineto	% top side
	  0 height neg rlineto	% right side
	  width neg 0 rlineto	% bottom side
	  closepath		% left side
	gsave 1 setgray fill grestore
	clip newpath
        end
   } def

/FillShape
   {	% stack: fill-halftone, red, green, blue, color-p
        %   Color-p should be true or false - false means ignore the three vals
        %   Use -1 for fill-halftone to mean NIL, 0 = black, 1 = white
        %   Use -2 for fill-halftone to indicate there is an arbitrary filling
        % style on the stack
        gsave
        { setrgbcolor fill pop }
	{ pop pop pop 
	  dup 0 ge
	    % if fill-halftone >= 0, then fill the shape with a halftone
	    { setgray fill}
            % else, if there is an arbitrary filling style, then fill
            { -2 eq
              {SetPattern fill} if
            } ifelse } ifelse
        grestore
   } def

/StrokeShape
   {	% stack: line-halftone, red, green, blue, color-p,
        %        line-cap, line-join, dash-pattern, line-thickness
	% If no line is desired, pass -1 for line-thickness
        % Halftones: 0 = black, 1 = white
	dup 0 ge
	  % if line-thickness >= 0, then draw the outline
	  {gsave
	   setlinewidth 0 setdash setlinejoin setlinecap
             { setrgbcolor pop }
             { pop pop pop setgray } ifelse
	   stroke
	   grestore}
	  {pop pop pop pop pop pop pop pop pop newpath} ifelse
   } def


%%EndProlog
%%Page: 1 1

gsave
72 72 translate
0.7892074 0.7892074 scale

%
% Begin new window
%
0 -276 translate
gsave
0 821 593 270 ClipToRectangle
0 0 translate
gsave
55 781 770 48 14 0 false 0 0 0 false 0 0 0 false (POINT-1) 12 /Courier DrawText
124.0 775.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
147 790 779 38 14 0 false 0 0 0 false 0 0 0 false (:y1 10) 12 /Courier DrawText
147 773 762 38 14 0 false 0 0 0 false 0 0 0 false (:y2 40) 12 /Courier DrawText
26 677 666 48 14 0 false 0 0 0 false 0 0 0 false (POINT-1) 12 /Courier DrawText
37.0 646.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
60 661 650 38 14 0 false 0 0 0 false 0 0 0 false (:y1 10) 12 /Courier DrawText
60 644 633 38 14 0 false 0 0 0 false 0 0 0 false (:y2 40) 12 /Courier DrawText
37.0 589.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
56 595 584 11 14 0 false 0 0 0 false 0 0 0 false (:y) 12 /Courier DrawText
78 605 594 61 14 0 false 0 0 0 false 0 0 0 false (CACHED 25) 12 /Courier DrawText
78 582 571 69 14 0 false 0 0 0 false 0 0 0 false (VALID  yes) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 76 582 68 588 DrawLine
0 0 0 0 false 0 0 [] 1 76 594 68 588 DrawLine
313.0 589.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
332 595 584 11 14 0 false 0 0 0 false 0 0 0 false (:y) 12 /Courier DrawText
354 605 594 61 14 0 false 0 0 0 false 0 0 0 false (CACHED 25) 12 /Courier DrawText
354 582 571 62 14 0 false 0 0 0 false 0 0 0 false (VALID  no) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 352 582 344 588 DrawLine
0 0 0 0 false 0 0 [] 1 352 594 344 588 DrawLine
451.0 646.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
474 661 650 31 14 0 false 0 0 0 false 0 0 0 false (:y1 0) 12 /Courier DrawText
474 644 633 38 14 0 false 0 0 0 false 0 0 0 false (:y2 60) 12 /Courier DrawText
26 621 610 48 14 0 false 0 0 0 false 0 0 0 false (POINT-2) 12 /Courier DrawText
451.0 589.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
470 595 584 11 14 0 false 0 0 0 false 0 0 0 false (:y) 12 /Courier DrawText
492 605 594 61 14 0 false 0 0 0 false 0 0 0 false (CACHED 30) 12 /Courier DrawText
492 582 571 69 14 0 false 0 0 0 false 0 0 0 false (VALID  yes) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 490 582 482 588 DrawLine
0 0 0 0 false 0 0 [] 1 490 594 482 588 DrawLine
535 583 34 19 0 0 0 0 true 0 0 [] 1 -1 0 0 0 false DrawRectangle
535 608 34 19 0 0 0 0 true 0 0 [] 1 -1 0 0 0 false DrawRectangle
175.0 589.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
194 595 584 11 14 0 false 0 0 0 false 0 0 0 false (:y) 12 /Courier DrawText
216 605 594 61 14 0 false 0 0 0 false 0 0 0 false (CACHED 25) 12 /Courier DrawText
216 582 571 62 14 0 false 0 0 0 false 0 0 0 false (VALID  no) 12 /Courier DrawText
0 0 0 0 false 0 0 [] 1 214 582 206 588 DrawLine
0 0 0 0 false 0 0 [] 1 214 594 206 588 DrawLine
255 584 34 19 0 0 0 0 true 0 0 [] 1 -1 0 0 0 false DrawRectangle
175.0 646.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
198 661 650 31 14 0 false 0 0 0 false 0 0 0 false (:y1 0) 12 /Courier DrawText
198 644 633 38 14 0 false 0 0 0 false 0 0 0 false (:y2 40) 12 /Courier DrawText
193 663 47 19 0 0 0 0 true 0 0 [] 1 -1 0 0 0 false DrawRectangle
313.0 646.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
336 661 650 31 14 0 false 0 0 0 false 0 0 0 false (:y1 0) 12 /Courier DrawText
336 644 633 38 14 0 false 0 0 0 false 0 0 0 false (:y2 60) 12 /Courier DrawText
332 647 47 19 0 0 0 0 true 0 0 [] 1 -1 0 0 0 false DrawRectangle
53 736 725 48 14 0 false 0 0 0 false 0 0 0 false (POINT-2) 12 /Courier DrawText
122.0 730.0 15.0 15.0 0 360 0 0 0 0 false 0 0 [] 1 -1 0 0 0 false DrawEllipse
145 745 734 101 14 0 false 0 0 0 false 0 0 0 false (:parent POINT-1) 12 /Courier DrawText
145 728 717 435 14 0 false 0 0 0 false 0 0 0 false (:y \050formula '\050floor \050+ \050gvl :parent :y1\051 \050gvl :parent :y2\051\051 2\051\051) 12 /Courier DrawText
16 761 746 24 20 0 false 0 0 0 true 0 0 0 false (\050a\051) 18 /Courier-Bold DrawText
490 698 683 24 20 0 false 0 0 0 true 0 0 0 false (\050e\051) 18 /Courier-Bold DrawText
345 698 683 24 20 0 false 0 0 0 true 0 0 0 false (\050d\051) 18 /Courier-Bold DrawText
212 698 683 24 20 0 false 0 0 0 true 0 0 0 false (\050c\051) 18 /Courier-Bold DrawText
69 698 683 24 20 0 false 0 0 0 true 0 0 0 false (\050b\051) 18 /Courier-Bold DrawText
grestore

grestore

0 821 593 270 0 0 0 0 false 0 0 [] 2 -1 0 0 0 false DrawRectangle
grestore


showpage
%%Trailer
%%DocumentFonts: /Courier-Bold /Courier 
%%BoundingBox: 72 289 540 502
